    .include "asm/macros.inc"

    .syntax unified
    
    thumb_func_start ScreenShakeStartVertical
ScreenShakeStartVertical: @ 0x08055344
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldr r3, lbl_08055370 @ =0x03000110
    cmp r2, #0
    beq lbl_08055368
    ldrb r0, [r3]
    cmp r2, r0
    bls lbl_08055368
    movs r1, #0
    strb r2, [r3]
    strb r1, [r3, #1]
    strb r4, [r3, #2]
    strb r1, [r3, #3]
    ldr r0, lbl_08055374 @ =0x03000072
    strb r1, [r0]
lbl_08055368:
    ldrb r0, [r3]
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08055370: .4byte 0x03000110
lbl_08055374: .4byte 0x03000072

    thumb_func_start ScreenShakeStartHorizontal
ScreenShakeStartHorizontal: @ 0x08055378
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldr r3, lbl_080553a4 @ =0x03000114
    cmp r2, #0
    beq lbl_0805539c
    ldrb r0, [r3]
    cmp r2, r0
    bls lbl_0805539c
    movs r1, #0
    strb r2, [r3]
    strb r1, [r3, #1]
    strb r4, [r3, #2]
    strb r1, [r3, #3]
    ldr r0, lbl_080553a8 @ =0x03000071
    strb r1, [r0]
lbl_0805539c:
    ldrb r0, [r3]
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080553a4: .4byte 0x03000114
lbl_080553a8: .4byte 0x03000071

    thumb_func_start ScreenShakeStartHorizontal_unused
ScreenShakeStartHorizontal_unused: @ 0x080553ac
    push {lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    ldr r3, lbl_080553d4 @ =0x03000114
    cmp r2, #0
    beq lbl_080553cc
    ldrb r0, [r3]
    cmp r2, r0
    bls lbl_080553cc
    movs r1, #0
    strb r2, [r3]
    strb r1, [r3, #1]
    strb r1, [r3, #2]
    strb r1, [r3, #3]
    ldr r0, lbl_080553d8 @ =0x03000071
    strb r1, [r0]
lbl_080553cc:
    ldrb r0, [r3]
    pop {r1}
    bx r1
    .align 2, 0
lbl_080553d4: .4byte 0x03000114
lbl_080553d8: .4byte 0x03000071

    thumb_func_start update_vertical_screen_shake
update_vertical_screen_shake: @ 0x080553dc
    push {r4, r5, r6, lr}
    movs r2, #0
    ldr r6, lbl_080553f4 @ =0x03000072
    strb r2, [r6]
    ldr r4, lbl_080553f8 @ =0x03000110
    ldrb r0, [r4]
    adds r3, r4, #0
    cmp r0, #0
    bne lbl_080553fc
    movs r0, #0
    b lbl_0805543e
    .align 2, 0
lbl_080553f4: .4byte 0x03000072
lbl_080553f8: .4byte 0x03000110
lbl_080553fc:
    subs r5, r0, #1
    strb r5, [r3]
    ldrb r0, [r3, #1]
    cmp r0, #1
    bhi lbl_0805540e
    adds r0, #1
    strb r0, [r3, #1]
    movs r0, #0
    b lbl_0805543e
lbl_0805540e:
    strb r2, [r3, #1]
    ldrb r0, [r3, #2]
    movs r1, #0x7f
    ands r1, r0
    movs r2, #2
    rsbs r2, r2, #0
    ldrb r3, [r3, #3]
    cmp r3, #0
    beq lbl_0805542a
    movs r2, #2
    rsbs r0, r1, #0
    orrs r0, r1
    asrs r0, r0, #0x1f
    ands r2, r0
lbl_0805542a:
    movs r0, #1
    eors r0, r3
    strb r0, [r4, #3]
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xf
    bhi lbl_0805543a
    asrs r2, r2, #1
lbl_0805543a:
    strb r2, [r6]
    adds r0, r2, #0
lbl_0805543e:
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start update_horizontal_screen_shake
update_horizontal_screen_shake: @ 0x08055444
    push {r4, r5, r6, lr}
    movs r2, #0
    ldr r6, lbl_0805545c @ =0x03000071
    strb r2, [r6]
    ldr r4, lbl_08055460 @ =0x03000114
    ldrb r0, [r4]
    adds r3, r4, #0
    cmp r0, #0
    bne lbl_08055464
    movs r0, #0
    b lbl_080554a6
    .align 2, 0
lbl_0805545c: .4byte 0x03000071
lbl_08055460: .4byte 0x03000114
lbl_08055464:
    subs r5, r0, #1
    strb r5, [r3]
    ldrb r0, [r3, #1]
    cmp r0, #1
    bhi lbl_08055476
    adds r0, #1
    strb r0, [r3, #1]
    movs r0, #0
    b lbl_080554a6
lbl_08055476:
    strb r2, [r3, #1]
    ldrb r0, [r3, #2]
    movs r1, #0x7f
    ands r1, r0
    movs r2, #2
    rsbs r2, r2, #0
    ldrb r3, [r3, #3]
    cmp r3, #0
    beq lbl_08055492
    movs r2, #2
    rsbs r0, r1, #0
    orrs r0, r1
    asrs r0, r0, #0x1f
    ands r2, r0
lbl_08055492:
    movs r0, #1
    eors r0, r3
    strb r0, [r4, #3]
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xf
    bhi lbl_080554a2
    asrs r2, r2, #1
lbl_080554a2:
    strb r2, [r6]
    adds r0, r2, #0
lbl_080554a6:
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start TransparencySetRoomEffectsTransparency
TransparencySetRoomEffectsTransparency: @ 0x080554ac
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #8
    ldr r0, lbl_08055524 @ =0x03000bf0
    movs r1, #0
    ldrsb r1, [r0, r1]
    cmp r1, #0
    beq lbl_08055540
    ldr r0, lbl_08055528 @ =0x0300019c
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_080554e0
    bl TransparencyCheckIsDarkRoom
    adds r3, r0, #0
    cmp r3, #0
    beq lbl_080554e0
    ldr r2, lbl_0805552c @ =0x03000088
    ldrh r1, [r2]
    movs r4, #0x80
    lsls r4, r4, #1
    adds r0, r4, #0
    orrs r0, r1
    ands r0, r3
    strh r0, [r2]
lbl_080554e0:
    ldr r1, lbl_08055530 @ =0x0400000a
    ldr r3, lbl_0805552c @ =0x03000088
    ldrh r0, [r3, #0xc]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r3, #0xe]
    strh r0, [r1]
    adds r1, #0x3e
    ldrb r0, [r3, #8]
    strb r0, [r1]
    subs r1, #1
    ldrb r0, [r3, #7]
    strb r0, [r1]
    ldr r4, lbl_08055534 @ =0x04000042
    ldr r2, lbl_08055538 @ =0x03000108
    ldrb r1, [r2]
    lsls r1, r1, #8
    ldrb r0, [r2, #1]
    orrs r0, r1
    strh r0, [r4]
    adds r4, #4
    ldrb r1, [r2, #2]
    lsls r1, r1, #8
    ldrb r0, [r2, #3]
    orrs r0, r1
    strh r0, [r4]
    ldr r2, lbl_0805553c @ =0x04000052
    ldrb r1, [r3, #5]
    lsls r1, r1, #8
    ldrb r0, [r3, #4]
    orrs r0, r1
    strh r0, [r2]
    b lbl_080559de
    .align 2, 0
lbl_08055524: .4byte 0x03000bf0
lbl_08055528: .4byte 0x0300019c
lbl_0805552c: .4byte 0x03000088
lbl_08055530: .4byte 0x0400000a
lbl_08055534: .4byte 0x04000042
lbl_08055538: .4byte 0x03000108
lbl_0805553c: .4byte 0x04000052
lbl_08055540:
    mov r0, sp
    movs r4, #0
    strh r1, [r0]
    strh r1, [r0, #2]
    strh r1, [r0, #4]
    strh r1, [r0, #6]
    ldr r0, lbl_0805559c @ =0x0300002b
    strb r4, [r0]
    ldr r2, lbl_080555a0 @ =0x030056cc
    ldr r0, lbl_080555a4 @ =0x083458cc
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r2, lbl_080555a8 @ =0x030056d4
    str r0, [r2]
    str r1, [r2, #4]
    ldr r2, lbl_080555ac @ =0x030056c4
    ldr r0, lbl_080555b0 @ =0x083458dc
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r2, lbl_080555b4 @ =0x030056dc
    ldr r0, lbl_080555b8 @ =0x083458d4
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r2, lbl_080555bc @ =0x030056e4
    str r0, [r2]
    str r1, [r2, #4]
    ldr r2, lbl_080555c0 @ =0x030000bc
    ldrb r1, [r2, #1]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_080555c4
    ldrb r0, [r2, #0x18]
    bl TransparencyGetBGSizeFlag
    mov r2, sp
    movs r1, #8
    orrs r0, r1
    strh r0, [r2]
    b lbl_080555ca
    .align 2, 0
lbl_0805559c: .4byte 0x0300002b
lbl_080555a0: .4byte 0x030056cc
lbl_080555a4: .4byte 0x083458cc
lbl_080555a8: .4byte 0x030056d4
lbl_080555ac: .4byte 0x030056c4
lbl_080555b0: .4byte 0x083458dc
lbl_080555b4: .4byte 0x030056dc
lbl_080555b8: .4byte 0x083458d4
lbl_080555bc: .4byte 0x030056e4
lbl_080555c0: .4byte 0x030000bc
lbl_080555c4:
    mov r1, sp
    ldr r0, lbl_0805560c @ =0x00004004
    strh r0, [r1]
lbl_080555ca:
    mov r1, sp
    ldr r0, lbl_08055610 @ =0x00004204
    strh r0, [r1, #2]
    ldr r0, lbl_08055614 @ =0x00004404
    strh r0, [r1, #4]
    mov r0, sp
    ldr r3, lbl_08055618 @ =0x00000603
    strh r3, [r0, #6]
    ldr r0, lbl_0805561c @ =0x030000bc
    ldrb r0, [r0, #4]
    mov r2, sp
    movs r1, #8
    adds r0, r3, #0
    orrs r0, r1
    strh r0, [r2, #6]
    ldr r4, lbl_0805561c @ =0x030000bc
    ldrb r0, [r4, #0x19]
    bl TransparencyGetBGSizeFlag
    mov r2, sp
    mov r1, sp
    ldrh r1, [r1, #6]
    orrs r0, r1
    strh r0, [r2, #6]
    ldrb r0, [r4, #7]
    cmp r0, #0x33
    bhi lbl_080556f4
    lsls r0, r0, #2
    ldr r1, lbl_08055620 @ =lbl_08055624
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805560c: .4byte 0x00004004
lbl_08055610: .4byte 0x00004204
lbl_08055614: .4byte 0x00004404
lbl_08055618: .4byte 0x00000603
lbl_0805561c: .4byte 0x030000bc
lbl_08055620: .4byte lbl_08055624
lbl_08055624: @ jump table
    .4byte lbl_080556f4 @ case 0
    .4byte lbl_080556f4 @ case 1
    .4byte lbl_080556f4 @ case 2
    .4byte lbl_080556f4 @ case 3
    .4byte lbl_080556f4 @ case 4
    .4byte lbl_0805570a @ case 5
    .4byte lbl_0805572a @ case 6
    .4byte lbl_08055754 @ case 7
    .4byte lbl_080556f4 @ case 8
    .4byte lbl_0805570a @ case 9
    .4byte lbl_0805572a @ case 10
    .4byte lbl_08055754 @ case 11
    .4byte lbl_080556f4 @ case 12
    .4byte lbl_0805570a @ case 13
    .4byte lbl_0805572a @ case 14
    .4byte lbl_08055754 @ case 15
    .4byte lbl_080556f4 @ case 16
    .4byte lbl_0805570a @ case 17
    .4byte lbl_0805572a @ case 18
    .4byte lbl_08055754 @ case 19
    .4byte lbl_080556f4 @ case 20
    .4byte lbl_0805570a @ case 21
    .4byte lbl_0805572a @ case 22
    .4byte lbl_08055754 @ case 23
    .4byte lbl_080556f4 @ case 24
    .4byte lbl_0805570a @ case 25
    .4byte lbl_0805572a @ case 26
    .4byte lbl_08055754 @ case 27
    .4byte lbl_080556f4 @ case 28
    .4byte lbl_0805570a @ case 29
    .4byte lbl_0805572a @ case 30
    .4byte lbl_08055754 @ case 31
    .4byte lbl_080556f4 @ case 32
    .4byte lbl_0805570a @ case 33
    .4byte lbl_0805572a @ case 34
    .4byte lbl_08055754 @ case 35
    .4byte lbl_080556f4 @ case 36
    .4byte lbl_0805570a @ case 37
    .4byte lbl_0805572a @ case 38
    .4byte lbl_08055754 @ case 39
    .4byte lbl_080556f4 @ case 40
    .4byte lbl_0805570a @ case 41
    .4byte lbl_0805572a @ case 42
    .4byte lbl_08055754 @ case 43
    .4byte lbl_080556f4 @ case 44
    .4byte lbl_0805570a @ case 45
    .4byte lbl_0805572a @ case 46
    .4byte lbl_08055754 @ case 47
    .4byte lbl_080556f4 @ case 48
    .4byte lbl_0805570a @ case 49
    .4byte lbl_0805572a @ case 50
    .4byte lbl_08055754 @ case 51
lbl_080556f4:
    mov r1, sp
    mov r0, sp
    ldrh r0, [r0]
    strh r0, [r1]
    mov r2, sp
    mov r0, sp
    ldrh r0, [r0, #2]
    movs r1, #1
    orrs r0, r1
    strh r0, [r2, #2]
    b lbl_0805571e
lbl_0805570a:
    mov r2, sp
    mov r0, sp
    ldrh r1, [r0]
    movs r0, #1
    orrs r0, r1
    strh r0, [r2]
    mov r1, sp
    mov r0, sp
    ldrh r0, [r0, #2]
    strh r0, [r1, #2]
lbl_0805571e:
    mov r0, sp
    ldrh r1, [r0, #4]
    movs r0, #2
    orrs r0, r1
    strh r0, [r2, #4]
    b lbl_08055776
lbl_0805572a:
    mov r1, sp
    mov r0, sp
    ldrh r0, [r0]
    movs r3, #1
    orrs r0, r3
    strh r0, [r1]
    mov r0, sp
    ldrh r0, [r0, #2]
    strh r0, [r1, #2]
    mov r2, sp
    mov r0, sp
    ldrh r1, [r0, #4]
    movs r0, #2
    orrs r0, r1
    strh r0, [r2, #4]
    ldr r0, lbl_08055750 @ =0x0300002b
    strb r3, [r0]
    b lbl_08055776
    .align 2, 0
lbl_08055750: .4byte 0x0300002b
lbl_08055754:
    mov r2, sp
    mov r0, sp
    ldrh r1, [r0]
    movs r0, #2
    orrs r0, r1
    strh r0, [r2]
    mov r1, sp
    mov r0, sp
    ldrh r0, [r0, #2]
    strh r0, [r1, #2]
    mov r0, sp
    ldrh r0, [r0, #4]
    movs r1, #1
    orrs r0, r1
    strh r0, [r2, #4]
    ldr r0, lbl_08055790 @ =0x0300002b
    strb r1, [r0]
lbl_08055776:
    movs r2, #0
    movs r3, #0
    ldr r1, lbl_08055794 @ =0x030000bc
    ldrb r0, [r1, #7]
    subs r0, #8
    mov r8, r1
    cmp r0, #0x2b
    bhi lbl_08055876
    lsls r0, r0, #2
    ldr r1, lbl_08055798 @ =lbl_0805579c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08055790: .4byte 0x0300002b
lbl_08055794: .4byte 0x030000bc
lbl_08055798: .4byte lbl_0805579c
lbl_0805579c: @ jump table
    .4byte lbl_08055868 @ case 0
    .4byte lbl_08055868 @ case 1
    .4byte lbl_08055868 @ case 2
    .4byte lbl_08055868 @ case 3
    .4byte lbl_0805586c @ case 4
    .4byte lbl_0805586c @ case 5
    .4byte lbl_0805586c @ case 6
    .4byte lbl_0805586c @ case 7
    .4byte lbl_08055870 @ case 8
    .4byte lbl_08055870 @ case 9
    .4byte lbl_08055870 @ case 10
    .4byte lbl_08055870 @ case 11
    .4byte lbl_08055874 @ case 12
    .4byte lbl_08055874 @ case 13
    .4byte lbl_08055874 @ case 14
    .4byte lbl_08055874 @ case 15
    .4byte lbl_0805584c @ case 16
    .4byte lbl_0805584c @ case 17
    .4byte lbl_0805584c @ case 18
    .4byte lbl_0805584c @ case 19
    .4byte lbl_08055850 @ case 20
    .4byte lbl_08055850 @ case 21
    .4byte lbl_08055850 @ case 22
    .4byte lbl_08055850 @ case 23
    .4byte lbl_08055854 @ case 24
    .4byte lbl_08055854 @ case 25
    .4byte lbl_08055854 @ case 26
    .4byte lbl_08055854 @ case 27
    .4byte lbl_08055858 @ case 28
    .4byte lbl_08055858 @ case 29
    .4byte lbl_08055858 @ case 30
    .4byte lbl_08055858 @ case 31
    .4byte lbl_0805585c @ case 32
    .4byte lbl_0805585c @ case 33
    .4byte lbl_0805585c @ case 34
    .4byte lbl_0805585c @ case 35
    .4byte lbl_08055860 @ case 36
    .4byte lbl_08055860 @ case 37
    .4byte lbl_08055860 @ case 38
    .4byte lbl_08055860 @ case 39
    .4byte lbl_08055864 @ case 40
    .4byte lbl_08055864 @ case 41
    .4byte lbl_08055864 @ case 42
    .4byte lbl_08055864 @ case 43
lbl_0805584c:
    movs r3, #0
    b lbl_08055876
lbl_08055850:
    movs r3, #3
    b lbl_08055876
lbl_08055854:
    movs r3, #6
    b lbl_08055876
lbl_08055858:
    movs r3, #9
    b lbl_08055876
lbl_0805585c:
    movs r3, #0xb
    b lbl_08055876
lbl_08055860:
    movs r3, #0xd
    b lbl_08055876
lbl_08055864:
    movs r3, #0x10
    b lbl_08055876
lbl_08055868:
    movs r2, #7
    b lbl_08055894
lbl_0805586c:
    movs r2, #0xa
    b lbl_08055894
lbl_08055870:
    movs r2, #0xd
    b lbl_08055894
lbl_08055874:
    movs r2, #0x10
lbl_08055876:
    cmp r2, #0
    bne lbl_08055894
    ldr r0, lbl_0805588c @ =0x03000088
    strb r3, [r0, #5]
    movs r1, #0x10
    subs r1, r1, r3
    strb r1, [r0, #4]
    ldr r0, lbl_08055890 @ =0x030056c4
    strb r2, [r0, #1]
    mov ip, r0
    b lbl_080558a4
    .align 2, 0
lbl_0805588c: .4byte 0x03000088
lbl_08055890: .4byte 0x030056c4
lbl_08055894:
    ldr r1, lbl_0805594c @ =0x03000088
    movs r0, #0x10
    strb r0, [r1, #5]
    strb r2, [r1, #4]
    ldr r1, lbl_08055950 @ =0x030056c4
    movs r0, #1
    strb r0, [r1, #1]
    mov ip, r1
lbl_080558a4:
    ldr r2, lbl_0805594c @ =0x03000088
    ldrb r3, [r2, #4]
    movs r4, #0
    mov r0, ip
    strb r3, [r0, #3]
    ldrb r1, [r2, #5]
    strb r1, [r0, #2]
    ldr r0, lbl_08055954 @ =0x030056cc
    strb r3, [r0, #4]
    strb r1, [r0, #3]
    ldr r3, lbl_08055958 @ =0x04000052
    ldrb r1, [r2, #5]
    lsls r1, r1, #8
    ldrb r0, [r2, #4]
    orrs r0, r1
    strh r0, [r3]
    ldr r0, lbl_0805595c @ =0x03000006
    movs r7, #0
    strh r4, [r0]
    ldr r1, lbl_08055960 @ =0x03000012
    movs r3, #1
    rsbs r3, r3, #0
    adds r0, r3, #0
    strb r0, [r1]
    ldr r1, lbl_08055964 @ =0x030056c0
    ldr r0, lbl_08055968 @ =0x083458c4
    ldr r0, [r0]
    str r0, [r1]
    ldr r0, lbl_0805596c @ =0x03000108
    strb r7, [r0]
    movs r6, #0xf0
    strb r6, [r0, #1]
    strb r7, [r0, #2]
    movs r5, #0xa0
    strb r5, [r0, #3]
    strb r7, [r0, #4]
    ldr r0, lbl_08055970 @ =0x04000048
    strb r7, [r0]
    subs r0, #8
    strh r4, [r0]
    adds r0, #4
    strh r4, [r0]
    movs r3, #0x3f
    strb r3, [r2, #7]
    movs r1, #0x20
    strb r1, [r2, #8]
    adds r0, #6
    strb r1, [r0]
    subs r0, #1
    strb r3, [r0]
    subs r0, #7
    strh r6, [r0]
    adds r0, #4
    strh r5, [r0]
    ldr r1, lbl_08055974 @ =0x0400000a
    mov r0, sp
    ldrh r0, [r0, #2]
    strh r0, [r1]
    adds r1, #2
    mov r0, sp
    ldrh r0, [r0, #4]
    strh r0, [r1]
    mov r0, sp
    ldrh r0, [r0]
    strh r0, [r2, #0xa]
    strh r0, [r2, #0x12]
    mov r0, sp
    ldrh r0, [r0, #2]
    strh r0, [r2, #0xc]
    mov r0, sp
    ldrh r0, [r0, #4]
    strh r0, [r2, #0xe]
    mov r0, sp
    ldrh r0, [r0, #6]
    strh r0, [r2, #0x10]
    mov r4, r8
    ldrb r0, [r4, #7]
    cmp r0, #7
    bhi lbl_08055978
    movs r0, #0xfd
    lsls r0, r0, #6
    mov r1, ip
    strh r0, [r1, #4]
    b lbl_0805597e
    .align 2, 0
lbl_0805594c: .4byte 0x03000088
lbl_08055950: .4byte 0x030056c4
lbl_08055954: .4byte 0x030056cc
lbl_08055958: .4byte 0x04000052
lbl_0805595c: .4byte 0x03000006
lbl_08055960: .4byte 0x03000012
lbl_08055964: .4byte 0x030056c0
lbl_08055968: .4byte 0x083458c4
lbl_0805596c: .4byte 0x03000108
lbl_08055970: .4byte 0x04000048
lbl_08055974: .4byte 0x0400000a
lbl_08055978:
    ldr r0, lbl_08055994 @ =0x00003e41
    mov r3, ip
    strh r0, [r3, #4]
lbl_0805597e:
    mov r4, r8
    ldrb r0, [r4, #0x10]
    cmp r0, #0xa
    bne lbl_08055998
    mov r0, ip
    ldrh r1, [r0, #4]
    movs r0, #8
    orrs r0, r1
    mov r1, ip
    strh r0, [r1, #4]
    b lbl_080559a6
    .align 2, 0
lbl_08055994: .4byte 0x00003e41
lbl_08055998:
    cmp r0, #0xb
    bne lbl_080559a6
    mov r3, ip
    ldrh r1, [r3, #4]
    movs r0, #4
    orrs r0, r1
    strh r0, [r3, #4]
lbl_080559a6:
    mov r4, r8
    ldrb r0, [r4, #1]
    cmp r0, #0x12
    bne lbl_080559ba
    mov r0, ip
    ldrh r1, [r0, #4]
    ldr r0, lbl_080559ec @ =0x0000fffe
    ands r0, r1
    mov r1, ip
    strh r0, [r1, #4]
lbl_080559ba:
    mov r3, ip
    ldrh r1, [r3, #4]
    movs r0, #0
    bl TransparencyUpdateBLDCNT
    ldr r1, lbl_080559f0 @ =0x0300544c
    movs r0, #0
    strh r0, [r1]
    movs r4, #0xbe
    lsls r4, r4, #7
    bl TransparencyCheckIsDarkRoom
    adds r3, r0, #0
    cmp r3, #0
    beq lbl_080559da
    ands r4, r3
lbl_080559da:
    ldr r0, lbl_080559f4 @ =0x03000088
    strh r4, [r0]
lbl_080559de:
    add sp, #8
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080559ec: .4byte 0x0000fffe
lbl_080559f0: .4byte 0x0300544c
lbl_080559f4: .4byte 0x03000088

    thumb_func_start TransparencyGetBGSizeFlag
TransparencyGetBGSizeFlag: @ 0x080559f8
    push {lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r2, r0, #0
    movs r1, #0
    cmp r0, #1
    beq lbl_08055a14
    cmp r0, #1
    bgt lbl_08055a10
    cmp r0, #0
    beq lbl_08055a1e
    b lbl_08055a14
lbl_08055a10:
    cmp r2, #2
    beq lbl_08055a1a
lbl_08055a14:
    movs r1, #0x80
    lsls r1, r1, #7
    b lbl_08055a1e
lbl_08055a1a:
    movs r1, #0x80
    lsls r1, r1, #8
lbl_08055a1e:
    adds r0, r1, #0
    pop {r1}
    bx r1

    thumb_func_start TransparencyCheckIsDarkRoom
TransparencyCheckIsDarkRoom: @ 0x08055a24
    push {lr}
    movs r1, #0
    ldr r0, lbl_08055a38 @ =0x030000bc
    ldrb r0, [r0, #1]
    cmp r0, #0x45
    bne lbl_08055a32
    ldr r1, lbl_08055a3c @ =0x0000ffff
lbl_08055a32:
    adds r0, r1, #0
    pop {r1}
    bx r1
    .align 2, 0
lbl_08055a38: .4byte 0x030000bc
lbl_08055a3c: .4byte 0x0000ffff

    thumb_func_start TransparencyUpdateBLDCNT
TransparencyUpdateBLDCNT: @ 0x08055a40
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    adds r4, r2, #0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    adds r5, r1, #0
    movs r3, #0xc0
    ands r3, r1
    ldr r0, lbl_08055a68 @ =0x03000088
    strh r1, [r0, #2]
    adds r6, r0, #0
    cmp r2, #1
    beq lbl_08055a90
    cmp r2, #1
    bgt lbl_08055a6c
    cmp r2, #0
    beq lbl_08055a76
    b lbl_08055acc
    .align 2, 0
lbl_08055a68: .4byte 0x03000088
lbl_08055a6c:
    cmp r4, #2
    beq lbl_08055aac
    cmp r4, #3
    beq lbl_08055ab0
    b lbl_08055acc
lbl_08055a76:
    cmp r3, #0x40
    bne lbl_08055a84
    ldr r0, lbl_08055a80 @ =0x030056cc
    strh r1, [r0]
    b lbl_08055ab8
    .align 2, 0
lbl_08055a80: .4byte 0x030056cc
lbl_08055a84:
    ldr r0, lbl_08055a8c @ =0x030056dc
    strh r1, [r0]
    b lbl_08055ab8
    .align 2, 0
lbl_08055a8c: .4byte 0x030056dc
lbl_08055a90:
    cmp r3, #0x40
    bne lbl_08055aa0
    ldr r0, lbl_08055a9c @ =0x030056d4
    strh r1, [r0]
    b lbl_08055ab8
    .align 2, 0
lbl_08055a9c: .4byte 0x030056d4
lbl_08055aa0:
    ldr r0, lbl_08055aa8 @ =0x030056e4
    strh r5, [r0]
    b lbl_08055ab8
    .align 2, 0
lbl_08055aa8: .4byte 0x030056e4
lbl_08055aac:
    cmp r3, #0x80
    beq lbl_08055acc
lbl_08055ab0:
    ldr r1, lbl_08055ab4 @ =0x04000050
    b lbl_08055ac8
    .align 2, 0
lbl_08055ab4: .4byte 0x04000050
lbl_08055ab8:
    ldr r0, lbl_08055ad4 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #2
    beq lbl_08055ac6
    cmp r3, #0x80
    beq lbl_08055acc
lbl_08055ac6:
    ldr r1, lbl_08055ad8 @ =0x0300544c
lbl_08055ac8:
    ldrh r0, [r6, #2]
    strh r0, [r1]
lbl_08055acc:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08055ad4: .4byte 0x03000c72
lbl_08055ad8: .4byte 0x0300544c

    thumb_func_start TransparencySpriteUpdateBLDY
TransparencySpriteUpdateBLDY: @ 0x08055adc
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r0, #0
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r3, #0
    cmp r4, #0x10
    bls lbl_08055af4
    movs r3, #1
lbl_08055af4:
    cmp r3, #0
    beq lbl_08055b08
    ldr r2, lbl_08055b04 @ =0x030056e4
    ldrb r1, [r2, #2]
    movs r0, #0xfe
    ands r0, r1
    strb r0, [r2, #2]
    b lbl_08055b1a
    .align 2, 0
lbl_08055b04: .4byte 0x030056e4
lbl_08055b08:
    ldr r0, lbl_08055b20 @ =0x030056e4
    strb r1, [r0, #4]
    strb r2, [r0, #6]
    strb r4, [r0, #3]
    strb r3, [r0, #5]
    movs r1, #1
    strb r1, [r0, #2]
    bl TransparencyApplyNewEffects
lbl_08055b1a:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08055b20: .4byte 0x030056e4

    thumb_func_start TransparencySpriteUpdateBLDALPHA
TransparencySpriteUpdateBLDALPHA: @ 0x08055b24
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r6, r1, #0
    lsls r2, r2, #0x18
    asrs r5, r2, #0x18
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    movs r0, #0
    cmp r4, #0x10
    bls lbl_08055b42
    movs r0, #1
lbl_08055b42:
    cmp r1, #0x10
    bls lbl_08055b48
    adds r0, #1
lbl_08055b48:
    cmp r0, #0
    beq lbl_08055b6c
    ldr r2, lbl_08055b64 @ =0x030056c4
    ldr r1, lbl_08055b68 @ =0x030056cc
    ldrb r0, [r1, #4]
    ldrb r1, [r1, #3]
    adds r0, r0, r1
    movs r1, #0x10
    eors r0, r1
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r2, #1]
    b lbl_08055b8e
    .align 2, 0
lbl_08055b64: .4byte 0x030056c4
lbl_08055b68: .4byte 0x030056cc
lbl_08055b6c:
    ldr r2, lbl_08055b94 @ =0x030056d4
    strb r5, [r2, #5]
    strb r3, [r2, #7]
    strb r4, [r2, #4]
    strb r6, [r2, #3]
    strb r0, [r2, #6]
    ldr r3, lbl_08055b98 @ =0x030056c4
    adds r0, r4, r6
    movs r1, #0x10
    eors r0, r1
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r3, #1]
    movs r0, #1
    strb r0, [r2, #2]
    bl TransparencyApplyNewEffects
lbl_08055b8e:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08055b94: .4byte 0x030056d4
lbl_08055b98: .4byte 0x030056c4

    thumb_func_start TransparencyUpdateBLDY
TransparencyUpdateBLDY: @ 0x08055b9c
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r0, #0
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r3, #0
    cmp r4, #0x10
    bls lbl_08055bb4
    movs r3, #1
lbl_08055bb4:
    cmp r3, #0
    bne lbl_08055bc6
    ldr r0, lbl_08055bcc @ =0x030056dc
    strb r1, [r0, #4]
    strb r2, [r0, #6]
    strb r4, [r0, #3]
    strb r3, [r0, #5]
    movs r1, #1
    strb r1, [r0, #2]
lbl_08055bc6:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08055bcc: .4byte 0x030056dc

    thumb_func_start TransparencyUpdateBLDALPHA
TransparencyUpdateBLDALPHA: @ 0x08055bd0
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r6, r1, #0
    lsls r2, r2, #0x18
    asrs r5, r2, #0x18
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    movs r0, #0
    cmp r4, #0x10
    bls lbl_08055bee
    movs r0, #1
lbl_08055bee:
    cmp r1, #0x10
    bls lbl_08055bf4
    adds r0, #1
lbl_08055bf4:
    cmp r0, #0
    bne lbl_08055c16
    ldr r2, lbl_08055c1c @ =0x030056cc
    strb r5, [r2, #5]
    strb r3, [r2, #7]
    strb r4, [r2, #4]
    strb r6, [r2, #3]
    strb r0, [r2, #6]
    ldr r3, lbl_08055c20 @ =0x030056c4
    adds r0, r4, r6
    movs r1, #0x10
    eors r0, r1
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r3, #1]
    movs r0, #1
    strb r0, [r2, #2]
lbl_08055c16:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08055c1c: .4byte 0x030056cc
lbl_08055c20: .4byte 0x030056c4

    thumb_func_start TransparencyApplyNewEffects
TransparencyApplyNewEffects: @ 0x08055c24
    push {lr}
    ldr r0, lbl_08055c58 @ =0x030056c4
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08055c6c
    ldr r3, lbl_08055c5c @ =0x030056e4
    ldrb r2, [r3, #2]
    movs r1, #1
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3, #2]
    ldr r3, lbl_08055c60 @ =0x030056d4
    ldrb r2, [r3, #2]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3, #2]
    ldr r3, lbl_08055c64 @ =0x030056dc
    ldrb r2, [r3, #2]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3, #2]
    ldr r2, lbl_08055c68 @ =0x030056cc
    ldrb r0, [r2, #2]
    ands r1, r0
    strb r1, [r2, #2]
    b lbl_08055cc2
    .align 2, 0
lbl_08055c58: .4byte 0x030056c4
lbl_08055c5c: .4byte 0x030056e4
lbl_08055c60: .4byte 0x030056d4
lbl_08055c64: .4byte 0x030056dc
lbl_08055c68: .4byte 0x030056cc
lbl_08055c6c:
    ldr r3, lbl_08055c90 @ =0x030056e4
    ldrb r1, [r3, #2]
    movs r2, #1
    adds r0, r2, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_08055ca4
    ldr r3, lbl_08055c94 @ =0x030056d4
    ldrb r1, [r3, #2]
    adds r0, r2, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08055c98
    adds r0, r3, #0
    bl TransparencyApplyNewBLDALPHA
    b lbl_08055cc2
    .align 2, 0
lbl_08055c90: .4byte 0x030056e4
lbl_08055c94: .4byte 0x030056d4
lbl_08055c98:
    ldr r3, lbl_08055cac @ =0x030056dc
    ldrb r1, [r3, #2]
    adds r0, r2, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08055cb0
lbl_08055ca4:
    adds r0, r3, #0
    bl TransparencyApplyNewBLDY
    b lbl_08055cc2
    .align 2, 0
lbl_08055cac: .4byte 0x030056dc
lbl_08055cb0:
    ldr r3, lbl_08055cd4 @ =0x030056cc
    ldrb r1, [r3, #2]
    adds r0, r2, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08055cc2
    adds r0, r3, #0
    bl TransparencyApplyNewBLDALPHA
lbl_08055cc2:
    ldr r0, lbl_08055cd8 @ =0x030056c0
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08055cce
    bl sub_08055e60
lbl_08055cce:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08055cd4: .4byte 0x030056cc
lbl_08055cd8: .4byte 0x030056c0

    thumb_func_start TransparencyApplyNewBLDALPHA
TransparencyApplyNewBLDALPHA: @ 0x08055cdc
    push {r4, r5, r6, r7, lr}
    adds r2, r0, #0
    movs r3, #0
    ldr r0, lbl_08055d14 @ =0x03000006
    ldrh r1, [r0]
    adds r7, r0, #0
    cmp r1, #0
    bne lbl_08055dae
    ldr r0, lbl_08055d18 @ =0x03000130
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08055dae
    ldrb r1, [r2, #2]
    movs r0, #0x80
    ands r0, r1
    adds r6, r1, #0
    cmp r0, #0
    beq lbl_08055d02
    movs r3, #1
lbl_08055d02:
    cmp r3, #0
    bne lbl_08055dae
    ldrb r0, [r2, #6]
    cmp r0, #0
    beq lbl_08055d1c
    subs r0, #1
    strb r0, [r2, #6]
    b lbl_08055dae
    .align 2, 0
lbl_08055d14: .4byte 0x03000006
lbl_08055d18: .4byte 0x03000130
lbl_08055d1c:
    ldrb r0, [r2, #5]
    strb r0, [r2, #6]
    ldrb r0, [r2, #7]
    cmp r0, #0
    bne lbl_08055d2a
    movs r0, #1
    strb r0, [r2, #7]
lbl_08055d2a:
    ldr r0, lbl_08055d48 @ =0x03000088
    ldrb r4, [r2, #4]
    ldrb r1, [r0, #4]
    adds r5, r0, #0
    cmp r4, r1
    beq lbl_08055d5c
    ldrb r3, [r2, #7]
    cmp r4, r1
    bhs lbl_08055d4c
    ldrb r0, [r5, #4]
    subs r3, r0, r3
    adds r0, r4, #0
    cmp r3, r0
    bge lbl_08055d58
    b lbl_08055d56
    .align 2, 0
lbl_08055d48: .4byte 0x03000088
lbl_08055d4c:
    ldrb r0, [r5, #4]
    adds r3, r3, r0
    ldrb r0, [r2, #4]
    cmp r3, r0
    ble lbl_08055d58
lbl_08055d56:
    adds r3, r0, #0
lbl_08055d58:
    strb r3, [r5, #4]
    movs r3, #1
lbl_08055d5c:
    ldrb r1, [r2, #3]
    ldrb r0, [r5, #5]
    cmp r1, r0
    beq lbl_08055d84
    ldrb r3, [r2, #7]
    cmp r1, r0
    bhs lbl_08055d74
    subs r3, r0, r3
    adds r0, r1, #0
    cmp r3, r0
    bge lbl_08055d80
    b lbl_08055d7e
lbl_08055d74:
    ldrb r0, [r5, #5]
    adds r3, r3, r0
    ldrb r0, [r2, #3]
    cmp r3, r0
    ble lbl_08055d80
lbl_08055d7e:
    adds r3, r0, #0
lbl_08055d80:
    strb r3, [r5, #5]
    movs r3, #1
lbl_08055d84:
    cmp r3, #0
    beq lbl_08055dac
    ldrb r0, [r5, #5]
    lsls r0, r0, #8
    ldrb r1, [r5, #4]
    orrs r1, r0
    strh r1, [r7]
    lsls r0, r6, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_08055dae
    movs r0, #2
    orrs r0, r6
    strb r0, [r2, #2]
    ldr r1, lbl_08055da8 @ =0x0300544c
    ldrh r0, [r2]
    strh r0, [r1]
    b lbl_08055dae
    .align 2, 0
lbl_08055da8: .4byte 0x0300544c
lbl_08055dac:
    strb r3, [r2, #2]
lbl_08055dae:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start TransparencyApplyNewBLDY
TransparencyApplyNewBLDY: @ 0x08055db4
    push {r4, r5, r6, r7, lr}
    adds r2, r0, #0
    movs r4, #0
    ldr r0, lbl_08055dec @ =0x03000012
    movs r1, #0
    ldrsb r1, [r0, r1]
    adds r7, r0, #0
    cmp r1, #0
    bge lbl_08055e5a
    ldr r0, lbl_08055df0 @ =0x03000130
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08055e5a
    ldrb r1, [r2, #2]
    movs r0, #0x80
    ands r0, r1
    adds r6, r1, #0
    cmp r0, #0
    beq lbl_08055ddc
    movs r4, #1
lbl_08055ddc:
    cmp r4, #0
    bne lbl_08055e5a
    ldrb r0, [r2, #5]
    cmp r0, #0
    beq lbl_08055df4
    subs r0, #1
    strb r0, [r2, #5]
    b lbl_08055e5a
    .align 2, 0
lbl_08055dec: .4byte 0x03000012
lbl_08055df0: .4byte 0x03000130
lbl_08055df4:
    ldrb r0, [r2, #4]
    strb r0, [r2, #5]
    ldrb r0, [r2, #6]
    cmp r0, #0
    bne lbl_08055e02
    movs r0, #1
    strb r0, [r2, #6]
lbl_08055e02:
    ldr r0, lbl_08055e20 @ =0x03000088
    ldrb r1, [r2, #3]
    ldrb r3, [r0, #6]
    adds r5, r0, #0
    cmp r1, r3
    beq lbl_08055e34
    ldrb r4, [r2, #6]
    cmp r1, r3
    bhs lbl_08055e24
    ldrb r0, [r5, #6]
    subs r4, r0, r4
    adds r0, r1, #0
    cmp r4, r0
    bge lbl_08055e30
    b lbl_08055e2e
    .align 2, 0
lbl_08055e20: .4byte 0x03000088
lbl_08055e24:
    ldrb r0, [r5, #6]
    adds r4, r4, r0
    ldrb r0, [r2, #3]
    cmp r4, r0
    ble lbl_08055e30
lbl_08055e2e:
    adds r4, r0, #0
lbl_08055e30:
    strb r4, [r5, #6]
    movs r4, #1
lbl_08055e34:
    cmp r4, #0
    beq lbl_08055e58
    ldrb r0, [r5, #6]
    strb r0, [r7]
    lsls r0, r6, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_08055e5a
    movs r0, #2
    orrs r0, r6
    strb r0, [r2, #2]
    ldr r1, lbl_08055e54 @ =0x0300544c
    ldrh r0, [r2]
    strh r0, [r1]
    b lbl_08055e5a
    .align 2, 0
lbl_08055e54: .4byte 0x0300544c
lbl_08055e58:
    strb r4, [r2, #2]
lbl_08055e5a:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_08055e60
sub_08055e60: @ 0x08055e60
    push {r4, lr}
    ldr r0, lbl_08055e8c @ =0x03000130
    ldrb r3, [r0]
    cmp r3, #0
    beq lbl_08055e9c
    cmp r3, #1
    bne lbl_08055f5e
    ldr r1, lbl_08055e90 @ =0x030056c0
    movs r0, #0
    strb r0, [r1, #2]
    movs r0, #2
    strb r0, [r1, #1]
    ldr r0, lbl_08055e94 @ =0x03000088
    ldrb r0, [r0, #5]
    adds r3, r0, #2
    ldr r2, lbl_08055e98 @ =0x03000006
    lsls r1, r3, #8
    movs r0, #0x10
    subs r0, r0, r3
    orrs r1, r0
    strh r1, [r2]
    b lbl_08055f5e
    .align 2, 0
lbl_08055e8c: .4byte 0x03000130
lbl_08055e90: .4byte 0x030056c0
lbl_08055e94: .4byte 0x03000088
lbl_08055e98: .4byte 0x03000006
lbl_08055e9c:
    ldr r2, lbl_08055ef0 @ =0x030056c0
    ldrb r0, [r2, #2]
    adds r1, r0, #1
    strb r1, [r2, #2]
    ldrb r0, [r2]
    adds r4, r2, #0
    cmp r0, #2
    beq lbl_08055f06
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x13
    bls lbl_08055f5e
    strb r3, [r2, #2]
    ldrb r0, [r2, #1]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    strb r0, [r2, #1]
    movs r3, #3
    ands r3, r0
    cmp r3, #0
    beq lbl_08055ed4
    movs r0, #1
    ands r0, r3
    movs r3, #2
    cmp r0, #0
    beq lbl_08055ed4
    movs r3, #1
lbl_08055ed4:
    ldrb r1, [r4, #1]
    movs r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_08055ee0
    rsbs r3, r3, #0
lbl_08055ee0:
    ldr r0, lbl_08055ef4 @ =0x03000088
    ldrb r2, [r0, #4]
    ldrb r0, [r0, #5]
    adds r0, r0, r3
    cmp r0, #0
    bge lbl_08055ef8
    movs r0, #0
    b lbl_08055efe
    .align 2, 0
lbl_08055ef0: .4byte 0x030056c0
lbl_08055ef4: .4byte 0x03000088
lbl_08055ef8:
    cmp r0, #0x10
    ble lbl_08055efe
    movs r0, #0x10
lbl_08055efe:
    subs r2, r2, r3
    cmp r2, #0
    blt lbl_08055f4c
    b lbl_08055f50
lbl_08055f06:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bls lbl_08055f5e
    strb r3, [r2, #2]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #3
    bls lbl_08055f20
    strb r3, [r2, #1]
lbl_08055f20:
    ldrb r3, [r2, #1]
    cmp r3, #2
    bls lbl_08055f2a
    movs r0, #4
    subs r3, r0, r3
lbl_08055f2a:
    rsbs r3, r3, #0
    ldr r0, lbl_08055f3c @ =0x03000088
    ldrb r2, [r0, #4]
    ldrb r0, [r0, #5]
    adds r0, r0, r3
    cmp r0, #0
    bge lbl_08055f40
    movs r0, #0
    b lbl_08055f46
    .align 2, 0
lbl_08055f3c: .4byte 0x03000088
lbl_08055f40:
    cmp r0, #0x10
    ble lbl_08055f46
    movs r0, #0x10
lbl_08055f46:
    subs r2, r2, r3
    cmp r2, #0
    bge lbl_08055f50
lbl_08055f4c:
    movs r2, #0
    b lbl_08055f56
lbl_08055f50:
    cmp r2, #0x10
    ble lbl_08055f56
    movs r2, #0x10
lbl_08055f56:
    ldr r1, lbl_08055f64 @ =0x03000006
    lsls r0, r0, #8
    orrs r0, r2
    strh r0, [r1]
lbl_08055f5e:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08055f64: .4byte 0x03000006

    thumb_func_start sub_08055f68
sub_08055f68: @ 0x08055f68
    push {lr}
    bl update_animated_palette_after_transition_or_reload
    bl transfer_faded_palette_on_transition
    bl check_play_loading_jingle
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start load_room
load_room: @ 0x08055f7c
    push {r4, r5, lr}
    bl setup_clipdata_code
    bl reset_info_on_transition
    ldr r0, lbl_08055fa0 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08055fa4
    bl load_room_entry
    bl load_scrolls
    bl set_automatic_bg_scrolling
    b lbl_08056074
    .align 2, 0
lbl_08055fa0: .4byte 0x03000bf0
lbl_08055fa4:
    cmp r0, #6
    bne lbl_08056008
    ldr r0, lbl_08055ff0 @ =0x03000bf2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0xe
    bne lbl_08056074
    ldr r2, lbl_08055ff4 @ =0x03001530
    ldrb r1, [r2, #0xf]
    movs r0, #0xef
    ands r0, r1
    strb r0, [r2, #0xf]
    movs r0, #0x1e
    bl SamusSetPose
    ldr r4, lbl_08055ff8 @ =0x030013d4
    movs r5, #0
    movs r0, #0x9e
    lsls r0, r0, #2
    strh r0, [r4, #0x12]
    subs r0, #0x79
    strh r0, [r4, #0x14]
    ldr r1, lbl_08055ffc @ =0x0300019c
    strb r5, [r1, #2]
    movs r0, #9
    strb r0, [r1, #4]
    bl sub_0806041c
    ldr r1, lbl_08056000 @ =0x03000049
    movs r0, #1
    strb r0, [r1]
    ldr r0, lbl_08056004 @ =0x03001414
    strb r5, [r0, #5]
    movs r0, #1
    strh r0, [r4, #0xc]
    b lbl_08056074
    .align 2, 0
lbl_08055ff0: .4byte 0x03000bf2
lbl_08055ff4: .4byte 0x03001530
lbl_08055ff8: .4byte 0x030013d4
lbl_08055ffc: .4byte 0x0300019c
lbl_08056000: .4byte 0x03000049
lbl_08056004: .4byte 0x03001414
lbl_08056008:
    cmp r0, #8
    bne lbl_08056068
    ldr r2, lbl_0805604c @ =0x03001530
    ldrb r1, [r2, #0xf]
    movs r0, #0xdf
    ands r0, r1
    strb r0, [r2, #0xf]
    movs r0, #0x1e
    bl SamusSetPose
    ldr r4, lbl_08056050 @ =0x030013d4
    movs r5, #0
    movs r0, #0xc4
    lsls r0, r0, #3
    strh r0, [r4, #0x12]
    ldr r0, lbl_08056054 @ =0x000007bf
    strh r0, [r4, #0x14]
    ldr r1, lbl_08056058 @ =0x0300019c
    strb r5, [r1, #2]
    movs r0, #0xa
    strb r0, [r1, #4]
    bl sub_0806041c
    ldr r1, lbl_0805605c @ =0x03000049
    movs r0, #1
    strb r0, [r1]
    movs r0, #1
    strh r0, [r4, #0xc]
    ldr r1, lbl_08056060 @ =0x03000bf2
    movs r0, #0xf
    strb r0, [r1]
    ldr r0, lbl_08056064 @ =0x03001414
    strb r5, [r0, #5]
    b lbl_08056074
    .align 2, 0
lbl_0805604c: .4byte 0x03001530
lbl_08056050: .4byte 0x030013d4
lbl_08056054: .4byte 0x000007bf
lbl_08056058: .4byte 0x0300019c
lbl_0805605c: .4byte 0x03000049
lbl_08056060: .4byte 0x03000bf2
lbl_08056064: .4byte 0x03001414
lbl_08056068:
    cmp r0, #7
    bne lbl_08056074
    movs r0, #0xe
    movs r1, #0x10
    bl PlayMusic
lbl_08056074:
    bl load_tileset
    bl load_room_backgrounds
    bl remove_never_reform_blocks_and_collected_tank
    ldr r1, lbl_08056138 @ =0x03001600
    ldr r2, lbl_0805613c @ =0x030013d4
    ldrh r0, [r2, #0x12]
    strh r0, [r1]
    ldr r1, lbl_08056140 @ =0x03001602
    ldrh r0, [r2, #0x14]
    strh r0, [r1]
    bl TransparencySetRoomEffectsTransparency
    bl LoadFirstRoom
    ldr r0, lbl_08056144 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080560c8
    ldr r0, lbl_08056148 @ =0x03000c1d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080560c8
    bl process_general_scrolling
    ldr r1, lbl_0805614c @ =0x030013ba
    ldr r2, lbl_08056150 @ =0x03000144
    ldrh r0, [r2, #2]
    strh r0, [r1]
    ldr r1, lbl_08056154 @ =0x030013b8
    ldrh r0, [r2]
    strh r0, [r1]
    bl sub_08058ec4
    bl process_general_scrolling
lbl_080560c8:
    bl check_play_lightning_effect
    bl update_backgrounds_pos
    bl load_doors
    bl check_hatch_lock_events
    movs r0, #0
    bl sub_08056b28
    movs r0, #1
    bl sub_08056b28
    movs r0, #2
    bl sub_08056b28
    bl load_animated_graphics
    bl ResetTanksAnimation
    bl SetBGHazeEffect
    bl ProcessHaze
    bl MinimapCheckOnTransition
    ldr r0, lbl_08056148 @ =0x03000c1d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08056168
    ldr r0, lbl_08056158 @ =0x03000c75
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08056168
    ldr r0, lbl_08056144 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08056168
    ldr r0, lbl_0805613c @ =0x030013d4
    ldrb r1, [r0]
    adds r2, r0, #0
    cmp r1, #0x1d
    bne lbl_08056168
    ldrh r0, [r2, #0x10]
    cmp r0, #0x40
    bne lbl_0805615c
    ldrh r0, [r2, #0x14]
    adds r0, #0xc0
    b lbl_08056160
    .align 2, 0
lbl_08056138: .4byte 0x03001600
lbl_0805613c: .4byte 0x030013d4
lbl_08056140: .4byte 0x03001602
lbl_08056144: .4byte 0x03000bf0
lbl_08056148: .4byte 0x03000c1d
lbl_0805614c: .4byte 0x030013ba
lbl_08056150: .4byte 0x03000144
lbl_08056154: .4byte 0x030013b8
lbl_08056158: .4byte 0x03000c75
lbl_0805615c:
    ldrh r0, [r2, #0x14]
    subs r0, #0xc0
lbl_08056160:
    strh r0, [r2, #0x14]
    ldr r1, lbl_080561a0 @ =0x03001602
    ldrh r0, [r2, #0x14]
    strh r0, [r1]
lbl_08056168:
    bl sub_08060800
    ldr r4, lbl_080561a4 @ =0x03005518
    ldrh r1, [r4]
    cmp r1, #0
    beq lbl_080561d4
    ldr r0, lbl_080561a8 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080561ca
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_080561b4
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_080561ca
    ldr r0, lbl_080561ac @ =0x00000121
    movs r1, #0xa
    bl SoundFade
    ldrh r1, [r4]
    ldr r0, lbl_080561b0 @ =0x0000fffd
    ands r0, r1
    b lbl_080561c8
    .align 2, 0
lbl_080561a0: .4byte 0x03001602
lbl_080561a4: .4byte 0x03005518
lbl_080561a8: .4byte 0x03000bf0
lbl_080561ac: .4byte 0x00000121
lbl_080561b0: .4byte 0x0000fffd
lbl_080561b4:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080561ca
    ldr r0, lbl_080561dc @ =0x00000121
    bl SoundPlayNotAlreadyPlaying
    ldrh r0, [r4]
    movs r1, #2
    orrs r0, r1
lbl_080561c8:
    strh r0, [r4]
lbl_080561ca:
    ldr r2, lbl_080561e0 @ =0x03005518
    ldrh r1, [r2]
    ldr r0, lbl_080561e4 @ =0x0000fffe
    ands r0, r1
    strh r0, [r2]
lbl_080561d4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080561dc: .4byte 0x00000121
lbl_080561e0: .4byte 0x03005518
lbl_080561e4: .4byte 0x0000fffe

    thumb_func_start load_tileset
load_tileset: @ 0x080561e8
    push {r4, r5, r6, lr}
    sub sp, #0x18
    ldr r2, lbl_08056250 @ =0x0833dfdc
    ldr r0, lbl_08056254 @ =0x030000bc
    ldrb r1, [r0]
    lsls r0, r1, #2
    adds r0, r0, r1
    lsls r0, r0, #2
    add r1, sp, #4
    adds r0, r0, r2
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldm r0!, {r2, r3}
    stm r1!, {r2, r3}
    ldr r0, lbl_08056258 @ =0x03005450
    ldr r2, lbl_0805625c @ =0x02004000
    str r2, [r0]
    ldr r5, lbl_08056260 @ =0x02002000
    str r5, [r0, #4]
    ldr r6, lbl_08056264 @ =0x02003000
    str r6, [r0, #8]
    ldr r1, [sp, #0x10]
    adds r1, #2
    movs r3, #0x80
    lsls r3, r3, #6
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, lbl_08056268 @ =0x03000054
    ldrb r0, [r0]
    cmp r0, #7
    bls lbl_08056274
    ldr r1, lbl_0805626c @ =0x08365c20
    movs r3, #0x80
    lsls r3, r3, #3
    str r4, [sp]
    movs r0, #3
    adds r2, r5, #0
    bl DMATransfer
    ldr r1, lbl_08056270 @ =0x08365cc0
    movs r3, #0x80
    lsls r3, r3, #4
    str r4, [sp]
    movs r0, #3
    adds r2, r6, #0
    bl DMATransfer
    b lbl_08056294
    .align 2, 0
lbl_08056250: .4byte 0x0833dfdc
lbl_08056254: .4byte 0x030000bc
lbl_08056258: .4byte 0x03005450
lbl_0805625c: .4byte 0x02004000
lbl_08056260: .4byte 0x02002000
lbl_08056264: .4byte 0x02003000
lbl_08056268: .4byte 0x03000054
lbl_0805626c: .4byte 0x08365c20
lbl_08056270: .4byte 0x08365cc0
lbl_08056274:
    ldr r1, lbl_08056310 @ =0x085d91fc
    movs r3, #0x80
    lsls r3, r3, #3
    str r4, [sp]
    movs r0, #3
    adds r2, r5, #0
    bl DMATransfer
    ldr r1, lbl_08056314 @ =0x085d92ac
    movs r3, #0x80
    lsls r3, r3, #4
    str r4, [sp]
    movs r0, #3
    adds r2, r6, #0
    bl DMATransfer
lbl_08056294:
    ldr r1, lbl_08056318 @ =0x083655a0
    ldr r2, lbl_0805631c @ =0x02006000
    movs r5, #0x80
    lsls r5, r5, #5
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_08056320 @ =0x083654d0
    ldr r2, lbl_08056324 @ =0x02002400
    movs r3, #0x80
    lsls r3, r3, #2
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_08056328 @ =0x08365330
    ldr r2, lbl_0805632c @ =0x02003800
    movs r3, #0x80
    lsls r3, r3, #3
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [sp, #4]
    ldr r1, lbl_08056330 @ =0x06005800
    bl CallLZ77UncompVRAM
    ldr r1, [sp, #8]
    adds r1, #0x20
    ldr r2, lbl_08056334 @ =0x05000060
    movs r3, #0xd0
    lsls r3, r3, #1
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    movs r1, #0xa0
    lsls r1, r1, #0x13
    movs r0, #0
    strh r0, [r1]
    ldr r0, lbl_08056338 @ =0x0300002d
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_0805634c
    ldr r1, lbl_0805633c @ =0x085da40c
    ldr r2, lbl_08056340 @ =0x06004800
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_08056344 @ =0x085e0022
    ldr r2, lbl_08056348 @ =0x05000002
    str r4, [sp]
    movs r0, #3
    movs r3, #0x5e
    bl DMATransfer
    b lbl_08056368
    .align 2, 0
lbl_08056310: .4byte 0x085d91fc
lbl_08056314: .4byte 0x085d92ac
lbl_08056318: .4byte 0x083655a0
lbl_0805631c: .4byte 0x02006000
lbl_08056320: .4byte 0x083654d0
lbl_08056324: .4byte 0x02002400
lbl_08056328: .4byte 0x08365330
lbl_0805632c: .4byte 0x02003800
lbl_08056330: .4byte 0x06005800
lbl_08056334: .4byte 0x05000060
lbl_08056338: .4byte 0x0300002d
lbl_0805633c: .4byte 0x085da40c
lbl_08056340: .4byte 0x06004800
lbl_08056344: .4byte 0x085e0022
lbl_08056348: .4byte 0x05000002
lbl_0805634c:
    ldr r1, lbl_080563d8 @ =0x085d940c
    ldr r2, lbl_080563dc @ =0x06004800
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_080563e0 @ =0x085dfe22
    ldr r2, lbl_080563e4 @ =0x05000002
    str r4, [sp]
    movs r0, #3
    movs r3, #0x5e
    bl DMATransfer
lbl_08056368:
    ldr r2, lbl_080563e8 @ =0x030054fc
    ldr r0, [sp, #8]
    ldrh r0, [r0]
    movs r1, #0
    strh r0, [r2]
    strh r1, [r2, #2]
    ldr r0, [sp, #0xc]
    ldrb r2, [r0, #2]
    lsls r2, r2, #8
    ldrb r1, [r0, #1]
    orrs r2, r1
    ldr r1, lbl_080563ec @ =0x0600fde0
    subs r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r2, lbl_080563f0 @ =0x0600ffe0
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x20
    bl BitFill
    ldr r0, lbl_080563f4 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080563ce
    ldr r1, lbl_080563f8 @ =0x030000bc
    ldr r2, lbl_080563fc @ =0x030056f4
    add r0, sp, #4
    ldrb r0, [r0, #0x10]
    strb r0, [r2, #1]
    strb r0, [r1, #0x1b]
    add r0, sp, #4
    ldrb r0, [r0, #0x11]
    strb r0, [r2]
    strb r0, [r1, #0x1c]
    ldrb r0, [r1, #3]
    cmp r0, #0x31
    bne lbl_080563ce
    ldr r2, lbl_08056400 @ =0x06002000
    movs r3, #0x80
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0x40
    bl BitFill
lbl_080563ce:
    add sp, #0x18
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080563d8: .4byte 0x085d940c
lbl_080563dc: .4byte 0x06004800
lbl_080563e0: .4byte 0x085dfe22
lbl_080563e4: .4byte 0x05000002
lbl_080563e8: .4byte 0x030054fc
lbl_080563ec: .4byte 0x0600fde0
lbl_080563f0: .4byte 0x0600ffe0
lbl_080563f4: .4byte 0x03000bf0
lbl_080563f8: .4byte 0x030000bc
lbl_080563fc: .4byte 0x030056f4
lbl_08056400: .4byte 0x06002000

    thumb_func_start load_room_entry
load_room_entry: @ 0x08056404
    push {r4, r5, lr}
    sub sp, #0x3c
    ldr r1, lbl_08056480 @ =0x0875fac4
    ldr r0, lbl_08056484 @ =0x03000054
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r1, lbl_08056488 @ =0x03000055
    ldrb r2, [r1]
    ldr r0, [r0]
    lsls r1, r2, #4
    subs r1, r1, r2
    lsls r1, r1, #2
    adds r1, r1, r0
    mov r0, sp
    movs r2, #0x3c
    bl memcpy
    ldr r1, lbl_0805648c @ =0x030000bc
    mov r0, sp
    ldrb r0, [r0]
    strb r0, [r1]
    mov r0, sp
    ldrb r0, [r0, #1]
    strb r0, [r1, #1]
    mov r0, sp
    ldrb r0, [r0, #2]
    strb r0, [r1, #2]
    mov r0, sp
    ldrb r0, [r0, #3]
    strb r0, [r1, #3]
    mov r0, sp
    ldrb r0, [r0, #4]
    strb r0, [r1, #4]
    mov r0, sp
    ldrb r0, [r0, #0x1c]
    strb r0, [r1, #6]
    mov r0, sp
    ldrb r0, [r0, #0x1d]
    strb r0, [r1, #7]
    mov r0, sp
    adds r0, #0x35
    ldrb r0, [r0]
    strb r0, [r1, #0xe]
    mov r0, sp
    adds r0, #0x36
    ldrb r0, [r0]
    strb r0, [r1, #0xf]
    mov r0, sp
    adds r0, #0x37
    ldrb r0, [r0]
    strb r0, [r1, #0x10]
    mov r0, sp
    ldrh r0, [r0, #0x3a]
    strh r0, [r1, #0x16]
    add r2, sp, #0x38
    ldrb r0, [r2]
    cmp r0, #0xff
    beq lbl_08056490
    lsls r2, r0, #6
    b lbl_08056494
    .align 2, 0
lbl_08056480: .4byte 0x0875fac4
lbl_08056484: .4byte 0x03000054
lbl_08056488: .4byte 0x03000055
lbl_0805648c: .4byte 0x030000bc
lbl_08056490:
    ldr r0, lbl_08056554 @ =0x0000ffff
    adds r2, r0, #0
lbl_08056494:
    movs r0, #0
    strh r2, [r1, #0x12]
    ldr r5, lbl_08056558 @ =0x0300007a
    strb r0, [r5]
    ldr r4, lbl_0805655c @ =0x030000bc
    mov r0, sp
    adds r0, #0x25
    ldrb r0, [r0]
    strb r0, [r4, #0xc]
    mov r0, sp
    adds r0, #0x2d
    ldrb r0, [r0]
    strb r0, [r4, #0xd]
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_080564d0
    ldrb r1, [r4, #0xd]
    movs r0, #3
    bl EventFunction
    cmp r0, #0
    beq lbl_080564d0
    ldr r0, [sp, #0x30]
    str r0, [r4, #8]
    ldr r1, lbl_08056560 @ =0x03000078
    add r0, sp, #0x34
    ldrb r0, [r0]
    strb r0, [r1]
    movs r0, #2
    strb r0, [r5]
lbl_080564d0:
    ldr r0, lbl_0805655c @ =0x030000bc
    ldrb r1, [r0, #0xc]
    adds r4, r0, #0
    cmp r1, #0
    beq lbl_08056500
    ldr r0, lbl_08056558 @ =0x0300007a
    ldrb r1, [r0]
    adds r5, r0, #0
    cmp r1, #0
    bne lbl_08056518
    ldrb r1, [r4, #0xc]
    movs r0, #3
    bl EventFunction
    cmp r0, #0
    beq lbl_08056500
    ldr r0, [sp, #0x28]
    str r0, [r4, #8]
    ldr r1, lbl_08056560 @ =0x03000078
    add r0, sp, #0x2c
    ldrb r0, [r0]
    strb r0, [r1]
    movs r0, #1
    strb r0, [r5]
lbl_08056500:
    ldr r0, lbl_08056558 @ =0x0300007a
    ldrb r1, [r0]
    ldr r4, lbl_0805655c @ =0x030000bc
    adds r5, r0, #0
    cmp r1, #0
    bne lbl_08056518
    ldr r0, [sp, #0x20]
    str r0, [r4, #8]
    ldr r1, lbl_08056560 @ =0x03000078
    add r0, sp, #0x24
    ldrb r0, [r0]
    strb r0, [r1]
lbl_08056518:
    movs r0, #0
    movs r1, #2
    strb r1, [r4, #5]
    strb r0, [r4, #0x14]
    strb r0, [r4, #0x18]
    strb r0, [r4, #0x19]
    ldrb r0, [r5]
    cmp r0, #0
    beq lbl_0805653a
    ldrb r0, [r4, #1]
    cmp r0, #0x44
    bne lbl_0805653a
    ldr r1, lbl_08056564 @ =0x030000f8
    movs r0, #0x80
    lsls r0, r0, #8
    strh r0, [r1]
    strh r0, [r1, #2]
lbl_0805653a:
    movs r0, #0
    strb r0, [r4, #0x1a]
    ldrb r0, [r4, #4]
    cmp r0, #0x46
    bne lbl_0805654c
    movs r1, #1
    strb r1, [r4, #0x1a]
    ldr r0, lbl_08056568 @ =0x030054f4
    strb r1, [r0]
lbl_0805654c:
    add sp, #0x3c
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08056554: .4byte 0x0000ffff
lbl_08056558: .4byte 0x0300007a
lbl_0805655c: .4byte 0x030000bc
lbl_08056560: .4byte 0x03000078
lbl_08056564: .4byte 0x030000f8
lbl_08056568: .4byte 0x030054f4

    thumb_func_start load_room_backgrounds
load_room_backgrounds: @ 0x0805656c
    push {r4, lr}
    sub sp, #0x40
    ldr r1, lbl_08056604 @ =0x0875fac4
    ldr r0, lbl_08056608 @ =0x03000054
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r1, lbl_0805660c @ =0x03000055
    ldrb r2, [r1]
    ldr r0, [r0]
    lsls r1, r2, #4
    subs r1, r1, r2
    lsls r1, r1, #2
    adds r1, r1, r0
    add r0, sp, #4
    movs r2, #0x3c
    bl memcpy
    ldr r2, lbl_08056610 @ =0x030000bc
    ldr r1, [sp, #0x1c]
    ldrb r0, [r1]
    strb r0, [r2, #0x19]
    adds r3, r1, #4
    ldr r1, lbl_08056614 @ =0x02007000
    adds r0, r3, #0
    bl CallLZ77UncompWRAM
    ldr r0, lbl_08056618 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080566a4
    ldr r0, lbl_0805661c @ =0x03000c75
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_080565c6
    ldr r0, lbl_08056620 @ =0x0300007e
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_080565d8
lbl_080565c6:
    ldr r2, lbl_08056624 @ =0x06003000
    movs r3, #0x80
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0x40
    bl BitFill
lbl_080565d8:
    ldr r2, lbl_08056610 @ =0x030000bc
    ldrb r1, [r2, #1]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08056630
    ldr r3, [sp, #0xc]
    ldr r1, lbl_08056628 @ =0x0300009c
    ldr r2, lbl_0805662c @ =0x0202a800
    str r2, [r1]
    ldrb r0, [r3]
    strh r0, [r1, #4]
    adds r3, #1
    ldrb r0, [r3]
    strh r0, [r1, #6]
    adds r3, #1
    movs r0, #1
    adds r1, r3, #0
    bl rle_decompress
    b lbl_08056648
    .align 2, 0
lbl_08056604: .4byte 0x0875fac4
lbl_08056608: .4byte 0x03000054
lbl_0805660c: .4byte 0x03000055
lbl_08056610: .4byte 0x030000bc
lbl_08056614: .4byte 0x02007000
lbl_08056618: .4byte 0x03000bf0
lbl_0805661c: .4byte 0x03000c75
lbl_08056620: .4byte 0x0300007e
lbl_08056624: .4byte 0x06003000
lbl_08056628: .4byte 0x0300009c
lbl_0805662c: .4byte 0x0202a800
lbl_08056630:
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08056648
    ldr r3, [sp, #0xc]
    ldrb r0, [r3]
    strb r0, [r2, #0x18]
    adds r3, #4
    ldr r1, lbl_080566ac @ =0x0202a800
    adds r0, r3, #0
    bl CallLZ77UncompWRAM
lbl_08056648:
    ldr r3, [sp, #0x18]
    ldr r4, lbl_080566b0 @ =0x0300009c
    ldr r2, lbl_080566b4 @ =0x02027800
    str r2, [r4, #0x18]
    ldrb r0, [r3]
    strh r0, [r4, #0x1c]
    adds r3, #1
    ldrb r0, [r3]
    strh r0, [r4, #0x1e]
    adds r3, #1
    movs r0, #1
    adds r1, r3, #0
    bl rle_decompress
    ldr r3, [sp, #0x10]
    ldr r2, lbl_080566b8 @ =0x0202d800
    str r2, [r4, #8]
    ldrb r0, [r3]
    strh r0, [r4, #0xc]
    adds r3, #1
    ldrb r0, [r3]
    strh r0, [r4, #0xe]
    adds r3, #1
    movs r0, #1
    adds r1, r3, #0
    bl rle_decompress
    ldr r0, lbl_080566bc @ =0x030000bc
    ldrb r1, [r0, #3]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_080566a4
    ldr r3, [sp, #0x14]
    ldr r2, lbl_080566c0 @ =0x02030800
    str r2, [r4, #0x10]
    ldrb r0, [r3]
    strh r0, [r4, #0x14]
    adds r3, #1
    ldrb r0, [r3]
    strh r0, [r4, #0x16]
    adds r3, #1
    movs r0, #1
    adds r1, r3, #0
    bl rle_decompress
lbl_080566a4:
    add sp, #0x40
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080566ac: .4byte 0x0202a800
lbl_080566b0: .4byte 0x0300009c
lbl_080566b4: .4byte 0x02027800
lbl_080566b8: .4byte 0x0202d800
lbl_080566bc: .4byte 0x030000bc
lbl_080566c0: .4byte 0x02030800

    thumb_func_start remove_never_reform_blocks_and_collected_tank
remove_never_reform_blocks_and_collected_tank: @ 0x080566c4
    push {lr}
    bl remove_never_reform_blocks
    bl remove_collected_tanks
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start reset_info_on_transition
reset_info_on_transition: @ 0x080566d4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r0, lbl_08056924 @ =0x03005520
    movs r2, #0
    strb r2, [r0, #3]
    strb r2, [r0, #2]
    strb r2, [r0, #4]
    strb r2, [r0, #1]
    movs r3, #0
    strh r2, [r0, #6]
    ldr r4, lbl_08056928 @ =0x03000130
    ldrb r0, [r4]
    cmp r0, #0
    beq lbl_080566fe
    ldr r0, lbl_0805692c @ =0x03000114
    ldr r1, lbl_08056930 @ =0x083458a4
    ldr r1, [r1]
    str r1, [r0]
lbl_080566fe:
    adds r1, r4, #0
    ldr r0, lbl_08056934 @ =0x08345890
    ldm r0!, {r4, r5, r6}
    stm r1!, {r4, r5, r6}
    ldm r0!, {r4, r5}
    stm r1!, {r4, r5}
    ldr r0, lbl_08056938 @ =0x03000008
    strh r2, [r0]
    ldr r0, lbl_0805693c @ =0x03005700
    strb r3, [r0]
    ldr r1, lbl_08056940 @ =0x03000030
    strb r3, [r1, #3]
    ldr r0, lbl_08056944 @ =0x03000c75
    movs r2, #0
    ldrsb r2, [r0, r2]
    cmp r2, #0
    bne lbl_08056774
    strh r2, [r1]
    strb r3, [r1, #4]
    strb r3, [r1, #2]
    ldr r0, lbl_08056948 @ =0x03000079
    strb r3, [r0]
    ldr r1, lbl_0805694c @ =0x03000bf1
    movs r0, #0xff
    strb r0, [r1]
    ldr r0, lbl_08056950 @ =0x03000048
    strb r3, [r0]
    ldr r0, lbl_08056954 @ =0x0300007d
    strb r3, [r0]
    ldr r1, lbl_08056958 @ =0x03000198
    ldr r0, lbl_0805695c @ =0x083458c8
    ldr r0, [r0]
    str r0, [r1]
    ldr r0, lbl_08056960 @ =0x03005518
    strh r2, [r0]
    ldr r0, lbl_08056964 @ =0x03000c1d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08056762
    ldr r0, lbl_08056968 @ =0x03000038
    ldrb r1, [r0, #2]
    movs r0, #0xf0
    ands r0, r1
    cmp r0, #0
    beq lbl_08056762
    movs r0, #0
    bl sub_08060cbc
lbl_08056762:
    ldr r1, lbl_0805696c @ =0x030054e0
    movs r2, #0
    movs r0, #0
    strh r0, [r1]
    strh r0, [r1, #2]
    ldr r0, lbl_08056970 @ =0x03000bf2
    strb r2, [r0]
    bl sub_080749e4
lbl_08056774:
    bl bg30_fs_related
    ldr r0, lbl_08056974 @ =0x03000bf0
    movs r3, #0
    ldrsb r3, [r0, r3]
    cmp r3, #0
    beq lbl_08056784
    b lbl_08056aa0
lbl_08056784:
    ldr r0, lbl_08056978 @ =0x0300003d
    strb r3, [r0]
    ldr r0, lbl_0805697c @ =0x0300003e
    movs r1, #0
    strh r3, [r0]
    ldr r0, lbl_08056980 @ =0x03000044
    strb r1, [r0]
    ldr r0, lbl_08056984 @ =0x03000074
    strh r3, [r0]
    ldr r0, lbl_08056988 @ =0x03000049
    strb r1, [r0]
    ldr r0, lbl_0805698c @ =0x0300004c
    strb r1, [r0]
    ldr r0, lbl_08056990 @ =0x03000010
    strh r3, [r0]
    ldr r0, lbl_08056994 @ =0x03005515
    strb r1, [r0]
    ldr r0, lbl_08056998 @ =0x03005516
    strh r3, [r0]
    ldr r0, lbl_0805699c @ =0x03000076
    strh r3, [r0]
    ldr r0, lbl_080569a0 @ =0x0300019c
    strb r1, [r0, #3]
    strb r1, [r0, #4]
    ldr r0, lbl_080569a4 @ =0x0300006c
    strh r3, [r0]
    ldr r0, lbl_080569a8 @ =0x030054e4
    strb r1, [r0]
    strh r3, [r0, #2]
    strb r1, [r0, #1]
    strh r3, [r0, #4]
    strh r3, [r0, #6]
    ldr r0, lbl_080569ac @ =0x0300007b
    strb r1, [r0]
    ldr r1, lbl_080569b0 @ =0x0875faa8
    ldr r0, lbl_080569b4 @ =0x03000054
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r5, [r0]
    ldr r0, lbl_080569b8 @ =0x03000056
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #2
    adds r5, r5, r0
    ldr r1, lbl_080569bc @ =0x03000055
    ldrb r0, [r5, #1]
    strb r0, [r1]
    ldr r1, lbl_080569c0 @ =0x03000057
    ldrb r0, [r5]
    strb r0, [r1]
    ldr r2, lbl_080569c4 @ =0x03000058
    ldrb r0, [r5]
    lsrs r0, r0, #6
    movs r1, #1
    ands r0, r1
    strb r0, [r2]
    ldr r1, lbl_0805696c @ =0x030054e0
    ldrb r0, [r5, #2]
    strh r0, [r1]
    ldrb r0, [r5, #4]
    strh r0, [r1, #2]
    ldr r1, lbl_080569c8 @ =0x030000f8
    ldr r0, lbl_080569cc @ =0x08345870
    ldr r0, [r0]
    str r0, [r1]
    ldr r2, lbl_080569d0 @ =0x03000100
    ldr r0, lbl_080569d4 @ =0x08345874
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r2, lbl_080569d8 @ =0x030056f8
    ldr r0, lbl_080569dc @ =0x0834587c
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r1, lbl_080569e0 @ =0x0300551c
    ldr r0, lbl_080569e4 @ =0x083458c0
    ldr r0, [r0]
    str r0, [r1]
    ldr r0, lbl_080569e8 @ =0x0300006e
    strh r3, [r0]
    ldr r2, lbl_080569ec @ =0x03005504
    ldr r0, lbl_080569f0 @ =0x083458b8
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r2, lbl_080569f4 @ =0x030054f4
    ldr r0, lbl_080569f8 @ =0x083458a8
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r0, lbl_080569fc @ =0x030000fc
    strh r3, [r0]
    strh r3, [r0, #2]
    ldr r6, lbl_08056930 @ =0x083458a4
    mov sl, r6
    ldr r6, lbl_08056a00 @ =0x030056bc
    ldr r7, lbl_08056a04 @ =0x03000045
    ldr r0, lbl_08056a08 @ =0x03000110
    mov ip, r0
    ldr r1, lbl_08056a0c @ =0x03000071
    mov r8, r1
    ldr r4, lbl_08056a10 @ =0x03000072
    mov sb, r4
    ldr r4, lbl_08056a14 @ =0x03005528
    ldr r0, lbl_08056a18 @ =0x08345884
    ldr r2, [r0]
    ldr r3, [r0, #4]
    movs r0, #0xbc
    lsls r0, r0, #1
    adds r1, r4, r0
lbl_0805686e:
    str r2, [r1]
    str r3, [r1, #4]
    subs r1, #8
    cmp r1, r4
    bge lbl_0805686e
    ldr r2, lbl_08056a1c @ =0x030056ac
    ldr r0, lbl_08056a20 @ =0x0834588c
    ldr r0, [r0]
    adds r1, r2, #0
    adds r1, #0xc
lbl_08056882:
    str r0, [r1]
    subs r1, #4
    cmp r1, r2
    bge lbl_08056882
    movs r0, #0
    strb r0, [r6]
    strb r0, [r7]
    ldr r3, lbl_08056a24 @ =0x02027780
    movs r2, #0x40
    movs r1, #0
lbl_08056896:
    lsls r0, r2, #1
    adds r0, r0, r3
    subs r0, #2
    strh r1, [r0]
    subs r0, r2, #1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0
    bne lbl_08056896
    mov r1, sl
    ldr r0, [r1]
    mov r4, ip
    str r0, [r4]
    ldr r6, lbl_0805692c @ =0x03000114
    str r0, [r6]
    mov r0, r8
    strb r2, [r0]
    mov r1, sb
    strb r2, [r1]
    ldr r4, lbl_08056964 @ =0x03000c1d
    movs r0, #0
    ldrsb r0, [r4, r0]
    cmp r0, #0
    beq lbl_080568c8
    b lbl_08056aa0
lbl_080568c8:
    ldr r0, lbl_08056a28 @ =0x03000144
    movs r1, #0
    strh r2, [r0]
    strh r2, [r0, #2]
    strb r1, [r0, #4]
    strb r1, [r0, #5]
    ldrb r2, [r5, #2]
    ldrb r0, [r5, #5]
    adds r3, r0, #1
    ldr r4, lbl_08056a2c @ =0x030013d4
    lsls r1, r2, #6
    movs r0, #7
    ldrsb r0, [r5, r0]
    adds r0, #8
    lsls r0, r0, #2
    adds r1, r1, r0
    strh r1, [r4, #0x12]
    lsls r1, r3, #6
    movs r0, #8
    ldrsb r0, [r5, r0]
    lsls r0, r0, #2
    adds r1, r1, r0
    subs r1, #1
    strh r1, [r4, #0x14]
    ldr r0, lbl_08056968 @ =0x03000038
    ldrb r1, [r0, #2]
    movs r0, #0xf0
    ands r0, r1
    cmp r0, #0
    beq lbl_0805690a
    movs r0, #1
    bl sub_08060cbc
lbl_0805690a:
    ldr r2, lbl_080569c8 @ =0x030000f8
    ldrh r1, [r4, #0x12]
    strh r1, [r2]
    ldrh r0, [r4, #0x14]
    strh r0, [r2, #2]
    movs r0, #7
    ldrsb r0, [r5, r0]
    cmp r0, #0
    bgt lbl_0805691e
    b lbl_08056a30
lbl_0805691e:
    adds r0, r1, #0
    subs r0, #0x20
    b lbl_08056a38
    .align 2, 0
lbl_08056924: .4byte 0x03005520
lbl_08056928: .4byte 0x03000130
lbl_0805692c: .4byte 0x03000114
lbl_08056930: .4byte 0x083458a4
lbl_08056934: .4byte 0x08345890
lbl_08056938: .4byte 0x03000008
lbl_0805693c: .4byte 0x03005700
lbl_08056940: .4byte 0x03000030
lbl_08056944: .4byte 0x03000c75
lbl_08056948: .4byte 0x03000079
lbl_0805694c: .4byte 0x03000bf1
lbl_08056950: .4byte 0x03000048
lbl_08056954: .4byte 0x0300007d
lbl_08056958: .4byte 0x03000198
lbl_0805695c: .4byte 0x083458c8
lbl_08056960: .4byte 0x03005518
lbl_08056964: .4byte 0x03000c1d
lbl_08056968: .4byte 0x03000038
lbl_0805696c: .4byte 0x030054e0
lbl_08056970: .4byte 0x03000bf2
lbl_08056974: .4byte 0x03000bf0
lbl_08056978: .4byte 0x0300003d
lbl_0805697c: .4byte 0x0300003e
lbl_08056980: .4byte 0x03000044
lbl_08056984: .4byte 0x03000074
lbl_08056988: .4byte 0x03000049
lbl_0805698c: .4byte 0x0300004c
lbl_08056990: .4byte 0x03000010
lbl_08056994: .4byte 0x03005515
lbl_08056998: .4byte 0x03005516
lbl_0805699c: .4byte 0x03000076
lbl_080569a0: .4byte 0x0300019c
lbl_080569a4: .4byte 0x0300006c
lbl_080569a8: .4byte 0x030054e4
lbl_080569ac: .4byte 0x0300007b
lbl_080569b0: .4byte 0x0875faa8
lbl_080569b4: .4byte 0x03000054
lbl_080569b8: .4byte 0x03000056
lbl_080569bc: .4byte 0x03000055
lbl_080569c0: .4byte 0x03000057
lbl_080569c4: .4byte 0x03000058
lbl_080569c8: .4byte 0x030000f8
lbl_080569cc: .4byte 0x08345870
lbl_080569d0: .4byte 0x03000100
lbl_080569d4: .4byte 0x08345874
lbl_080569d8: .4byte 0x030056f8
lbl_080569dc: .4byte 0x0834587c
lbl_080569e0: .4byte 0x0300551c
lbl_080569e4: .4byte 0x083458c0
lbl_080569e8: .4byte 0x0300006e
lbl_080569ec: .4byte 0x03005504
lbl_080569f0: .4byte 0x083458b8
lbl_080569f4: .4byte 0x030054f4
lbl_080569f8: .4byte 0x083458a8
lbl_080569fc: .4byte 0x030000fc
lbl_08056a00: .4byte 0x030056bc
lbl_08056a04: .4byte 0x03000045
lbl_08056a08: .4byte 0x03000110
lbl_08056a0c: .4byte 0x03000071
lbl_08056a10: .4byte 0x03000072
lbl_08056a14: .4byte 0x03005528
lbl_08056a18: .4byte 0x08345884
lbl_08056a1c: .4byte 0x030056ac
lbl_08056a20: .4byte 0x0834588c
lbl_08056a24: .4byte 0x02027780
lbl_08056a28: .4byte 0x03000144
lbl_08056a2c: .4byte 0x030013d4
lbl_08056a30:
    cmp r0, #0
    bge lbl_08056a3a
    adds r0, r1, #0
    adds r0, #0x20
lbl_08056a38:
    strh r0, [r2]
lbl_08056a3a:
    ldr r0, lbl_08056a50 @ =0x0300550c
    movs r5, #0
    ldrsh r3, [r0, r5]
    ldr r2, lbl_08056a54 @ =0x030013d4
    adds r4, r0, #0
    cmp r3, #0
    beq lbl_08056a84
    cmp r3, #0
    bge lbl_08056a58
    movs r0, #0
    b lbl_08056a74
    .align 2, 0
lbl_08056a50: .4byte 0x0300550c
lbl_08056a54: .4byte 0x030013d4
lbl_08056a58:
    ldr r0, lbl_08056ab0 @ =0x03001588
    adds r0, #0x70
    movs r6, #0
    ldrsh r0, [r0, r6]
    rsbs r0, r0, #0
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    movs r1, #0
    ldrsh r0, [r4, r1]
    adds r0, r3, r0
    cmp r0, #0xff
    ble lbl_08056a76
    movs r0, #0xff
    subs r0, r0, r3
lbl_08056a74:
    strh r0, [r4]
lbl_08056a76:
    ldr r2, lbl_08056ab4 @ =0x030013d4
    ldrh r0, [r2, #0x14]
    ldrh r1, [r4]
    subs r0, r0, r1
    movs r1, #0
    strh r0, [r2, #0x14]
    strh r1, [r4]
lbl_08056a84:
    ldrb r0, [r2, #1]
    cmp r0, #1
    bne lbl_08056a8e
    movs r0, #2
    strb r0, [r2, #1]
lbl_08056a8e:
    ldr r0, lbl_08056ab8 @ =0x030013ba
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_08056abc @ =0x030013b8
    strh r1, [r0]
    ldr r0, lbl_08056ac0 @ =0x030013b4
    strh r1, [r0]
    ldr r0, lbl_08056ac4 @ =0x030013b6
    strh r1, [r0]
lbl_08056aa0:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08056ab0: .4byte 0x03001588
lbl_08056ab4: .4byte 0x030013d4
lbl_08056ab8: .4byte 0x030013ba
lbl_08056abc: .4byte 0x030013b8
lbl_08056ac0: .4byte 0x030013b4
lbl_08056ac4: .4byte 0x030013b6

    thumb_func_start set_automatic_bg_scrolling
set_automatic_bg_scrolling: @ 0x08056ac8
    push {lr}
    ldr r2, lbl_08056af8 @ =0x030054ec
    ldr r0, lbl_08056afc @ =0x083458b0
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r0, lbl_08056b00 @ =0x030000bc
    ldrb r1, [r0, #6]
    adds r3, r0, #0
    cmp r1, #7
    blt lbl_08056aec
    cmp r1, #8
    ble lbl_08056ae8
    cmp r1, #0xa
    bne lbl_08056aec
lbl_08056ae8:
    movs r0, #1
    strb r0, [r2]
lbl_08056aec:
    ldrb r1, [r3, #0x10]
    cmp r1, #1
    bne lbl_08056b08
    ldr r0, lbl_08056b04 @ =0x030054f4
    strb r1, [r0]
    b lbl_08056b16
    .align 2, 0
lbl_08056af8: .4byte 0x030054ec
lbl_08056afc: .4byte 0x083458b0
lbl_08056b00: .4byte 0x030000bc
lbl_08056b04: .4byte 0x030054f4
lbl_08056b08:
    cmp r1, #6
    beq lbl_08056b10
    cmp r1, #7
    bne lbl_08056b16
lbl_08056b10:
    ldr r1, lbl_08056b20 @ =0x030054f4
    movs r0, #4
    strb r0, [r1]
lbl_08056b16:
    ldr r1, lbl_08056b24 @ =0x0300019c
    movs r0, #0
    strb r0, [r1, #4]
    pop {r0}
    bx r0
    .align 2, 0
lbl_08056b20: .4byte 0x030054f4
lbl_08056b24: .4byte 0x0300019c

    thumb_func_start sub_08056b28
sub_08056b28: @ 0x08056b28
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x1c
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov sb, r0
    cmp r0, #0
    bne lbl_08056b58
    ldr r1, lbl_08056b4c @ =0x030000bc
    ldrb r2, [r1, #1]
    ldr r0, lbl_08056b50 @ =0x030013b6
    ldrh r0, [r0]
    lsrs r6, r0, #6
    ldr r0, lbl_08056b54 @ =0x030013b4
    b lbl_08056b84
    .align 2, 0
lbl_08056b4c: .4byte 0x030000bc
lbl_08056b50: .4byte 0x030013b6
lbl_08056b54: .4byte 0x030013b4
lbl_08056b58:
    mov r0, sb
    cmp r0, #1
    bne lbl_08056b78
    ldr r1, lbl_08056b6c @ =0x030000bc
    ldrb r2, [r1, #2]
    ldr r0, lbl_08056b70 @ =0x030013ba
    ldrh r0, [r0]
    lsrs r6, r0, #6
    ldr r0, lbl_08056b74 @ =0x030013b8
    b lbl_08056b84
    .align 2, 0
lbl_08056b6c: .4byte 0x030000bc
lbl_08056b70: .4byte 0x030013ba
lbl_08056b74: .4byte 0x030013b8
lbl_08056b78:
    ldr r1, lbl_08056c94 @ =0x030000bc
    ldrb r2, [r1, #3]
    ldr r0, lbl_08056c98 @ =0x030013be
    ldrh r0, [r0]
    lsrs r6, r0, #6
    ldr r0, lbl_08056c9c @ =0x030013bc
lbl_08056b84:
    ldrh r0, [r0]
    lsrs r3, r0, #6
    movs r7, #0x10
    adds r0, r2, #0
    ands r0, r7
    cmp r0, #0
    bne lbl_08056b94
    b lbl_08056cac
lbl_08056b94:
    movs r1, #0x15
    str r1, [sp, #0xc]
    subs r4, r3, #3
    cmp r4, #0
    bge lbl_08056ba0
    movs r4, #0
lbl_08056ba0:
    ldr r1, lbl_08056ca0 @ =0x0300009c
    mov r2, sb
    lsls r0, r2, #3
    adds r5, r0, r1
    ldrh r1, [r5, #4]
    subs r0, r1, r4
    ldr r3, [sp, #0xc]
    cmp r3, r0
    ble lbl_08056bb8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0xc]
lbl_08056bb8:
    lsls r0, r4, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #8]
    movs r0, #0x10
    str r0, [sp, #0x10]
    subs r4, r6, #3
    cmp r4, #0
    bge lbl_08056bca
    movs r4, #0
lbl_08056bca:
    ldrh r0, [r5, #6]
    subs r0, r0, r4
    cmp r7, r0
    ble lbl_08056bd8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x10]
lbl_08056bd8:
    lsls r0, r4, #0x10
    lsrs r0, r0, #0x10
    muls r1, r0, r1
    ldr r2, [sp, #8]
    adds r1, r2, r1
    lsls r1, r1, #1
    ldr r2, [r5]
    adds r2, r2, r1
    str r2, [sp, #4]
    adds r1, r0, #0
    movs r2, #0
    ldr r3, [sp, #0x10]
    cmp r2, r3
    blt lbl_08056bf6
    b lbl_08056d02
lbl_08056bf6:
    str r5, [sp, #0x14]
lbl_08056bf8:
    ldr r3, [sp, #0x14]
    ldrh r0, [r3, #4]
    muls r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    ldr r5, [sp, #8]
    adds r2, #1
    str r2, [sp, #0x18]
    adds r0, r1, #1
    mov sl, r0
    ldr r2, [sp, #0xc]
    cmp r2, #0
    beq lbl_08056c82
    mov r3, sb
    lsls r3, r3, #0xc
    mov ip, r3
    movs r0, #0xf
    ands r1, r0
    lsls r1, r1, #6
    mov r8, r1
    adds r6, r2, #0
lbl_08056c22:
    movs r0, #0xc0
    lsls r0, r0, #0x13
    mov r1, ip
    adds r3, r1, r0
    movs r0, #0x10
    ands r0, r5
    cmp r0, #0
    beq lbl_08056c36
    ldr r3, lbl_08056ca4 @ =0x06000800
    add r3, ip
lbl_08056c36:
    adds r0, r5, #0
    movs r2, #0xf
    ands r0, r2
    lsls r0, r0, #1
    add r0, r8
    lsls r0, r0, #1
    adds r3, r3, r0
    lsls r0, r7, #1
    ldr r1, [sp, #4]
    adds r0, r0, r1
    ldrh r4, [r0]
    lsls r1, r4, #3
    ldr r2, lbl_08056ca8 @ =0x03005450
    ldr r0, [r2]
    adds r0, r0, r1
    ldrh r1, [r0]
    strh r1, [r3]
    adds r0, #2
    ldrh r1, [r0]
    strh r1, [r3, #2]
    adds r0, #2
    adds r2, r3, #0
    adds r2, #0x40
    ldrh r1, [r0]
    strh r1, [r2]
    adds r1, r3, #0
    adds r1, #0x42
    ldrh r0, [r0, #2]
    strh r0, [r1]
    adds r0, r7, #1
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    subs r6, #1
    adds r0, r5, #1
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    cmp r6, #0
    bne lbl_08056c22
lbl_08056c82:
    ldr r2, [sp, #0x18]
    mov r3, sl
    lsls r0, r3, #0x10
    lsrs r1, r0, #0x10
    ldr r0, [sp, #0x10]
    cmp r2, r0
    blt lbl_08056bf8
    b lbl_08056d02
    .align 2, 0
lbl_08056c94: .4byte 0x030000bc
lbl_08056c98: .4byte 0x030013be
lbl_08056c9c: .4byte 0x030013bc
lbl_08056ca0: .4byte 0x0300009c
lbl_08056ca4: .4byte 0x06000800
lbl_08056ca8: .4byte 0x03005450
lbl_08056cac:
    cmp r2, #0
    bne lbl_08056cca
    mov r1, sb
    lsls r2, r1, #0xc
    movs r0, #0xc0
    lsls r0, r0, #0x13
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #5
    str r7, [sp]
    movs r0, #3
    movs r1, #0x40
    bl BitFill
    b lbl_08056d02
lbl_08056cca:
    movs r0, #0x40
    ands r2, r0
    cmp r2, #0
    beq lbl_08056d02
    mov r2, sb
    cmp r2, #0
    bne lbl_08056d02
    movs r4, #0x80
    lsls r4, r4, #4
    ldrb r1, [r1, #0x18]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08056ce8
    lsls r4, r4, #1
lbl_08056ce8:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08056cf2
    lsls r4, r4, #1
lbl_08056cf2:
    ldr r1, lbl_08056d14 @ =0x0202a800
    movs r2, #0xc0
    lsls r2, r2, #0x13
    str r7, [sp]
    movs r0, #3
    adds r3, r4, #0
    bl DMATransfer
lbl_08056d02:
    add sp, #0x1c
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08056d14: .4byte 0x0202a800

    thumb_func_start rle_decompress
rle_decompress: @ 0x08056d18
    push {r4, r5, r6, lr}
    sub sp, #4
    adds r4, r1, #0
    adds r5, r2, #0
    lsls r0, r0, #0x18
    movs r6, #0
    movs r3, #0xc0
    lsls r3, r3, #6
    cmp r0, #0
    bne lbl_08056d48
    ldrb r0, [r4]
    movs r6, #0x80
    lsls r6, r6, #4
    cmp r0, #0
    beq lbl_08056d42
    movs r6, #0x80
    lsls r6, r6, #5
    cmp r0, #3
    bne lbl_08056d42
    movs r6, #0x80
    lsls r6, r6, #6
lbl_08056d42:
    adds r4, #1
    movs r3, #0x80
    lsls r3, r3, #6
lbl_08056d48:
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r5, #0
    bl BitFill
    movs r3, #0
lbl_08056d58:
    adds r2, r5, #0
    cmp r3, #0
    beq lbl_08056d60
    adds r2, #1
lbl_08056d60:
    ldrb r0, [r4]
    adds r4, #1
    cmp r0, #1
    bne lbl_08056db6
    ldrb r1, [r4]
    adds r4, #1
    adds r3, #1
    cmp r1, #0
    beq lbl_08056e1a
lbl_08056d72:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_08056da8
    movs r0, #0x7f
    ands r1, r0
    ldrb r0, [r4]
    cmp r0, #0
    beq lbl_08056d96
    cmp r1, #0
    beq lbl_08056d9a
lbl_08056d88:
    ldrb r0, [r4]
    strb r0, [r2]
    adds r2, #2
    subs r1, #1
    cmp r1, #0
    bne lbl_08056d88
    b lbl_08056d9a
lbl_08056d96:
    lsls r0, r1, #1
    adds r2, r2, r0
lbl_08056d9a:
    adds r4, #1
    b lbl_08056dac
lbl_08056d9e:
    ldrb r0, [r4]
    strb r0, [r2]
    adds r4, #1
    adds r2, #2
    subs r1, #1
lbl_08056da8:
    cmp r1, #0
    bne lbl_08056d9e
lbl_08056dac:
    ldrb r1, [r4]
    adds r4, #1
    cmp r1, #0
    bne lbl_08056d72
    b lbl_08056e1a
lbl_08056db6:
    ldrb r1, [r4]
    adds r4, #1
    lsls r1, r1, #8
    ldrb r0, [r4]
    orrs r1, r0
    adds r4, #1
    adds r3, #1
    cmp r1, #0
    beq lbl_08056e1a
lbl_08056dc8:
    movs r0, #0x80
    lsls r0, r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08056e06
    ldr r0, lbl_08056df0 @ =0x00007fff
    ands r1, r0
    ldrb r0, [r4]
    cmp r0, #0
    beq lbl_08056df4
    cmp r1, #0
    beq lbl_08056df8
lbl_08056de0:
    ldrb r0, [r4]
    strb r0, [r2]
    adds r2, #2
    subs r1, #1
    cmp r1, #0
    bne lbl_08056de0
    b lbl_08056df8
    .align 2, 0
lbl_08056df0: .4byte 0x00007fff
lbl_08056df4:
    lsls r0, r1, #1
    adds r2, r2, r0
lbl_08056df8:
    adds r4, #1
    b lbl_08056e0a
lbl_08056dfc:
    ldrb r0, [r4]
    strb r0, [r2]
    adds r4, #1
    adds r2, #2
    subs r1, #1
lbl_08056e06:
    cmp r1, #0
    bne lbl_08056dfc
lbl_08056e0a:
    ldrb r1, [r4]
    adds r4, #1
    lsls r1, r1, #8
    ldrb r0, [r4]
    orrs r1, r0
    adds r4, #1
    cmp r1, #0
    bne lbl_08056dc8
lbl_08056e1a:
    cmp r3, #1
    ble lbl_08056d58
    adds r0, r6, #0
    add sp, #4
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start sub_08056e28
sub_08056e28: @ 0x08056e28
    push {lr}
    ldr r0, lbl_08056e40 @ =0x030013d4
    ldrb r0, [r0]
    cmp r0, #0x1d
    beq lbl_08056e48
    ldr r2, lbl_08056e44 @ =0x03000048
    ldrb r1, [r2]
    movs r0, #0x7f
    ands r0, r1
    strb r0, [r2]
    b lbl_08056e52
    .align 2, 0
lbl_08056e40: .4byte 0x030013d4
lbl_08056e44: .4byte 0x03000048
lbl_08056e48:
    ldr r0, lbl_08056e60 @ =0x03000048
    ldrb r1, [r0]
    movs r2, #0x80
    orrs r1, r2
    strb r1, [r0]
lbl_08056e52:
    ldr r0, lbl_08056e64 @ =0x03000029
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08056e68
    bl apply_background_fading
    b lbl_08056e70
    .align 2, 0
lbl_08056e60: .4byte 0x03000048
lbl_08056e64: .4byte 0x03000029
lbl_08056e68:
    bl update_minimap
    bl TransparencyApplyNewEffects
lbl_08056e70:
    pop {r0}
    bx r0

    thumb_func_start sub_08056e74
sub_08056e74: @ 0x08056e74
    push {r4, lr}
    movs r2, #0
    movs r4, #0
    ldr r0, lbl_08056e8c @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #1
    beq lbl_08056e88
    cmp r0, #3
    bne lbl_08056e90
lbl_08056e88:
    movs r2, #1
    b lbl_08056e98
    .align 2, 0
lbl_08056e8c: .4byte 0x03000c72
lbl_08056e90:
    cmp r0, #2
    beq lbl_08056e98
    movs r2, #1
    movs r4, #1
lbl_08056e98:
    ldr r0, lbl_08056ee4 @ =0x03001606
    ldrh r0, [r0]
    cmp r0, #0
    beq lbl_08056ea2
    movs r4, #1
lbl_08056ea2:
    ldr r1, lbl_08056ee8 @ =0x03000045
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08056eb2
    subs r0, #1
    strb r0, [r1]
    movs r2, #1
    movs r4, #1
lbl_08056eb2:
    cmp r2, #0
    bne lbl_08056eca
    ldr r0, lbl_08056eec @ =0x030056f8
    ldrb r0, [r0, #5]
    cmp r0, #0
    beq lbl_08056eca
    ldr r0, lbl_08056ef0 @ =0x03000130
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08056eca
    bl sub_0805e548
lbl_08056eca:
    cmp r4, #0
    bne lbl_08056ede
    bl update_animated_graphics
    bl sub_0805e248
    bl update_animated_palette
    bl sub_08056ef4
lbl_08056ede:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08056ee4: .4byte 0x03001606
lbl_08056ee8: .4byte 0x03000045
lbl_08056eec: .4byte 0x030056f8
lbl_08056ef0: .4byte 0x03000130

    thumb_func_start sub_08056ef4
sub_08056ef4: @ 0x08056ef4
    push {r4, lr}
    sub sp, #4
    ldr r0, lbl_08056fa8 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #2
    bne lbl_08056fa0
    ldr r0, lbl_08056fac @ =0x0300002d
    ldrb r0, [r0]
    ldr r4, lbl_08056fb0 @ =0x085e0420
    cmp r0, #0
    beq lbl_08056f0e
    ldr r4, lbl_08056fb4 @ =0x085e0220
lbl_08056f0e:
    ldr r0, lbl_08056fb8 @ =0x030054e4
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08056f58
    ldr r1, lbl_08056fbc @ =0x030056f0
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #7
    bls lbl_08056f58
    strb r2, [r1]
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #5
    ble lbl_08056f3e
    strb r2, [r1, #1]
lbl_08056f3e:
    ldrb r1, [r1, #1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    lsls r1, r1, #5
    adds r1, #0xc
    adds r1, r4, r1
    ldr r2, lbl_08056fc0 @ =0x0500002c
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #4
    bl DMATransfer
lbl_08056f58:
    ldr r0, lbl_08056fb8 @ =0x030054e4
    ldrb r0, [r0, #1]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08056fa0
    ldr r2, lbl_08056fbc @ =0x030056f0
    ldrb r0, [r2, #2]
    adds r0, #1
    movs r1, #0
    strb r0, [r2, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #7
    bls lbl_08056fa0
    strb r1, [r2, #2]
    ldrb r0, [r2, #3]
    adds r0, #1
    strb r0, [r2, #3]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #5
    ble lbl_08056f88
    strb r1, [r2, #3]
lbl_08056f88:
    ldr r1, lbl_08056fc4 @ =0x040000d4
    movs r0, #3
    ldrsb r0, [r2, r0]
    lsls r0, r0, #5
    adds r0, #0xc
    adds r0, r4, r0
    str r0, [r1]
    ldr r0, lbl_08056fc8 @ =0x0500004c
    str r0, [r1, #4]
    ldr r0, lbl_08056fcc @ =0x80000002
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_08056fa0:
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08056fa8: .4byte 0x03000c72
lbl_08056fac: .4byte 0x0300002d
lbl_08056fb0: .4byte 0x085e0420
lbl_08056fb4: .4byte 0x085e0220
lbl_08056fb8: .4byte 0x030054e4
lbl_08056fbc: .4byte 0x030056f0
lbl_08056fc0: .4byte 0x0500002c
lbl_08056fc4: .4byte 0x040000d4
lbl_08056fc8: .4byte 0x0500004c
lbl_08056fcc: .4byte 0x80000002

    thumb_func_start update_room_info
update_room_info: @ 0x08056fd0
    push {r4, lr}
    ldr r0, lbl_08057094 @ =0x0300003d
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08057042
    ldr r0, lbl_08057098 @ =0x03005520
    ldrb r0, [r0, #1]
    cmp r0, #0
    bne lbl_08057042
    bl update_backgrounds_pos
    ldr r0, lbl_0805709c @ =0x03005700
    ldrb r1, [r0]
    adds r1, #1
    strb r1, [r0]
    movs r0, #1
    ands r1, r0
    cmp r1, #0
    bne lbl_08057008
    ldr r0, lbl_080570a0 @ =0x03000144
    movs r1, #4
    ldrsb r1, [r0, r1]
    movs r0, #0x1c
    rsbs r0, r0, #0
    cmp r1, r0
    blt lbl_08057008
    cmp r1, #0x1c
    ble lbl_08057016
lbl_08057008:
    movs r0, #0x10
    bl sub_080572f8
    movs r0, #2
    rsbs r0, r0, #0
    bl sub_080572f8
lbl_08057016:
    ldr r0, lbl_0805709c @ =0x03005700
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08057034
    ldr r0, lbl_080570a0 @ =0x03000144
    movs r1, #5
    ldrsb r1, [r0, r1]
    movs r0, #0x1c
    rsbs r0, r0, #0
    cmp r1, r0
    blt lbl_08057034
    cmp r1, #0x1c
    ble lbl_08057042
lbl_08057034:
    movs r0, #0xb
    bl sub_080571d4
    movs r0, #2
    rsbs r0, r0, #0
    bl sub_080571d4
lbl_08057042:
    ldr r4, lbl_080570a4 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r4, r1]
    cmp r0, #2
    bne lbl_0805706c
    bl check_special_clipdata
    movs r1, #0
    ldrsh r0, [r4, r1]
    cmp r0, #2
    bne lbl_0805706c
    bl update_broken_blocks
    bl process_bomb_chains
    bl sub_08060434
    bl check_unlock_doors
    bl sub_0805e760
lbl_0805706c:
    bl ProcessHaze
    cmp r0, #0
    beq lbl_0805708a
    bl ProcessHaze
    ldr r2, lbl_080570a8 @ =0x03000080
    ldrb r1, [r2, #7]
    movs r0, #0x7f
    ands r0, r1
    cmp r0, #0
    beq lbl_0805708a
    movs r0, #0x80
    orrs r0, r1
    strb r0, [r2, #7]
lbl_0805708a:
    bl process_power_bomb_explosion
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08057094: .4byte 0x0300003d
lbl_08057098: .4byte 0x03005520
lbl_0805709c: .4byte 0x03005700
lbl_080570a0: .4byte 0x03000144
lbl_080570a4: .4byte 0x03000c72
lbl_080570a8: .4byte 0x03000080

    thumb_func_start update_backgrounds_pos
update_backgrounds_pos: @ 0x080570ac
    push {r4, r5, r6, lr}
    bl update_vertical_screen_shake
    adds r5, r0, #0
    bl update_horizontal_screen_shake
    adds r4, r0, #0
    ldr r0, lbl_0805711c @ =0x030013b8
    ldrh r1, [r0]
    lsrs r1, r1, #2
    ldr r0, lbl_08057120 @ =0x000001ff
    adds r3, r0, #0
    ands r1, r3
    ldr r0, lbl_08057124 @ =0x030013ba
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r3
    ldr r2, lbl_08057128 @ =0x030000e4
    adds r1, r1, r4
    strh r1, [r2, #4]
    adds r0, r0, r5
    strh r0, [r2, #6]
    ldr r0, lbl_0805712c @ =0x030013bc
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r3
    adds r0, r0, r4
    strh r0, [r2, #8]
    ldr r0, lbl_08057130 @ =0x030013be
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r3
    adds r0, r0, r5
    strh r0, [r2, #0xa]
    ldr r0, lbl_08057134 @ =0x03000074
    ldrh r1, [r0]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08057144
    ldr r0, lbl_08057138 @ =0x030013b4
    ldrh r0, [r0]
    ldr r1, lbl_0805713c @ =0x030054f4
    lsrs r0, r0, #2
    ldrh r6, [r1, #4]
    adds r0, r0, r6
    ands r0, r3
    strh r0, [r2]
    ldr r0, lbl_08057140 @ =0x030013b6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ldrh r1, [r1, #6]
    adds r0, r0, r1
    ands r0, r3
    b lbl_08057164
    .align 2, 0
lbl_0805711c: .4byte 0x030013b8
lbl_08057120: .4byte 0x000001ff
lbl_08057124: .4byte 0x030013ba
lbl_08057128: .4byte 0x030000e4
lbl_0805712c: .4byte 0x030013bc
lbl_08057130: .4byte 0x030013be
lbl_08057134: .4byte 0x03000074
lbl_08057138: .4byte 0x030013b4
lbl_0805713c: .4byte 0x030054f4
lbl_08057140: .4byte 0x030013b6
lbl_08057144:
    ldr r0, lbl_08057198 @ =0x030013b4
    ldrh r0, [r0]
    ldr r1, lbl_0805719c @ =0x030054f4
    lsrs r0, r0, #2
    ldrh r6, [r1, #4]
    adds r0, r0, r6
    ands r0, r3
    adds r0, r0, r4
    strh r0, [r2]
    ldr r0, lbl_080571a0 @ =0x030013b6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ldrh r1, [r1, #6]
    adds r0, r0, r1
    ands r0, r3
    adds r0, r0, r5
lbl_08057164:
    strh r0, [r2, #2]
    ldr r0, lbl_080571a4 @ =0x030013c0
    ldrh r0, [r0]
    ldr r1, lbl_080571a8 @ =0x030054ec
    lsrs r0, r0, #2
    ldrh r1, [r1, #4]
    adds r3, r0, r1
    ldr r0, lbl_080571ac @ =0x000001ff
    adds r1, r0, #0
    ands r3, r1
    ldr r0, lbl_080571b0 @ =0x030013c2
    ldrh r0, [r0]
    lsrs r2, r0, #2
    ands r2, r1
    ldr r0, lbl_080571b4 @ =0x03000074
    ldrh r1, [r0]
    movs r0, #0x80
    lsls r0, r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_080571bc
    ldr r0, lbl_080571b8 @ =0x030000e4
    strh r3, [r0, #0xc]
    strh r2, [r0, #0xe]
    b lbl_080571ca
    .align 2, 0
lbl_08057198: .4byte 0x030013b4
lbl_0805719c: .4byte 0x030054f4
lbl_080571a0: .4byte 0x030013b6
lbl_080571a4: .4byte 0x030013c0
lbl_080571a8: .4byte 0x030054ec
lbl_080571ac: .4byte 0x000001ff
lbl_080571b0: .4byte 0x030013c2
lbl_080571b4: .4byte 0x03000074
lbl_080571b8: .4byte 0x030000e4
lbl_080571bc:
    ldr r0, lbl_080571d0 @ =0x030000e4
    asrs r1, r4, #1
    adds r1, r3, r1
    strh r1, [r0, #0xc]
    asrs r1, r5, #1
    adds r1, r2, r1
    strh r1, [r0, #0xe]
lbl_080571ca:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080571d0: .4byte 0x030000e4

    thumb_func_start sub_080571d4
sub_080571d4: @ 0x080571d4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    mov sl, r0
    movs r7, #0
    ldr r0, lbl_080571fc @ =0x030000bc
    mov sb, r0
lbl_080571ea:
    cmp r7, #0
    bne lbl_08057208
    mov r1, sb
    ldrb r4, [r1, #1]
    ldr r0, lbl_08057200 @ =0x030013b6
    ldrh r0, [r0]
    lsrs r2, r0, #6
    ldr r0, lbl_08057204 @ =0x030013b4
    b lbl_08057230
    .align 2, 0
lbl_080571fc: .4byte 0x030000bc
lbl_08057200: .4byte 0x030013b6
lbl_08057204: .4byte 0x030013b4
lbl_08057208:
    cmp r7, #1
    bne lbl_08057224
    mov r2, sb
    ldrb r4, [r2, #2]
    ldr r0, lbl_0805721c @ =0x030013ba
    ldrh r0, [r0]
    lsrs r2, r0, #6
    ldr r0, lbl_08057220 @ =0x030013b8
    b lbl_08057230
    .align 2, 0
lbl_0805721c: .4byte 0x030013ba
lbl_08057220: .4byte 0x030013b8
lbl_08057224:
    mov r0, sb
    ldrb r4, [r0, #3]
    ldr r0, lbl_080572e8 @ =0x030013be
    ldrh r0, [r0]
    lsrs r2, r0, #6
    ldr r0, lbl_080572ec @ =0x030013bc
lbl_08057230:
    ldrh r0, [r0]
    lsrs r5, r0, #6
    movs r0, #0x10
    ands r0, r4
    adds r1, r7, #1
    mov r8, r1
    cmp r0, #0
    beq lbl_080572d4
    mov r0, sl
    adds r4, r2, r0
    cmp r4, #0
    blt lbl_080572d4
    lsls r0, r7, #3
    ldr r2, lbl_080572f0 @ =0x0300009c
    adds r1, r0, r2
    ldrh r0, [r1, #6]
    cmp r4, r0
    bgt lbl_080572d4
    lsls r0, r4, #0x10
    lsrs r2, r0, #0x10
    subs r4, r5, #2
    cmp r4, #0
    bge lbl_08057260
    movs r4, #0
lbl_08057260:
    lsls r0, r4, #0x10
    lsrs r5, r0, #0x10
    movs r3, #0x13
    ldrh r0, [r1, #4]
    cmp r0, #0x13
    bge lbl_0805726e
    adds r3, r0, #0
lbl_0805726e:
    muls r0, r2, r0
    adds r6, r0, r5
    lsls r0, r7, #0xc
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r7, r0, r4
    movs r0, #0xf
    ands r2, r0
    lsls r0, r2, #7
    adds r7, r7, r0
    cmp r3, #0
    beq lbl_080572d4
    ldr r0, lbl_080572f4 @ =0x03005450
    ldr r1, [r1]
    ldr r0, [r0]
    mov ip, r0
    adds r4, r3, #0
    lsls r0, r6, #1
    adds r6, r0, r1
lbl_08057294:
    ldrh r0, [r6]
    lsls r0, r0, #3
    mov r1, ip
    adds r3, r1, r0
    movs r2, #0xf
    ands r2, r5
    movs r0, #0x10
    ands r0, r5
    cmp r0, #0
    beq lbl_080572ae
    movs r0, #0x80
    lsls r0, r0, #2
    adds r2, r2, r0
lbl_080572ae:
    lsls r2, r2, #2
    adds r2, r2, r7
    ldrh r1, [r3]
    ldrh r0, [r3, #2]
    lsls r0, r0, #0x10
    orrs r1, r0
    str r1, [r2]
    ldrh r1, [r3, #4]
    ldrh r0, [r3, #6]
    lsls r0, r0, #0x10
    orrs r1, r0
    str r1, [r2, #0x40]
    subs r4, #1
    adds r0, r5, #1
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    adds r6, #2
    cmp r4, #0
    bne lbl_08057294
lbl_080572d4:
    mov r7, r8
    cmp r7, #2
    ble lbl_080571ea
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080572e8: .4byte 0x030013be
lbl_080572ec: .4byte 0x030013bc
lbl_080572f0: .4byte 0x0300009c
lbl_080572f4: .4byte 0x03005450

    thumb_func_start sub_080572f8
sub_080572f8: @ 0x080572f8
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    str r0, [sp]
    movs r6, #0
lbl_0805730c:
    cmp r6, #0
    bne lbl_0805732c
    ldr r0, lbl_08057320 @ =0x030000bc
    ldrb r4, [r0, #1]
    ldr r0, lbl_08057324 @ =0x030013b6
    ldrh r0, [r0]
    lsrs r5, r0, #6
    ldr r0, lbl_08057328 @ =0x030013b4
    b lbl_08057358
    .align 2, 0
lbl_08057320: .4byte 0x030000bc
lbl_08057324: .4byte 0x030013b6
lbl_08057328: .4byte 0x030013b4
lbl_0805732c:
    cmp r6, #1
    bne lbl_0805734c
    ldr r1, lbl_08057340 @ =0x030000bc
    ldrb r4, [r1, #2]
    ldr r0, lbl_08057344 @ =0x030013ba
    ldrh r0, [r0]
    lsrs r5, r0, #6
    ldr r0, lbl_08057348 @ =0x030013b8
    b lbl_08057358
    .align 2, 0
lbl_08057340: .4byte 0x030000bc
lbl_08057344: .4byte 0x030013ba
lbl_08057348: .4byte 0x030013b8
lbl_0805734c:
    ldr r7, lbl_08057424 @ =0x030000bc
    ldrb r4, [r7, #3]
    ldr r0, lbl_08057428 @ =0x030013be
    ldrh r0, [r0]
    lsrs r5, r0, #6
    ldr r0, lbl_0805742c @ =0x030013bc
lbl_08057358:
    ldrh r0, [r0]
    lsrs r1, r0, #6
    movs r0, #0x10
    mov r8, r0
    ands r4, r0
    adds r7, r6, #1
    mov sl, r7
    cmp r4, #0
    beq lbl_0805740a
    ldr r0, [sp]
    adds r4, r1, r0
    cmp r4, #0
    blt lbl_0805740a
    lsls r0, r6, #3
    ldr r1, lbl_08057430 @ =0x0300009c
    adds r3, r0, r1
    ldrh r2, [r3, #4]
    cmp r4, r2
    bgt lbl_0805740a
    lsls r0, r4, #0x10
    lsrs r1, r0, #0x10
    subs r4, r5, #2
    cmp r4, #0
    bge lbl_0805738a
    movs r4, #0
lbl_0805738a:
    lsls r0, r4, #0x10
    lsrs r5, r0, #0x10
    movs r4, #0xe
    ldrh r0, [r3, #6]
    cmp r0, #0xe
    bge lbl_08057398
    adds r4, r0, #0
lbl_08057398:
    adds r0, r2, #0
    muls r0, r5, r0
    adds r0, r0, r1
    str r0, [sp, #4]
    lsls r2, r6, #0xc
    movs r7, #0xc0
    lsls r7, r7, #0x13
    adds r6, r2, r7
    adds r0, r1, #0
    mov r7, r8
    ands r0, r7
    cmp r0, #0
    beq lbl_080573b6
    ldr r0, lbl_08057434 @ =0x06000800
    adds r6, r2, r0
lbl_080573b6:
    movs r0, #0xf
    ands r1, r0
    lsls r0, r1, #2
    adds r6, r6, r0
    cmp r4, #0
    beq lbl_0805740a
    ldr r0, lbl_08057438 @ =0x03005450
    mov ip, r3
    ldr r0, [r0]
    mov sb, r0
    ldr r1, [r3]
    mov r8, r1
lbl_080573ce:
    ldr r7, [sp, #4]
    lsls r0, r7, #1
    add r0, r8
    ldrh r2, [r0]
    lsls r2, r2, #3
    add r2, sb
    movs r3, #0xf
    ands r3, r5
    lsls r3, r3, #7
    adds r3, r3, r6
    ldrh r1, [r2]
    ldrh r0, [r2, #2]
    lsls r0, r0, #0x10
    orrs r1, r0
    str r1, [r3]
    ldrh r1, [r2, #4]
    ldrh r0, [r2, #6]
    lsls r0, r0, #0x10
    orrs r1, r0
    str r1, [r3, #0x40]
    mov r1, ip
    ldrh r0, [r1, #4]
    adds r7, r7, r0
    str r7, [sp, #4]
    adds r0, r5, #1
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    subs r4, #1
    cmp r4, #0
    bne lbl_080573ce
lbl_0805740a:
    mov r6, sl
    cmp r6, #2
    bgt lbl_08057412
    b lbl_0805730c
lbl_08057412:
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08057424: .4byte 0x030000bc
lbl_08057428: .4byte 0x030013be
lbl_0805742c: .4byte 0x030013bc
lbl_08057430: .4byte 0x0300009c
lbl_08057434: .4byte 0x06000800
lbl_08057438: .4byte 0x03005450

    thumb_func_start check_dma3_ended
check_dma3_ended: @ 0x0805743c
    push {lr}
    ldr r2, lbl_08057458 @ =0x040000d4
    ldr r0, [r2, #8]
    movs r1, #0x80
    lsls r1, r1, #0x18
    cmp r0, #0
    bge lbl_08057452
lbl_0805744a:
    ldr r0, [r2, #8]
    ands r0, r1
    cmp r0, #0
    bne lbl_0805744a
lbl_08057452:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08057458: .4byte 0x040000d4

    thumb_func_start process_power_bomb_explosion
process_power_bomb_explosion: @ 0x0805745c
    push {r4, lr}
    ldr r4, lbl_0805747c @ =0x03000130
    ldrb r0, [r4]
    cmp r0, #1
    bls lbl_08057498
    bl set_gCurrentPowerBomb_0x12_to_0
    ldrb r0, [r4, #0x12]
    cmp r0, #0
    bne lbl_08057498
    ldrb r0, [r4]
    cmp r0, #2
    bne lbl_08057480
    bl PowerBombExplosionBegin
    b lbl_08057498
    .align 2, 0
lbl_0805747c: .4byte 0x03000130
lbl_08057480:
    cmp r0, #5
    bne lbl_0805748a
    bl PowerBombExplosionEnd
    b lbl_08057498
lbl_0805748a:
    ldr r0, lbl_080574a0 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #2
    bne lbl_08057498
    bl power_bomb_explosion
lbl_08057498:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080574a0: .4byte 0x03000c72

    thumb_func_start power_bomb_explosion
power_bomb_explosion: @ 0x080574a4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    ldr r0, lbl_080575ec @ =0x03000130
    mov r8, r0
    ldrb r0, [r0, #2]
    lsls r7, r0, #2
    lsls r6, r0, #3
    adds r0, r7, #0
    bl __floatsidf
    ldr r4, lbl_080575f0 @ =0x3fee6666
    ldr r5, lbl_080575f4 @ =0x66666666
    adds r3, r5, #0
    adds r2, r4, #0
    bl __muldf3
    bl __fixdfsi
    adds r7, r0, #0
    adds r0, r6, #0
    bl __floatsidf
    adds r3, r5, #0
    adds r2, r4, #0
    bl __muldf3
    bl __fixdfsi
    adds r6, r0, #0
    rsbs r0, r6, #0
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    str r0, [sp]
    lsls r0, r6, #0x10
    asrs r0, r0, #0x10
    str r0, [sp, #4]
    rsbs r0, r7, #0
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    mov sl, r0
    lsls r0, r7, #0x10
    asrs r0, r0, #0x10
    mov sb, r0
    mov r1, r8
    ldrh r2, [r1, #4]
    ldr r6, [sp]
    adds r0, r2, r6
    cmp r0, #0
    bge lbl_08057516
    rsbs r0, r2, #0
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    str r0, [sp]
lbl_08057516:
    mov r0, r8
    ldrh r4, [r0, #6]
    mov r1, sl
    adds r0, r4, r1
    adds r3, r4, #0
    cmp r0, #0
    bge lbl_0805752c
    rsbs r0, r3, #0
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    mov sl, r0
lbl_0805752c:
    ldr r5, lbl_080575f8 @ =0x0300009c
    ldrh r0, [r5, #0x1c]
    lsls r1, r0, #6
    ldr r6, [sp, #4]
    adds r0, r2, r6
    cmp r1, r0
    bge lbl_08057542
    subs r0, r1, r2
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    str r0, [sp, #4]
lbl_08057542:
    ldrh r0, [r5, #0x1e]
    lsls r1, r0, #6
    mov r2, sb
    adds r0, r3, r2
    cmp r1, r0
    bge lbl_08057556
    subs r0, r1, r3
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    mov sb, r0
lbl_08057556:
    mov r6, sp
    ldrh r0, [r6]
    mov r6, r8
    strh r0, [r6, #8]
    mov r1, sp
    ldrh r1, [r1, #4]
    strh r1, [r6, #0xa]
    mov r2, sl
    strh r2, [r6, #0xc]
    mov r0, sb
    strh r0, [r6, #0xe]
    ldrb r0, [r6]
    cmp r0, #3
    bls lbl_08057574
    b lbl_080576d8
lbl_08057574:
    ldrh r0, [r6, #4]
    ldr r2, [sp]
    adds r1, r2, r0
    asrs r1, r1, #6
    str r1, [sp]
    ldr r6, [sp, #4]
    adds r0, r6, r0
    asrs r0, r0, #6
    str r0, [sp, #4]
    mov r1, sl
    adds r0, r1, r4
    asrs r0, r0, #6
    mov sl, r0
    mov r2, sb
    adds r0, r2, r4
    asrs r0, r0, #6
    mov sb, r0
    ldr r0, lbl_080575fc @ =0x03000c77
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0805763e
    ldr r1, lbl_08057600 @ =0x03000079
    movs r0, #0xb
    strb r0, [r1]
    movs r1, #0
lbl_080575aa:
    ldr r6, [sp, #4]
    cmp r1, #0
    bne lbl_080575b2
    ldr r6, [sp]
lbl_080575b2:
    ldr r0, lbl_080575ec @ =0x03000130
    ldrh r0, [r0, #6]
    lsrs r4, r0, #6
    adds r5, r4, #0
    adds r1, #1
    mov r8, r1
    ldr r7, lbl_080575f8 @ =0x0300009c
lbl_080575c0:
    movs r3, #0
    cmp r5, sl
    blt lbl_08057604
    ldrh r0, [r7, #0x1c]
    muls r0, r5, r0
    adds r0, r0, r6
    ldr r1, [r7, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    cmp r2, #0
    beq lbl_080575e4
    adds r0, r5, #0
    adds r1, r6, #0
    str r3, [sp, #8]
    bl apply_current_clipdata_affecting_action
    ldr r3, [sp, #8]
lbl_080575e4:
    subs r0, r5, #1
    lsls r0, r0, #0x10
    asrs r5, r0, #0x10
    b lbl_08057606
    .align 2, 0
lbl_080575ec: .4byte 0x03000130
lbl_080575f0: .4byte 0x3fee6666
lbl_080575f4: .4byte 0x66666666
lbl_080575f8: .4byte 0x0300009c
lbl_080575fc: .4byte 0x03000c77
lbl_08057600: .4byte 0x03000079
lbl_08057604:
    movs r3, #1
lbl_08057606:
    cmp r4, sb
    bgt lbl_08057630
    ldrh r0, [r7, #0x1c]
    muls r0, r4, r0
    adds r0, r0, r6
    ldr r1, [r7, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    cmp r2, #0
    beq lbl_08057628
    adds r0, r4, #0
    adds r1, r6, #0
    str r3, [sp, #8]
    bl apply_current_clipdata_affecting_action
    ldr r3, [sp, #8]
lbl_08057628:
    adds r0, r4, #1
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    b lbl_08057632
lbl_08057630:
    adds r3, #1
lbl_08057632:
    cmp r3, #2
    bne lbl_080575c0
    mov r1, r8
    cmp r1, #1
    ble lbl_080575aa
    b lbl_080576d2
lbl_0805763e:
    ldr r1, lbl_0805768c @ =0x03000079
    movs r0, #0xb
    strb r0, [r1]
    movs r1, #0
lbl_08057646:
    mov r7, sb
    cmp r1, #0
    bne lbl_0805764e
    mov r7, sl
lbl_0805764e:
    ldr r0, lbl_08057690 @ =0x03000130
    ldrh r0, [r0, #4]
    lsrs r4, r0, #6
    adds r5, r4, #0
    adds r1, #1
    mov r8, r1
    ldr r6, lbl_08057694 @ =0x0300009c
lbl_0805765c:
    movs r3, #0
    ldr r0, [sp]
    cmp r5, r0
    blt lbl_08057698
    ldrh r0, [r6, #0x1c]
    muls r0, r7, r0
    adds r0, r0, r5
    ldr r1, [r6, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    cmp r2, #0
    beq lbl_08057682
    adds r0, r7, #0
    adds r1, r5, #0
    str r3, [sp, #8]
    bl apply_current_clipdata_affecting_action
    ldr r3, [sp, #8]
lbl_08057682:
    subs r0, r5, #1
    lsls r0, r0, #0x10
    asrs r5, r0, #0x10
    b lbl_0805769a
    .align 2, 0
lbl_0805768c: .4byte 0x03000079
lbl_08057690: .4byte 0x03000130
lbl_08057694: .4byte 0x0300009c
lbl_08057698:
    movs r3, #1
lbl_0805769a:
    ldr r1, [sp, #4]
    cmp r4, r1
    bgt lbl_080576c6
    ldrh r0, [r6, #0x1c]
    muls r0, r7, r0
    adds r0, r0, r4
    ldr r1, [r6, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    cmp r2, #0
    beq lbl_080576be
    adds r0, r7, #0
    adds r1, r4, #0
    str r3, [sp, #8]
    bl apply_current_clipdata_affecting_action
    ldr r3, [sp, #8]
lbl_080576be:
    adds r0, r4, #1
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    b lbl_080576c8
lbl_080576c6:
    adds r3, #1
lbl_080576c8:
    cmp r3, #2
    bne lbl_0805765c
    mov r1, r8
    cmp r1, #1
    ble lbl_08057646
lbl_080576d2:
    ldr r1, lbl_080576e8 @ =0x03000079
    movs r0, #0
    strb r0, [r1]
lbl_080576d8:
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080576e8: .4byte 0x03000079

    thumb_func_start start_power_bomb_explosion
start_power_bomb_explosion: @ 0x080576ec
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r2, r2, #0x18
    lsrs r5, r2, #0x18
    ldr r0, lbl_08057720 @ =0x03000c72
    movs r1, #0
    ldrsh r4, [r0, r1]
    cmp r4, #2
    bne lbl_0805772c
    bl set_gCurrentPowerBomb_0x12_to_0
    ldr r1, lbl_08057724 @ =0x03000130
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0805772c
    strh r7, [r1, #4]
    strh r6, [r1, #6]
    strb r5, [r1, #0x11]
    ldrb r0, [r1, #0x12]
    cmp r0, #0
    beq lbl_08057728
    strb r4, [r1]
    b lbl_0805772c
    .align 2, 0
lbl_08057720: .4byte 0x03000c72
lbl_08057724: .4byte 0x03000130
lbl_08057728:
    bl PowerBombExplosionBegin
lbl_0805772c:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start set_gCurrentPowerBomb_0x12_to_0
set_gCurrentPowerBomb_0x12_to_0: @ 0x08057734
    ldr r1, lbl_0805773c @ =0x03000130
    movs r0, #0
    strb r0, [r1, #0x12]
    bx lr
    .align 2, 0
lbl_0805773c: .4byte 0x03000130

    thumb_func_start PowerBombExplosionBegin
PowerBombExplosionBegin: @ 0x08057740
    push {r4, r5, r6, lr}
    ldr r0, lbl_0805779c @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #2
    bne lbl_08057794
    ldr r4, lbl_080577a0 @ =0x03000130
    movs r6, #0
    movs r0, #3
    strb r0, [r4]
    strb r6, [r4, #0x10]
    ldr r1, lbl_080577a4 @ =0x040000d4
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1]
    ldr r0, lbl_080577a8 @ =0x02009000
    str r0, [r1, #4]
    ldr r0, lbl_080577ac @ =0x80000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_080577b0 @ =0x02035400
    movs r5, #0
    strh r6, [r0]
    movs r0, #7
    bl SetupHazeCode
    strb r5, [r4, #1]
    movs r0, #4
    strb r0, [r4, #2]
    strh r6, [r4, #8]
    strh r6, [r4, #0xa]
    strh r6, [r4, #0xc]
    strh r6, [r4, #0xe]
    strb r5, [r4, #0x12]
    strb r5, [r4, #3]
    movs r0, #0x78
    movs r1, #0x80
    bl ScreenShakeStartHorizontal
    ldr r0, lbl_080577b4 @ =0x00000101
    bl SoundPlay
lbl_08057794:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805779c: .4byte 0x03000c72
lbl_080577a0: .4byte 0x03000130
lbl_080577a4: .4byte 0x040000d4
lbl_080577a8: .4byte 0x02009000
lbl_080577ac: .4byte 0x80000100
lbl_080577b0: .4byte 0x02035400
lbl_080577b4: .4byte 0x00000101

    thumb_func_start PowerBombExplosionEnd
PowerBombExplosionEnd: @ 0x080577b8
    push {r4, r5, r6, lr}
    ldr r2, lbl_080577ec @ =0x03000130
    ldrb r1, [r2, #1]
    adds r6, r2, #0
    cmp r1, #0
    bne lbl_08057898
    ldr r0, lbl_080577f0 @ =0x04000054
    strh r1, [r0]
    ldr r1, lbl_080577f4 @ =0x0300544c
    ldr r2, lbl_080577f8 @ =0x03000088
    ldrh r0, [r2, #2]
    strh r0, [r1]
    ldr r1, lbl_080577fc @ =0x0875fd88
    ldr r0, lbl_08057800 @ =0x030000bc
    ldrb r0, [r0, #0x10]
    lsls r0, r0, #2
    adds r1, #3
    adds r0, r0, r1
    ldrb r0, [r0]
    adds r5, r2, #0
    cmp r0, #2
    bne lbl_08057808
    ldr r1, lbl_08057804 @ =0x03000006
    movs r0, #0x10
    b lbl_08057810
    .align 2, 0
lbl_080577ec: .4byte 0x03000130
lbl_080577f0: .4byte 0x04000054
lbl_080577f4: .4byte 0x0300544c
lbl_080577f8: .4byte 0x03000088
lbl_080577fc: .4byte 0x0875fd88
lbl_08057800: .4byte 0x030000bc
lbl_08057804: .4byte 0x03000006
lbl_08057808:
    ldr r1, lbl_08057878 @ =0x03000006
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
lbl_08057810:
    strh r0, [r1]
    ldr r4, lbl_0805787c @ =0x0300000a
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r0, [r2]
    movs r3, #0x80
    lsls r3, r3, #7
    adds r1, r3, #0
    orrs r0, r1
    strh r0, [r2]
    ldrh r0, [r2]
    strh r0, [r4]
    ldr r3, lbl_08057880 @ =0x03005448
    ldr r2, lbl_08057884 @ =0x03000108
    ldrb r1, [r2]
    lsls r1, r1, #8
    ldrb r0, [r2, #1]
    orrs r0, r1
    strh r0, [r3]
    ldr r3, lbl_08057888 @ =0x0300544a
    ldrb r1, [r2, #2]
    lsls r1, r1, #8
    ldrb r0, [r2, #3]
    orrs r0, r1
    strh r0, [r3]
    movs r1, #0xa0
    lsls r1, r1, #0x13
    movs r0, #0
    strh r0, [r1]
    ldr r1, lbl_0805788c @ =0x0300000e
    ldrb r0, [r5, #7]
    strb r0, [r1]
    ldr r1, lbl_08057890 @ =0x0300000f
    ldrb r0, [r5, #8]
    strb r0, [r1]
    ldr r1, lbl_08057894 @ =0x04000008
    ldrh r0, [r5, #0xa]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r5, #0xc]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r5, #0xe]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r5, #0x10]
    strh r0, [r1]
    ldrh r0, [r5]
    strh r0, [r4]
    movs r0, #1
    strb r0, [r6, #1]
    b lbl_08057904
    .align 2, 0
lbl_08057878: .4byte 0x03000006
lbl_0805787c: .4byte 0x0300000a
lbl_08057880: .4byte 0x03005448
lbl_08057884: .4byte 0x03000108
lbl_08057888: .4byte 0x0300544a
lbl_0805788c: .4byte 0x0300000e
lbl_08057890: .4byte 0x0300000f
lbl_08057894: .4byte 0x04000008
lbl_08057898:
    cmp r1, #1
    bne lbl_080578f8
    ldr r1, lbl_080578bc @ =0x04000052
    ldrh r0, [r1]
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldrh r0, [r1]
    lsrs r3, r0, #8
    movs r2, #1
    ldr r0, lbl_080578c0 @ =0x03000088
    ldrb r1, [r0, #5]
    adds r5, r0, #0
    cmp r1, r3
    beq lbl_080578cc
    cmp r1, r3
    bhs lbl_080578c4
    subs r0, r3, #1
    b lbl_080578c6
    .align 2, 0
lbl_080578bc: .4byte 0x04000052
lbl_080578c0: .4byte 0x03000088
lbl_080578c4:
    adds r0, r3, #1
lbl_080578c6:
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    movs r2, #0
lbl_080578cc:
    ldrb r0, [r5, #4]
    cmp r0, r4
    beq lbl_080578e2
    cmp r0, r4
    bhs lbl_080578da
    subs r0, r4, #1
    b lbl_080578dc
lbl_080578da:
    adds r0, r4, #1
lbl_080578dc:
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r2, #0
lbl_080578e2:
    ldr r1, lbl_080578f4 @ =0x03000006
    lsls r0, r3, #8
    orrs r0, r4
    strh r0, [r1]
    cmp r2, #0
    beq lbl_08057904
    movs r0, #2
    strb r0, [r6, #1]
    b lbl_08057904
    .align 2, 0
lbl_080578f4: .4byte 0x03000006
lbl_080578f8:
    cmp r1, #2
    bne lbl_08057904
    movs r0, #0
    strb r0, [r2]
    strb r0, [r2, #0x11]
    strb r0, [r2, #1]
lbl_08057904:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start GadoraHatchUpdate
GadoraHatchUpdate: @ 0x0805790c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    lsls r0, r0, #0x10
    lsls r1, r1, #0x10
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    rsbs r3, r2, #0
    orrs r3, r2
    lsrs r3, r3, #0x1f
    str r3, [sp]
    movs r6, #0
    movs r7, #0
    movs r4, #0
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x10
    mov r8, r0
    lsrs r1, r1, #0x16
    lsls r1, r1, #0x10
    mov ip, r1
    mov sb, r3
    ldr r3, lbl_08057990 @ =0x0300545c
    movs r0, #2
    rsbs r0, r0, #0
    mov sl, r0
lbl_08057944:
    ldrb r0, [r3, #1]
    lsls r0, r0, #0x1e
    cmp r0, #0
    bne lbl_08057994
    ldrb r1, [r3, #5]
    adds r0, r1, r6
    mov r5, r8
    lsrs r2, r5, #0x10
    cmp r0, r2
    blt lbl_08057974
    subs r0, r1, r6
    cmp r0, r2
    bgt lbl_08057974
    ldrb r1, [r3, #6]
    adds r0, r1, #3
    mov r5, ip
    lsrs r2, r5, #0x10
    cmp r0, r2
    blt lbl_08057974
    movs r5, #0
    subs r0, r1, r5
    cmp r0, r2
    bgt lbl_08057974
    movs r7, #1
lbl_08057974:
    cmp r7, #0
    beq lbl_08057994
    ldrb r1, [r3]
    lsls r0, r1, #0x1f
    lsrs r0, r0, #0x1f
    ldr r2, [sp]
    cmp r0, r2
    beq lbl_080579a2
    mov r0, sl
    ands r0, r1
    mov r5, sb
    orrs r0, r5
    strb r0, [r3]
    b lbl_0805799c
    .align 2, 0
lbl_08057990: .4byte 0x0300545c
lbl_08057994:
    adds r3, #8
    adds r4, #1
    cmp r4, #0xf
    ble lbl_08057944
lbl_0805799c:
    adds r4, #1
    cmp r7, #0
    bne lbl_080579a4
lbl_080579a2:
    movs r4, #0
lbl_080579a4:
    adds r0, r4, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start update_in_game_timer
update_in_game_timer: @ 0x080579b8
    push {lr}
    ldr r0, lbl_08057a1c @ =0x0300014c
    ldrb r2, [r0]
    adds r3, r0, #0
    cmp r2, #0
    bne lbl_08057a18
    ldr r1, lbl_08057a20 @ =0x03000150
    ldrb r0, [r1, #3]
    adds r0, #1
    strb r0, [r1, #3]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x3f
    bls lbl_08057a00
    strb r2, [r1, #3]
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x3b
    bls lbl_08057a00
    strb r2, [r1, #2]
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x3b
    bls lbl_08057a00
    strb r2, [r1, #1]
    ldrb r0, [r1]
    cmp r0, #0x63
    bhi lbl_08057a06
    adds r0, #1
    strb r0, [r1]
lbl_08057a00:
    ldrb r0, [r1]
    cmp r0, #0x63
    bls lbl_08057a18
lbl_08057a06:
    movs r0, #1
    strb r0, [r3]
    movs r0, #0x63
    strb r0, [r1]
    movs r0, #0x3b
    strb r0, [r1, #1]
    strb r0, [r1, #2]
    movs r0, #0x3f
    strb r0, [r1, #3]
lbl_08057a18:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08057a1c: .4byte 0x0300014c
lbl_08057a20: .4byte 0x03000150

    thumb_func_start sub_08057a24
sub_08057a24: @ 0x08057a24
    push {r4, lr}
    ldr r2, lbl_08057ac0 @ =0x0300000a
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_08057a38
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r1, [r0]
    movs r0, #0
    strh r0, [r2]
lbl_08057a38:
    ldr r2, lbl_08057ac4 @ =0x03000006
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_08057a48
    ldr r0, lbl_08057ac8 @ =0x04000052
    strh r1, [r0]
    movs r0, #0
    strh r0, [r2]
lbl_08057a48:
    ldr r2, lbl_08057acc @ =0x03000012
    movs r0, #0
    ldrsb r0, [r2, r0]
    cmp r0, #0
    blt lbl_08057a62
    ldr r0, lbl_08057ad0 @ =0x04000054
    movs r1, #0
    ldrsb r1, [r2, r1]
    strh r1, [r0]
    movs r1, #1
    rsbs r1, r1, #0
    adds r0, r1, #0
    strb r0, [r2]
lbl_08057a62:
    ldr r2, lbl_08057ad4 @ =0x0300000e
    ldrb r1, [r2]
    cmp r1, #0
    beq lbl_08057a72
    ldr r0, lbl_08057ad8 @ =0x04000049
    strb r1, [r0]
    movs r0, #0
    strb r0, [r2]
lbl_08057a72:
    ldr r2, lbl_08057adc @ =0x0300000f
    ldrb r1, [r2]
    cmp r1, #0
    beq lbl_08057a82
    ldr r0, lbl_08057ae0 @ =0x0400004a
    strb r1, [r0]
    movs r0, #0
    strb r0, [r2]
lbl_08057a82:
    ldr r3, lbl_08057ae4 @ =0x03005448
    ldr r4, lbl_08057ae8 @ =0x0300544a
    ldrh r1, [r3]
    ldrh r2, [r4]
    adds r0, r2, #0
    orrs r0, r1
    cmp r0, #0
    beq lbl_08057aa0
    ldr r0, lbl_08057aec @ =0x04000042
    strh r1, [r0]
    adds r0, #4
    strh r2, [r0]
    movs r0, #0
    strh r0, [r3]
    strh r0, [r4]
lbl_08057aa0:
    ldr r2, lbl_08057af0 @ =0x0300544c
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_08057ab0
    ldr r0, lbl_08057af4 @ =0x04000050
    strh r1, [r0]
    movs r0, #0
    strh r0, [r2]
lbl_08057ab0:
    bl sub_0805b3fc
    bl sub_0805dd5c
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08057ac0: .4byte 0x0300000a
lbl_08057ac4: .4byte 0x03000006
lbl_08057ac8: .4byte 0x04000052
lbl_08057acc: .4byte 0x03000012
lbl_08057ad0: .4byte 0x04000054
lbl_08057ad4: .4byte 0x0300000e
lbl_08057ad8: .4byte 0x04000049
lbl_08057adc: .4byte 0x0300000f
lbl_08057ae0: .4byte 0x0400004a
lbl_08057ae4: .4byte 0x03005448
lbl_08057ae8: .4byte 0x0300544a
lbl_08057aec: .4byte 0x04000042
lbl_08057af0: .4byte 0x0300544c
lbl_08057af4: .4byte 0x04000050

    thumb_func_start sub_08057af8
sub_08057af8: @ 0x08057af8
    push {r4, lr}
    ldr r2, lbl_08057b98 @ =0x0300000a
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_08057b0c
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r1, [r0]
    movs r0, #0
    strh r0, [r2]
lbl_08057b0c:
    ldr r2, lbl_08057b9c @ =0x03000006
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_08057b1c
    ldr r0, lbl_08057ba0 @ =0x04000052
    strh r1, [r0]
    movs r0, #0
    strh r0, [r2]
lbl_08057b1c:
    ldr r2, lbl_08057ba4 @ =0x0300000e
    ldrb r1, [r2]
    cmp r1, #0
    beq lbl_08057b2c
    ldr r0, lbl_08057ba8 @ =0x04000049
    strb r1, [r0]
    movs r0, #0
    strb r0, [r2]
lbl_08057b2c:
    ldr r2, lbl_08057bac @ =0x0300000f
    ldrb r1, [r2]
    cmp r1, #0
    beq lbl_08057b3c
    ldr r0, lbl_08057bb0 @ =0x0400004a
    strb r1, [r0]
    movs r0, #0
    strb r0, [r2]
lbl_08057b3c:
    ldr r3, lbl_08057bb4 @ =0x03005448
    ldr r4, lbl_08057bb8 @ =0x0300544a
    ldrh r1, [r3]
    ldrh r2, [r4]
    adds r0, r2, #0
    orrs r0, r1
    cmp r0, #0
    beq lbl_08057b5a
    ldr r0, lbl_08057bbc @ =0x04000042
    strh r1, [r0]
    adds r0, #4
    strh r2, [r0]
    movs r0, #0
    strh r0, [r3]
    strh r0, [r4]
lbl_08057b5a:
    ldr r2, lbl_08057bc0 @ =0x0300544c
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_08057b6a
    ldr r0, lbl_08057bc4 @ =0x04000050
    strh r1, [r0]
    movs r0, #0
    strh r0, [r2]
lbl_08057b6a:
    ldr r2, lbl_08057bc8 @ =0x03005512
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_08057b7a
    ldr r0, lbl_08057bcc @ =0x0400000a
    strh r1, [r0]
    movs r0, #0
    strh r0, [r2]
lbl_08057b7a:
    ldr r2, lbl_08057bd0 @ =0x03005510
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_08057b8a
    ldr r0, lbl_08057bd4 @ =0x0400000e
    strh r1, [r0]
    movs r0, #0
    strh r0, [r2]
lbl_08057b8a:
    bl sub_0805b3fc
    bl sub_0805dd5c
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08057b98: .4byte 0x0300000a
lbl_08057b9c: .4byte 0x03000006
lbl_08057ba0: .4byte 0x04000052
lbl_08057ba4: .4byte 0x0300000e
lbl_08057ba8: .4byte 0x04000049
lbl_08057bac: .4byte 0x0300000f
lbl_08057bb0: .4byte 0x0400004a
lbl_08057bb4: .4byte 0x03005448
lbl_08057bb8: .4byte 0x0300544a
lbl_08057bbc: .4byte 0x04000042
lbl_08057bc0: .4byte 0x0300544c
lbl_08057bc4: .4byte 0x04000050
lbl_08057bc8: .4byte 0x03005512
lbl_08057bcc: .4byte 0x0400000a
lbl_08057bd0: .4byte 0x03005510
lbl_08057bd4: .4byte 0x0400000e

    thumb_func_start update_dispcnt
update_dispcnt: @ 0x08057bd8
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    lsls r1, r1, #0x10
    lsrs r4, r1, #0x10
    cmp r4, #0
    beq lbl_08057c46
    ldr r0, lbl_08057c08 @ =0x0300000a
    movs r1, #0x80
    lsls r1, r1, #0x13
    ldrh r1, [r1]
    strh r1, [r0]
    adds r5, r0, #0
    cmp r2, #0
    beq lbl_08057c14
    ldr r2, lbl_08057c0c @ =0x03000076
    ldr r3, lbl_08057c10 @ =0x03000088
    ldrh r1, [r3]
    adds r0, r4, #0
    orrs r0, r1
    strh r0, [r2]
    adds r6, r2, #0
    b lbl_08057c22
    .align 2, 0
lbl_08057c08: .4byte 0x0300000a
lbl_08057c0c: .4byte 0x03000076
lbl_08057c10: .4byte 0x03000088
lbl_08057c14:
    ldr r0, lbl_08057c34 @ =0x03000076
    ldr r2, lbl_08057c38 @ =0x03000088
    ldrh r1, [r2]
    bics r1, r4
    strh r1, [r0]
    adds r6, r0, #0
    adds r3, r2, #0
lbl_08057c22:
    ldrh r2, [r6]
    ldrh r1, [r3]
    cmp r2, r1
    beq lbl_08057c46
    ldrh r0, [r5]
    cmp r0, r1
    bne lbl_08057c3c
    strh r2, [r5]
    b lbl_08057c40
    .align 2, 0
lbl_08057c34: .4byte 0x03000076
lbl_08057c38: .4byte 0x03000088
lbl_08057c3c:
    movs r0, #0
    strh r0, [r5]
lbl_08057c40:
    ldrh r0, [r6]
    strh r0, [r3]
    strh r4, [r6]
lbl_08057c46:
    pop {r4, r5, r6}
    pop {r0}
    bx r0

    thumb_func_start sub_08057c4c
sub_08057c4c: @ 0x08057c4c
    push {r4, lr}
    movs r4, #1
    ldr r0, lbl_08057c78 @ =0x03000bf0
    movs r1, #0
    ldrsb r1, [r0, r1]
    adds r2, r0, #0
    cmp r1, #0
    beq lbl_08057c80
    ldr r0, lbl_08057c7c @ =0x03000130
    ldrb r1, [r0]
    ldrb r0, [r0, #0x10]
    orrs r0, r1
    cmp r0, #0
    beq lbl_08057c6a
    movs r4, #0
lbl_08057c6a:
    cmp r4, #1
    bne lbl_08057cf6
    bl sub_08060a48
    movs r0, #2
    b lbl_08057cec
    .align 2, 0
lbl_08057c78: .4byte 0x03000bf0
lbl_08057c7c: .4byte 0x03000130
lbl_08057c80:
    ldr r0, lbl_08057ccc @ =0x03001606
    ldrh r0, [r0]
    cmp r0, #0
    bne lbl_08057caa
    ldr r0, lbl_08057cd0 @ =0x03000049
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08057caa
    ldr r0, lbl_08057cd4 @ =0x0300004b
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08057caa
    ldr r1, lbl_08057cd8 @ =0x03000130
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_08057caa
    ldrb r0, [r1, #0x10]
    cmp r0, #0
    beq lbl_08057cac
lbl_08057caa:
    movs r4, #0
lbl_08057cac:
    cmp r4, #1
    bne lbl_08057cf6
    movs r0, #2
    strb r0, [r2]
    ldr r0, lbl_08057cdc @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08057ce4
    ldr r0, lbl_08057ce0 @ =0x0300137c
    ldrh r0, [r0]
    movs r1, #0xe
    cmp r0, #0
    beq lbl_08057cea
    movs r1, #0xd
    b lbl_08057cea
    .align 2, 0
lbl_08057ccc: .4byte 0x03001606
lbl_08057cd0: .4byte 0x03000049
lbl_08057cd4: .4byte 0x0300004b
lbl_08057cd8: .4byte 0x03000130
lbl_08057cdc: .4byte 0x030013d2
lbl_08057ce0: .4byte 0x0300137c
lbl_08057ce4:
    bl sub_08060a48
    movs r1, #2
lbl_08057cea:
    adds r0, r1, #0
lbl_08057cec:
    bl start_special_background_fading
    ldr r1, lbl_08057d00 @ =0x03000005
    movs r0, #0
    strb r0, [r1]
lbl_08057cf6:
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08057d00: .4byte 0x03000005

    thumb_func_start load_room_cutscene_escape
load_room_cutscene_escape: @ 0x08057d04
    push {r4, lr}
    sub sp, #4
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    lsls r3, r3, #0x10
    lsrs r3, r3, #0x10
    ldr r4, lbl_08057d9c @ =0x030013b4
    strh r2, [r4]
    ldr r4, lbl_08057da0 @ =0x030013b6
    strh r3, [r4]
    ldr r4, lbl_08057da4 @ =0x030013b8
    strh r2, [r4]
    ldr r4, lbl_08057da8 @ =0x030013ba
    strh r3, [r4]
    ldr r4, lbl_08057dac @ =0x030013bc
    strh r2, [r4]
    ldr r2, lbl_08057db0 @ =0x030013be
    strh r3, [r2]
    ldr r2, lbl_08057db4 @ =0x03000054
    strb r0, [r2]
    ldr r0, lbl_08057db8 @ =0x03000055
    subs r1, #1
    strb r1, [r0]
    bl load_room_entry
    bl load_tileset
    bl load_room_backgrounds
    bl remove_never_reform_blocks_and_collected_tank
    bl TransparencySetRoomEffectsTransparency
    bl ScrollBG3
    bl check_play_lightning_effect
    bl update_backgrounds_pos
    bl load_doors
    bl check_hatch_lock_events
    movs r0, #0
    bl sub_08056b28
    movs r0, #1
    bl sub_08056b28
    movs r0, #2
    bl sub_08056b28
    bl load_animated_graphics
    ldr r1, lbl_08057dbc @ =0x02007000
    ldr r2, lbl_08057dc0 @ =0x06003000
    movs r3, #0x80
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_08057dc4 @ =0x04000008
    ldr r2, lbl_08057dc8 @ =0x03000088
    ldrh r0, [r2, #0xa]
    strh r0, [r1]
    adds r1, #6
    ldrh r0, [r2, #0x10]
    strh r0, [r1]
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08057d9c: .4byte 0x030013b4
lbl_08057da0: .4byte 0x030013b6
lbl_08057da4: .4byte 0x030013b8
lbl_08057da8: .4byte 0x030013ba
lbl_08057dac: .4byte 0x030013bc
lbl_08057db0: .4byte 0x030013be
lbl_08057db4: .4byte 0x03000054
lbl_08057db8: .4byte 0x03000055
lbl_08057dbc: .4byte 0x02007000
lbl_08057dc0: .4byte 0x06003000
lbl_08057dc4: .4byte 0x04000008
lbl_08057dc8: .4byte 0x03000088

    thumb_func_start setup_clipdata_code
setup_clipdata_code: @ 0x08057dcc
    ldr r1, lbl_08057de4 @ =0x040000d4
    ldr r0, lbl_08057de8 @ =sub_08057f7c
    str r0, [r1]
    ldr r2, lbl_08057dec @ =0x030016c4
    str r2, [r1, #4]
    ldr r0, lbl_08057df0 @ =0x80000140
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_08057df4 @ =0x03005704
    adds r2, #1
    str r2, [r0]
    bx lr
    .align 2, 0
lbl_08057de4: .4byte 0x040000d4
lbl_08057de8: .4byte sub_08057f7c
lbl_08057dec: .4byte 0x030016c4
lbl_08057df0: .4byte 0x80000140
lbl_08057df4: .4byte 0x03005704

    thumb_func_start sub_08057df8
sub_08057df8: @ 0x08057df8
    push {r4, r5, r6, lr}
    sub sp, #0x14
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    mov r2, sp
    lsrs r0, r0, #0x16
    strh r0, [r2, #0x12]
    mov r0, sp
    lsrs r1, r1, #0x16
    strh r1, [r0, #0x10]
    ldr r4, lbl_08057e1c @ =0x0300009c
    ldrh r0, [r4, #0x1c]
    cmp r1, r0
    blo lbl_08057e24
    ldr r0, lbl_08057e20 @ =0x01000001
    b lbl_08057e72
    .align 2, 0
lbl_08057e1c: .4byte 0x0300009c
lbl_08057e20: .4byte 0x01000001
lbl_08057e24:
    mov r0, sp
    ldrh r0, [r0, #0x12]
    ldrh r1, [r4, #0x1e]
    cmp r0, r1
    bhs lbl_08057e70
    ldr r3, lbl_08057e68 @ =0x03005450
    ldrh r2, [r4, #0x1c]
    mov r0, sp
    ldrh r0, [r0, #0x12]
    mov r1, sp
    muls r0, r2, r0
    ldrh r1, [r1, #0x10]
    adds r0, r0, r1
    ldr r1, [r4, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    ldr r0, [r3, #4]
    adds r0, r0, r1
    ldrb r0, [r0]
    str r0, [sp]
    movs r0, #0x3f
    ands r5, r0
    str r5, [sp, #8]
    ands r6, r0
    str r6, [sp, #4]
    movs r0, #0
    str r0, [sp, #0xc]
    ldr r0, lbl_08057e6c @ =0x03005704
    ldr r1, [r0]
    mov r0, sp
    bl _call_via_r1
    b lbl_08057e72
    .align 2, 0
lbl_08057e68: .4byte 0x03005450
lbl_08057e6c: .4byte 0x03005704
lbl_08057e70:
    movs r0, #0
lbl_08057e72:
    add sp, #0x14
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start ClipdataProcess
ClipdataProcess: @ 0x08057e7c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #0x14
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r2, r1, #0x10
    mov r8, r2
    mov r2, sp
    lsrs r0, r0, #0x16
    movs r4, #0
    movs r3, #0
    strh r0, [r2, #0x12]
    mov r0, sp
    lsrs r1, r1, #0x16
    strh r1, [r0, #0x10]
    ldr r2, lbl_08057ec0 @ =0x0300009c
    ldrh r0, [r2, #0x1c]
    cmp r1, r0
    bhs lbl_08057eb0
    mov r0, sp
    ldrh r0, [r0, #0x12]
    ldrh r2, [r2, #0x1e]
    cmp r0, r2
    blo lbl_08057ecc
lbl_08057eb0:
    ldr r0, lbl_08057ec4 @ =0x030000dc
    strh r3, [r0]
    strh r3, [r0, #2]
    ldr r0, lbl_08057ec8 @ =0x03000079
    strb r4, [r0]
    movs r0, #0
    b lbl_08057f5e
    .align 2, 0
lbl_08057ec0: .4byte 0x0300009c
lbl_08057ec4: .4byte 0x030000dc
lbl_08057ec8: .4byte 0x03000079
lbl_08057ecc:
    ldr r2, lbl_08057ef0 @ =0x03000079
    ldrb r1, [r2]
    cmp r1, #0
    bne lbl_08057ef8
    movs r0, #2
    str r0, [sp, #0xc]
    ldr r0, lbl_08057ef4 @ =0x030000dc
    strh r1, [r0]
    strh r1, [r0, #2]
    mov r0, sp
    ldrh r1, [r0, #0x12]
    ldrh r2, [r0, #0x10]
    adds r0, r7, #0
    movs r3, #2
    bl check_current_affecting_hazard_and_very_special_clipdata
    b lbl_08057f0c
    .align 2, 0
lbl_08057ef0: .4byte 0x03000079
lbl_08057ef4: .4byte 0x030000dc
lbl_08057ef8:
    cmp r1, #5
    bls lbl_08057f08
    movs r0, #1
    str r0, [sp, #0xc]
    cmp r1, #6
    bne lbl_08057f0c
    strb r4, [r2]
    b lbl_08057f0c
lbl_08057f08:
    movs r0, #2
    str r0, [sp, #0xc]
lbl_08057f0c:
    ldr r2, lbl_08057f6c @ =0x0300009c
    mov r0, sp
    ldrh r5, [r0, #0x12]
    ldrh r0, [r2, #0x1c]
    muls r0, r5, r0
    mov r1, sp
    ldrh r3, [r1, #0x10]
    adds r0, r0, r3
    ldr r1, [r2, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r4, [r0]
    ldr r6, lbl_08057f70 @ =0x03000079
    ldrb r0, [r6]
    cmp r0, #0
    beq lbl_08057f3a
    adds r2, r4, #0
    adds r0, r5, #0
    adds r1, r3, #0
    bl apply_current_clipdata_affecting_action
    movs r0, #0
    strb r0, [r6]
lbl_08057f3a:
    ldr r0, lbl_08057f74 @ =0x03005450
    ldr r0, [r0, #4]
    adds r0, r0, r4
    ldrb r0, [r0]
    str r0, [sp]
    movs r1, #0x3f
    adds r0, r7, #0
    ands r0, r1
    str r0, [sp, #8]
    mov r0, r8
    ands r0, r1
    str r0, [sp, #4]
    ldr r0, lbl_08057f78 @ =0x03005704
    ldr r1, [r0]
    mov r0, sp
    bl _call_via_r1
    adds r4, r0, #0
lbl_08057f5e:
    add sp, #0x14
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08057f6c: .4byte 0x0300009c
lbl_08057f70: .4byte 0x03000079
lbl_08057f74: .4byte 0x03005450
lbl_08057f78: .4byte 0x03005704

    thumb_func_start sub_08057f7c
sub_08057f7c: @ 0x08057f7c
    push {lr}
    adds r2, r0, #0
    movs r1, #0
    ldr r0, [r2]
    cmp r0, #0xc
    bhi lbl_08058078
    lsls r0, r0, #2
    ldr r1, lbl_08057f94 @ =lbl_08057f98
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08057f94: .4byte lbl_08057f98
lbl_08057f98: @ jump table
    .4byte lbl_0805804a @ case 0
    .4byte lbl_08057fcc @ case 1
    .4byte lbl_08057fd4 @ case 2
    .4byte lbl_08057fe4 @ case 3
    .4byte lbl_08057ff8 @ case 4
    .4byte lbl_0805800a @ case 5
    .4byte lbl_0805801e @ case 6
    .4byte lbl_08058034 @ case 7
    .4byte lbl_0805804e @ case 8
    .4byte lbl_08058058 @ case 9
    .4byte lbl_08058062 @ case 10
    .4byte lbl_0805806e @ case 11
    .4byte lbl_0805804a @ case 12
lbl_08057fcc:
    ldr r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x11
    b lbl_08058076
lbl_08057fd4:
    ldr r1, [r2, #8]
    ldr r0, [r2, #4]
    cmp r1, r0
    blt lbl_0805804a
    ldr r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x11
    b lbl_08058076
lbl_08057fe4:
    ldr r0, [r2, #4]
    movs r1, #0x3f
    subs r1, r1, r0
    ldr r0, [r2, #8]
    cmp r0, r1
    blt lbl_0805804a
    ldr r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x11
    b lbl_08058076
lbl_08057ff8:
    ldr r0, [r2, #4]
    asrs r0, r0, #1
    ldr r1, [r2, #8]
    cmp r1, r0
    blt lbl_0805804a
    ldr r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x11
    b lbl_08058076
lbl_0805800a:
    ldr r0, [r2, #4]
    adds r0, #0x3f
    asrs r0, r0, #1
    ldr r1, [r2, #8]
    cmp r1, r0
    blt lbl_0805804a
    ldr r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x11
    b lbl_08058076
lbl_0805801e:
    ldr r0, [r2, #4]
    asrs r0, r0, #1
    movs r1, #0x3f
    subs r1, r1, r0
    ldr r0, [r2, #8]
    cmp r0, r1
    blt lbl_0805804a
    ldr r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x11
    b lbl_08058076
lbl_08058034:
    ldr r0, [r2, #4]
    movs r1, #0x3f
    subs r1, r1, r0
    asrs r1, r1, #1
    ldr r0, [r2, #8]
    cmp r0, r1
    blt lbl_0805804a
    ldr r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x11
    b lbl_08058076
lbl_0805804a:
    ldr r1, [r2]
    b lbl_08058078
lbl_0805804e:
    ldr r0, [r2, #0xc]
    cmp r0, #1
    ble lbl_0805806e
    movs r0, #0
    b lbl_08058068
lbl_08058058:
    ldr r0, [r2, #0xc]
    cmp r0, #1
    bgt lbl_0805806e
    movs r0, #0
    b lbl_08058068
lbl_08058062:
    ldr r0, [r2, #0xc]
    cmp r0, #0
    bne lbl_0805806e
lbl_08058068:
    str r0, [r2]
    movs r1, #0
    b lbl_08058078
lbl_0805806e:
    movs r0, #1
    str r0, [r2]
    movs r1, #0x80
    lsls r1, r1, #0x11
lbl_08058076:
    orrs r1, r0
lbl_08058078:
    adds r0, r1, #0
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start check_hazard_at_pos
check_hazard_at_pos: @ 0x08058080
    push {r4, lr}
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    lsls r1, r1, #0x10
    ldr r3, lbl_080580a8 @ =0x030000dc
    movs r2, #0
    strh r2, [r3]
    strh r2, [r3, #2]
    lsrs r3, r0, #0x16
    lsrs r2, r1, #0x16
    ldr r0, lbl_080580ac @ =0x0300009c
    ldrh r1, [r0, #0x1e]
    cmp r3, r1
    bhs lbl_080580a2
    ldrh r0, [r0, #0x1c]
    cmp r2, r0
    blo lbl_080580b0
lbl_080580a2:
    movs r0, #0
    b lbl_080580ba
    .align 2, 0
lbl_080580a8: .4byte 0x030000dc
lbl_080580ac: .4byte 0x0300009c
lbl_080580b0:
    adds r0, r4, #0
    adds r1, r3, #0
    movs r3, #0
    bl check_current_affecting_hazard_and_very_special_clipdata
lbl_080580ba:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start check_current_affecting_hazard_and_very_special_clipdata
check_current_affecting_hazard_and_very_special_clipdata: @ 0x080580c0
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    lsls r3, r3, #0x18
    lsrs r6, r3, #0x18
    ldr r4, lbl_08058100 @ =0x03005450
    ldr r3, lbl_08058104 @ =0x0300009c
    ldrh r0, [r3, #0x1c]
    muls r0, r1, r0
    adds r0, r0, r2
    ldr r1, [r3, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    ldr r1, [r4, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r5, [r0]
    cmp r5, #0
    beq lbl_0805810c
    cmp r5, #0xf
    bgt lbl_0805810c
    ldr r1, lbl_08058108 @ =0x083458e4
    lsls r0, r5, #1
    adds r0, r0, r1
    ldrh r4, [r0]
    b lbl_0805810e
    .align 2, 0
lbl_08058100: .4byte 0x03005450
lbl_08058104: .4byte 0x0300009c
lbl_08058108: .4byte 0x083458e4
lbl_0805810c:
    movs r4, #0
lbl_0805810e:
    cmp r6, #0
    bne lbl_0805812c
    subs r0, r4, #1
    cmp r0, #1
    bhi lbl_0805812c
    ldr r0, lbl_08058144 @ =0x030013d4
    ldrb r0, [r0]
    cmp r0, #0x1d
    beq lbl_0805812c
    adds r0, r4, #0
    bl check_cant_use_elevator
    cmp r0, #0
    beq lbl_0805812c
    movs r4, #0
lbl_0805812c:
    ldr r0, lbl_08058148 @ =0x030000dc
    strh r4, [r0]
    movs r4, #0
    adds r2, r5, #0
    subs r2, #0x40
    adds r5, r0, #0
    cmp r2, #3
    bhi lbl_08058150
    ldr r1, lbl_0805814c @ =0x08345924
    lsls r0, r2, #1
    adds r0, r0, r1
    b lbl_0805818a
    .align 2, 0
lbl_08058144: .4byte 0x030013d4
lbl_08058148: .4byte 0x030000dc
lbl_0805814c: .4byte 0x08345924
lbl_08058150:
    ldr r1, lbl_0805817c @ =0x030000bc
    ldrb r0, [r1, #1]
    cmp r0, #0
    beq lbl_0805818c
    ldrb r0, [r1, #0x14]
    cmp r0, #0
    beq lbl_0805818c
    cmp r0, #7
    bhi lbl_0805818c
    ldr r3, lbl_08058180 @ =0x08345904
    lsls r1, r0, #2
    adds r0, r3, #2
    adds r2, r1, r0
    ldrh r0, [r2]
    cmp r0, #0
    beq lbl_08058188
    ldr r0, lbl_08058184 @ =0x0300006c
    ldrh r0, [r0]
    cmp r0, r7
    bhi lbl_08058188
    ldrh r4, [r2]
    b lbl_0805818c
    .align 2, 0
lbl_0805817c: .4byte 0x030000bc
lbl_08058180: .4byte 0x08345904
lbl_08058184: .4byte 0x0300006c
lbl_08058188:
    adds r0, r1, r3
lbl_0805818a:
    ldrh r4, [r0]
lbl_0805818c:
    strh r4, [r5, #2]
    ldrh r0, [r5]
    lsls r0, r0, #0x10
    ldrh r1, [r5, #2]
    orrs r0, r1
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start check_cant_use_elevator
check_cant_use_elevator: @ 0x0805819c
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    ldr r0, lbl_080581e0 @ =0x03000198
    movs r1, #0
    strb r1, [r0, #2]
    movs r2, #0
    strh r1, [r0]
    strb r2, [r0, #3]
    movs r4, #0
    movs r5, #8
    ldr r0, lbl_080581e4 @ =0x03000054
    mov sb, r0
    ldr r1, lbl_080581e8 @ =0x08345934
    mov r8, r1
    mov r6, r8
    adds r6, #0x44
    movs r7, #0x40
lbl_080581c2:
    ldr r0, lbl_080581e4 @ =0x03000054
    ldr r1, lbl_080581e8 @ =0x08345934
    adds r1, r7, r1
    ldrb r0, [r0]
    ldrb r2, [r1]
    cmp r0, r2
    bne lbl_080581f0
    ldr r0, lbl_080581ec @ =0x03000055
    ldrb r0, [r0]
    ldrb r1, [r1, #1]
    cmp r0, r1
    bne lbl_080581f0
    movs r4, #1
    b lbl_0805820c
    .align 2, 0
lbl_080581e0: .4byte 0x03000198
lbl_080581e4: .4byte 0x03000054
lbl_080581e8: .4byte 0x08345934
lbl_080581ec: .4byte 0x03000055
lbl_080581f0:
    mov r1, sb
    ldrb r0, [r1]
    ldrb r2, [r6]
    cmp r0, r2
    bne lbl_08058208
    ldr r0, lbl_08058228 @ =0x03000055
    ldrb r0, [r0]
    ldrb r1, [r6, #1]
    cmp r0, r1
    bne lbl_08058208
    movs r4, #1
    rsbs r4, r4, #0
lbl_08058208:
    cmp r4, #0
    beq lbl_08058240
lbl_0805820c:
    cmp r5, #8
    bne lbl_0805822e
    movs r0, #3
    movs r1, #0x41
    bl EventFunction
    cmp r0, #0
    beq lbl_0805822c
    mov r6, r8
    adds r6, #0x34
    movs r7, #0x30
    movs r5, #6
    b lbl_0805822e
    .align 2, 0
lbl_08058228: .4byte 0x03000055
lbl_0805822c:
    movs r4, #0
lbl_0805822e:
    cmp r4, #0
    beq lbl_08058240
    ldr r0, lbl_0805823c @ =0x03000198
    strb r5, [r0, #2]
    strb r4, [r0, #3]
    b lbl_0805824a
    .align 2, 0
lbl_0805823c: .4byte 0x03000198
lbl_08058240:
    subs r6, #8
    subs r7, #8
    subs r5, #1
    cmp r5, #0
    bgt lbl_080581c2
lbl_0805824a:
    movs r0, #0
    cmp r4, #0
    bne lbl_08058252
    movs r0, #1
lbl_08058252:
    adds r4, r0, #0
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start check_for_ground_effect_clipdata
check_for_ground_effect_clipdata: @ 0x08058260
    push {lr}
    lsls r0, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r3, r0, #0x16
    lsrs r1, r1, #0x16
    ldr r2, lbl_0805827c @ =0x0300009c
    ldrh r0, [r2, #0x1e]
    cmp r3, r0
    bge lbl_08058278
    ldrh r0, [r2, #0x1c]
    cmp r1, r0
    blt lbl_08058280
lbl_08058278:
    movs r0, #0
    b lbl_080582c0
    .align 2, 0
lbl_0805827c: .4byte 0x0300009c
lbl_08058280:
    muls r0, r3, r0
    adds r0, r0, r1
    ldr r1, [r2, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    movs r0, #0x80
    lsls r0, r0, #3
    ands r0, r2
    cmp r0, #0
    beq lbl_0805829a
    movs r2, #0
    b lbl_080582a4
lbl_0805829a:
    ldr r0, lbl_080582b4 @ =0x03005450
    ldr r1, [r0, #8]
    lsls r0, r2, #1
    adds r0, r0, r1
    ldrh r2, [r0]
lbl_080582a4:
    adds r1, r2, #0
    subs r1, #0x50
    cmp r1, #4
    bhi lbl_080582bc
    ldr r0, lbl_080582b8 @ =0x0834592c
    adds r0, r1, r0
    ldrb r2, [r0]
    b lbl_080582be
    .align 2, 0
lbl_080582b4: .4byte 0x03005450
lbl_080582b8: .4byte 0x0834592c
lbl_080582bc:
    movs r2, #0
lbl_080582be:
    adds r0, r2, #0
lbl_080582c0:
    pop {r1}
    bx r1

    thumb_func_start process_scrolls
process_scrolls: @ 0x080582c4
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0
    bl update_gCurrentScrolls
    ldr r0, lbl_08058320 @ =0x03000144
    ldrh r7, [r0]
    ldrh r6, [r0, #2]
    ldr r4, lbl_08058324 @ =0x03000118
    ldrb r0, [r4]
    cmp r0, #0
    beq lbl_080582ee
    adds r0, r4, #0
    adds r1, r5, #0
    bl process_scroll_x
    adds r7, r0, #0
    adds r0, r4, #0
    adds r1, r5, #0
    bl process_scroll_y
    adds r6, r0, #0
lbl_080582ee:
    adds r4, #0xc
    ldrb r0, [r4]
    cmp r0, #0
    beq lbl_0805830e
    adds r0, r4, #0
    adds r1, r5, #0
    bl process_scroll_x
    adds r0, r7, r0
    asrs r7, r0, #1
    adds r0, r4, #0
    adds r1, r5, #0
    bl process_scroll_y
    adds r0, r6, r0
    asrs r6, r0, #1
lbl_0805830e:
    lsls r0, r7, #0x10
    lsrs r0, r0, #0x10
    lsls r1, r6, #0x10
    lsrs r1, r1, #0x10
    bl ScrollScreen
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08058320: .4byte 0x03000144
lbl_08058324: .4byte 0x03000118

    thumb_func_start ScrollScreen
ScrollScreen: @ 0x08058328
    push {r4, r5, lr}
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r2, r1, #0x10
    ldr r1, lbl_08058364 @ =0x03000144
    strh r4, [r1]
    strh r2, [r1, #2]
    ldr r0, lbl_08058368 @ =0x03000c72
    movs r3, #0
    ldrsh r0, [r0, r3]
    adds r5, r1, #0
    cmp r0, #0
    beq lbl_080583dc
    ldr r0, lbl_0805836c @ =0x030013ba
    adds r3, r0, #0
    ldrh r0, [r3]
    cmp r2, r0
    beq lbl_08058390
    ldrh r0, [r3]
    subs r1, r2, r0
    cmp r1, #0
    ble lbl_08058374
    ldr r0, lbl_08058370 @ =0x03005714
    movs r2, #6
    ldrsh r0, [r0, r2]
    cmp r0, r1
    bge lbl_08058380
    b lbl_0805837e
    .align 2, 0
lbl_08058364: .4byte 0x03000144
lbl_08058368: .4byte 0x03000c72
lbl_0805836c: .4byte 0x030013ba
lbl_08058370: .4byte 0x03005714
lbl_08058374:
    ldr r0, lbl_0805838c @ =0x03005714
    movs r2, #4
    ldrsh r0, [r0, r2]
    cmp r0, r1
    ble lbl_08058380
lbl_0805837e:
    adds r1, r0, #0
lbl_08058380:
    strb r1, [r5, #5]
    ldrh r0, [r3]
    adds r0, r0, r1
    strh r0, [r3]
    b lbl_08058394
    .align 2, 0
lbl_0805838c: .4byte 0x03005714
lbl_08058390:
    movs r0, #0
    strb r0, [r5, #5]
lbl_08058394:
    ldr r0, lbl_080583b4 @ =0x030013b8
    adds r2, r0, #0
    ldrh r3, [r2]
    cmp r4, r3
    beq lbl_080583d8
    ldrh r0, [r2]
    subs r1, r4, r0
    cmp r1, #0
    ble lbl_080583bc
    ldr r0, lbl_080583b8 @ =0x03005714
    movs r3, #2
    ldrsh r0, [r0, r3]
    cmp r0, r1
    bge lbl_080583c8
    b lbl_080583c6
    .align 2, 0
lbl_080583b4: .4byte 0x030013b8
lbl_080583b8: .4byte 0x03005714
lbl_080583bc:
    ldr r0, lbl_080583d4 @ =0x03005714
    movs r3, #0
    ldrsh r0, [r0, r3]
    cmp r0, r1
    ble lbl_080583c8
lbl_080583c6:
    adds r1, r0, #0
lbl_080583c8:
    strb r1, [r5, #4]
    ldrh r0, [r2]
    adds r0, r0, r1
    strh r0, [r2]
    b lbl_080583dc
    .align 2, 0
lbl_080583d4: .4byte 0x03005714
lbl_080583d8:
    movs r0, #0
    strb r0, [r5, #4]
lbl_080583dc:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start process_scroll_x
process_scroll_x: @ 0x080583e4
    push {r4, lr}
    adds r3, r0, #0
    ldrh r1, [r1]
    ldrh r2, [r3, #4]
    movs r4, #0xf0
    lsls r4, r4, #1
    adds r0, r2, r4
    cmp r1, r0
    bge lbl_080583fa
    adds r0, r2, #0
    b lbl_08058418
lbl_080583fa:
    ldrh r2, [r3, #2]
    ldr r3, lbl_0805840c @ =0xfffffe20
    adds r0, r2, r3
    cmp r1, r0
    ble lbl_08058414
    ldr r4, lbl_08058410 @ =0xfffffc40
    adds r0, r2, r4
    b lbl_08058418
    .align 2, 0
lbl_0805840c: .4byte 0xfffffe20
lbl_08058410: .4byte 0xfffffc40
lbl_08058414:
    ldr r2, lbl_08058420 @ =0xfffffe20
    adds r0, r1, r2
lbl_08058418:
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08058420: .4byte 0xfffffe20

    thumb_func_start process_scroll_y
process_scroll_y: @ 0x08058424
    push {r4, lr}
    adds r2, r0, #0
    ldrb r0, [r2]
    cmp r0, #2
    bne lbl_08058468
    ldrh r1, [r1, #2]
    ldrh r3, [r2, #6]
    movs r4, #0xc0
    lsls r4, r4, #1
    adds r0, r3, r4
    cmp r1, r0
    blt lbl_0805844e
    ldrh r2, [r2, #8]
    ldr r4, lbl_08058454 @ =0xffffff00
    adds r0, r2, r4
    cmp r1, r0
    ble lbl_0805845c
    ldr r1, lbl_08058458 @ =0xfffffd80
    adds r0, r2, r1
    cmp r0, r3
    bge lbl_0805846e
lbl_0805844e:
    adds r0, r3, #0
    b lbl_0805846e
    .align 2, 0
lbl_08058454: .4byte 0xffffff00
lbl_08058458: .4byte 0xfffffd80
lbl_0805845c:
    ldr r2, lbl_08058464 @ =0xfffffe80
    adds r0, r1, r2
    b lbl_0805846e
    .align 2, 0
lbl_08058464: .4byte 0xfffffe80
lbl_08058468:
    ldrh r0, [r2, #8]
    ldr r4, lbl_08058474 @ =0xfffffd80
    adds r0, r0, r4
lbl_0805846e:
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08058474: .4byte 0xfffffd80

    thumb_func_start load_scrolls
load_scrolls: @ 0x08058478
    push {r4, r5, lr}
    ldr r1, lbl_0805849c @ =0x0875fd28
    ldr r0, lbl_080584a0 @ =0x03000054
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r2, [r0]
    ldr r3, [r2]
    ldr r0, lbl_080584a4 @ =0x03000055
    ldrb r1, [r3]
    adds r5, r0, #0
    ldr r4, lbl_080584a8 @ =0x03005708
    ldrb r0, [r5]
    cmp r1, r0
    bne lbl_080584b0
    str r3, [r4]
    b lbl_080584c6
    .align 2, 0
lbl_0805849c: .4byte 0x0875fd28
lbl_080584a0: .4byte 0x03000054
lbl_080584a4: .4byte 0x03000055
lbl_080584a8: .4byte 0x03005708
lbl_080584ac:
    str r1, [r4]
    b lbl_080584cc
lbl_080584b0:
    ldr r1, [r2]
    ldrb r0, [r1]
    cmp r0, #0xff
    beq lbl_080584ac
    adds r2, #4
    ldr r1, [r2]
    ldrb r0, [r1]
    ldrb r3, [r5]
    cmp r0, r3
    bne lbl_080584b0
    str r1, [r4]
lbl_080584c6:
    ldr r1, lbl_080584d4 @ =0x030000bc
    movs r0, #3
    strb r0, [r1, #5]
lbl_080584cc:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080584d4: .4byte 0x030000bc

    thumb_func_start update_gCurrentScrolls
update_gCurrentScrolls: @ 0x080584d8
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #0x10
    ldr r2, lbl_08058554 @ =0x03000118
    movs r1, #0
    strb r1, [r2]
    strb r1, [r2, #0xc]
    ldrh r1, [r0]
    lsrs r1, r1, #6
    mov r8, r1
    ldrh r0, [r0, #2]
    subs r0, #1
    lsls r0, r0, #0xa
    lsrs r0, r0, #0x10
    mov ip, r0
    ldr r0, lbl_08058558 @ =0x03005708
    ldr r0, [r0]
    adds r0, #1
    ldrb r5, [r0]
    adds r4, r0, #1
    adds r7, r2, #0
    cmp r5, #0
    bne lbl_0805850c
    b lbl_08058616
lbl_0805850c:
    ldr r6, lbl_0805855c @ =0x0300009c
    mov sb, r7
lbl_08058510:
    mov r0, sb
    adds r0, #0x18
    cmp r2, r0
    bne lbl_0805851a
    b lbl_0805862c
lbl_0805851a:
    movs r0, #0
    str r0, [sp]
    movs r0, #1
    str r0, [sp, #4]
    movs r0, #2
    str r0, [sp, #8]
    movs r0, #3
    str r0, [sp, #0xc]
    ldrb r0, [r4, #4]
    cmp r0, #0xff
    beq lbl_08058560
    ldrb r0, [r4, #7]
    cmp r0, #0xff
    beq lbl_08058560
    ldrb r1, [r4, #5]
    ldrh r0, [r6, #0x1c]
    muls r0, r1, r0
    ldrb r1, [r4, #4]
    adds r3, r0, r1
    ldr r1, [r6, #0x18]
    lsls r0, r3, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    cmp r0, #0
    bne lbl_08058586
    ldrb r0, [r4, #6]
    cmp r0, #0xff
    beq lbl_08058586
    b lbl_0805857c
    .align 2, 0
lbl_08058554: .4byte 0x03000118
lbl_08058558: .4byte 0x03005708
lbl_0805855c: .4byte 0x0300009c
lbl_08058560:
    ldr r0, lbl_0805863c @ =0x030013d4
    ldrb r0, [r0]
    cmp r0, #0x1d
    bne lbl_08058586
    ldrb r0, [r4, #7]
    cmp r0, #0xff
    beq lbl_08058586
    ldrb r0, [r4, #6]
    subs r0, #2
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bhi lbl_08058586
    ldrb r0, [r4, #6]
lbl_0805857c:
    lsls r0, r0, #2
    mov r3, sp
    adds r1, r3, r0
    movs r0, #7
    str r0, [r1]
lbl_08058586:
    ldr r0, [sp]
    adds r0, r4, r0
    ldrb r1, [r0]
    cmp r1, r8
    bhi lbl_0805860c
    ldr r0, [sp, #4]
    adds r0, r4, r0
    ldrb r0, [r0]
    cmp r8, r0
    bhi lbl_0805860c
    ldr r0, [sp, #8]
    adds r0, r4, r0
    ldrb r0, [r0]
    cmp r0, ip
    bhi lbl_0805860c
    ldr r0, [sp, #0xc]
    adds r0, r4, r0
    ldrb r0, [r0]
    cmp ip, r0
    bhi lbl_0805860c
    ldrb r0, [r2]
    cmp r0, #0
    bne lbl_0805860c
    lsls r0, r1, #6
    cmp r0, #0x80
    bge lbl_080585bc
    movs r0, #0x80
lbl_080585bc:
    strh r0, [r2, #4]
    ldrh r0, [r6, #0x1c]
    lsls r0, r0, #6
    adds r3, r0, #0
    subs r3, #0x80
    ldr r0, [sp, #4]
    adds r0, r4, r0
    ldrb r0, [r0]
    adds r0, #1
    lsls r0, r0, #6
    adds r1, r3, #0
    cmp r0, r3
    bge lbl_080585d8
    adds r1, r0, #0
lbl_080585d8:
    strh r1, [r2, #2]
    ldr r0, [sp, #8]
    adds r0, r4, r0
    ldrb r0, [r0]
    lsls r0, r0, #6
    cmp r0, #0x80
    bge lbl_080585e8
    movs r0, #0x80
lbl_080585e8:
    strh r0, [r2, #6]
    ldrh r0, [r6, #0x1e]
    lsls r0, r0, #6
    adds r3, r0, #0
    subs r3, #0x80
    ldr r0, [sp, #0xc]
    adds r0, r4, r0
    ldrb r0, [r0]
    adds r0, #1
    lsls r0, r0, #6
    adds r1, r3, #0
    cmp r0, r3
    bge lbl_08058604
    adds r1, r0, #0
lbl_08058604:
    strh r1, [r2, #8]
    movs r0, #2
    strb r0, [r2]
    adds r2, #0xc
lbl_0805860c:
    adds r4, #8
    subs r5, #1
    cmp r5, #0
    beq lbl_08058616
    b lbl_08058510
lbl_08058616:
    ldrb r0, [r7]
    cmp r0, #0
    bne lbl_0805862c
    ldrb r0, [r7, #0xc]
    cmp r0, #0
    bne lbl_0805862c
    strb r0, [r7]
    strh r0, [r7, #2]
    strh r0, [r7, #4]
    strh r0, [r7, #6]
    strh r0, [r7, #8]
lbl_0805862c:
    add sp, #0x10
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805863c: .4byte 0x030013d4

    thumb_func_start process_general_scrolling
process_general_scrolling: @ 0x08058640
    push {r4, r5, lr}
    sub sp, #4
    ldr r0, lbl_0805867c @ =0x03005520
    ldrb r0, [r0, #1]
    cmp r0, #0
    beq lbl_0805864e
    b lbl_0805881e
lbl_0805864e:
    ldr r0, lbl_08058680 @ =0x03000100
    ldrb r1, [r0]
    adds r4, r0, #0
    cmp r1, #0
    bne lbl_080586c8
    ldr r2, lbl_08058684 @ =0x030013d4
    ldrh r1, [r2, #0x14]
    adds r1, #1
    lsls r1, r1, #0x10
    ldrh r0, [r2, #0x12]
    orrs r0, r1
    str r0, [sp]
    ldrb r0, [r2]
    adds r1, r0, #0
    cmp r1, #0x15
    beq lbl_08058672
    cmp r1, #0x3d
    bne lbl_0805868c
lbl_08058672:
    ldr r1, lbl_08058688 @ =0x0300003e
    movs r0, #1
    strh r0, [r1]
    b lbl_080586f4
    .align 2, 0
lbl_0805867c: .4byte 0x03005520
lbl_08058680: .4byte 0x03000100
lbl_08058684: .4byte 0x030013d4
lbl_08058688: .4byte 0x0300003e
lbl_0805868c:
    subs r0, #0x1a
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bhi lbl_080586a4
    ldr r1, lbl_080586a0 @ =0x0300003e
    movs r0, #8
    strh r0, [r1]
    b lbl_080586f4
    .align 2, 0
lbl_080586a0: .4byte 0x0300003e
lbl_080586a4:
    cmp r1, #0x1c
    bne lbl_080586b4
    ldr r1, lbl_080586b0 @ =0x0300003e
    movs r0, #0x14
    strh r0, [r1]
    b lbl_080586f4
    .align 2, 0
lbl_080586b0: .4byte 0x0300003e
lbl_080586b4:
    ldr r1, lbl_080586c4 @ =0x0300003e
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_080586f4
    subs r0, #1
    strh r0, [r1]
    b lbl_080586f4
    .align 2, 0
lbl_080586c4: .4byte 0x0300003e
lbl_080586c8:
    cmp r1, #1
    bne lbl_080586d8
    ldrh r1, [r4, #4]
    lsls r1, r1, #0x10
    ldrh r0, [r4, #2]
    orrs r0, r1
    str r0, [sp]
    b lbl_080586f4
lbl_080586d8:
    ldr r2, lbl_08058740 @ =0x030013d4
    ldrh r1, [r2, #0x12]
    ldrh r0, [r4, #2]
    adds r1, r1, r0
    ldrh r0, [r4, #4]
    adds r0, #1
    ldrh r2, [r2, #0x14]
    adds r0, r0, r2
    lsls r0, r0, #0xf
    lsrs r0, r0, #0x10
    lsls r0, r0, #0x10
    lsrs r1, r1, #1
    orrs r1, r0
    str r1, [sp]
lbl_080586f4:
    ldr r2, [sp]
    lsrs r1, r2, #0x10
    movs r0, #0x80
    lsls r0, r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08058708
    ldr r0, lbl_08058744 @ =0x0000ffff
    ands r2, r0
    str r2, [sp]
lbl_08058708:
    ldr r3, lbl_08058748 @ =0x03005714
    ldr r2, lbl_0805874c @ =0x08345988
    ldr r0, [r2]
    ldr r1, [r2, #4]
    str r0, [r3]
    str r1, [r3, #4]
    ldrb r0, [r4]
    adds r4, r3, #0
    cmp r0, #0
    bne lbl_080587a2
    ldr r0, lbl_08058750 @ =0x0300003e
    ldrh r0, [r0]
    cmp r0, #0
    bne lbl_0805879a
    ldr r2, lbl_08058740 @ =0x030013d4
    ldrh r1, [r2, #0x12]
    ldr r0, lbl_08058754 @ =0x03001600
    ldrh r0, [r0]
    subs r1, r1, r0
    cmp r1, #0
    ble lbl_08058758
    movs r5, #2
    ldrsh r0, [r3, r5]
    cmp r1, r0
    blt lbl_08058768
    adds r0, r1, #4
    strh r0, [r3, #2]
    b lbl_08058768
    .align 2, 0
lbl_08058740: .4byte 0x030013d4
lbl_08058744: .4byte 0x0000ffff
lbl_08058748: .4byte 0x03005714
lbl_0805874c: .4byte 0x08345988
lbl_08058750: .4byte 0x0300003e
lbl_08058754: .4byte 0x03001600
lbl_08058758:
    cmp r1, #0
    bge lbl_08058768
    movs r5, #0
    ldrsh r0, [r3, r5]
    cmp r1, r0
    bgt lbl_08058768
    subs r0, r1, #4
    strh r0, [r3]
lbl_08058768:
    ldrh r0, [r2, #0x14]
    ldr r1, lbl_08058784 @ =0x03001602
    ldrh r1, [r1]
    subs r1, r0, r1
    cmp r1, #0
    ble lbl_08058788
    movs r2, #6
    ldrsh r0, [r4, r2]
    cmp r1, r0
    blt lbl_080587a2
    adds r0, r1, #4
    strh r0, [r4, #6]
    b lbl_080587a2
    .align 2, 0
lbl_08058784: .4byte 0x03001602
lbl_08058788:
    cmp r1, #0
    bge lbl_080587a2
    movs r5, #4
    ldrsh r0, [r4, r5]
    cmp r1, r0
    bgt lbl_080587a2
    subs r0, r1, #4
    strh r0, [r4, #4]
    b lbl_080587a2
lbl_0805879a:
    ldr r0, [r2, #8]
    ldr r1, [r2, #0xc]
    str r0, [r3]
    str r1, [r3, #4]
lbl_080587a2:
    ldr r0, lbl_080587c4 @ =0x0300003d
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0805881e
    ldr r0, lbl_080587c8 @ =0x0300007f
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_080587d0
    ldr r0, lbl_080587cc @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #6
    bne lbl_080587d0
    mov r0, sp
    bl sub_08059008
    b lbl_080587ea
    .align 2, 0
lbl_080587c4: .4byte 0x0300003d
lbl_080587c8: .4byte 0x0300007f
lbl_080587cc: .4byte 0x03000c72
lbl_080587d0:
    ldr r0, lbl_080587e0 @ =0x030000bc
    ldrb r0, [r0, #5]
    cmp r0, #3
    bne lbl_080587e4
    mov r0, sp
    bl process_scrolls
    b lbl_080587ea
    .align 2, 0
lbl_080587e0: .4byte 0x030000bc
lbl_080587e4:
    mov r0, sp
    bl ScrollWithNoScrolls
lbl_080587ea:
    mov r0, sp
    bl ScrollBG2
    ldr r0, lbl_08058828 @ =0x030054f4
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08058808
    ldr r0, lbl_0805882c @ =0x030000bc
    ldrb r1, [r0, #1]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08058808
    bl automatic_scroll_bg0
lbl_08058808:
    mov r0, sp
    bl update_effect_and_haze_pos
    bl ScrollBG3
    ldr r0, lbl_08058830 @ =0x030054ec
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0805881e
    bl automatic_scroll_bg3
lbl_0805881e:
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08058828: .4byte 0x030054f4
lbl_0805882c: .4byte 0x030000bc
lbl_08058830: .4byte 0x030054ec

    thumb_func_start ScrollWithNoScrolls
ScrollWithNoScrolls: @ 0x08058834
    push {r4, lr}
    adds r4, r0, #0
    bl ScrollWithNoScrollsX
    adds r0, r4, #0
    bl ScrollWithNoScrollsY
    pop {r4}
    pop {r0}
    bx r0

    thumb_func_start ScrollWithNoScrollsY
ScrollWithNoScrollsY: @ 0x08058848
    push {r4, lr}
    adds r4, r0, #0
    ldr r0, lbl_08058860 @ =0x03000100
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0805886c
    ldr r2, lbl_08058864 @ =0x030013d4
    ldrh r1, [r2, #0x14]
    ldr r0, lbl_08058868 @ =0x03001602
    ldrh r0, [r0]
    subs r1, r1, r0
    b lbl_08058870
    .align 2, 0
lbl_08058860: .4byte 0x03000100
lbl_08058864: .4byte 0x030013d4
lbl_08058868: .4byte 0x03001602
lbl_0805886c:
    movs r1, #0
    ldr r2, lbl_08058898 @ =0x030013d4
lbl_08058870:
    ldrb r2, [r2]
    adds r0, r2, #0
    subs r0, #0x11
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bls lbl_08058882
    cmp r2, #0x1c
    bne lbl_080588a4
lbl_08058882:
    ldr r1, lbl_0805889c @ =0x03005515
    movs r0, #0
    ldrsb r0, [r1, r0]
    adds r0, #4
    adds r3, r1, #0
    cmp r0, #0x1f
    bgt lbl_080588a0
    ldrb r0, [r3]
    adds r0, #2
    b lbl_080588c6
    .align 2, 0
lbl_08058898: .4byte 0x030013d4
lbl_0805889c: .4byte 0x03005515
lbl_080588a0:
    movs r0, #0x20
    b lbl_080588c6
lbl_080588a4:
    ldr r3, lbl_080588c0 @ =0x03005515
    cmp r1, #0
    bge lbl_080588c8
    movs r0, #0
    ldrsb r0, [r3, r0]
    adds r0, r0, r1
    cmp r0, #0
    ble lbl_080588c4
    lsrs r0, r1, #0x1f
    adds r0, r1, r0
    asrs r0, r0, #1
    ldrb r1, [r3]
    adds r0, r0, r1
    b lbl_080588c6
    .align 2, 0
lbl_080588c0: .4byte 0x03005515
lbl_080588c4:
    movs r0, #0
lbl_080588c6:
    strb r0, [r3]
lbl_080588c8:
    ldrh r2, [r4, #2]
    movs r1, #0
    ldrsb r1, [r3, r1]
    movs r0, #0x80
    lsls r0, r0, #2
    subs r0, r0, r1
    cmp r2, r0
    bge lbl_080588dc
    movs r3, #0x80
    b lbl_080588fe
lbl_080588dc:
    ldr r0, lbl_080588f0 @ =0x0300009c
    ldrh r0, [r0, #0xe]
    lsls r0, r0, #6
    ldr r3, lbl_080588f4 @ =0xfffffe80
    adds r0, r0, r3
    subs r0, r0, r1
    cmp r2, r0
    ble lbl_080588f8
    adds r0, r0, r3
    b lbl_080588fc
    .align 2, 0
lbl_080588f0: .4byte 0x0300009c
lbl_080588f4: .4byte 0xfffffe80
lbl_080588f8:
    ldr r4, lbl_08058918 @ =0xfffffe80
    adds r0, r2, r4
lbl_080588fc:
    adds r3, r0, r1
lbl_080588fe:
    ldr r2, lbl_0805891c @ =0x03000144
    strh r3, [r2, #2]
    ldr r1, lbl_08058920 @ =0x030013ba
    ldrh r0, [r1]
    subs r3, r3, r0
    cmp r3, #0
    ble lbl_08058928
    ldr r0, lbl_08058924 @ =0x03005714
    movs r4, #6
    ldrsh r0, [r0, r4]
    cmp r0, r3
    bge lbl_08058934
    b lbl_08058932
    .align 2, 0
lbl_08058918: .4byte 0xfffffe80
lbl_0805891c: .4byte 0x03000144
lbl_08058920: .4byte 0x030013ba
lbl_08058924: .4byte 0x03005714
lbl_08058928:
    ldr r0, lbl_08058944 @ =0x03005714
    movs r4, #4
    ldrsh r0, [r0, r4]
    cmp r3, r0
    bge lbl_08058934
lbl_08058932:
    adds r3, r0, #0
lbl_08058934:
    strb r3, [r2, #5]
    ldrh r0, [r1]
    adds r0, r0, r3
    strh r0, [r1]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08058944: .4byte 0x03005714

    thumb_func_start ScrollWithNoScrollsX
ScrollWithNoScrollsX: @ 0x08058948
    push {r4, lr}
    adds r2, r0, #0
    movs r3, #0
    ldr r0, lbl_08058970 @ =0x03000100
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08058988
    ldr r0, lbl_08058974 @ =0x03001588
    adds r0, #0x56
    ldrb r0, [r0]
    cmp r0, #3
    bne lbl_08058988
    ldr r0, lbl_08058978 @ =0x030013d4
    ldrh r1, [r0, #0xe]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0805897c
    movs r3, #0x80
    b lbl_08058988
    .align 2, 0
lbl_08058970: .4byte 0x03000100
lbl_08058974: .4byte 0x03001588
lbl_08058978: .4byte 0x030013d4
lbl_0805897c:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08058988
    movs r3, #0x80
    rsbs r3, r3, #0
lbl_08058988:
    ldr r0, lbl_080589a0 @ =0x03005516
    strh r3, [r0]
    ldrh r2, [r2]
    movs r3, #0
    ldrsh r1, [r0, r3]
    movs r0, #0x98
    lsls r0, r0, #2
    subs r0, r0, r1
    cmp r2, r0
    bge lbl_080589a4
    movs r3, #0x80
    b lbl_080589ce
    .align 2, 0
lbl_080589a0: .4byte 0x03005516
lbl_080589a4:
    ldr r0, lbl_080589bc @ =0x0300009c
    ldrh r0, [r0, #0xc]
    lsls r0, r0, #6
    ldr r4, lbl_080589c0 @ =0xfffffda0
    adds r0, r0, r4
    subs r0, r0, r1
    cmp r2, r0
    ble lbl_080589c8
    ldr r2, lbl_080589c4 @ =0xfffffe20
    adds r0, r0, r2
    b lbl_080589cc
    .align 2, 0
lbl_080589bc: .4byte 0x0300009c
lbl_080589c0: .4byte 0xfffffda0
lbl_080589c4: .4byte 0xfffffe20
lbl_080589c8:
    ldr r3, lbl_080589e8 @ =0xfffffe20
    adds r0, r2, r3
lbl_080589cc:
    adds r3, r0, r1
lbl_080589ce:
    ldr r2, lbl_080589ec @ =0x03000144
    strh r3, [r2]
    ldr r1, lbl_080589f0 @ =0x030013b8
    ldrh r0, [r1]
    subs r3, r3, r0
    cmp r3, #0
    ble lbl_080589f8
    ldr r0, lbl_080589f4 @ =0x03005714
    movs r4, #2
    ldrsh r0, [r0, r4]
    cmp r0, r3
    bge lbl_08058a04
    b lbl_08058a02
    .align 2, 0
lbl_080589e8: .4byte 0xfffffe20
lbl_080589ec: .4byte 0x03000144
lbl_080589f0: .4byte 0x030013b8
lbl_080589f4: .4byte 0x03005714
lbl_080589f8:
    ldr r0, lbl_08058a14 @ =0x03005714
    movs r4, #0
    ldrsh r0, [r0, r4]
    cmp r3, r0
    bge lbl_08058a04
lbl_08058a02:
    adds r3, r0, #0
lbl_08058a04:
    strb r3, [r2, #4]
    ldrh r0, [r1]
    adds r0, r0, r3
    strh r0, [r1]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08058a14: .4byte 0x03005714

    thumb_func_start update_effect_and_haze_pos
update_effect_and_haze_pos: @ 0x08058a18
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0
    movs r7, #0
    ldr r1, lbl_08058a4c @ =0x030000bc
    ldrb r2, [r1, #1]
    movs r0, #0x10
    ands r0, r2
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    mov ip, r1
    cmp r3, #0
    beq lbl_08058a64
    cmp r2, #0x11
    beq lbl_08058a36
    b lbl_08058c4e
lbl_08058a36:
    ldr r1, lbl_08058a50 @ =0x030013b4
    ldr r0, lbl_08058a54 @ =0x030013b8
    ldrh r0, [r0]
    lsrs r0, r0, #1
    strh r0, [r1]
    ldr r1, lbl_08058a58 @ =0x030013b6
    ldr r0, lbl_08058a5c @ =0x030013ba
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r6, lbl_08058a60 @ =0x0300006e
    b lbl_08058c64
    .align 2, 0
lbl_08058a4c: .4byte 0x030000bc
lbl_08058a50: .4byte 0x030013b4
lbl_08058a54: .4byte 0x030013b8
lbl_08058a58: .4byte 0x030013b6
lbl_08058a5c: .4byte 0x030013ba
lbl_08058a60: .4byte 0x0300006e
lbl_08058a64:
    mov r0, ip
    ldrh r1, [r0, #0x12]
    ldr r0, lbl_08058ab0 @ =0x0000ffff
    cmp r1, r0
    bne lbl_08058a70
    b lbl_08058b80
lbl_08058a70:
    ldr r1, lbl_08058ab4 @ =0x030013b4
    ldr r0, lbl_08058ab8 @ =0x030013b8
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r2, lbl_08058abc @ =0x0300006e
    movs r1, #0
    ldrsh r0, [r2, r1]
    mov r3, ip
    ldrh r3, [r3, #0x12]
    adds r0, r0, r3
    ldr r1, lbl_08058ac0 @ =0x030013ba
    ldrh r1, [r1]
    subs r0, r0, r1
    asrs r5, r0, #2
    ldr r0, lbl_08058ac4 @ =0x0300551c
    ldrb r1, [r0]
    adds r6, r2, #0
    adds r2, r0, #0
    cmp r1, #1
    bne lbl_08058af8
    ldr r0, lbl_08058ac8 @ =0x03001606
    ldrh r0, [r0]
    ldr r3, lbl_08058acc @ =0x0875fd54
    cmp r0, #0
    bne lbl_08058aec
    ldrb r1, [r2, #2]
    movs r0, #2
    ldrsb r0, [r2, r0]
    cmp r0, #0
    beq lbl_08058ad0
    subs r0, r1, #1
    b lbl_08058aea
    .align 2, 0
lbl_08058ab0: .4byte 0x0000ffff
lbl_08058ab4: .4byte 0x030013b4
lbl_08058ab8: .4byte 0x030013b8
lbl_08058abc: .4byte 0x0300006e
lbl_08058ac0: .4byte 0x030013ba
lbl_08058ac4: .4byte 0x0300551c
lbl_08058ac8: .4byte 0x03001606
lbl_08058acc: .4byte 0x0875fd54
lbl_08058ad0:
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #7
    bls lbl_08058ae0
    strb r7, [r2, #1]
lbl_08058ae0:
    ldrb r0, [r2, #1]
    lsls r0, r0, #1
    adds r1, r3, #1
    adds r0, r0, r1
    ldrb r0, [r0]
lbl_08058aea:
    strb r0, [r2, #2]
lbl_08058aec:
    ldrb r0, [r2, #1]
    lsls r0, r0, #1
    adds r0, r0, r3
    movs r1, #0
    ldrsb r1, [r0, r1]
    b lbl_08058afa
lbl_08058af8:
    movs r1, #0
lbl_08058afa:
    adds r0, r1, #0
    subs r0, #8
    lsls r0, r0, #2
    strb r0, [r2, #3]
    adds r5, r5, r1
    cmp r5, #0
    bge lbl_08058b3c
    ldr r2, lbl_08058b30 @ =0x03000088
    ldrh r3, [r2, #0x12]
    movs r4, #0xc0
    lsls r4, r4, #8
    adds r0, r4, #0
    ands r0, r3
    cmp r0, #0
    beq lbl_08058b62
    ldrh r1, [r2, #0xa]
    adds r0, r4, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08058b62
    ldr r0, lbl_08058b34 @ =0x00003fff
    ands r0, r3
    strh r0, [r2, #0x12]
    ldr r1, lbl_08058b38 @ =0x04000008
    strh r0, [r1]
    b lbl_08058b62
    .align 2, 0
lbl_08058b30: .4byte 0x03000088
lbl_08058b34: .4byte 0x00003fff
lbl_08058b38: .4byte 0x04000008
lbl_08058b3c:
    ldr r2, lbl_08058b74 @ =0x03000088
    ldrh r3, [r2, #0x12]
    movs r1, #0xc0
    lsls r1, r1, #8
    adds r0, r1, #0
    ands r0, r3
    cmp r0, #0
    bne lbl_08058b62
    ldrh r0, [r2, #0xa]
    ands r1, r0
    cmp r1, #0
    beq lbl_08058b62
    adds r0, r1, #0
    orrs r0, r3
    strh r0, [r2, #0x12]
    ldr r2, lbl_08058b78 @ =0x04000008
    ldrh r1, [r2]
    orrs r0, r1
    strh r0, [r2]
lbl_08058b62:
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r5, r0
    ble lbl_08058b6c
    adds r5, r0, #0
lbl_08058b6c:
    ldr r1, lbl_08058b7c @ =0x030013b6
    rsbs r0, r5, #0
    lsls r0, r0, #2
    b lbl_08058c62
    .align 2, 0
lbl_08058b74: .4byte 0x03000088
lbl_08058b78: .4byte 0x04000008
lbl_08058b7c: .4byte 0x030013b6
lbl_08058b80:
    movs r7, #1
    mov r1, ip
    ldrb r0, [r1, #1]
    cmp r0, #0x43
    beq lbl_08058bb0
    cmp r0, #0x43
    bgt lbl_08058b94
    cmp r0, #0x41
    beq lbl_08058b9e
    b lbl_08058c4c
lbl_08058b94:
    cmp r0, #0x44
    beq lbl_08058bdc
    cmp r0, #0x45
    beq lbl_08058bb0
    b lbl_08058c4c
lbl_08058b9e:
    ldr r0, lbl_08058ba8 @ =0x030013b4
    strh r3, [r0]
    ldr r0, lbl_08058bac @ =0x030013b6
    strh r3, [r0]
    b lbl_08058c4e
    .align 2, 0
lbl_08058ba8: .4byte 0x030013b4
lbl_08058bac: .4byte 0x030013b6
lbl_08058bb0:
    ldr r2, lbl_08058bcc @ =0x030013b4
    ldr r0, lbl_08058bd0 @ =0x030013b8
    ldrh r0, [r0]
    ldrh r1, [r4]
    subs r0, r0, r1
    strh r0, [r2]
    ldr r2, lbl_08058bd4 @ =0x030013b6
    ldr r0, lbl_08058bd8 @ =0x030013ba
    ldrh r0, [r0]
    ldrh r1, [r4, #2]
    subs r0, r0, r1
    adds r0, #0x40
    strh r0, [r2]
    b lbl_08058c4e
    .align 2, 0
lbl_08058bcc: .4byte 0x030013b4
lbl_08058bd0: .4byte 0x030013b8
lbl_08058bd4: .4byte 0x030013b6
lbl_08058bd8: .4byte 0x030013ba
lbl_08058bdc:
    movs r5, #0
    ldr r6, lbl_08058c38 @ =0x030013b4
    ldr r0, lbl_08058c3c @ =0x030013b8
    ldr r3, lbl_08058c40 @ =0x030000f8
    ldrh r1, [r0]
    ldrh r0, [r3]
    subs r1, r1, r0
    movs r2, #0x80
    lsls r2, r2, #4
    adds r0, r1, r2
    strh r0, [r6]
    ldr r4, lbl_08058c44 @ =0x030013b6
    ldr r0, lbl_08058c48 @ =0x030013ba
    ldrh r2, [r0]
    ldrh r0, [r3, #2]
    subs r2, r2, r0
    movs r3, #0x88
    lsls r3, r3, #3
    adds r0, r2, r3
    strh r0, [r4]
    movs r0, #0xa0
    lsls r0, r0, #3
    adds r1, r1, r0
    lsls r1, r1, #0x10
    movs r0, #0xc0
    lsls r0, r0, #0x13
    cmp r1, r0
    bls lbl_08058c16
    movs r5, #1
lbl_08058c16:
    movs r1, #0xd0
    lsls r1, r1, #2
    adds r0, r2, r1
    lsls r0, r0, #0x10
    movs r1, #0xc0
    lsls r1, r1, #0x12
    cmp r0, r1
    bls lbl_08058c28
    movs r5, #1
lbl_08058c28:
    cmp r5, #0
    beq lbl_08058c4e
    movs r2, #0x80
    lsls r2, r2, #2
    adds r0, r2, #0
    strh r0, [r6]
    b lbl_08058c4e
    .align 2, 0
lbl_08058c38: .4byte 0x030013b4
lbl_08058c3c: .4byte 0x030013b8
lbl_08058c40: .4byte 0x030000f8
lbl_08058c44: .4byte 0x030013b6
lbl_08058c48: .4byte 0x030013ba
lbl_08058c4c:
    movs r7, #0
lbl_08058c4e:
    ldr r6, lbl_08058c78 @ =0x0300006e
    cmp r7, #0
    bne lbl_08058c64
    ldr r1, lbl_08058c7c @ =0x030013b6
    ldr r0, lbl_08058c80 @ =0x030013ba
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_08058c84 @ =0x030013b4
    ldr r0, lbl_08058c88 @ =0x030013b8
    ldrh r0, [r0]
lbl_08058c62:
    strh r0, [r1]
lbl_08058c64:
    mov r3, ip
    ldrh r1, [r3, #0x12]
    ldr r0, lbl_08058c8c @ =0x0000ffff
    cmp r1, r0
    bne lbl_08058c94
    ldr r1, lbl_08058c90 @ =0x0300006c
    movs r0, #0
    strh r0, [r1]
    strh r0, [r6]
    b lbl_08058cb2
    .align 2, 0
lbl_08058c78: .4byte 0x0300006e
lbl_08058c7c: .4byte 0x030013b6
lbl_08058c80: .4byte 0x030013ba
lbl_08058c84: .4byte 0x030013b4
lbl_08058c88: .4byte 0x030013b8
lbl_08058c8c: .4byte 0x0000ffff
lbl_08058c90: .4byte 0x0300006c
lbl_08058c94:
    ldr r0, lbl_08058cb8 @ =0x0300551c
    ldrb r0, [r0, #3]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    mov r1, ip
    ldrh r1, [r1, #0x12]
    adds r0, r0, r1
    movs r2, #0
    ldrsh r1, [r6, r2]
    adds r5, r0, r1
    cmp r5, #0
    bge lbl_08058cae
    movs r5, #0
lbl_08058cae:
    ldr r0, lbl_08058cbc @ =0x0300006c
    strh r5, [r0]
lbl_08058cb2:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08058cb8: .4byte 0x0300551c
lbl_08058cbc: .4byte 0x0300006c

    thumb_func_start automatic_scroll_bg0
automatic_scroll_bg0: @ 0x08058cc0
    push {lr}
    ldr r0, lbl_08058cd4 @ =0x030054f4
    ldrb r1, [r0]
    adds r2, r0, #0
    cmp r1, #1
    bne lbl_08058cd8
    ldrb r1, [r2, #1]
    movs r0, #7
    b lbl_08058ce0
    .align 2, 0
lbl_08058cd4: .4byte 0x030054f4
lbl_08058cd8:
    cmp r1, #2
    bne lbl_08058cee
    ldrb r1, [r2, #1]
    movs r0, #3
lbl_08058ce0:
    ands r0, r1
    cmp r0, #0
    bne lbl_08058d16
    ldrh r0, [r2, #4]
    adds r0, #1
    strh r0, [r2, #4]
    b lbl_08058d16
lbl_08058cee:
    cmp r1, #3
    bne lbl_08058d02
    ldrb r1, [r2, #1]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08058d16
    ldrh r0, [r2, #6]
    adds r0, #1
    b lbl_08058d14
lbl_08058d02:
    cmp r1, #4
    bne lbl_08058d16
    ldrb r1, [r2, #1]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08058d16
    ldrh r0, [r2, #6]
    subs r0, #1
lbl_08058d14:
    strh r0, [r2, #6]
lbl_08058d16:
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    pop {r0}
    bx r0

    thumb_func_start get_BG3Scrolling_values
get_BG3Scrolling_values: @ 0x08058d20
    push {lr}
    movs r3, #0
    movs r2, #0
    ldr r0, lbl_08058d38 @ =0x030000bc
    ldrb r0, [r0, #6]
    cmp r0, #0xa
    bhi lbl_08058d96
    lsls r0, r0, #2
    ldr r1, lbl_08058d3c @ =lbl_08058d40
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08058d38: .4byte 0x030000bc
lbl_08058d3c: .4byte lbl_08058d40
lbl_08058d40: @ jump table
    .4byte lbl_08058d96 @ case 0
    .4byte lbl_08058d6c @ case 1
    .4byte lbl_08058d70 @ case 2
    .4byte lbl_08058d76 @ case 3
    .4byte lbl_08058d7c @ case 4
    .4byte lbl_08058d82 @ case 5
    .4byte lbl_08058d88 @ case 6
    .4byte lbl_08058d92 @ case 7
    .4byte lbl_08058d92 @ case 8
    .4byte lbl_08058d8e @ case 9
    .4byte lbl_08058d88 @ case 10
lbl_08058d6c:
    movs r2, #2
    b lbl_08058d94
lbl_08058d70:
    movs r2, #0
    movs r3, #2
    b lbl_08058d96
lbl_08058d76:
    movs r2, #2
    movs r3, #2
    b lbl_08058d96
lbl_08058d7c:
    movs r2, #1
    movs r3, #2
    b lbl_08058d96
lbl_08058d82:
    movs r2, #2
    movs r3, #1
    b lbl_08058d96
lbl_08058d88:
    movs r2, #1
    movs r3, #1
    b lbl_08058d96
lbl_08058d8e:
    movs r2, #3
    b lbl_08058d94
lbl_08058d92:
    movs r2, #1
lbl_08058d94:
    movs r3, #0
lbl_08058d96:
    lsls r0, r3, #0x10
    orrs r0, r2
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start ScrollBG3
ScrollBG3: @ 0x08058da0
    push {lr}
    bl get_BG3Scrolling_values
    adds r3, r0, #0
    movs r0, #0xff
    ands r0, r3
    asrs r3, r3, #0x10
    cmp r0, #0
    beq lbl_08058df0
    cmp r0, #1
    bne lbl_08058dc8
    ldr r1, lbl_08058dc0 @ =0x030013c0
    ldr r0, lbl_08058dc4 @ =0x030013b8
    ldrh r0, [r0]
    subs r0, #0x80
    b lbl_08058dee
    .align 2, 0
lbl_08058dc0: .4byte 0x030013c0
lbl_08058dc4: .4byte 0x030013b8
lbl_08058dc8:
    cmp r0, #2
    bne lbl_08058de0
    ldr r1, lbl_08058dd8 @ =0x030013c0
    ldr r0, lbl_08058ddc @ =0x030013b8
    ldrh r0, [r0]
    subs r0, #0x80
    asrs r0, r0, #1
    b lbl_08058dee
    .align 2, 0
lbl_08058dd8: .4byte 0x030013c0
lbl_08058ddc: .4byte 0x030013b8
lbl_08058de0:
    cmp r0, #3
    bne lbl_08058df0
    ldr r1, lbl_08058e20 @ =0x030013c0
    ldr r0, lbl_08058e24 @ =0x030013b8
    ldrh r0, [r0]
    subs r0, #0x80
    asrs r0, r0, #2
lbl_08058dee:
    strh r0, [r1]
lbl_08058df0:
    ldr r1, lbl_08058e28 @ =0x030000bc
    ldrb r0, [r1, #0x1a]
    cmp r0, #0
    beq lbl_08058e6c
    ldr r0, lbl_08058e2c @ =0x0300009c
    ldrh r0, [r0, #0x1e]
    subs r0, #0xc
    lsls r2, r0, #6
    ldrb r1, [r1, #0x19]
    movs r0, #2
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #3
    cmp r0, #0
    beq lbl_08058e12
    movs r1, #0x80
    lsls r1, r1, #4
lbl_08058e12:
    ldr r0, lbl_08058e30 @ =0xfffffd80
    adds r1, r1, r0
    cmp r3, #0
    bne lbl_08058e34
    movs r1, #0
    movs r2, #0
    b lbl_08058e4c
    .align 2, 0
lbl_08058e20: .4byte 0x030013c0
lbl_08058e24: .4byte 0x030013b8
lbl_08058e28: .4byte 0x030000bc
lbl_08058e2c: .4byte 0x0300009c
lbl_08058e30: .4byte 0xfffffd80
lbl_08058e34:
    cmp r3, #1
    bne lbl_08058e44
    ldr r0, lbl_08058e40 @ =0x030013ba
    ldrh r0, [r0]
    subs r2, r2, r0
    b lbl_08058e4c
    .align 2, 0
lbl_08058e40: .4byte 0x030013ba
lbl_08058e44:
    ldr r0, lbl_08058e58 @ =0x030013ba
    ldrh r0, [r0]
    subs r0, r2, r0
    asrs r2, r0, #2
lbl_08058e4c:
    subs r1, r1, r2
    cmp r1, #0
    ble lbl_08058e60
    ldr r0, lbl_08058e5c @ =0x030013c2
    strh r1, [r0]
    b lbl_08058eb8
    .align 2, 0
lbl_08058e58: .4byte 0x030013ba
lbl_08058e5c: .4byte 0x030013c2
lbl_08058e60:
    ldr r1, lbl_08058e68 @ =0x030013c2
    movs r0, #0
    b lbl_08058eb6
    .align 2, 0
lbl_08058e68: .4byte 0x030013c2
lbl_08058e6c:
    cmp r3, #0
    bne lbl_08058e7c
    ldr r0, lbl_08058e78 @ =0x030013c2
    strh r3, [r0]
    b lbl_08058eb8
    .align 2, 0
lbl_08058e78: .4byte 0x030013c2
lbl_08058e7c:
    cmp r3, #1
    bne lbl_08058e94
    ldr r1, lbl_08058e8c @ =0x030013c2
    ldr r0, lbl_08058e90 @ =0x030013ba
    ldrh r0, [r0]
    subs r0, #0x80
    b lbl_08058eb6
    .align 2, 0
lbl_08058e8c: .4byte 0x030013c2
lbl_08058e90: .4byte 0x030013ba
lbl_08058e94:
    cmp r3, #2
    bne lbl_08058eac
    ldr r1, lbl_08058ea4 @ =0x030013c2
    ldr r0, lbl_08058ea8 @ =0x030013ba
    ldrh r0, [r0]
    subs r0, #0x80
    asrs r0, r0, #1
    b lbl_08058eb6
    .align 2, 0
lbl_08058ea4: .4byte 0x030013c2
lbl_08058ea8: .4byte 0x030013ba
lbl_08058eac:
    ldr r1, lbl_08058ebc @ =0x030013c2
    ldr r0, lbl_08058ec0 @ =0x030013ba
    ldrh r0, [r0]
    subs r0, #0x80
    asrs r0, r0, #2
lbl_08058eb6:
    strh r0, [r1]
lbl_08058eb8:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08058ebc: .4byte 0x030013c2
lbl_08058ec0: .4byte 0x030013ba

    thumb_func_start sub_08058ec4
sub_08058ec4: @ 0x08058ec4
    push {lr}
    bl get_BG3Scrolling_values
    adds r1, r0, #0
    movs r0, #0xff
    ands r1, r0
    cmp r1, #0
    bne lbl_08058ee0
    ldr r0, lbl_08058edc @ =0x030013c0
    strh r1, [r0]
    b lbl_08058f08
    .align 2, 0
lbl_08058edc: .4byte 0x030013c0
lbl_08058ee0:
    cmp r1, #2
    bne lbl_08058ef8
    ldr r1, lbl_08058ef0 @ =0x030013c0
    ldr r0, lbl_08058ef4 @ =0x030013b8
    ldrh r0, [r0]
    subs r0, #0x80
    asrs r0, r0, #1
    b lbl_08058f06
    .align 2, 0
lbl_08058ef0: .4byte 0x030013c0
lbl_08058ef4: .4byte 0x030013b8
lbl_08058ef8:
    cmp r1, #3
    bne lbl_08058f08
    ldr r1, lbl_08058f0c @ =0x030013c0
    ldr r0, lbl_08058f10 @ =0x030013b8
    ldrh r0, [r0]
    subs r0, #0x80
    asrs r0, r0, #2
lbl_08058f06:
    strh r0, [r1]
lbl_08058f08:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08058f0c: .4byte 0x030013c0
lbl_08058f10: .4byte 0x030013b8

    thumb_func_start automatic_scroll_bg3
automatic_scroll_bg3: @ 0x08058f14
    push {lr}
    ldr r0, lbl_08058f3c @ =0x030054ec
    ldrb r1, [r0]
    adds r2, r0, #0
    cmp r1, #1
    bne lbl_08058f30
    ldrb r1, [r2, #1]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08058f30
    ldrh r0, [r2, #4]
    adds r0, #1
    strh r0, [r2, #4]
lbl_08058f30:
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    pop {r0}
    bx r0
    .align 2, 0
lbl_08058f3c: .4byte 0x030054ec

    thumb_func_start ScrollBG2
ScrollBG2: @ 0x08058f40
    push {lr}
    ldr r0, lbl_08058f78 @ =0x030000bc
    ldrb r2, [r0, #3]
    movs r0, #0x10
    ands r0, r2
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0
    beq lbl_08058ff4
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0
    beq lbl_08058fd0
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x31
    bne lbl_08058fd0
    ldr r2, lbl_08058f7c @ =0x030013b8
    ldr r1, lbl_08058f80 @ =0x030000fc
    movs r3, #0
    ldrsh r0, [r1, r3]
    ldrh r2, [r2]
    adds r2, r0, r2
    adds r3, r1, #0
    cmp r2, #0
    bge lbl_08058f84
    movs r2, #0
    b lbl_08058f92
    .align 2, 0
lbl_08058f78: .4byte 0x030000bc
lbl_08058f7c: .4byte 0x030013b8
lbl_08058f80: .4byte 0x030000fc
lbl_08058f84:
    ldr r0, lbl_08058fa8 @ =0x0300009c
    ldrh r0, [r0, #0x14]
    subs r0, #0xf
    lsls r0, r0, #6
    cmp r0, r2
    bge lbl_08058f92
    adds r2, r0, #0
lbl_08058f92:
    ldr r0, lbl_08058fac @ =0x030013bc
    strh r2, [r0]
    ldr r1, lbl_08058fb0 @ =0x030013ba
    movs r2, #2
    ldrsh r0, [r3, r2]
    ldrh r1, [r1]
    adds r2, r0, r1
    cmp r2, #0
    bge lbl_08058fb4
    movs r2, #0
    b lbl_08058fc2
    .align 2, 0
lbl_08058fa8: .4byte 0x0300009c
lbl_08058fac: .4byte 0x030013bc
lbl_08058fb0: .4byte 0x030013ba
lbl_08058fb4:
    ldr r0, lbl_08058fc8 @ =0x0300009c
    ldrh r0, [r0, #0x16]
    subs r0, #0xa
    lsls r0, r0, #6
    cmp r0, r2
    bge lbl_08058fc2
    adds r2, r0, #0
lbl_08058fc2:
    ldr r0, lbl_08058fcc @ =0x030013be
    strh r2, [r0]
    b lbl_08058ffc
    .align 2, 0
lbl_08058fc8: .4byte 0x0300009c
lbl_08058fcc: .4byte 0x030013be
lbl_08058fd0:
    ldr r1, lbl_08058fe4 @ =0x030013bc
    ldr r0, lbl_08058fe8 @ =0x030013b8
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_08058fec @ =0x030013be
    ldr r0, lbl_08058ff0 @ =0x030013ba
    ldrh r0, [r0]
    strh r0, [r1]
    b lbl_08058ffc
    .align 2, 0
lbl_08058fe4: .4byte 0x030013bc
lbl_08058fe8: .4byte 0x030013b8
lbl_08058fec: .4byte 0x030013be
lbl_08058ff0: .4byte 0x030013ba
lbl_08058ff4:
    ldr r0, lbl_08059000 @ =0x030013bc
    strh r1, [r0]
    ldr r0, lbl_08059004 @ =0x030013be
    strh r1, [r0]
lbl_08058ffc:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08059000: .4byte 0x030013bc
lbl_08059004: .4byte 0x030013be

    thumb_func_start sub_08059008
sub_08059008: @ 0x08059008
    push {r4, lr}
    adds r4, r0, #0
    ldrh r1, [r4]
    ldr r0, lbl_0805901c @ =0x000001df
    cmp r1, r0
    bhi lbl_08059024
    ldr r1, lbl_08059020 @ =0x030013b8
    movs r0, #0
    b lbl_08059052
    .align 2, 0
lbl_0805901c: .4byte 0x000001df
lbl_08059020: .4byte 0x030013b8
lbl_08059024:
    ldrh r3, [r4]
    ldr r0, lbl_0805903c @ =0x0300009c
    ldrh r0, [r0, #0xc]
    lsls r2, r0, #6
    ldr r1, lbl_08059040 @ =0xfffffe20
    adds r0, r2, r1
    cmp r3, r0
    ble lbl_0805904c
    ldr r1, lbl_08059044 @ =0x030013b8
    ldr r3, lbl_08059048 @ =0xfffffc40
    adds r0, r2, r3
    b lbl_08059052
    .align 2, 0
lbl_0805903c: .4byte 0x0300009c
lbl_08059040: .4byte 0xfffffe20
lbl_08059044: .4byte 0x030013b8
lbl_08059048: .4byte 0xfffffc40
lbl_0805904c:
    ldr r1, lbl_08059064 @ =0x030013b8
    ldr r2, lbl_08059068 @ =0xfffffe20
    adds r0, r3, r2
lbl_08059052:
    strh r0, [r1]
    ldrh r1, [r4, #2]
    ldr r0, lbl_0805906c @ =0x0000017f
    cmp r1, r0
    bhi lbl_08059074
    ldr r1, lbl_08059070 @ =0x030013ba
    movs r0, #0
    b lbl_0805909e
    .align 2, 0
lbl_08059064: .4byte 0x030013b8
lbl_08059068: .4byte 0xfffffe20
lbl_0805906c: .4byte 0x0000017f
lbl_08059070: .4byte 0x030013ba
lbl_08059074:
    ldrh r3, [r4, #2]
    ldr r0, lbl_0805908c @ =0x0300009c
    ldrh r0, [r0, #0xe]
    lsls r2, r0, #6
    adds r0, r2, #0
    subs r0, #0xc0
    cmp r3, r0
    ble lbl_08059098
    ldr r1, lbl_08059090 @ =0x030013ba
    ldr r3, lbl_08059094 @ =0xfffffdc0
    adds r0, r2, r3
    b lbl_0805909e
    .align 2, 0
lbl_0805908c: .4byte 0x0300009c
lbl_08059090: .4byte 0x030013ba
lbl_08059094: .4byte 0xfffffdc0
lbl_08059098:
    ldr r1, lbl_080590a8 @ =0x030013ba
    ldr r2, lbl_080590ac @ =0xfffffe80
    adds r0, r3, r2
lbl_0805909e:
    strh r0, [r1]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080590a8: .4byte 0x030013ba
lbl_080590ac: .4byte 0xfffffe80

    thumb_func_start sub_080590b0
sub_080590b0: @ 0x080590b0
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0
    movs r7, #0
    ldrh r1, [r5, #4]
    adds r0, r1, #0
    subs r0, #0x10
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x2f
    bls lbl_080590c6
    b lbl_080591ec
lbl_080590c6:
    adds r0, r1, #0
    subs r0, #0x10
    strb r0, [r5, #6]
    ldr r3, lbl_080590ec @ =0x03000079
    ldrb r0, [r3]
    cmp r0, #0xd
    bne lbl_080590f4
    ldr r1, lbl_080590f0 @ =0x083459f0
    ldrb r2, [r5, #6]
    lsls r0, r2, #2
    adds r0, r0, r1
    ldrb r0, [r0, #3]
    lsls r0, r0, #0x1c
    cmp r0, #0
    bne lbl_080590e6
    b lbl_080591ec
lbl_080590e6:
    movs r0, #0xc
    strb r0, [r3]
    b lbl_08059108
    .align 2, 0
lbl_080590ec: .4byte 0x03000079
lbl_080590f0: .4byte 0x083459f0
lbl_080590f4:
    ldrb r2, [r5, #6]
    cmp r0, #0xf
    bne lbl_08059108
    ldr r0, lbl_0805911c @ =0x083459f0
    lsls r1, r2, #2
    adds r1, r1, r0
    ldrb r0, [r1, #3]
    lsrs r0, r0, #4
    cmp r0, #0
    beq lbl_080591ec
lbl_08059108:
    movs r4, #1
    movs r6, #0
    subs r0, r2, #2
    cmp r0, #0x1c
    bhi lbl_080591e8
    lsls r0, r0, #2
    ldr r1, lbl_08059120 @ =lbl_08059124
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805911c: .4byte 0x083459f0
lbl_08059120: .4byte lbl_08059124
lbl_08059124: @ jump table
    .4byte lbl_08059198 @ case 0
    .4byte lbl_080591a6 @ case 1
    .4byte lbl_080591a0 @ case 2
    .4byte lbl_080591e8 @ case 3
    .4byte lbl_080591e8 @ case 4
    .4byte lbl_08059198 @ case 5
    .4byte lbl_080591a6 @ case 6
    .4byte lbl_080591a0 @ case 7
    .4byte lbl_080591e8 @ case 8
    .4byte lbl_080591ae @ case 9
    .4byte lbl_080591ae @ case 10
    .4byte lbl_080591b8 @ case 11
    .4byte lbl_080591b8 @ case 12
    .4byte lbl_080591b8 @ case 13
    .4byte lbl_080591b8 @ case 14
    .4byte lbl_080591b8 @ case 15
    .4byte lbl_080591b8 @ case 16
    .4byte lbl_080591c2 @ case 17
    .4byte lbl_080591b8 @ case 18
    .4byte lbl_080591b8 @ case 19
    .4byte lbl_080591ca @ case 20
    .4byte lbl_080591ce @ case 21
    .4byte lbl_080591d2 @ case 22
    .4byte lbl_080591d6 @ case 23
    .4byte lbl_080591da @ case 24
    .4byte lbl_080591de @ case 25
    .4byte lbl_080591e2 @ case 26
    .4byte lbl_080591e6 @ case 27
    .4byte lbl_080591c2 @ case 28
lbl_08059198:
    ldrh r0, [r5]
    subs r0, #1
    strh r0, [r5]
    b lbl_080591e8
lbl_080591a0:
    ldrh r0, [r5]
    subs r0, #1
    strh r0, [r5]
lbl_080591a6:
    ldrh r0, [r5, #2]
    subs r0, #1
    strh r0, [r5, #2]
    b lbl_080591e8
lbl_080591ae:
    adds r0, r5, #0
    bl sub_080597f4
    adds r4, r0, #0
    b lbl_080591e8
lbl_080591b8:
    adds r0, r5, #0
    bl sub_08059770
    adds r4, r0, #0
    b lbl_080591e8
lbl_080591c2:
    adds r0, r5, #0
    bl sub_08059770
    b lbl_080591ec
lbl_080591ca:
    movs r6, #0
    b lbl_080591e8
lbl_080591ce:
    movs r6, #1
    b lbl_080591e8
lbl_080591d2:
    movs r6, #2
    b lbl_080591e8
lbl_080591d6:
    movs r6, #3
    b lbl_080591e8
lbl_080591da:
    movs r6, #4
    b lbl_080591e8
lbl_080591de:
    movs r6, #5
    b lbl_080591e8
lbl_080591e2:
    movs r6, #6
    b lbl_080591e8
lbl_080591e6:
    movs r6, #7
lbl_080591e8:
    cmp r4, #0
    bne lbl_080591f0
lbl_080591ec:
    movs r0, #0
    b lbl_080592b0
lbl_080591f0:
    ldr r1, lbl_08059208 @ =0x083459f0
    ldrb r0, [r5, #6]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r1, [r0]
    cmp r1, #2
    beq lbl_08059222
    cmp r1, #2
    bgt lbl_0805920c
    cmp r1, #1
    beq lbl_08059216
    b lbl_080592ae
    .align 2, 0
lbl_08059208: .4byte 0x083459f0
lbl_0805920c:
    cmp r1, #3
    beq lbl_08059234
    cmp r1, #4
    beq lbl_08059274
    b lbl_080592ae
lbl_08059216:
    adds r0, r5, #0
    bl sub_080592c4
    cmp r0, #0
    beq lbl_080592ae
    b lbl_080592ac
lbl_08059222:
    ldrb r0, [r0, #2]
    ldrh r1, [r5]
    ldrh r2, [r5, #2]
    movs r3, #0
    bl store_broken_reform_block
    cmp r0, #0
    beq lbl_080592ae
    b lbl_080592ac
lbl_08059234:
    adds r0, r5, #0
    bl sub_080597f4
    cmp r0, #0
    beq lbl_080592ae
    ldr r2, lbl_0805926c @ =0x030056bc
    ldr r1, lbl_08059270 @ =0x08345c28
    lsls r0, r6, #2
    adds r0, r0, r1
    ldrb r1, [r2]
    ldrb r0, [r0]
    ands r0, r1
    cmp r0, #0
    bne lbl_080592ae
    adds r0, r6, #0
    ldrh r1, [r5]
    ldrh r2, [r5, #2]
    bl start_bomb_chain
    cmp r0, #0
    beq lbl_080592ae
    adds r0, r5, #0
    bl sub_080592c4
    cmp r0, #0
    beq lbl_080592ae
    b lbl_080592ac
    .align 2, 0
lbl_0805926c: .4byte 0x030056bc
lbl_08059270: .4byte 0x08345c28
lbl_08059274:
    ldr r1, lbl_080592b8 @ =0x083459d0
    ldr r0, lbl_080592bc @ =0x03000079
    ldrb r0, [r0]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    movs r0, #0x1f
    ands r0, r1
    cmp r0, #0
    beq lbl_080592ae
    ldr r1, lbl_080592c0 @ =0x08345c48
    ldrh r0, [r5, #4]
    subs r0, #0x34
    lsls r0, r0, #3
    adds r0, r0, r1
    ldrh r4, [r0, #4]
    cmp r4, #0
    beq lbl_080592ae
    ldrh r1, [r5, #2]
    ldrh r2, [r5]
    adds r0, r4, #0
    bl set_bg1_block_value
    ldrh r1, [r5, #2]
    ldrh r2, [r5]
    adds r0, r4, #0
    bl set_clipdata_block_value
lbl_080592ac:
    movs r7, #1
lbl_080592ae:
    adds r0, r7, #0
lbl_080592b0:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080592b8: .4byte 0x083459d0
lbl_080592bc: .4byte 0x03000079
lbl_080592c0: .4byte 0x08345c48

    thumb_func_start sub_080592c4
sub_080592c4: @ 0x080592c4
    push {r4, r5, lr}
    adds r5, r0, #0
    movs r2, #0
    ldr r1, lbl_080592e4 @ =0x083459f0
    ldrb r0, [r5, #6]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r4, [r0, #1]
    cmp r4, #4
    bhi lbl_0805930c
    lsls r0, r4, #2
    ldr r1, lbl_080592e8 @ =lbl_080592ec
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080592e4: .4byte 0x083459f0
lbl_080592e8: .4byte lbl_080592ec
lbl_080592ec: @ jump table
    .4byte lbl_0805930e @ case 0
    .4byte lbl_0805930e @ case 1
    .4byte lbl_08059300 @ case 2
    .4byte lbl_08059300 @ case 3
    .4byte lbl_0805930e @ case 4
lbl_08059300:
    ldrh r0, [r5]
    ldrh r1, [r5, #2]
    bl sub_08059480
    adds r2, r0, #0
    b lbl_0805930e
lbl_0805930c:
    movs r2, #1
lbl_0805930e:
    cmp r2, #0
    bne lbl_08059328
    ldr r0, lbl_08059324 @ =0x0875fd64
    lsls r1, r4, #2
    adds r1, r1, r0
    ldr r1, [r1]
    adds r0, r5, #0
    bl _call_via_r1
    adds r2, r0, #0
    b lbl_0805932a
    .align 2, 0
lbl_08059324: .4byte 0x0875fd64
lbl_08059328:
    movs r0, #0
lbl_0805932a:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sub_08059330
sub_08059330: @ 0x08059330
    push {r4, lr}
    adds r4, r0, #0
    ldrh r0, [r4]
    ldrh r1, [r4, #2]
    ldr r3, lbl_08059364 @ =0x083459f0
    ldrb r2, [r4, #6]
    lsls r2, r2, #2
    adds r2, r2, r3
    ldrb r2, [r2, #2]
    bl store_broken_non_reform_block
    ldr r2, lbl_08059368 @ =0x0300009c
    ldrh r1, [r4, #2]
    ldrh r0, [r2, #0x1c]
    muls r0, r1, r0
    ldrh r4, [r4]
    adds r0, r0, r4
    ldr r1, [r2, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    movs r1, #0
    strh r1, [r0]
    movs r0, #1
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08059364: .4byte 0x083459f0
lbl_08059368: .4byte 0x0300009c

    thumb_func_start destroy_single_breakable_block
destroy_single_breakable_block: @ 0x0805936c
    push {r4, lr}
    adds r4, r0, #0
    ldrh r0, [r4]
    ldrh r1, [r4, #2]
    ldr r3, lbl_080593a0 @ =0x083459f0
    ldrb r2, [r4, #6]
    lsls r2, r2, #2
    adds r2, r2, r3
    ldrb r2, [r2, #2]
    bl store_broken_non_reform_block
    ldr r2, lbl_080593a4 @ =0x0300009c
    ldrh r1, [r4, #2]
    ldrh r0, [r2, #0x1c]
    muls r0, r1, r0
    ldrh r4, [r4]
    adds r0, r0, r4
    ldr r1, [r2, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    movs r1, #0
    strh r1, [r0]
    movs r0, #1
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080593a0: .4byte 0x083459f0
lbl_080593a4: .4byte 0x0300009c

    thumb_func_start destroy_square_block
destroy_square_block: @ 0x080593a8
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r4, r0, #0
    ldr r1, lbl_08059470 @ =0x083459f0
    ldrb r0, [r4, #6]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r6, [r0, #2]
    ldrh r0, [r4]
    ldrh r1, [r4, #2]
    adds r2, r6, #0
    bl store_broken_non_reform_block
    ldr r5, lbl_08059474 @ =0x0300009c
    ldrh r1, [r4, #2]
    ldrh r0, [r5, #0x1c]
    muls r0, r1, r0
    ldrh r1, [r4]
    adds r0, r0, r1
    ldr r1, [r5, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    movs r1, #0
    strh r1, [r0]
    ldrh r0, [r4]
    adds r0, #1
    movs r1, #0
    mov r8, r1
    strh r0, [r4]
    ldrh r0, [r4, #2]
    adds r0, #1
    strh r0, [r4, #2]
    ldrh r0, [r4]
    ldrh r1, [r4, #2]
    adds r2, r6, #0
    bl store_broken_non_reform_block
    ldrh r1, [r4, #2]
    ldrh r0, [r5, #0x1c]
    muls r0, r1, r0
    ldrh r1, [r4]
    adds r0, r0, r1
    ldr r1, [r5, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    mov r1, r8
    strh r1, [r0]
    ldrh r0, [r4, #2]
    subs r0, #1
    strh r0, [r4, #2]
    ldrh r0, [r4]
    ldrh r1, [r4, #2]
    adds r2, r6, #0
    bl store_broken_non_reform_block
    ldrh r1, [r4, #2]
    ldrh r0, [r5, #0x1c]
    muls r0, r1, r0
    ldrh r1, [r4]
    adds r0, r0, r1
    ldr r1, [r5, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    mov r1, r8
    strh r1, [r0]
    ldrh r0, [r4]
    subs r0, #1
    strh r0, [r4]
    ldrh r0, [r4, #2]
    adds r0, #1
    strh r0, [r4, #2]
    ldrh r0, [r4]
    ldrh r1, [r4, #2]
    adds r2, r6, #0
    bl store_broken_non_reform_block
    ldrh r1, [r4, #2]
    ldrh r0, [r5, #0x1c]
    muls r0, r1, r0
    ldrh r4, [r4]
    adds r0, r0, r4
    ldr r1, [r5, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    mov r1, r8
    strh r1, [r0]
    ldr r0, lbl_08059478 @ =0x03000079
    ldrb r0, [r0]
    cmp r0, #0xc
    beq lbl_08059464
    ldr r0, lbl_0805947c @ =0x00000137
    bl SoundPlayNotAlreadyPlaying
lbl_08059464:
    movs r0, #1
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08059470: .4byte 0x083459f0
lbl_08059474: .4byte 0x0300009c
lbl_08059478: .4byte 0x03000079
lbl_0805947c: .4byte 0x00000137

    thumb_func_start sub_08059480
sub_08059480: @ 0x08059480
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r5, r1, #0x10
    ldr r1, lbl_080594a0 @ =0x03000054
    ldrb r0, [r1]
    cmp r0, #7
    bhi lbl_0805949a
    adds r0, r4, #0
    muls r0, r5, r0
    cmp r0, #0
    bne lbl_080594a4
lbl_0805949a:
    movs r0, #0
    b lbl_080594f6
    .align 2, 0
lbl_080594a0: .4byte 0x03000054
lbl_080594a4:
    movs r3, #1
    ldrb r0, [r1]
    lsls r1, r0, #9
    ldr r6, lbl_080594c8 @ =0x02035c00
    adds r2, r1, r6
    ldr r1, lbl_080594cc @ =0x0300005b
    adds r0, r0, r1
    ldrb r0, [r0]
    lsls r1, r0, #1
    ldr r0, lbl_080594d0 @ =0x000001fb
    cmp r1, r0
    bgt lbl_080594e6
    adds r0, r2, r1
    ldrb r0, [r0]
    cmp r0, #0xff
    bne lbl_080594d4
    movs r3, #0
    b lbl_080594ea
    .align 2, 0
lbl_080594c8: .4byte 0x02035c00
lbl_080594cc: .4byte 0x0300005b
lbl_080594d0: .4byte 0x000001fb
lbl_080594d4:
    adds r1, #2
    ldr r0, lbl_080594fc @ =0x000001fb
    cmp r1, r0
    bgt lbl_080594e6
    adds r0, r2, r1
    ldrb r0, [r0]
    cmp r0, #0xff
    bne lbl_080594d4
    movs r3, #0
lbl_080594e6:
    cmp r3, #0
    bne lbl_080594f4
lbl_080594ea:
    adds r0, r2, r1
    strb r4, [r0]
    adds r1, #1
    adds r0, r2, r1
    strb r5, [r0]
lbl_080594f4:
    adds r0, r3, #0
lbl_080594f6:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080594fc: .4byte 0x000001fb

    thumb_func_start remove_never_reform_blocks
remove_never_reform_blocks: @ 0x08059500
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_08059550 @ =0x03000bf0
    movs r1, #0
    ldrsb r1, [r0, r1]
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r6, r0, #0x1f
    ldr r1, lbl_08059554 @ =0x03000054
    ldrb r0, [r1]
    cmp r0, #7
    bls lbl_08059518
    movs r6, #1
lbl_08059518:
    cmp r6, #0
    bne lbl_08059578
    ldrb r0, [r1]
    lsls r1, r0, #9
    ldr r3, lbl_08059558 @ =0x02035c00
    adds r2, r1, r3
    ldr r1, lbl_0805955c @ =0x0300005b
    adds r0, r0, r1
    ldrb r0, [r0]
    lsls r7, r0, #1
    movs r5, #0
    cmp r6, r7
    bge lbl_08059578
    adds r4, r2, #0
lbl_08059534:
    ldrb r0, [r4]
    cmp r0, #0
    bne lbl_0805953c
    movs r5, #1
lbl_0805953c:
    cmp r5, #1
    bne lbl_08059564
    ldr r1, lbl_08059560 @ =0x03000055
    ldrb r0, [r4, #1]
    movs r5, #0
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_08059570
    movs r5, #2
    b lbl_08059570
    .align 2, 0
lbl_08059550: .4byte 0x03000bf0
lbl_08059554: .4byte 0x03000054
lbl_08059558: .4byte 0x02035c00
lbl_0805955c: .4byte 0x0300005b
lbl_08059560: .4byte 0x03000055
lbl_08059564:
    cmp r5, #2
    bne lbl_08059570
    ldrb r0, [r4]
    ldrb r1, [r4, #1]
    bl remove_never_reform_block_in_clipdata_bg
lbl_08059570:
    adds r4, #2
    adds r6, #2
    cmp r6, r7
    blt lbl_08059534
lbl_08059578:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start remove_never_reform_block_in_clipdata_bg
remove_never_reform_block_in_clipdata_bg: @ 0x08059580
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r2, lbl_080595dc @ =0x0300009c
    mov ip, r2
    ldrh r2, [r2, #0x1c]
    muls r1, r2, r1
    adds r3, r1, r0
    ldr r1, lbl_080595e0 @ =0x03005450
    mov r0, ip
    ldr r7, [r0, #0x18]
    lsls r2, r3, #1
    adds r5, r2, r7
    ldrh r0, [r5]
    ldr r1, [r1, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    movs r4, #0
    strh r4, [r5]
    mov r1, ip
    ldr r6, [r1, #8]
    adds r2, r2, r6
    strh r4, [r2]
    cmp r0, #0x11
    bne lbl_080595d6
    strh r4, [r5, #2]
    strh r4, [r2, #2]
    ldrh r0, [r1, #0x1c]
    adds r3, r3, r0
    lsls r0, r3, #1
    adds r1, r0, r7
    strh r4, [r1]
    adds r0, r0, r6
    strh r4, [r0]
    adds r3, #1
    lsls r0, r3, #1
    adds r1, r0, r7
    strh r4, [r1]
    adds r0, r0, r6
    strh r4, [r0]
lbl_080595d6:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080595dc: .4byte 0x0300009c
lbl_080595e0: .4byte 0x03005450

    thumb_func_start sub_080595e4
sub_080595e4: @ 0x080595e4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    ldr r0, lbl_08059668 @ =0x03000bf1
    mov sl, r0
    ldrb r0, [r0]
    lsls r1, r0, #9
    ldr r2, lbl_0805966c @ =0x02035c00
    adds r2, r2, r1
    mov r8, r2
    ldr r5, lbl_08059670 @ =0x0300005b
    mov sb, r5
    add r0, sb
    ldrb r0, [r0]
    lsls r0, r0, #1
    add r0, r8
    ldrb r0, [r0]
    cmp r0, #0xff
    bne lbl_08059612
    b lbl_08059752
lbl_08059612:
    movs r6, #0x80
    lsls r6, r6, #0x12
    movs r5, #0x80
    lsls r5, r5, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    mov r1, r8
    adds r2, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_08059674 @ =0x0000ffff
    str r4, [sp]
    movs r0, #3
    mov r2, r8
    adds r3, r5, #0
    bl BitFill
    movs r2, #0
    movs r7, #0
    mov r1, sl
    ldrb r0, [r1]
    add r0, sb
    ldrb r0, [r0]
    movs r4, #0
    cmp r0, #0
    beq lbl_080596f8
    mov ip, sb
    mov sb, sl
    ldr r5, lbl_08059678 @ =0x03000055
    mov sl, r5
    mov r3, r8
lbl_08059654:
    adds r0, r6, r7
    ldrb r1, [r0]
    str r0, [sp, #4]
    cmp r1, #0
    bne lbl_0805968e
    cmp r2, #1
    bne lbl_0805967c
    movs r2, #0xa
    b lbl_0805968e
    .align 2, 0
lbl_08059668: .4byte 0x03000bf1
lbl_0805966c: .4byte 0x02035c00
lbl_08059670: .4byte 0x0300005b
lbl_08059674: .4byte 0x0000ffff
lbl_08059678: .4byte 0x03000055
lbl_0805967c:
    cmp r2, #0
    bne lbl_0805968e
    adds r0, r4, r6
    ldrb r0, [r0, #1]
    mov r1, sl
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_0805968e
    movs r2, #1
lbl_0805968e:
    cmp r2, #9
    bgt lbl_080596aa
    ldr r5, [sp, #4]
    ldrb r0, [r5]
    strb r0, [r3]
    adds r7, #1
    adds r3, #1
    adds r0, r6, r7
    ldrb r0, [r0]
    strb r0, [r3]
    adds r7, #1
    adds r3, #1
    adds r4, #2
    b lbl_080596ea
lbl_080596aa:
    cmp r2, #0xa
    bne lbl_080596ea
    mov r1, sb
    ldrb r0, [r1]
    add r0, ip
    ldrb r0, [r0]
    lsls r0, r0, #1
    movs r1, #0x80
    lsls r1, r1, #0x12
    adds r6, r0, r1
    ldrb r2, [r6]
    adds r0, r2, #0
    cmp r0, #0xff
    beq lbl_080596e4
    mov r5, r8
    adds r1, r4, r5
lbl_080596ca:
    strb r2, [r1]
    adds r6, #1
    adds r1, #1
    ldrb r0, [r6]
    strb r0, [r1]
    adds r6, #1
    adds r1, #1
    adds r3, #2
    adds r4, #2
    ldrb r2, [r6]
    adds r0, r2, #0
    cmp r0, #0xff
    bne lbl_080596ca
lbl_080596e4:
    movs r2, #2
    movs r6, #0x80
    lsls r6, r6, #0x12
lbl_080596ea:
    mov r1, sb
    ldrb r0, [r1]
    add r0, ip
    ldrb r0, [r0]
    lsls r0, r0, #1
    cmp r7, r0
    blt lbl_08059654
lbl_080596f8:
    ldr r3, lbl_08059764 @ =0x03000bf1
    ldr r5, lbl_08059768 @ =0x0300005b
    cmp r2, #2
    beq lbl_0805974a
    cmp r2, #1
    beq lbl_08059718
    mov r2, r8
    adds r1, r2, r4
    movs r0, #0
    strb r0, [r1]
    adds r4, #1
    adds r1, r2, r4
    ldr r0, lbl_0805976c @ =0x03000055
    ldrb r0, [r0]
    strb r0, [r1]
    adds r4, #1
lbl_08059718:
    ldrb r0, [r3]
    adds r0, r0, r5
    ldrb r0, [r0]
    lsls r0, r0, #1
    movs r1, #0x80
    lsls r1, r1, #0x12
    adds r6, r0, r1
    ldrb r2, [r6]
    adds r0, r2, #0
    cmp r0, #0xff
    beq lbl_0805974a
    mov r0, r8
    adds r1, r4, r0
lbl_08059732:
    strb r2, [r1]
    adds r6, #1
    adds r1, #1
    ldrb r0, [r6]
    strb r0, [r1]
    adds r6, #1
    adds r1, #1
    adds r4, #2
    ldrb r2, [r6]
    adds r0, r2, #0
    cmp r0, #0xff
    bne lbl_08059732
lbl_0805974a:
    ldrb r0, [r3]
    adds r0, r0, r5
    asrs r1, r4, #1
    strb r1, [r0]
lbl_08059752:
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08059764: .4byte 0x03000bf1
lbl_08059768: .4byte 0x0300005b
lbl_0805976c: .4byte 0x03000055

    thumb_func_start sub_08059770
sub_08059770: @ 0x08059770
    push {r4, r5, lr}
    adds r5, r0, #0
    ldr r1, lbl_0805979c @ =0x083459f0
    ldrb r0, [r5, #6]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r4, [r0, #2]
    ldr r2, lbl_080597a0 @ =0x083459d0
    ldr r0, lbl_080597a4 @ =0x03000079
    ldrb r3, [r0]
    lsls r1, r3, #1
    adds r1, r1, r2
    ldr r2, lbl_080597a8 @ =0x08345ab0
    lsls r0, r4, #1
    adds r0, r0, r2
    ldrh r1, [r1]
    ldrh r0, [r0]
    ands r0, r1
    cmp r0, #0
    beq lbl_080597ac
    movs r0, #1
    b lbl_080597e4
    .align 2, 0
lbl_0805979c: .4byte 0x083459f0
lbl_080597a0: .4byte 0x083459d0
lbl_080597a4: .4byte 0x03000079
lbl_080597a8: .4byte 0x08345ab0
lbl_080597ac:
    adds r1, r3, #0
    cmp r1, #8
    beq lbl_080597be
    cmp r1, #0xb
    bne lbl_080597e2
    ldr r0, lbl_080597ec @ =0x03000130
    ldrb r0, [r0, #0x11]
    cmp r0, #0
    bne lbl_080597e2
lbl_080597be:
    ldr r0, lbl_080597f0 @ =0x08345adc
    lsls r1, r4, #1
    adds r1, r1, r0
    ldrh r0, [r5, #4]
    ldrh r2, [r1]
    cmp r0, r2
    beq lbl_080597e2
    ldrh r4, [r1]
    ldrh r1, [r5, #2]
    ldrh r2, [r5]
    adds r0, r4, #0
    bl set_bg1_block_value
    ldrh r1, [r5, #2]
    ldrh r2, [r5]
    adds r0, r4, #0
    bl set_clipdata_block_value
lbl_080597e2:
    movs r0, #0
lbl_080597e4:
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080597ec: .4byte 0x03000130
lbl_080597f0: .4byte 0x08345adc

    thumb_func_start sub_080597f4
sub_080597f4: @ 0x080597f4
    push {r4, r5, lr}
    adds r4, r0, #0
    ldr r1, lbl_08059820 @ =0x083459f0
    ldrb r0, [r4, #6]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r3, [r0, #2]
    ldr r1, lbl_08059824 @ =0x083459d0
    ldr r0, lbl_08059828 @ =0x03000079
    ldrb r0, [r0]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldr r1, lbl_0805982c @ =0x08345ab0
    lsls r5, r3, #1
    adds r1, r5, r1
    ldrh r2, [r0]
    ldrh r0, [r1]
    ands r0, r2
    cmp r0, #0
    beq lbl_08059830
    movs r0, #1
    b lbl_08059870
    .align 2, 0
lbl_08059820: .4byte 0x083459f0
lbl_08059824: .4byte 0x083459d0
lbl_08059828: .4byte 0x03000079
lbl_0805982c: .4byte 0x08345ab0
lbl_08059830:
    movs r0, #0xd
    ands r0, r2
    cmp r0, #0
    beq lbl_0805986e
    ldr r0, lbl_08059878 @ =0x08345adc
    adds r1, r5, r0
    ldrh r0, [r4, #4]
    ldrh r2, [r1]
    cmp r0, r2
    beq lbl_0805986e
    movs r0, #1
    ldrh r5, [r1]
    cmp r3, #0xd
    ble lbl_08059856
    adds r0, r3, #0
    ldrh r1, [r4]
    ldrh r2, [r4, #2]
    bl sub_08059ef8
lbl_08059856:
    cmp r0, #0
    beq lbl_0805986e
    ldrh r1, [r4, #2]
    ldrh r2, [r4]
    adds r0, r5, #0
    bl set_bg1_block_value
    ldrh r1, [r4, #2]
    ldrh r2, [r4]
    adds r0, r5, #0
    bl set_clipdata_block_value
lbl_0805986e:
    movs r0, #0
lbl_08059870:
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08059878: .4byte 0x08345adc

    thumb_func_start apply_current_clipdata_affecting_action
apply_current_clipdata_affecting_action: @ 0x0805987c
    push {r4, r5, r6, r7, lr}
    sub sp, #8
    lsls r0, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r4, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r7, r2, #0x10
    ldr r2, lbl_080598c0 @ =0xffff0000
    lsrs r5, r0, #0x10
    orrs r0, r4
    str r0, [sp]
    ldr r3, lbl_080598c4 @ =0x03005450
    ldr r1, [r3, #8]
    lsls r0, r7, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    ldr r0, [sp, #4]
    ands r0, r2
    orrs r0, r1
    ldr r1, lbl_080598c8 @ =0xff00ffff
    ands r0, r1
    str r0, [sp, #4]
    movs r6, #0
    ldr r0, lbl_080598cc @ =0x03000079
    ldrb r0, [r0]
    subs r0, #1
    cmp r0, #0xe
    bls lbl_080598b6
    b lbl_080599d2
lbl_080598b6:
    lsls r0, r0, #2
    ldr r1, lbl_080598d0 @ =lbl_080598d4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080598c0: .4byte 0xffff0000
lbl_080598c4: .4byte 0x03005450
lbl_080598c8: .4byte 0xff00ffff
lbl_080598cc: .4byte 0x03000079
lbl_080598d0: .4byte lbl_080598d4
lbl_080598d4: @ jump table
    .4byte lbl_08059964 @ case 0
    .4byte lbl_08059980 @ case 1
    .4byte lbl_08059998 @ case 2
    .4byte lbl_080599b8 @ case 3
    .4byte lbl_08059958 @ case 4
    .4byte lbl_080599d2 @ case 5
    .4byte lbl_08059910 @ case 6
    .4byte lbl_08059910 @ case 7
    .4byte lbl_08059910 @ case 8
    .4byte lbl_08059910 @ case 9
    .4byte lbl_08059910 @ case 10
    .4byte lbl_0805992c @ case 11
    .4byte lbl_0805992c @ case 12
    .4byte lbl_08059940 @ case 13
    .4byte lbl_08059958 @ case 14
lbl_08059910:
    ldr r0, [r3, #4]
    adds r0, r0, r7
    ldrb r0, [r0]
    cmp r0, #0xb
    bne lbl_08059958
    mov r0, sp
    ldrh r0, [r0]
    ldr r1, [sp]
    lsrs r1, r1, #0x10
    bl check_opening_hatch
    cmp r0, #0
    bne lbl_08059950
    b lbl_08059958
lbl_0805992c:
    mov r0, sp
    bl sub_080590b0
    cmp r0, #0
    beq lbl_080599d2
    ldr r0, lbl_0805993c @ =0x00000135
    b lbl_0805994c
    .align 2, 0
lbl_0805993c: .4byte 0x00000135
lbl_08059940:
    mov r0, sp
    bl sub_080590b0
    cmp r0, #0
    beq lbl_080599d2
    ldr r0, lbl_08059954 @ =0x00000139
lbl_0805994c:
    bl SoundPlayNotAlreadyPlaying
lbl_08059950:
    movs r6, #1
    b lbl_080599d2
    .align 2, 0
lbl_08059954: .4byte 0x00000139
lbl_08059958:
    mov r0, sp
    bl sub_080590b0
    cmp r0, #0
    beq lbl_080599d2
    b lbl_08059950
lbl_08059964:
    movs r0, #0
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_080599e0
    cmp r0, #0
    bne lbl_0805997c
    movs r0, #0
    adds r1, r5, #0
    adds r2, r4, #0
    bl set_bg1_block_value
lbl_0805997c:
    movs r0, #0
    b lbl_080599aa
lbl_08059980:
    movs r0, #1
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_080599e0
    adds r6, r0, #0
    cmp r6, #0
    beq lbl_080599d2
    ldr r0, lbl_08059994 @ =0x0000043e
    b lbl_080599aa
    .align 2, 0
lbl_08059994: .4byte 0x0000043e
lbl_08059998:
    movs r0, #1
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_080599e0
    adds r6, r0, #0
    cmp r6, #0
    beq lbl_080599d2
    ldr r0, lbl_080599b4 @ =0x0000043d
lbl_080599aa:
    adds r1, r5, #0
    adds r2, r4, #0
    bl set_clipdata_block_value
    b lbl_080599d2
    .align 2, 0
lbl_080599b4: .4byte 0x0000043d
lbl_080599b8:
    movs r0, #1
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_080599e0
    adds r6, r0, #0
    cmp r6, #0
    beq lbl_080599d2
    ldr r0, lbl_080599dc @ =0x0000043f
    adds r1, r5, #0
    adds r2, r4, #0
    bl set_clipdata_block_value
lbl_080599d2:
    adds r0, r6, #0
    add sp, #8
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080599dc: .4byte 0x0000043f

    thumb_func_start sub_080599e0
sub_080599e0: @ 0x080599e0
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x18
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r5, r2, #0x10
    movs r6, #0
    cmp r0, #0
    bne lbl_08059a3e
    ldr r0, lbl_08059a18 @ =0x02027780
    mov r8, r0
    movs r3, #0x3f
    movs r1, #0x7e
    add r1, r8
    mov ip, r1
    ldrh r2, [r1]
    lsls r1, r7, #8
    adds r0, r1, #0
    orrs r0, r5
    adds r4, r1, #0
    cmp r2, r0
    bne lbl_08059a1c
    mov r0, ip
    strh r6, [r0]
    b lbl_08059a88
    .align 2, 0
lbl_08059a18: .4byte 0x02027780
lbl_08059a1c:
    subs r3, #1
    cmp r3, #0
    ble lbl_08059a8a
    subs r3, #1
    lsls r0, r3, #1
    mov r1, r8
    adds r2, r0, r1
    ldrh r1, [r2]
    adds r0, r4, #0
    orrs r0, r5
    cmp r1, r0
    bne lbl_08059a1c
    movs r0, #0
    strh r0, [r2]
    b lbl_08059a88
lbl_08059a3a:
    movs r3, #0xff
    b lbl_08059a66
lbl_08059a3e:
    ldr r0, lbl_08059a48 @ =0x02027780
    mov r8, r0
    movs r3, #0x40
    lsls r4, r7, #8
    b lbl_08059a52
    .align 2, 0
lbl_08059a48: .4byte 0x02027780
lbl_08059a4c:
    subs r3, #1
    cmp r3, #0
    ble lbl_08059a66
lbl_08059a52:
    subs r3, #1
    lsls r0, r3, #1
    add r0, r8
    ldrh r1, [r0]
    adds r0, r4, #0
    orrs r0, r5
    cmp r1, r0
    beq lbl_08059a3a
    cmp r1, #0
    bne lbl_08059a4c
lbl_08059a66:
    movs r6, #0
    cmp r3, #0xff
    beq lbl_08059a8a
    ldr r1, lbl_08059a98 @ =0x0300009c
    ldrh r0, [r1, #0x1c]
    muls r0, r5, r0
    adds r0, r0, r7
    ldr r1, [r1, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    cmp r0, #0
    bne lbl_08059a8a
    lsls r0, r3, #1
    add r0, r8
    orrs r4, r5
    strh r4, [r0]
lbl_08059a88:
    movs r6, #1
lbl_08059a8a:
    adds r0, r6, #0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08059a98: .4byte 0x0300009c

    thumb_func_start samus_apply_screw_speedbooster_damage_to_environment
samus_apply_screw_speedbooster_damage_to_environment: @ 0x08059a9c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x10
    lsls r1, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r5, r2, #0x10
    lsrs r7, r0, #0x16
    lsrs r6, r1, #0x16
    ldr r0, lbl_08059ac8 @ =0x0300009c
    adds r2, r0, #0
    ldrh r0, [r2, #0x1c]
    cmp r7, r0
    bhs lbl_08059af4
    ldrh r1, [r2, #0x1e]
    cmp r6, r1
    bhs lbl_08059af4
    cmp r5, #1
    bne lbl_08059ad0
    ldr r1, lbl_08059acc @ =0x03000079
    movs r0, #0xc
    b lbl_08059afc
    .align 2, 0
lbl_08059ac8: .4byte 0x0300009c
lbl_08059acc: .4byte 0x03000079
lbl_08059ad0:
    cmp r5, #2
    bne lbl_08059ae0
    ldr r1, lbl_08059adc @ =0x03000079
    movs r0, #0xe
    b lbl_08059afc
    .align 2, 0
lbl_08059adc: .4byte 0x03000079
lbl_08059ae0:
    cmp r5, #3
    bne lbl_08059af0
    ldr r1, lbl_08059aec @ =0x03000079
    movs r0, #0xe
    b lbl_08059afc
    .align 2, 0
lbl_08059aec: .4byte 0x03000079
lbl_08059af0:
    cmp r5, #4
    beq lbl_08059af8
lbl_08059af4:
    movs r0, #0
    b lbl_08059b46
lbl_08059af8:
    ldr r1, lbl_08059b50 @ =0x03000079
    movs r0, #0xd
lbl_08059afc:
    strb r0, [r1]
    ldrh r0, [r2, #0x1c]
    adds r1, r6, #0
    muls r1, r0, r1
    adds r0, r1, #0
    adds r0, r7, r0
    lsls r0, r0, #0x10
    ldr r1, [r2, #0x18]
    lsrs r0, r0, #0xf
    adds r0, r0, r1
    ldrh r4, [r0]
    cmp r4, #0
    beq lbl_08059b3e
    adds r0, r6, #0
    adds r1, r7, #0
    adds r2, r4, #0
    bl apply_current_clipdata_affecting_action
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    cmp r0, #0
    bne lbl_08059b3e
    cmp r5, #3
    bne lbl_08059b3e
    ldr r1, lbl_08059b50 @ =0x03000079
    movs r0, #0xc
    strb r0, [r1]
    adds r0, r6, #0
    adds r1, r7, #0
    adds r2, r4, #0
    bl apply_current_clipdata_affecting_action
lbl_08059b3e:
    ldr r1, lbl_08059b50 @ =0x03000079
    movs r0, #0
    strb r0, [r1]
    mov r0, r8
lbl_08059b46:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08059b50: .4byte 0x03000079

    thumb_func_start update_broken_blocks
update_broken_blocks: @ 0x08059b54
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    ldr r4, lbl_08059bb0 @ =0x03005528
    movs r0, #0x2f
    mov sb, r0
lbl_08059b62:
    ldrb r7, [r4, #1]
    adds r2, r7, #0
    cmp r2, #0
    beq lbl_08059c52
    ldrh r0, [r4, #6]
    adds r3, r0, #1
    movs r6, #0
    strh r3, [r4, #6]
    ldrb r5, [r4]
    cmp r5, #0
    beq lbl_08059c1e
    ldr r1, lbl_08059bb4 @ =0x08345b08
    mov r8, r1
    ldrb r0, [r4, #2]
    movs r7, #0xd
    adds r1, r0, #0
    muls r1, r7, r1
    ldrb r0, [r4, #1]
    adds r1, r1, r0
    add r1, r8
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    ldrb r1, [r1]
    cmp r0, r1
    blo lbl_08059c52
    movs r5, #0
    strh r5, [r4, #6]
    cmp r2, #0xc
    bls lbl_08059bdc
    ldrb r0, [r4, #3]
    ldrb r1, [r4, #4]
    bl check_samus_in_reforming_block
    cmp r0, #0
    beq lbl_08059bb8
    movs r0, #2
    strb r0, [r4, #1]
    b lbl_08059c0c
    .align 2, 0
lbl_08059bb0: .4byte 0x03005528
lbl_08059bb4: .4byte 0x08345b08
lbl_08059bb8:
    ldr r1, lbl_08059bd8 @ =0x08345adc
    ldrb r0, [r4, #2]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    ldrb r1, [r4, #4]
    ldrb r2, [r4, #3]
    bl set_clipdata_block_value
    strb r6, [r4]
    strb r6, [r4, #1]
    strb r6, [r4, #2]
    strb r6, [r4, #3]
    strb r6, [r4, #4]
    b lbl_08059c0c
    .align 2, 0
lbl_08059bd8: .4byte 0x08345adc
lbl_08059bdc:
    cmp r2, #7
    bne lbl_08059bfe
    ldrb r0, [r4, #3]
    ldrb r1, [r4, #4]
    bl check_samus_in_reforming_block
    cmp r0, #0
    beq lbl_08059c10
    ldrb r0, [r4, #2]
    muls r0, r7, r0
    ldrb r1, [r4, #1]
    adds r0, r0, r1
    add r0, r8
    ldrb r0, [r0]
    lsrs r0, r0, #1
    strh r0, [r4, #6]
    b lbl_08059c0c
lbl_08059bfe:
    cmp r2, #1
    bne lbl_08059c0a
    ldrb r0, [r4, #4]
    ldrb r1, [r4, #3]
    bl sub_0805a3e0
lbl_08059c0a:
    movs r5, #1
lbl_08059c0c:
    cmp r5, #0
    beq lbl_08059c52
lbl_08059c10:
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    adds r0, r4, #0
    bl breaking_reforming_block_anim
    b lbl_08059c52
lbl_08059c1e:
    ldr r2, lbl_08059c70 @ =0x08345b08
    ldrb r1, [r4, #2]
    movs r0, #0xd
    muls r1, r0, r1
    ldrb r0, [r4, #1]
    adds r1, r1, r0
    adds r1, r1, r2
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    ldrb r1, [r1]
    cmp r0, r1
    blo lbl_08059c52
    strh r5, [r4, #6]
    adds r0, r7, #1
    strb r0, [r4, #1]
    adds r0, r4, #0
    bl breaking_reforming_block_anim
    ldrb r0, [r4, #1]
    cmp r0, #6
    bls lbl_08059c52
    strb r6, [r4]
    strb r6, [r4, #1]
    strb r6, [r4, #2]
    strb r6, [r4, #3]
    strb r6, [r4, #4]
lbl_08059c52:
    movs r1, #1
    rsbs r1, r1, #0
    add sb, r1
    adds r4, #8
    mov r0, sb
    cmp r0, #0
    blt lbl_08059c62
    b lbl_08059b62
lbl_08059c62:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08059c70: .4byte 0x08345b08

    thumb_func_start breaking_reforming_block_anim
breaking_reforming_block_anim: @ 0x08059c74
    push {r4, r5, lr}
    adds r4, r0, #0
    movs r5, #0
    ldrb r0, [r4, #1]
    cmp r0, #0xd
    bhi lbl_08059cfc
    lsls r0, r0, #2
    ldr r1, lbl_08059c8c @ =lbl_08059c90
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08059c8c: .4byte lbl_08059c90
lbl_08059c90: @ jump table
    .4byte lbl_08059cfc @ case 0
    .4byte lbl_08059cfc @ case 1
    .4byte lbl_08059cc8 @ case 2
    .4byte lbl_08059cd8 @ case 3
    .4byte lbl_08059ce0 @ case 4
    .4byte lbl_08059ce8 @ case 5
    .4byte lbl_08059cf0 @ case 6
    .4byte lbl_08059cf8 @ case 7
    .4byte lbl_08059cf0 @ case 8
    .4byte lbl_08059ce8 @ case 9
    .4byte lbl_08059ce0 @ case 10
    .4byte lbl_08059cd8 @ case 11
    .4byte lbl_08059cc8 @ case 12
    .4byte lbl_08059cfc @ case 13
lbl_08059cc8:
    ldr r1, lbl_08059cd4 @ =0x08345adc
    ldrb r0, [r4, #2]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r5, [r0]
    b lbl_08059cfc
    .align 2, 0
lbl_08059cd4: .4byte 0x08345adc
lbl_08059cd8:
    ldr r5, lbl_08059cdc @ =0x00000401
    b lbl_08059d00
    .align 2, 0
lbl_08059cdc: .4byte 0x00000401
lbl_08059ce0:
    ldr r5, lbl_08059ce4 @ =0x00000402
    b lbl_08059d00
    .align 2, 0
lbl_08059ce4: .4byte 0x00000402
lbl_08059ce8:
    ldr r5, lbl_08059cec @ =0x00000403
    b lbl_08059d00
    .align 2, 0
lbl_08059cec: .4byte 0x00000403
lbl_08059cf0:
    ldr r5, lbl_08059cf4 @ =0x00000404
    b lbl_08059d00
    .align 2, 0
lbl_08059cf4: .4byte 0x00000404
lbl_08059cf8:
    movs r5, #0x80
    lsls r5, r5, #3
lbl_08059cfc:
    cmp r5, #0
    beq lbl_08059d8a
lbl_08059d00:
    ldr r2, lbl_08059d90 @ =0x0300009c
    ldrb r1, [r4, #4]
    ldrh r0, [r2, #0xc]
    muls r0, r1, r0
    ldrb r1, [r4, #3]
    adds r0, r0, r1
    ldr r1, [r2, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    strh r5, [r0]
    ldr r0, lbl_08059d94 @ =0x030013ba
    ldrh r0, [r0]
    lsrs r3, r0, #6
    subs r0, r3, #4
    ldrb r2, [r4, #4]
    cmp r0, r2
    bgt lbl_08059d8a
    adds r0, #0x11
    cmp r2, r0
    bgt lbl_08059d8a
    ldr r0, lbl_08059d98 @ =0x030013b8
    ldrh r0, [r0]
    lsrs r3, r0, #6
    subs r0, r3, #4
    ldrb r1, [r4, #3]
    cmp r0, r1
    bgt lbl_08059d8a
    adds r0, #0x16
    cmp r1, r0
    bgt lbl_08059d8a
    ldr r4, lbl_08059d9c @ =0x06001000
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08059d48
    ldr r4, lbl_08059da0 @ =0x06001800
lbl_08059d48:
    movs r0, #0xf
    ands r1, r0
    lsls r3, r1, #1
    ands r2, r0
    lsls r0, r2, #6
    adds r0, r0, r3
    lsls r0, r0, #1
    adds r4, r4, r0
    lsls r3, r5, #2
    ldr r0, lbl_08059da4 @ =0x03005450
    ldr r1, [r0]
    lsls r0, r5, #3
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r4]
    adds r3, #1
    lsls r0, r3, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r4, #2]
    adds r3, #1
    adds r2, r4, #0
    adds r2, #0x40
    lsls r0, r3, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r2]
    adds r3, #1
    adds r2, #2
    lsls r0, r3, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r2]
lbl_08059d8a:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08059d90: .4byte 0x0300009c
lbl_08059d94: .4byte 0x030013ba
lbl_08059d98: .4byte 0x030013b8
lbl_08059d9c: .4byte 0x06001000
lbl_08059da0: .4byte 0x06001800
lbl_08059da4: .4byte 0x03005450

    thumb_func_start store_broken_reform_block
store_broken_reform_block: @ 0x08059da8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov ip, r0
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r5, r2, #0x10
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    mov r8, r3
    movs r1, #0
    ldr r4, lbl_08059dcc @ =0x03005528
    movs r3, #0
    adds r7, r4, #0
    b lbl_08059de8
    .align 2, 0
lbl_08059dcc: .4byte 0x03005528
lbl_08059dd0:
    movs r2, #0x80
    adds r0, r1, #0
    ands r0, r2
    cmp r0, #0
    bne lbl_08059de4
    ldrb r0, [r4, #1]
    cmp r0, #0
    bne lbl_08059de4
    adds r1, r3, #0
    orrs r1, r2
lbl_08059de4:
    adds r3, #1
    adds r4, #8
lbl_08059de8:
    cmp r3, #0x2f
    bgt lbl_08059e02
    ldrb r0, [r4, #3]
    cmp r0, r6
    bne lbl_08059dd0
    ldrb r0, [r4, #4]
    cmp r0, r5
    bne lbl_08059dd0
    ldrb r0, [r4, #1]
    movs r1, #0
    cmp r0, #0
    bne lbl_08059e02
    movs r1, #1
lbl_08059e02:
    cmp r1, #0
    beq lbl_08059e48
    cmp r1, #1
    beq lbl_08059e0e
    movs r3, #0x7f
    ands r3, r1
lbl_08059e0e:
    lsls r0, r3, #3
    adds r4, r0, r7
    movs r0, #0
    movs r2, #1
    strb r2, [r4]
    mov r3, ip
    strb r3, [r4, #2]
    strh r0, [r4, #6]
    movs r0, #0x80
    ands r1, r0
    cmp r1, #0
    beq lbl_08059e2a
    strb r6, [r4, #3]
    strb r5, [r4, #4]
lbl_08059e2a:
    mov r0, r8
    cmp r0, #0
    bne lbl_08059e44
    movs r0, #2
    strb r0, [r4, #1]
    adds r0, r5, #0
    adds r1, r6, #0
    bl sub_0805a3e0
    adds r0, r4, #0
    bl breaking_reforming_block_anim
    b lbl_08059e46
lbl_08059e44:
    strb r2, [r4, #1]
lbl_08059e46:
    movs r1, #1
lbl_08059e48:
    adds r0, r1, #0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start store_broken_non_reform_block
store_broken_non_reform_block: @ 0x08059e54
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    mov r8, r1
    lsls r2, r2, #0x18
    lsrs r7, r2, #0x18
    ldr r4, lbl_08059e90 @ =0x03005528
    movs r6, #0
    adds r2, r4, #0
lbl_08059e70:
    ldrb r1, [r4, #1]
    cmp r1, #0
    bne lbl_08059e94
    strb r1, [r4]
    movs r0, #2
    strb r0, [r4, #1]
    strb r7, [r4, #2]
    strh r1, [r4, #6]
    strb r3, [r4, #3]
    mov r0, r8
    strb r0, [r4, #4]
    adds r0, r4, #0
    bl breaking_reforming_block_anim
    b lbl_08059eea
    .align 2, 0
lbl_08059e90: .4byte 0x03005528
lbl_08059e94:
    adds r6, #1
    adds r4, #8
    cmp r6, #0x2f
    ble lbl_08059e70
    movs r1, #4
lbl_08059e9e:
    adds r4, r2, #0
    movs r6, #0
lbl_08059ea2:
    ldrb r5, [r4]
    cmp r5, #0
    bne lbl_08059edc
    ldrb r0, [r4, #1]
    cmp r0, r1
    blt lbl_08059edc
    ldrb r1, [r4, #4]
    ldrb r2, [r4, #3]
    movs r0, #0
    str r3, [sp]
    bl set_bg1_block_value
    strb r5, [r4]
    movs r0, #2
    strb r0, [r4, #1]
    strb r7, [r4, #2]
    strh r5, [r4, #6]
    ldr r3, [sp]
    strb r3, [r4, #3]
    mov r0, r8
    strb r0, [r4, #4]
    lsls r0, r6, #3
    ldr r1, lbl_08059ed8 @ =0x03005528
    adds r0, r0, r1
    bl breaking_reforming_block_anim
    b lbl_08059eea
    .align 2, 0
lbl_08059ed8: .4byte 0x03005528
lbl_08059edc:
    adds r6, #1
    adds r4, #8
    cmp r6, #0x2f
    ble lbl_08059ea2
    asrs r1, r1, #1
    cmp r1, #0
    bne lbl_08059e9e
lbl_08059eea:
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_08059ef8
sub_08059ef8: @ 0x08059ef8
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r5, r2, #0x10
    movs r1, #0
    ldr r3, lbl_08059f6c @ =0x03005528
    movs r4, #0
    ldrb r0, [r3, #3]
    mov ip, r3
    cmp r0, r6
    bne lbl_08059f1a
    ldrb r0, [r3, #4]
    cmp r0, r5
    beq lbl_08059f62
lbl_08059f1a:
    movs r2, #0x80
    adds r0, r1, #0
    ands r0, r2
    cmp r0, #0
    bne lbl_08059f2e
    ldrb r0, [r3, #1]
    cmp r0, #0
    bne lbl_08059f2e
    adds r1, r4, #0
    orrs r1, r2
lbl_08059f2e:
    adds r4, #1
    adds r3, #8
    cmp r4, #0x2f
    bgt lbl_08059f44
    ldrb r0, [r3, #3]
    cmp r0, r6
    bne lbl_08059f1a
    ldrb r0, [r3, #4]
    cmp r0, r5
    bne lbl_08059f1a
    movs r1, #0
lbl_08059f44:
    cmp r1, #0
    beq lbl_08059f62
    movs r0, #0x7f
    ands r1, r0
    lsls r0, r1, #3
    mov r1, ip
    adds r3, r0, r1
    movs r0, #0
    strb r0, [r3]
    strb r0, [r3, #1]
    strb r7, [r3, #2]
    strh r0, [r3, #6]
    strb r6, [r3, #3]
    strb r5, [r3, #4]
    movs r1, #1
lbl_08059f62:
    adds r0, r1, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08059f6c: .4byte 0x03005528

    thumb_func_start check_samus_in_reforming_block
check_samus_in_reforming_block: @ 0x08059f70
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r5, r1, #0x18
    movs r6, #0
    ldr r1, lbl_08059fd8 @ =0x030013d4
    ldrh r3, [r1, #0x12]
    ldr r2, lbl_08059fdc @ =0x03001588
    adds r0, r2, #0
    adds r0, #0x6e
    movs r7, #0
    ldrsh r0, [r0, r7]
    adds r0, r3, r0
    asrs r0, r0, #6
    cmp r0, r4
    bgt lbl_08059fa4
    adds r0, r2, #0
    adds r0, #0x72
    movs r7, #0
    ldrsh r0, [r0, r7]
    adds r0, r3, r0
    asrs r0, r0, #6
    cmp r4, r0
    bgt lbl_08059fa4
    movs r6, #1
lbl_08059fa4:
    movs r3, #0
    ldrh r1, [r1, #0x14]
    adds r0, r2, #0
    adds r0, #0x70
    movs r4, #0
    ldrsh r0, [r0, r4]
    adds r0, r1, r0
    asrs r0, r0, #6
    cmp r0, r5
    bgt lbl_08059fca
    adds r0, r2, #0
    adds r0, #0x74
    movs r7, #0
    ldrsh r0, [r0, r7]
    adds r0, r1, r0
    asrs r0, r0, #6
    cmp r5, r0
    bgt lbl_08059fca
    movs r3, #1
lbl_08059fca:
    movs r0, #0
    cmp r6, #0
    beq lbl_08059fd2
    adds r0, r3, #0
lbl_08059fd2:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08059fd8: .4byte 0x030013d4
lbl_08059fdc: .4byte 0x03001588

    thumb_func_start start_bomb_chain
start_bomb_chain: @ 0x08059fe0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    mov sb, r1
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov ip, r2
    movs r0, #0
    mov r8, r0
    movs r2, #3
    ldr r0, lbl_0805a04c @ =0x030056ac
    movs r4, #7
    ands r4, r5
    movs r1, #8
    rsbs r1, r1, #0
    mov sl, r1
    ldr r6, lbl_0805a050 @ =0x030056bc
    ldr r1, lbl_0805a054 @ =0x08345c28
    adds r3, r0, #0
    adds r3, #0xc
    lsls r0, r5, #2
    adds r7, r0, r1
lbl_0805a018:
    ldrb r0, [r3]
    cmp r0, #0
    bne lbl_0805a058
    movs r0, #1
    strb r0, [r3]
    mov r0, sb
    strb r0, [r3, #1]
    mov r1, ip
    strb r1, [r3, #2]
    ldrb r0, [r3, #3]
    movs r1, #0x40
    orrs r0, r1
    movs r1, #0x80
    orrs r0, r1
    mov r1, sl
    ands r0, r1
    orrs r0, r4
    strb r0, [r3, #3]
    ldrb r0, [r6]
    ldrb r1, [r7]
    orrs r0, r1
    strb r0, [r6]
    movs r0, #1
    mov r8, r0
    b lbl_0805a066
    .align 2, 0
lbl_0805a04c: .4byte 0x030056ac
lbl_0805a050: .4byte 0x030056bc
lbl_0805a054: .4byte 0x08345c28
lbl_0805a058:
    subs r3, #4
    subs r2, #1
    cmp r2, #0
    bge lbl_0805a018
    mov r1, r8
    cmp r1, #0
    beq lbl_0805a07e
lbl_0805a066:
    ldr r2, lbl_0805a090 @ =0x030056bc
    ldr r1, lbl_0805a094 @ =0x08345c28
    lsls r0, r5, #2
    adds r0, r0, r1
    ldrb r1, [r2]
    ldrb r0, [r0]
    cmp r1, r0
    bne lbl_0805a07e
    movs r0, #0x9b
    lsls r0, r0, #1
    bl SoundPlayNotAlreadyPlaying
lbl_0805a07e:
    mov r0, r8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0805a090: .4byte 0x030056bc
lbl_0805a094: .4byte 0x08345c28

    thumb_func_start process_bomb_chains
process_bomb_chains: @ 0x0805a098
    push {r4, r5, lr}
    sub sp, #8
    ldr r4, lbl_0805a150 @ =0x030056ac
    ldr r0, lbl_0805a154 @ =0x03000c77
    ldrb r1, [r0]
    movs r0, #3
    ands r0, r1
    lsls r0, r0, #2
    adds r4, r0, r4
    ldrb r0, [r4]
    cmp r0, #0
    bne lbl_0805a0b2
    b lbl_0805a320
lbl_0805a0b2:
    movs r3, #0
    ldr r0, [r4]
    lsls r2, r0, #5
    lsrs r0, r2, #0x1d
    cmp r0, #3
    bls lbl_0805a0c0
    movs r3, #1
lbl_0805a0c0:
    ldr r1, lbl_0805a158 @ =0x08345c28
    lsrs r0, r2, #0x1d
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrh r1, [r0, #2]
    ldr r0, lbl_0805a15c @ =0xffff0000
    mov r5, sp
    ldr r2, [sp, #4]
    ands r2, r0
    orrs r2, r1
    str r2, [sp, #4]
    ldrb r0, [r5, #4]
    subs r0, #0x10
    lsls r0, r0, #0x18
    lsrs r0, r0, #8
    ldr r1, lbl_0805a160 @ =0xff00ffff
    ands r1, r2
    orrs r1, r0
    str r1, [sp, #4]
    movs r0, #0
    str r0, [sp]
    cmp r3, #0
    beq lbl_0805a0f0
    b lbl_0805a1f4
lbl_0805a0f0:
    ldrb r3, [r4, #1]
    str r3, [sp]
    ldrb r1, [r4, #3]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_0805a18a
    ldrb r0, [r4, #2]
    ldrb r1, [r4]
    subs r0, r0, r1
    lsls r0, r0, #0x10
    ldr r2, lbl_0805a164 @ =0x0000ffff
    ands r2, r3
    orrs r2, r0
    str r2, [sp]
    lsrs r0, r2, #0x10
    cmp r0, #1
    bls lbl_0805a144
    ldr r3, lbl_0805a168 @ =0x0300009c
    lsrs r2, r2, #0x10
    ldrh r0, [r3, #0x1c]
    mov r1, sp
    muls r0, r2, r0
    ldrh r1, [r1]
    adds r0, r0, r1
    ldr r1, [r3, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    ldr r0, lbl_0805a16c @ =0x03005450
    ldr r1, [r0, #8]
    lsls r0, r2, #1
    adds r0, r0, r1
    ldrh r1, [r5, #4]
    ldrh r0, [r0]
    cmp r1, r0
    bne lbl_0805a170
    mov r0, sp
    bl sub_080592c4
    cmp r0, #0
    bne lbl_0805a18a
lbl_0805a144:
    ldrb r1, [r4, #3]
    movs r0, #0x41
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r4, #3]
    b lbl_0805a18a
    .align 2, 0
lbl_0805a150: .4byte 0x030056ac
lbl_0805a154: .4byte 0x03000c77
lbl_0805a158: .4byte 0x08345c28
lbl_0805a15c: .4byte 0xffff0000
lbl_0805a160: .4byte 0xff00ffff
lbl_0805a164: .4byte 0x0000ffff
lbl_0805a168: .4byte 0x0300009c
lbl_0805a16c: .4byte 0x03005450
lbl_0805a170:
    ldrb r1, [r4, #3]
    movs r0, #0x41
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r4, #3]
    mov r0, sp
    ldrb r1, [r0]
    ldrh r2, [r5, #2]
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r0, #0
    bl sub_0805a330
lbl_0805a18a:
    ldrb r1, [r4, #3]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    bne lbl_0805a196
    b lbl_0805a2e8
lbl_0805a196:
    ldrb r0, [r4, #2]
    ldrb r1, [r4]
    adds r0, r0, r1
    mov r5, sp
    strh r0, [r5, #2]
    ldrh r2, [r5, #2]
    ldr r3, lbl_0805a1ec @ =0x0300009c
    ldrh r0, [r3, #0x1e]
    subs r0, #2
    cmp r2, r0
    blt lbl_0805a1ae
    b lbl_0805a2be
lbl_0805a1ae:
    ldrh r0, [r3, #0x1c]
    mov r1, sp
    muls r0, r2, r0
    ldrh r1, [r1]
    adds r0, r0, r1
    ldr r1, [r3, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    ldr r0, lbl_0805a1f0 @ =0x03005450
    ldr r1, [r0, #8]
    lsls r0, r2, #1
    adds r0, r0, r1
    ldrh r1, [r5, #4]
    ldrh r0, [r0]
    cmp r1, r0
    beq lbl_0805a2b4
    ldrb r1, [r4, #3]
    movs r0, #0x7f
    ands r0, r1
    strb r0, [r4, #3]
    mov r0, sp
    ldrb r1, [r0]
    ldrh r2, [r5, #2]
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r0, #1
    bl sub_0805a330
    b lbl_0805a2e8
    .align 2, 0
lbl_0805a1ec: .4byte 0x0300009c
lbl_0805a1f0: .4byte 0x03005450
lbl_0805a1f4:
    ldrb r0, [r4, #2]
    strh r0, [r5, #2]
    ldrb r1, [r4, #3]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_0805a272
    ldrb r0, [r4, #1]
    ldrb r1, [r4]
    subs r0, r0, r1
    mov r1, sp
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #1
    bls lbl_0805a244
    ldr r3, lbl_0805a250 @ =0x0300009c
    ldrh r2, [r5, #2]
    ldrh r0, [r3, #0x1c]
    mov r1, sp
    muls r0, r2, r0
    ldrh r1, [r1]
    adds r0, r0, r1
    ldr r1, [r3, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    ldr r0, lbl_0805a254 @ =0x03005450
    ldr r1, [r0, #8]
    lsls r0, r2, #1
    adds r0, r0, r1
    ldrh r1, [r5, #4]
    ldrh r0, [r0]
    cmp r1, r0
    bne lbl_0805a258
    mov r0, sp
    bl sub_080592c4
    cmp r0, #0
    bne lbl_0805a272
lbl_0805a244:
    ldrb r1, [r4, #3]
    movs r0, #0x41
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r4, #3]
    b lbl_0805a272
    .align 2, 0
lbl_0805a250: .4byte 0x0300009c
lbl_0805a254: .4byte 0x03005450
lbl_0805a258:
    ldrb r1, [r4, #3]
    movs r0, #0x41
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r4, #3]
    mov r0, sp
    ldrb r1, [r0]
    ldrh r2, [r5, #2]
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r0, #2
    bl sub_0805a330
lbl_0805a272:
    ldrb r1, [r4, #3]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0805a2e8
    ldrb r0, [r4, #1]
    ldrb r1, [r4]
    adds r0, r0, r1
    mov r1, sp
    strh r0, [r1]
    mov r0, sp
    ldrh r2, [r0]
    ldr r5, lbl_0805a2c8 @ =0x0300009c
    ldrh r1, [r5, #0x1c]
    subs r0, r1, #2
    cmp r2, r0
    bge lbl_0805a2be
    mov r3, sp
    ldrh r0, [r3, #2]
    muls r0, r1, r0
    adds r0, r0, r2
    ldr r1, [r5, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    ldr r0, lbl_0805a2cc @ =0x03005450
    ldr r1, [r0, #8]
    lsls r0, r2, #1
    adds r0, r0, r1
    ldrh r1, [r3, #4]
    ldrh r0, [r0]
    cmp r1, r0
    bne lbl_0805a2d0
lbl_0805a2b4:
    mov r0, sp
    bl sub_080592c4
    cmp r0, #0
    bne lbl_0805a2e8
lbl_0805a2be:
    ldrb r1, [r4, #3]
    movs r0, #0x7f
    ands r0, r1
    strb r0, [r4, #3]
    b lbl_0805a2e8
    .align 2, 0
lbl_0805a2c8: .4byte 0x0300009c
lbl_0805a2cc: .4byte 0x03005450
lbl_0805a2d0:
    ldrb r1, [r4, #3]
    movs r0, #0x7f
    ands r0, r1
    strb r0, [r4, #3]
    mov r0, sp
    ldrb r1, [r0]
    ldrh r2, [r3, #2]
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r0, #3
    bl sub_0805a330
lbl_0805a2e8:
    ldrb r0, [r4, #3]
    movs r1, #0xc0
    ands r1, r0
    cmp r1, #0
    beq lbl_0805a2fa
    ldrb r0, [r4]
    adds r0, #1
    strb r0, [r4]
    b lbl_0805a320
lbl_0805a2fa:
    strb r1, [r4]
    ldr r2, lbl_0805a328 @ =0x030056bc
    ldr r1, lbl_0805a32c @ =0x08345c28
    ldr r0, [r4]
    lsls r0, r0, #5
    lsrs r0, r0, #0x1d
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r1, [r0]
    ldrb r0, [r2]
    bics r0, r1
    strb r0, [r2]
    cmp r0, #0
    bne lbl_0805a320
    movs r0, #0x9b
    lsls r0, r0, #1
    movs r1, #0xa
    bl SoundFade
lbl_0805a320:
    add sp, #8
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805a328: .4byte 0x030056bc
lbl_0805a32c: .4byte 0x08345c28

    thumb_func_start sub_0805a330
sub_0805a330: @ 0x0805a330
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov sb, r1
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    mov r8, r2
    ldr r1, lbl_0805a3d4 @ =0x03000079
    movs r0, #0xf
    strb r0, [r1]
    ldr r4, lbl_0805a3d8 @ =0x0300009c
    ldrh r0, [r4, #0x1c]
    mov r1, r8
    muls r1, r0, r1
    adds r0, r1, #0
    add r0, sb
    ldr r1, [r4, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    cmp r2, #0
    beq lbl_0805a370
    mov r0, r8
    mov r1, sb
    bl apply_current_clipdata_affecting_action
lbl_0805a370:
    movs r6, #0
    mov sl, r4
    lsls r7, r5, #2
    ldr r2, lbl_0805a3dc @ =0x08345cde
    adds r5, r7, r2
lbl_0805a37a:
    lsls r0, r6, #1
    adds r1, r7, #1
    adds r0, r0, r1
    ldr r1, lbl_0805a3dc @ =0x08345cde
    adds r0, r0, r1
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    mov r2, r8
    adds r4, r2, r0
    mov r1, sl
    ldrh r0, [r1, #0x1c]
    muls r0, r4, r0
    movs r1, #0
    ldrsb r1, [r5, r1]
    mov r2, sb
    adds r3, r2, r1
    adds r0, r0, r3
    mov r2, sl
    ldr r1, [r2, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r2, [r0]
    cmp r2, #0
    beq lbl_0805a3b8
    lsls r0, r4, #0x10
    lsrs r0, r0, #0x10
    lsls r1, r3, #0x10
    lsrs r1, r1, #0x10
    bl apply_current_clipdata_affecting_action
lbl_0805a3b8:
    adds r5, #2
    adds r6, #1
    cmp r6, #1
    ble lbl_0805a37a
    ldr r1, lbl_0805a3d4 @ =0x03000079
    movs r0, #0
    strb r0, [r1]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805a3d4: .4byte 0x03000079
lbl_0805a3d8: .4byte 0x0300009c
lbl_0805a3dc: .4byte 0x08345cde

    thumb_func_start sub_0805a3e0
sub_0805a3e0: @ 0x0805a3e0
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    adds r6, r4, #0
    lsls r1, r1, #0x10
    lsrs r5, r1, #0x10
    adds r7, r5, #0
    ldr r2, lbl_0805a46c @ =0x0300009c
    ldrh r0, [r2, #0x1c]
    adds r1, r4, #0
    muls r1, r0, r1
    adds r0, r1, #0
    adds r0, r5, r0
    lsls r0, r0, #0x10
    ldr r1, [r2, #0x18]
    lsrs r0, r0, #0xf
    adds r1, r0, r1
    movs r3, #0
    strh r3, [r1]
    ldr r1, [r2, #8]
    adds r0, r0, r1
    strh r3, [r0]
    ldr r0, lbl_0805a470 @ =0x030013ba
    ldrh r0, [r0]
    lsrs r1, r0, #6
    subs r0, r1, #4
    cmp r0, r4
    bgt lbl_0805a466
    adds r0, #0x11
    cmp r4, r0
    bgt lbl_0805a466
    ldr r0, lbl_0805a474 @ =0x030013b8
    ldrh r0, [r0]
    lsrs r1, r0, #6
    subs r0, r1, #4
    cmp r0, r5
    bgt lbl_0805a466
    adds r0, #0x16
    cmp r5, r0
    bgt lbl_0805a466
    ldr r3, lbl_0805a478 @ =0x06001000
    movs r0, #0x10
    ands r0, r5
    cmp r0, #0
    beq lbl_0805a43c
    ldr r3, lbl_0805a47c @ =0x06001800
lbl_0805a43c:
    movs r1, #0xf
    ands r6, r1
    lsls r0, r6, #6
    ands r7, r1
    lsls r1, r7, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    adds r3, r3, r0
    ldr r0, lbl_0805a480 @ =0x03005450
    ldr r1, [r0]
    ldrh r0, [r1]
    strh r0, [r3]
    ldrh r0, [r1, #2]
    strh r0, [r3, #2]
    adds r2, r3, #0
    adds r2, #0x40
    ldrh r0, [r1, #4]
    strh r0, [r2]
    adds r2, #2
    ldrh r0, [r1, #6]
    strh r0, [r2]
lbl_0805a466:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805a46c: .4byte 0x0300009c
lbl_0805a470: .4byte 0x030013ba
lbl_0805a474: .4byte 0x030013b8
lbl_0805a478: .4byte 0x06001000
lbl_0805a47c: .4byte 0x06001800
lbl_0805a480: .4byte 0x03005450

    thumb_func_start mother_brain_update_glass
mother_brain_update_glass: @ 0x0805a484
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    mov ip, r1
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    adds r6, r2, #0
    lsls r3, r3, #0x10
    lsrs r3, r3, #0x10
    adds r7, r3, #0
    ldr r0, lbl_0805a548 @ =0x0300009c
    lsls r1, r5, #3
    adds r1, r1, r0
    ldrh r0, [r1, #4]
    muls r0, r2, r0
    adds r0, r0, r3
    ldr r1, [r1]
    lsls r0, r0, #1
    adds r0, r0, r1
    mov r1, ip
    strh r1, [r0]
    ldr r0, lbl_0805a54c @ =0x030013ba
    ldrh r0, [r0]
    lsrs r4, r0, #6
    subs r0, r4, #4
    cmp r0, r2
    bgt lbl_0805a540
    adds r0, #0x11
    cmp r2, r0
    bgt lbl_0805a540
    ldr r0, lbl_0805a550 @ =0x030013b8
    ldrh r0, [r0]
    lsrs r4, r0, #6
    subs r0, r4, #4
    cmp r0, r3
    bgt lbl_0805a540
    adds r0, #0x16
    cmp r3, r0
    bgt lbl_0805a540
    lsls r1, r5, #0xc
    movs r0, #0xc0
    lsls r0, r0, #0x13
    adds r5, r1, r0
    movs r0, #0x10
    ands r0, r3
    cmp r0, #0
    beq lbl_0805a4ea
    ldr r0, lbl_0805a554 @ =0x06000800
    adds r5, r1, r0
lbl_0805a4ea:
    movs r1, #0xf
    ands r6, r1
    lsls r0, r6, #6
    ands r7, r1
    lsls r1, r7, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    adds r5, r5, r0
    mov r1, ip
    lsls r0, r1, #0x12
    lsrs r4, r0, #0x10
    adds r1, r4, #0
    ldr r3, lbl_0805a558 @ =0x03005450
    movs r0, #1
    orrs r4, r0
    adds r2, r4, #0
    ldr r3, [r3]
    lsls r1, r1, #1
    adds r1, r1, r3
    ldrh r0, [r1]
    strh r0, [r5]
    adds r0, r2, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    adds r1, r4, #0
    lsls r2, r2, #1
    adds r2, r2, r3
    ldrh r0, [r2]
    strh r0, [r5, #2]
    adds r2, r5, #0
    adds r2, #0x40
    adds r0, r1, #1
    lsls r0, r0, #0x10
    lsls r1, r1, #1
    adds r1, r1, r3
    ldrh r1, [r1]
    strh r1, [r2]
    adds r1, r5, #0
    adds r1, #0x42
    lsrs r0, r0, #0xf
    adds r0, r0, r3
    ldrh r0, [r0]
    strh r0, [r1]
lbl_0805a540:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805a548: .4byte 0x0300009c
lbl_0805a54c: .4byte 0x030013ba
lbl_0805a550: .4byte 0x030013b8
lbl_0805a554: .4byte 0x06000800
lbl_0805a558: .4byte 0x03005450

    thumb_func_start set_bg1_block_value
set_bg1_block_value: @ 0x0805a55c
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov ip, r0
    lsls r1, r1, #0x10
    lsrs r3, r1, #0x10
    adds r6, r3, #0
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    adds r7, r2, #0
    ldr r1, lbl_0805a610 @ =0x0300009c
    ldrh r0, [r1, #0xc]
    muls r0, r3, r0
    adds r0, r0, r2
    ldr r1, [r1, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    mov r1, ip
    strh r1, [r0]
    ldr r0, lbl_0805a614 @ =0x030013ba
    ldrh r0, [r0]
    lsrs r4, r0, #6
    subs r0, r4, #4
    cmp r0, r3
    bgt lbl_0805a608
    adds r0, #0x11
    cmp r3, r0
    bgt lbl_0805a608
    ldr r0, lbl_0805a618 @ =0x030013b8
    ldrh r0, [r0]
    lsrs r4, r0, #6
    subs r0, r4, #4
    cmp r0, r2
    bgt lbl_0805a608
    adds r0, #0x16
    cmp r2, r0
    bgt lbl_0805a608
    ldr r5, lbl_0805a61c @ =0x06001000
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0
    beq lbl_0805a5b2
    ldr r5, lbl_0805a620 @ =0x06001800
lbl_0805a5b2:
    movs r1, #0xf
    ands r6, r1
    lsls r0, r6, #6
    ands r7, r1
    lsls r1, r7, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    adds r5, r5, r0
    mov r1, ip
    lsls r0, r1, #0x12
    lsrs r4, r0, #0x10
    adds r1, r4, #0
    ldr r3, lbl_0805a624 @ =0x03005450
    movs r0, #1
    orrs r4, r0
    adds r2, r4, #0
    ldr r3, [r3]
    lsls r1, r1, #1
    adds r1, r1, r3
    ldrh r0, [r1]
    strh r0, [r5]
    adds r0, r2, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    adds r1, r4, #0
    lsls r2, r2, #1
    adds r2, r2, r3
    ldrh r0, [r2]
    strh r0, [r5, #2]
    adds r2, r5, #0
    adds r2, #0x40
    adds r0, r1, #1
    lsls r0, r0, #0x10
    lsls r1, r1, #1
    adds r1, r1, r3
    ldrh r1, [r1]
    strh r1, [r2]
    adds r1, r5, #0
    adds r1, #0x42
    lsrs r0, r0, #0xf
    adds r0, r0, r3
    ldrh r0, [r0]
    strh r0, [r1]
lbl_0805a608:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805a610: .4byte 0x0300009c
lbl_0805a614: .4byte 0x030013ba
lbl_0805a618: .4byte 0x030013b8
lbl_0805a61c: .4byte 0x06001000
lbl_0805a620: .4byte 0x06001800
lbl_0805a624: .4byte 0x03005450

    thumb_func_start set_raw_bg1_block_value
set_raw_bg1_block_value: @ 0x0805a628
    push {r4, lr}
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    ldr r4, lbl_0805a648 @ =0x0300009c
    ldrh r3, [r4, #0xc]
    muls r1, r3, r1
    adds r1, r1, r2
    ldr r2, [r4, #8]
    lsls r1, r1, #1
    adds r1, r1, r2
    strh r0, [r1]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805a648: .4byte 0x0300009c

    thumb_func_start set_clipdata_block_value
set_clipdata_block_value: @ 0x0805a64c
    push {r4, lr}
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    ldr r4, lbl_0805a66c @ =0x0300009c
    ldrh r3, [r4, #0x1c]
    muls r1, r3, r1
    adds r1, r1, r2
    ldr r2, [r4, #0x18]
    lsls r1, r1, #1
    adds r1, r1, r2
    strh r0, [r1]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805a66c: .4byte 0x0300009c

    thumb_func_start check_special_clipdata
check_special_clipdata: @ 0x0805a670
    push {lr}
    movs r0, #0
    bl check_grabbing_crumble_block
    ldr r0, lbl_0805a688 @ =0x030013d4
    ldrb r0, [r0]
    cmp r0, #0x1d
    bne lbl_0805a68c
    bl check_touching_transition_on_elevator
    b lbl_0805a6c0
    .align 2, 0
lbl_0805a688: .4byte 0x030013d4
lbl_0805a68c:
    ldr r0, lbl_0805a6a8 @ =0x03000048
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0805a6c0
    ldr r0, lbl_0805a6ac @ =0x03000c77
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0805a6b0
    bl check_touching_transition_or_tank
    b lbl_0805a6bc
    .align 2, 0
lbl_0805a6a8: .4byte 0x03000048
lbl_0805a6ac: .4byte 0x03000c77
lbl_0805a6b0:
    ldr r0, lbl_0805a6c4 @ =0x0300004c
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0805a6bc
    bl apply_clipdata_changing_transparency
lbl_0805a6bc:
    bl check_walking_on_crumble_block
lbl_0805a6c0:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805a6c4: .4byte 0x0300004c

    thumb_func_start apply_clipdata_changing_transparency
apply_clipdata_changing_transparency: @ 0x0805a6c8
    push {r4, r5, lr}
    ldr r0, lbl_0805a6f8 @ =0x030013d4
    ldrh r2, [r0, #0x12]
    adds r5, r0, #0
    ldr r1, lbl_0805a6fc @ =0x0300009c
    ldrh r0, [r1, #0x1c]
    lsls r0, r0, #6
    adds r4, r1, #0
    cmp r2, r0
    ble lbl_0805a6de
    adds r2, r0, #0
lbl_0805a6de:
    asrs r3, r2, #6
    ldr r0, lbl_0805a700 @ =0x03001588
    adds r0, #0x70
    ldrh r0, [r0]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x11
    ldrh r5, [r5, #0x14]
    adds r2, r0, r5
    cmp r2, #0
    bge lbl_0805a704
    movs r2, #0
    b lbl_0805a70e
    .align 2, 0
lbl_0805a6f8: .4byte 0x030013d4
lbl_0805a6fc: .4byte 0x0300009c
lbl_0805a700: .4byte 0x03001588
lbl_0805a704:
    ldrh r0, [r4, #0x1e]
    lsls r0, r0, #6
    cmp r2, r0
    ble lbl_0805a70e
    adds r2, r0, #0
lbl_0805a70e:
    asrs r1, r2, #6
    ldr r2, lbl_0805a750 @ =0x03005450
    ldrh r0, [r4, #0x1c]
    muls r0, r1, r0
    adds r0, r0, r3
    ldr r1, [r4, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    ldr r1, [r2, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_0805a76a
    adds r0, r1, #0
    bl check_clipdata_behavior_change_bldalpha
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0
    beq lbl_0805a76a
    ldr r0, lbl_0805a754 @ =0x0000ffff
    cmp r1, r0
    bne lbl_0805a75c
    ldr r1, lbl_0805a758 @ =0x030056c4
    ldrb r0, [r1, #3]
    ldrb r1, [r1, #2]
    movs r2, #1
    movs r3, #1
    bl TransparencyUpdateBLDALPHA
    b lbl_0805a76a
    .align 2, 0
lbl_0805a750: .4byte 0x03005450
lbl_0805a754: .4byte 0x0000ffff
lbl_0805a758: .4byte 0x030056c4
lbl_0805a75c:
    movs r0, #0xff
    ands r0, r1
    lsrs r1, r1, #8
    movs r2, #1
    movs r3, #1
    bl TransparencyUpdateBLDALPHA
lbl_0805a76a:
    pop {r4, r5}
    pop {r0}
    bx r0

    thumb_func_start check_clipdata_behavior_change_bldalpha
check_clipdata_behavior_change_bldalpha: @ 0x0805a770
    push {lr}
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r2, r1, #0
    subs r2, #0x44
    lsls r0, r2, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0xa
    bhi lbl_0805a790
    ldr r1, lbl_0805a78c @ =0x08345cc8
    lsls r0, r2, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    b lbl_0805a798
    .align 2, 0
lbl_0805a78c: .4byte 0x08345cc8
lbl_0805a790:
    movs r0, #0
    cmp r1, #0x4f
    bne lbl_0805a798
    ldr r0, lbl_0805a79c @ =0x0000ffff
lbl_0805a798:
    pop {r1}
    bx r1
    .align 2, 0
lbl_0805a79c: .4byte 0x0000ffff

    thumb_func_start check_walking_on_crumble_block
check_walking_on_crumble_block: @ 0x0805a7a0
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r5, lbl_0805a858 @ =0x030013d4
    movs r1, #0x18
    ldrsh r0, [r5, r1]
    lsrs r3, r0, #0x1f
    ldr r4, lbl_0805a85c @ =0x03001588
    adds r0, r4, #0
    adds r0, #0x56
    ldrb r0, [r0]
    cmp r0, #3
    bne lbl_0805a7bc
    adds r3, #1
lbl_0805a7bc:
    cmp r3, #0
    bne lbl_0805a89e
    ldrh r1, [r5, #0x12]
    adds r0, r4, #0
    adds r0, #0x72
    movs r2, #0
    ldrsh r0, [r0, r2]
    adds r3, r1, r0
    lsls r0, r3, #0xa
    lsrs r6, r0, #0x10
    ldr r2, lbl_0805a860 @ =0x0300009c
    ldrh r3, [r2, #0x1c]
    cmp r6, r3
    bls lbl_0805a7da
    ldrh r6, [r2, #0x1c]
lbl_0805a7da:
    adds r0, r4, #0
    adds r0, #0x6e
    movs r3, #0
    ldrsh r0, [r0, r3]
    adds r3, r1, r0
    cmp r3, #0
    bge lbl_0805a7ea
    movs r3, #0
lbl_0805a7ea:
    lsls r0, r3, #0xa
    lsrs r1, r0, #0x10
    adds r0, r4, #0
    adds r0, #0x74
    movs r3, #0
    ldrsh r0, [r0, r3]
    ldrh r5, [r5, #0x14]
    adds r3, r0, r5
    adds r0, r3, #2
    lsls r0, r0, #0xa
    lsrs r5, r0, #0x10
    ldrh r0, [r2, #0x1e]
    cmp r5, r0
    bls lbl_0805a808
    ldrh r5, [r2, #0x1e]
lbl_0805a808:
    adds r4, r1, #0
    cmp r4, r6
    bhi lbl_0805a89e
    ldr r1, lbl_0805a864 @ =0x03005450
    mov r8, r1
    ldr r7, lbl_0805a868 @ =0x00000401
lbl_0805a814:
    ldr r1, lbl_0805a860 @ =0x0300009c
    ldrh r0, [r1, #0x1c]
    muls r0, r5, r0
    adds r0, r0, r4
    ldr r1, [r1, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    mov r2, r8
    ldr r1, [r2, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r3, [r0]
    cmp r3, #0x23
    bne lbl_0805a86c
    movs r3, #0
    ldr r1, lbl_0805a858 @ =0x030013d4
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0805a840
    cmp r0, #0x12
    bne lbl_0805a848
lbl_0805a840:
    ldrb r0, [r1, #5]
    cmp r0, #0
    beq lbl_0805a848
    movs r3, #1
lbl_0805a848:
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    movs r0, #4
    adds r1, r4, #0
    adds r2, r5, #0
    bl store_broken_reform_block
    b lbl_0805a894
    .align 2, 0
lbl_0805a858: .4byte 0x030013d4
lbl_0805a85c: .4byte 0x03001588
lbl_0805a860: .4byte 0x0300009c
lbl_0805a864: .4byte 0x03005450
lbl_0805a868: .4byte 0x00000401
lbl_0805a86c:
    cmp r3, #0x2e
    bne lbl_0805a894
    movs r0, #5
    adds r1, r4, #0
    adds r2, r5, #0
    movs r3, #1
    bl store_broken_reform_block
    cmp r0, #0
    beq lbl_0805a894
    adds r0, r7, #0
    adds r1, r5, #0
    adds r2, r4, #0
    bl set_bg1_block_value
    adds r0, r7, #0
    adds r1, r5, #0
    adds r2, r4, #0
    bl set_clipdata_block_value
lbl_0805a894:
    adds r0, r4, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, r6
    bls lbl_0805a814
lbl_0805a89e:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start check_touching_transition_on_elevator
check_touching_transition_on_elevator: @ 0x0805a8a8
    push {r4, r5, r6, r7, lr}
    ldr r2, lbl_0805a8e4 @ =0x030013d4
    ldrh r1, [r2, #0x10]
    movs r0, #0x40
    eors r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r7, r0, #0x1f
    ldrh r3, [r2, #0x12]
    ldr r1, lbl_0805a8e8 @ =0x0300009c
    ldrh r0, [r1, #0x1c]
    lsls r0, r0, #6
    adds r6, r1, #0
    cmp r3, r0
    ble lbl_0805a8c8
    adds r3, r0, #0
lbl_0805a8c8:
    lsls r0, r3, #0xa
    lsrs r5, r0, #0x10
    cmp r7, #0
    bne lbl_0805a8f0
    ldr r0, lbl_0805a8ec @ =0x03001588
    adds r0, #0x74
    movs r1, #0
    ldrsh r0, [r0, r1]
    ldrh r2, [r2, #0x14]
    adds r0, r0, r2
    adds r3, r0, #0
    adds r3, #0x80
    b lbl_0805a900
    .align 2, 0
lbl_0805a8e4: .4byte 0x030013d4
lbl_0805a8e8: .4byte 0x0300009c
lbl_0805a8ec: .4byte 0x03001588
lbl_0805a8f0:
    ldr r0, lbl_0805a90c @ =0x03001588
    adds r0, #0x70
    movs r1, #0
    ldrsh r0, [r0, r1]
    ldrh r2, [r2, #0x14]
    adds r0, r0, r2
    adds r3, r0, #0
    subs r3, #0x80
lbl_0805a900:
    lsls r0, r3, #0x10
    lsrs r1, r0, #0x10
    cmp r3, #0
    bge lbl_0805a910
    movs r1, #0
    b lbl_0805a91c
    .align 2, 0
lbl_0805a90c: .4byte 0x03001588
lbl_0805a910:
    ldrh r2, [r6, #0x1e]
    lsls r0, r2, #6
    cmp r1, r0
    ble lbl_0805a91c
    lsls r0, r2, #0x16
    lsrs r1, r0, #0x10
lbl_0805a91c:
    lsrs r4, r1, #6
    ldrh r0, [r6, #0x1c]
    muls r0, r4, r0
    adds r0, r0, r5
    ldr r1, [r6, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r3, [r0]
    ldr r0, lbl_0805a944 @ =0x03005450
    ldr r1, [r0, #8]
    lsls r0, r3, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    movs r3, #0
    cmp r7, #0
    bne lbl_0805a948
    cmp r1, #4
    bne lbl_0805a94e
    b lbl_0805a952
    .align 2, 0
lbl_0805a944: .4byte 0x03005450
lbl_0805a948:
    cmp r1, #5
    bne lbl_0805a94e
    movs r3, #1
lbl_0805a94e:
    cmp r3, #0
    beq lbl_0805a966
lbl_0805a952:
    adds r0, r4, #0
    adds r1, r5, #0
    bl check_area_connection
    cmp r0, #0
    bne lbl_0805a966
    adds r0, r4, #0
    adds r1, r5, #0
    bl check_enter_door
lbl_0805a966:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start check_touching_transition_or_tank
check_touching_transition_or_tank: @ 0x0805a96c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x30
    ldr r2, lbl_0805a998 @ =0x03001588
    adds r0, r2, #0
    adds r0, #0x72
    ldrh r0, [r0]
    lsls r0, r0, #0x10
    ldr r1, lbl_0805a99c @ =0x030013d4
    asrs r0, r0, #0x11
    ldrh r3, [r1, #0x12]
    adds r4, r0, r3
    adds r3, r2, #0
    adds r5, r1, #0
    cmp r4, #0
    bge lbl_0805a9a4
    movs r4, #0
    ldr r6, lbl_0805a9a0 @ =0x0300009c
    b lbl_0805a9b2
    .align 2, 0
lbl_0805a998: .4byte 0x03001588
lbl_0805a99c: .4byte 0x030013d4
lbl_0805a9a0: .4byte 0x0300009c
lbl_0805a9a4:
    ldr r1, lbl_0805a9cc @ =0x0300009c
    ldrh r0, [r1, #0x1c]
    lsls r0, r0, #6
    adds r6, r1, #0
    cmp r4, r0
    ble lbl_0805a9b2
    adds r4, r0, #0
lbl_0805a9b2:
    asrs r0, r4, #6
    str r0, [sp, #0x24]
    adds r0, r3, #0
    adds r0, #0x6e
    ldrh r0, [r0]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x11
    ldrh r1, [r5, #0x12]
    adds r4, r0, r1
    cmp r4, #0
    bge lbl_0805a9d0
    movs r4, #0
    b lbl_0805a9da
    .align 2, 0
lbl_0805a9cc: .4byte 0x0300009c
lbl_0805a9d0:
    ldrh r0, [r6, #0x1c]
    lsls r0, r0, #6
    cmp r4, r0
    ble lbl_0805a9da
    adds r4, r0, #0
lbl_0805a9da:
    add r1, sp, #0x24
    asrs r0, r4, #6
    str r0, [r1, #4]
    ldrh r4, [r5, #0x12]
    ldrh r0, [r6, #0x1c]
    lsls r0, r0, #6
    cmp r4, r0
    ble lbl_0805a9ec
    adds r4, r0, #0
lbl_0805a9ec:
    asrs r0, r4, #6
    str r0, [sp, #0x2c]
    adds r0, r3, #0
    adds r0, #0x70
    ldrh r0, [r0]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x11
    ldrh r2, [r5, #0x14]
    adds r4, r0, r2
    cmp r4, #0
    bge lbl_0805aa06
    movs r4, #0
    b lbl_0805aa10
lbl_0805aa06:
    ldrh r0, [r6, #0x1e]
    lsls r0, r0, #6
    cmp r4, r0
    ble lbl_0805aa10
    adds r4, r0, #0
lbl_0805aa10:
    asrs r0, r4, #6
    str r0, [sp, #0x18]
    adds r0, r3, #0
    adds r0, #0x70
    ldrh r0, [r0]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x12
    ldrh r1, [r5, #0x14]
    adds r4, r0, r1
    cmp r4, #0
    bge lbl_0805aa2a
    movs r4, #0
    b lbl_0805aa34
lbl_0805aa2a:
    ldrh r0, [r6, #0x1e]
    lsls r0, r0, #6
    cmp r4, r0
    ble lbl_0805aa34
    adds r4, r0, #0
lbl_0805aa34:
    add r2, sp, #0x18
    asrs r0, r4, #6
    str r0, [r2, #4]
    adds r0, r3, #0
    adds r0, #0x70
    ldrh r0, [r0]
    lsls r0, r0, #0x10
    asrs r1, r0, #0x12
    asrs r0, r0, #0x11
    adds r1, r1, r0
    ldrh r5, [r5, #0x14]
    adds r4, r1, r5
    cmp r4, #0
    bge lbl_0805aa54
    movs r4, #0
    b lbl_0805aa5e
lbl_0805aa54:
    ldrh r0, [r6, #0x1e]
    lsls r0, r0, #6
    cmp r4, r0
    ble lbl_0805aa5e
    adds r4, r0, #0
lbl_0805aa5e:
    asrs r0, r4, #6
    str r0, [sp, #0x20]
    ldr r0, lbl_0805aaec @ =0x0300009c
    ldrh r2, [r0, #0x1c]
    mov r8, r2
    ldr r7, [r0, #0x18]
    ldr r0, lbl_0805aaf0 @ =0x03005450
    ldr r3, [r0, #8]
    add r6, sp, #8
    add r2, sp, #0x24
    movs r5, #1
lbl_0805aa74:
    ldr r0, [sp, #0x18]
    mov r1, r8
    muls r1, r0, r1
    adds r0, r1, #0
    ldm r2!, {r1}
    adds r0, r0, r1
    lsls r0, r0, #1
    adds r0, r0, r7
    ldrh r4, [r0]
    lsls r0, r4, #1
    adds r0, r0, r3
    ldrh r0, [r0]
    stm r6!, {r0}
    subs r5, #1
    cmp r5, #0
    bge lbl_0805aa74
    movs r5, #0
    ldr r0, lbl_0805aaec @ =0x0300009c
    ldrh r2, [r0, #0x1c]
    mov ip, r2
    ldr r0, [r0, #0x18]
    mov r8, r0
    ldr r0, lbl_0805aaf0 @ =0x03005450
    ldr r6, [r0, #8]
    add r7, sp, #0x10
    add r3, sp, #0x1c
    add r2, sp, #0x24
lbl_0805aaaa:
    ldm r3!, {r0}
    mov r1, ip
    muls r1, r0, r1
    adds r0, r1, #0
    ldr r1, [r2, #8]
    adds r0, r0, r1
    lsls r0, r0, #1
    add r0, r8
    ldrh r4, [r0]
    lsls r0, r4, #1
    adds r0, r0, r6
    ldrh r0, [r0]
    stm r7!, {r0}
    adds r5, #1
    cmp r5, #1
    ble lbl_0805aaaa
    ldr r1, [sp, #8]
    ldr r2, [sp, #0xc]
    adds r0, r1, #0
    orrs r0, r2
    ldr r3, [sp, #0x10]
    orrs r0, r3
    ldr r5, [sp, #0x14]
    orrs r0, r5
    cmp r0, #0
    bne lbl_0805aae0
    b lbl_0805ad5e
lbl_0805aae0:
    movs r4, #1
    rsbs r4, r4, #0
    cmp r1, #3
    bne lbl_0805aaf4
    movs r4, #0
    b lbl_0805ab0a
    .align 2, 0
lbl_0805aaec: .4byte 0x0300009c
lbl_0805aaf0: .4byte 0x03005450
lbl_0805aaf4:
    cmp r2, #3
    bne lbl_0805aafc
    movs r4, #1
    b lbl_0805ab0a
lbl_0805aafc:
    cmp r3, #4
    bne lbl_0805ab04
    movs r4, #2
    b lbl_0805ab0a
lbl_0805ab04:
    cmp r5, #5
    bne lbl_0805ab0a
    movs r4, #3
lbl_0805ab0a:
    adds r0, r4, #1
    cmp r0, #0
    beq lbl_0805ab4c
    ldr r1, lbl_0805ab48 @ =0x08345cee
    lsls r2, r4, #1
    adds r0, r2, r1
    ldrb r0, [r0]
    lsls r0, r0, #2
    mov r5, sp
    adds r5, r5, r0
    adds r5, #0x18
    ldrh r0, [r5]
    adds r1, #1
    adds r2, r2, r1
    ldrb r1, [r2]
    lsls r1, r1, #2
    mov r4, sp
    adds r4, r4, r1
    adds r4, #0x24
    ldrh r1, [r4]
    bl check_enter_door
    cmp r0, #0
    beq lbl_0805ab3c
    b lbl_0805ad5e
lbl_0805ab3c:
    ldrh r0, [r5]
    ldrh r1, [r4]
    bl check_area_connection
    b lbl_0805ad5e
    .align 2, 0
lbl_0805ab48: .4byte 0x08345cee
lbl_0805ab4c:
    ldr r0, lbl_0805ac18 @ =0x03000044
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805ab5a
    b lbl_0805ad5e
lbl_0805ab5a:
    movs r2, #0
    mov sl, r2
    movs r4, #3
    add r3, sp, #0x14
    mov r8, r3
    ldr r0, lbl_0805ac1c @ =0x083459a0
    mov sb, r0
lbl_0805ab68:
    mov r1, r8
    ldr r0, [r1]
    cmp r0, #0
    bne lbl_0805ab72
    b lbl_0805ad50
lbl_0805ab72:
    subs r0, #0x34
    cmp r0, #0xb
    bls lbl_0805ab7a
    b lbl_0805ad50
lbl_0805ab7a:
    ldr r1, lbl_0805ac20 @ =0x08345c48
    lsls r0, r0, #3
    adds r0, r0, r1
    ldrb r5, [r0]
    cmp r5, #0
    bne lbl_0805ab88
    b lbl_0805ad44
lbl_0805ab88:
    ldr r2, lbl_0805ac24 @ =0x08345cee
    lsls r1, r4, #1
    adds r0, r2, #1
    adds r0, r1, r0
    ldrb r0, [r0]
    lsls r0, r0, #2
    mov r7, sp
    adds r7, r7, r0
    adds r7, #0x24
    ldrb r0, [r7]
    adds r1, r1, r2
    ldrb r1, [r1]
    lsls r1, r1, #2
    mov r6, sp
    adds r6, r6, r1
    adds r6, #0x18
    ldrb r1, [r6]
    bl sub_0806cc68
    cmp r0, #0
    bne lbl_0805abb4
    b lbl_0805ad44
lbl_0805abb4:
    ldr r1, lbl_0805ac18 @ =0x03000044
    movs r0, #1
    strb r0, [r1]
    ldr r1, lbl_0805ac28 @ =0x03001606
    movs r2, #0xfa
    lsls r2, r2, #2
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0805ac2c @ =0x030056a8
    mov r3, r8
    ldr r0, [r3]
    strh r0, [r1]
    ldr r0, [r7]
    strb r0, [r1, #2]
    ldr r0, [r6]
    strb r0, [r1, #3]
    cmp r5, #1
    bne lbl_0805ac40
    mov r0, sb
    ldrb r3, [r0, #0x1d]
    ldr r6, lbl_0805ac30 @ =0x083459c4
    ldr r5, lbl_0805ac34 @ =0x0300002c
    ldrb r0, [r5]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r2, [r0, #1]
    ldr r1, lbl_0805ac38 @ =0x083459c0
    adds r0, r3, #0
    muls r0, r2, r0
    ldrb r1, [r1, #1]
    adds r0, r0, r1
    ldr r3, lbl_0805ac3c @ =0x03001530
    ldrh r1, [r3, #2]
    adds r2, r1, r2
    cmp r0, r2
    bge lbl_0805abfe
    b lbl_0805ad14
lbl_0805abfe:
    cmp r1, #0
    bne lbl_0805ac06
    movs r1, #1
    mov sl, r1
lbl_0805ac06:
    strh r2, [r3, #2]
    ldrb r1, [r5]
    lsls r1, r1, #2
    adds r1, r1, r6
    ldrh r0, [r3, #8]
    ldrb r1, [r1, #1]
    adds r0, r0, r1
    strh r0, [r3, #8]
    b lbl_0805ad14
    .align 2, 0
lbl_0805ac18: .4byte 0x03000044
lbl_0805ac1c: .4byte 0x083459a0
lbl_0805ac20: .4byte 0x08345c48
lbl_0805ac24: .4byte 0x08345cee
lbl_0805ac28: .4byte 0x03001606
lbl_0805ac2c: .4byte 0x030056a8
lbl_0805ac30: .4byte 0x083459c4
lbl_0805ac34: .4byte 0x0300002c
lbl_0805ac38: .4byte 0x083459c0
lbl_0805ac3c: .4byte 0x03001530
lbl_0805ac40:
    cmp r5, #2
    bne lbl_0805ac80
    mov r2, sb
    ldrb r3, [r2, #0x1c]
    ldr r1, lbl_0805ac70 @ =0x083459c4
    ldr r0, lbl_0805ac74 @ =0x0300002c
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r2, [r0]
    ldr r0, lbl_0805ac78 @ =0x083459c0
    adds r1, r3, #0
    muls r1, r2, r1
    ldrb r0, [r0]
    adds r1, r1, r0
    ldr r3, lbl_0805ac7c @ =0x03001530
    ldrh r0, [r3]
    adds r0, r0, r2
    cmp r1, r0
    blt lbl_0805ad14
    strh r0, [r3]
    strh r0, [r3, #6]
    b lbl_0805ad14
    .align 2, 0
lbl_0805ac70: .4byte 0x083459c4
lbl_0805ac74: .4byte 0x0300002c
lbl_0805ac78: .4byte 0x083459c0
lbl_0805ac7c: .4byte 0x03001530
lbl_0805ac80:
    cmp r5, #3
    bne lbl_0805acd4
    mov r0, sb
    ldrb r3, [r0, #0x1e]
    ldr r6, lbl_0805acc4 @ =0x083459c4
    ldr r5, lbl_0805acc8 @ =0x0300002c
    ldrb r0, [r5]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r2, [r0, #2]
    ldr r1, lbl_0805accc @ =0x083459c0
    adds r0, r3, #0
    muls r0, r2, r0
    ldrb r1, [r1, #2]
    adds r0, r0, r1
    ldr r3, lbl_0805acd0 @ =0x03001530
    ldrb r1, [r3, #4]
    adds r2, r1, r2
    cmp r0, r2
    blt lbl_0805ad14
    cmp r1, #0
    bne lbl_0805acb0
    movs r1, #1
    mov sl, r1
lbl_0805acb0:
    strb r2, [r3, #4]
    ldrb r0, [r5]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r0, [r0, #2]
    ldrb r2, [r3, #0xa]
    adds r0, r0, r2
    strb r0, [r3, #0xa]
    b lbl_0805ad14
    .align 2, 0
lbl_0805acc4: .4byte 0x083459c4
lbl_0805acc8: .4byte 0x0300002c
lbl_0805accc: .4byte 0x083459c0
lbl_0805acd0: .4byte 0x03001530
lbl_0805acd4:
    cmp r5, #4
    bne lbl_0805ad14
    mov r0, sb
    ldrb r3, [r0, #0x1f]
    ldr r6, lbl_0805ad70 @ =0x083459c4
    ldr r5, lbl_0805ad74 @ =0x0300002c
    ldrb r0, [r5]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r2, [r0, #3]
    ldr r1, lbl_0805ad78 @ =0x083459c0
    adds r0, r3, #0
    muls r0, r2, r0
    ldrb r1, [r1, #3]
    adds r0, r0, r1
    ldr r3, lbl_0805ad7c @ =0x03001530
    ldrb r1, [r3, #5]
    adds r2, r1, r2
    cmp r0, r2
    blt lbl_0805ad14
    cmp r1, #0
    bne lbl_0805ad04
    movs r1, #1
    mov sl, r1
lbl_0805ad04:
    strb r2, [r3, #5]
    ldrb r0, [r5]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r0, [r0, #3]
    ldrb r2, [r3, #0xb]
    adds r0, r0, r2
    strb r0, [r3, #0xb]
lbl_0805ad14:
    ldr r1, lbl_0805ad80 @ =0x08345c48
    mov r3, r8
    ldr r0, [r3]
    subs r0, #0x34
    lsls r0, r0, #3
    adds r0, r0, r1
    ldrb r0, [r0, #2]
    mov r1, sl
    adds r5, r0, r1
    movs r0, #1
    rsbs r0, r0, #0
    cmp r5, r0
    beq lbl_0805ad44
    ldr r0, lbl_0805ad84 @ =0x030013d4
    ldrh r3, [r0, #0x14]
    ldrh r0, [r0, #0x12]
    str r0, [sp]
    movs r0, #0
    str r0, [sp, #4]
    movs r0, #0x11
    adds r1, r5, #0
    movs r2, #6
    bl SpriteSpawnPrimary
lbl_0805ad44:
    ldr r0, lbl_0805ad88 @ =0x03000044
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805ad5e
lbl_0805ad50:
    movs r2, #4
    rsbs r2, r2, #0
    add r8, r2
    subs r4, #1
    cmp r4, #0
    blt lbl_0805ad5e
    b lbl_0805ab68
lbl_0805ad5e:
    add sp, #0x30
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805ad70: .4byte 0x083459c4
lbl_0805ad74: .4byte 0x0300002c
lbl_0805ad78: .4byte 0x083459c0
lbl_0805ad7c: .4byte 0x03001530
lbl_0805ad80: .4byte 0x08345c48
lbl_0805ad84: .4byte 0x030013d4
lbl_0805ad88: .4byte 0x03000044

    thumb_func_start BGClipFinishCollectingTank
BGClipFinishCollectingTank: @ 0x0805ad8c
    push {r4, r5, r6, lr}
    ldr r1, lbl_0805addc @ =0x03000044
    movs r0, #0
    strb r0, [r1]
    ldr r4, lbl_0805ade0 @ =0x030056a8
    ldrh r0, [r4]
    subs r0, #0x34
    ldr r1, lbl_0805ade4 @ =0x08345c48
    lsls r0, r0, #3
    adds r5, r0, r1
    ldrb r0, [r5]
    cmp r0, #0
    beq lbl_0805add6
    ldrb r0, [r5, #1]
    movs r6, #0
    cmp r0, #0
    beq lbl_0805adb0
    ldr r6, lbl_0805ade8 @ =0x0000043c
lbl_0805adb0:
    ldrb r1, [r4, #3]
    ldrb r2, [r4, #2]
    movs r0, #0
    bl set_bg1_block_value
    adds r0, r6, #0
    ldrb r1, [r4, #3]
    ldrb r2, [r4, #2]
    bl set_clipdata_block_value
    ldrb r0, [r4, #2]
    ldrb r1, [r4, #3]
    ldrb r2, [r5]
    bl set_item_as_collected
    ldrb r0, [r4, #2]
    ldrb r1, [r4, #3]
    bl update_minimap_square_for_collected_item
lbl_0805add6:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805addc: .4byte 0x03000044
lbl_0805ade0: .4byte 0x030056a8
lbl_0805ade4: .4byte 0x08345c48
lbl_0805ade8: .4byte 0x0000043c

    thumb_func_start finish_collecting_ability
finish_collecting_ability: @ 0x0805adec
    push {r4, lr}
    ldr r4, lbl_0805ae18 @ =0x030013d4
    ldrh r0, [r4, #0x12]
    lsrs r0, r0, #6
    ldrh r1, [r4, #0x14]
    lsrs r1, r1, #6
    movs r2, #0x80
    bl set_item_as_collected
    ldrh r0, [r4, #0x12]
    lsrs r0, r0, #6
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrh r1, [r4, #0x14]
    lsrs r1, r1, #6
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl update_minimap_square_for_collected_item
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805ae18: .4byte 0x030013d4

    thumb_func_start check_grabbing_crumble_block
check_grabbing_crumble_block: @ 0x0805ae1c
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldr r0, lbl_0805aea0 @ =0x03001588
    adds r0, #0x56
    ldrb r0, [r0]
    cmp r0, #5
    bne lbl_0805af0c
    movs r0, #0
    mov r8, r0
    subs r0, #0x6c
    mov sb, r0
    ldr r2, lbl_0805aea4 @ =0x030013d4
    ldrh r1, [r2, #0xe]
    movs r0, #0x10
    ands r0, r1
    movs r7, #0x20
    rsbs r7, r7, #0
    cmp r0, #0
    beq lbl_0805ae4c
    movs r7, #0x20
lbl_0805ae4c:
    ldrb r0, [r2]
    cmp r0, #0x15
    beq lbl_0805ae58
    cmp r0, #0x3d
    beq lbl_0805ae58
    rsbs r7, r7, #0
lbl_0805ae58:
    cmp r3, #0
    bne lbl_0805aede
    ldrh r0, [r2, #0x12]
    adds r0, r0, r7
    lsls r0, r0, #0xa
    lsrs r4, r0, #0x10
    adds r6, r4, #0
    ldrh r0, [r2, #0x14]
    add r0, sb
    lsls r0, r0, #0xa
    lsrs r3, r0, #0x10
    adds r5, r3, #0
    ldr r2, lbl_0805aea8 @ =0x03005450
    ldr r1, lbl_0805aeac @ =0x0300009c
    ldrh r0, [r1, #0x1c]
    muls r0, r3, r0
    adds r0, r0, r4
    ldr r1, [r1, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    ldr r1, [r2, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    cmp r0, #0x23
    bne lbl_0805aeb0
    movs r0, #4
    adds r1, r4, #0
    adds r2, r3, #0
    movs r3, #0
    bl store_broken_reform_block
    cmp r0, #0
    beq lbl_0805aede
    b lbl_0805af06
    .align 2, 0
lbl_0805aea0: .4byte 0x03001588
lbl_0805aea4: .4byte 0x030013d4
lbl_0805aea8: .4byte 0x03005450
lbl_0805aeac: .4byte 0x0300009c
lbl_0805aeb0:
    cmp r0, #0x2e
    bne lbl_0805aede
    movs r0, #5
    adds r1, r6, #0
    adds r2, r5, #0
    movs r3, #1
    bl store_broken_reform_block
    cmp r0, #0
    beq lbl_0805aede
    ldr r4, lbl_0805af18 @ =0x00000401
    adds r0, r4, #0
    adds r1, r5, #0
    adds r2, r6, #0
    bl set_bg1_block_value
    adds r0, r4, #0
    adds r1, r5, #0
    adds r2, r6, #0
    bl set_clipdata_block_value
    movs r0, #0
    mov r8, r0
lbl_0805aede:
    mov r0, r8
    cmp r0, #0
    bne lbl_0805af06
    ldr r1, lbl_0805af1c @ =0x030013d4
    ldrh r0, [r1, #0x14]
    add r0, sb
    ldrh r1, [r1, #0x12]
    adds r1, r1, r7
    bl sub_08057df8
    movs r1, #0x80
    lsls r1, r1, #0x11
    ands r1, r0
    cmp r1, #0
    bne lbl_0805af00
    movs r0, #1
    mov r8, r0
lbl_0805af00:
    mov r0, r8
    cmp r0, #0
    beq lbl_0805af0c
lbl_0805af06:
    movs r0, #0xfe
    bl SamusSetPose
lbl_0805af0c:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805af18: .4byte 0x00000401
lbl_0805af1c: .4byte 0x030013d4

    thumb_func_start check_opening_hatch
check_opening_hatch: @ 0x0805af20
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    mov sb, r1
    movs r0, #0
    mov sl, r0
    ldr r3, lbl_0805afb8 @ =0x0300545c
    adds r4, r3, #0
lbl_0805af40:
    ldrb r0, [r3]
    lsls r0, r0, #0x1f
    cmp r0, #0
    bne lbl_0805af4a
    b lbl_0805b07e
lbl_0805af4a:
    ldrb r0, [r3, #1]
    lsls r0, r0, #0x1e
    cmp r0, #0
    beq lbl_0805af54
    b lbl_0805b07e
lbl_0805af54:
    movs r1, #0
    mov r8, r1
    ldrb r0, [r3, #5]
    ldr r2, [sp]
    cmp r0, r2
    bne lbl_0805b008
    ldrb r0, [r3, #6]
    cmp r0, sb
    bhi lbl_0805b008
    adds r0, #3
    cmp sb, r0
    bgt lbl_0805b008
    ldr r0, lbl_0805afbc @ =0x08345ca8
    mov ip, r0
    ldrb r1, [r3, #3]
    lsls r1, r1, #2
    add r1, ip
    ldr r7, lbl_0805afc0 @ =0x083459d0
    ldr r6, lbl_0805afc4 @ =0x03000079
    ldrb r0, [r6]
    lsls r0, r0, #1
    adds r0, r0, r7
    ldrh r1, [r1]
    ldrh r0, [r0]
    ands r0, r1
    cmp r0, #0
    beq lbl_0805b008
    ldrb r1, [r3, #2]
    lsrs r0, r1, #4
    adds r0, #1
    lsls r0, r0, #4
    movs r5, #0xf
    adds r2, r5, #0
    ands r2, r1
    orrs r2, r0
    strb r2, [r3, #2]
    movs r1, #1
    mov r8, r1
    ldrb r0, [r3, #3]
    cmp r0, #6
    bne lbl_0805afcc
    ldr r0, lbl_0805afc8 @ =0x030054e4
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805b008
    movs r2, #2
    mov r8, r2
    b lbl_0805b00e
    .align 2, 0
lbl_0805afb8: .4byte 0x0300545c
lbl_0805afbc: .4byte 0x08345ca8
lbl_0805afc0: .4byte 0x083459d0
lbl_0805afc4: .4byte 0x03000079
lbl_0805afc8: .4byte 0x030054e4
lbl_0805afcc:
    cmp r0, #7
    bne lbl_0805afe8
    ldr r0, lbl_0805afe4 @ =0x030054e4
    ldrb r0, [r0, #1]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805b008
    movs r0, #2
    mov r8, r0
    b lbl_0805b00e
    .align 2, 0
lbl_0805afe4: .4byte 0x030054e4
lbl_0805afe8:
    cmp r0, #3
    bne lbl_0805b008
    ldrb r0, [r6]
    lsls r0, r0, #1
    adds r0, r0, r7
    ldrh r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_0805b008
    mov r1, ip
    ldrb r0, [r1, #0xe]
    lsls r0, r0, #4
    ands r2, r5
    orrs r2, r0
    strb r2, [r3, #2]
lbl_0805b008:
    mov r2, r8
    cmp r2, #0
    beq lbl_0805b07e
lbl_0805b00e:
    mov r0, r8
    cmp r0, #1
    bne lbl_0805b068
    ldrb r2, [r4, #2]
    ldr r1, lbl_0805b04c @ =0x08345ca8
    ldrb r0, [r4, #3]
    lsls r0, r0, #2
    adds r1, #2
    adds r0, r0, r1
    lsrs r2, r2, #4
    ldrh r0, [r0]
    cmp r2, r0
    blo lbl_0805b05a
    ldrb r1, [r4, #1]
    movs r0, #0xf
    ands r0, r1
    movs r2, #4
    rsbs r2, r2, #0
    adds r1, r2, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r4, #1]
    ldrb r0, [r4, #3]
    cmp r0, #2
    bls lbl_0805b050
    ldrb r1, [r4, #7]
    movs r0, #1
    bl set_hatch_as_opened
    b lbl_0805b070
    .align 2, 0
lbl_0805b04c: .4byte 0x08345ca8
lbl_0805b050:
    ldrb r1, [r4, #7]
    movs r0, #2
    bl set_hatch_as_opened
    b lbl_0805b070
lbl_0805b05a:
    ldrb r0, [r4, #1]
    movs r1, #0xf
    ands r1, r0
    movs r0, #0x10
    orrs r1, r0
    strb r1, [r4, #1]
    b lbl_0805b070
lbl_0805b068:
    ldrb r1, [r4, #2]
    movs r0, #0xf
    ands r0, r1
    strb r0, [r4, #2]
lbl_0805b070:
    ldrb r0, [r4, #2]
    movs r2, #0x10
    rsbs r2, r2, #0
    adds r1, r2, #0
    ands r0, r1
    strb r0, [r4, #2]
    b lbl_0805b08e
lbl_0805b07e:
    adds r4, #8
    adds r3, #8
    movs r0, #1
    add sl, r0
    mov r1, sl
    cmp r1, #0xf
    bgt lbl_0805b08e
    b lbl_0805af40
lbl_0805b08e:
    mov r0, r8
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start set_item_as_collected
set_item_as_collected: @ 0x0805b0a0
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    lsls r2, r2, #0x18
    lsrs r5, r2, #0x18
    ldr r0, lbl_0805b104 @ =0x03000054
    ldrb r1, [r0]
    mov ip, r0
    cmp r1, #7
    bhi lbl_0805b0fe
    adds r3, r1, #0
    movs r4, #0x40
    movs r2, #1
    lsls r0, r3, #8
    ldr r3, lbl_0805b108 @ =0x02036c00
    adds r1, r0, r3
    movs r3, #0
    ldrb r0, [r1]
    cmp r0, #0xff
    beq lbl_0805b0e0
lbl_0805b0cc:
    adds r3, #1
    adds r1, #4
    cmp r3, r4
    bge lbl_0805b0dc
    ldrb r0, [r1]
    cmp r0, #0xff
    bne lbl_0805b0cc
    movs r2, #0
lbl_0805b0dc:
    cmp r2, #0
    bne lbl_0805b0fe
lbl_0805b0e0:
    ldr r0, lbl_0805b10c @ =0x03000055
    ldrb r0, [r0]
    strb r0, [r1]
    adds r1, #1
    strb r5, [r1]
    adds r1, #1
    strb r6, [r1]
    strb r7, [r1, #1]
    ldr r0, lbl_0805b110 @ =0x03000063
    mov r2, ip
    ldrb r1, [r2]
    adds r1, r1, r0
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_0805b0fe:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b104: .4byte 0x03000054
lbl_0805b108: .4byte 0x02036c00
lbl_0805b10c: .4byte 0x03000055
lbl_0805b110: .4byte 0x03000063

    thumb_func_start remove_collected_tanks
remove_collected_tanks: @ 0x0805b114
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r0, lbl_0805b198 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805b1c8
    ldr r1, lbl_0805b19c @ =0x03000054
    ldrb r0, [r1]
    cmp r0, #7
    bhi lbl_0805b1c8
    adds r6, r0, #0
    movs r0, #0x40
    mov sl, r0
    lsls r0, r6, #8
    ldr r1, lbl_0805b1a0 @ =0x02036c00
    adds r4, r0, r1
    movs r6, #0
    ldr r2, lbl_0805b1a4 @ =0x03005450
    mov sb, r2
    ldr r7, lbl_0805b1a8 @ =0x03000055
    mov r8, r7
    ldr r0, lbl_0805b1ac @ =0x0300009c
    mov ip, r0
lbl_0805b14c:
    ldrb r0, [r4]
    cmp r0, #0xff
    beq lbl_0805b1c8
    mov r1, r8
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_0805b1c0
    movs r0, #1
    ldrsb r0, [r4, r0]
    cmp r0, #0
    blt lbl_0805b1c0
    mov r5, ip
    ldrh r1, [r5, #0x1c]
    ldrb r0, [r4, #3]
    muls r0, r1, r0
    ldrb r2, [r4, #2]
    adds r0, r0, r2
    ldr r1, [r5, #0x18]
    lsls r3, r0, #1
    adds r2, r3, r1
    ldrh r0, [r2]
    mov r7, sb
    ldr r1, [r7, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    subs r0, #0x3c
    cmp r0, #3
    bhi lbl_0805b1b4
    ldr r1, lbl_0805b1b0 @ =0x0000043c
    adds r0, r1, #0
    strh r0, [r2]
    ldr r0, [r5, #8]
    adds r0, r3, r0
    movs r2, #0
    strh r2, [r0]
    b lbl_0805b1c0
    .align 2, 0
lbl_0805b198: .4byte 0x03000bf0
lbl_0805b19c: .4byte 0x03000054
lbl_0805b1a0: .4byte 0x02036c00
lbl_0805b1a4: .4byte 0x03005450
lbl_0805b1a8: .4byte 0x03000055
lbl_0805b1ac: .4byte 0x0300009c
lbl_0805b1b0: .4byte 0x0000043c
lbl_0805b1b4:
    movs r7, #0
    strh r7, [r2]
    mov r1, ip
    ldr r0, [r1, #8]
    adds r0, r3, r0
    strh r7, [r0]
lbl_0805b1c0:
    adds r6, #1
    adds r4, #4
    cmp r6, sl
    blt lbl_0805b14c
lbl_0805b1c8:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start BGClipCallMotherBrainUpdateGlass
BGClipCallMotherBrainUpdateGlass: @ 0x0805b1d8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    ldr r0, lbl_0805b240 @ =0x03000054
    ldrb r0, [r0]
    cmp r0, #4
    bne lbl_0805b234
    ldr r0, lbl_0805b244 @ =0x03000055
    ldrb r0, [r0]
    cmp r0, #4
    bne lbl_0805b234
    movs r2, #0
    lsls r0, r1, #1
    ldr r1, lbl_0805b248 @ =0x08345cf6
    adds r0, r0, r1
    ldrh r0, [r0]
    mov r8, r0
lbl_0805b1fe:
    movs r4, #0
    lsls r0, r2, #4
    adds r1, r2, #0
    adds r1, #0xd
    adds r7, r2, #1
    mov r2, r8
    adds r6, r2, r0
    lsls r5, r1, #0x10
lbl_0805b20e:
    adds r1, r4, r6
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    adds r3, r4, #4
    lsls r3, r3, #0x10
    lsrs r3, r3, #0x10
    movs r0, #0
    lsrs r2, r5, #0x10
    bl mother_brain_update_glass
    adds r0, r4, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #6
    bls lbl_0805b20e
    lsls r0, r7, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #4
    bls lbl_0805b1fe
lbl_0805b234:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b240: .4byte 0x03000054
lbl_0805b244: .4byte 0x03000055
lbl_0805b248: .4byte 0x08345cf6

    thumb_func_start sub_0805b24c
sub_0805b24c: @ 0x0805b24c
    push {r4, r5, lr}
    sub sp, #4
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r2, lbl_0805b27c @ =0x02035400
    movs r5, #0x80
    lsls r5, r5, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_0805b280 @ =0x05000200
    ldr r2, lbl_0805b284 @ =0x02035600
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b27c: .4byte 0x02035400
lbl_0805b280: .4byte 0x05000200
lbl_0805b284: .4byte 0x02035600

    thumb_func_start sub_0805b288
sub_0805b288: @ 0x0805b288
    push {r4, r5, lr}
    sub sp, #4
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r2, lbl_0805b2b8 @ =0x02035000
    movs r5, #0x80
    lsls r5, r5, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_0805b2bc @ =0x05000200
    ldr r2, lbl_0805b2c0 @ =0x02035200
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b2b8: .4byte 0x02035000
lbl_0805b2bc: .4byte 0x05000200
lbl_0805b2c0: .4byte 0x02035200

    thumb_func_start sub_0805b2c4
sub_0805b2c4: @ 0x0805b2c4
    push {r4, r5, lr}
    sub sp, #4
    ldr r1, lbl_0805b2f4 @ =0x02035400
    ldr r2, lbl_0805b2f8 @ =0x02035000
    movs r5, #0x80
    lsls r5, r5, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_0805b2fc @ =0x02035600
    ldr r2, lbl_0805b300 @ =0x02035200
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b2f4: .4byte 0x02035400
lbl_0805b2f8: .4byte 0x02035000
lbl_0805b2fc: .4byte 0x02035600
lbl_0805b300: .4byte 0x02035200

    thumb_func_start sub_0805b304
sub_0805b304: @ 0x0805b304
    push {r4, r5, lr}
    sub sp, #4
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r2, lbl_0805b334 @ =0x02035800
    movs r5, #0x80
    lsls r5, r5, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_0805b338 @ =0x05000200
    ldr r2, lbl_0805b33c @ =0x02035a00
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b334: .4byte 0x02035800
lbl_0805b338: .4byte 0x05000200
lbl_0805b33c: .4byte 0x02035a00

    thumb_func_start sub_0805b340
sub_0805b340: @ 0x0805b340
    push {lr}
    bl sub_0805b24c
    bl sub_0805b288
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0805b350
sub_0805b350: @ 0x0805b350
    push {r4, r5, lr}
    sub sp, #4
    ldr r1, lbl_0805b380 @ =0x02035400
    ldr r2, lbl_0805b384 @ =0x02035800
    movs r5, #0x80
    lsls r5, r5, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_0805b388 @ =0x02035600
    ldr r2, lbl_0805b38c @ =0x02035a00
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b380: .4byte 0x02035400
lbl_0805b384: .4byte 0x02035800
lbl_0805b388: .4byte 0x02035600
lbl_0805b38c: .4byte 0x02035a00

    thumb_func_start sub_0805b390
sub_0805b390: @ 0x0805b390
    push {r4, lr}
    sub sp, #4
    ldr r4, lbl_0805b3ec @ =0x03005520
    ldrb r1, [r4, #4]
    cmp r1, #0
    beq lbl_0805b3e4
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0805b3c0
    ldr r1, lbl_0805b3f0 @ =0x02035000
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldrb r1, [r4, #4]
    movs r0, #0xfe
    ands r0, r1
    strb r0, [r4, #4]
lbl_0805b3c0:
    ldrb r1, [r4, #4]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0805b3e4
    ldr r1, lbl_0805b3f4 @ =0x02035200
    ldr r2, lbl_0805b3f8 @ =0x05000200
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldrb r1, [r4, #4]
    movs r0, #0xfd
    ands r0, r1
    strb r0, [r4, #4]
lbl_0805b3e4:
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b3ec: .4byte 0x03005520
lbl_0805b3f0: .4byte 0x02035000
lbl_0805b3f4: .4byte 0x02035200
lbl_0805b3f8: .4byte 0x05000200

    thumb_func_start sub_0805b3fc
sub_0805b3fc: @ 0x0805b3fc
    push {r4, r5, lr}
    sub sp, #4
    ldr r0, lbl_0805b45c @ =0x03000c72
    movs r1, #0
    ldrsh r4, [r0, r1]
    cmp r4, #2
    bne lbl_0805b470
    ldr r5, lbl_0805b460 @ =0x03005520
    ldrb r1, [r5, #4]
    cmp r1, #0
    beq lbl_0805b4c0
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0805b436
    ldr r1, lbl_0805b464 @ =0x02035000
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldrb r0, [r5, #4]
    movs r1, #1
    eors r0, r1
    strb r0, [r5, #4]
lbl_0805b436:
    ldrb r0, [r5, #4]
    ands r4, r0
    cmp r4, #0
    beq lbl_0805b4c0
    ldr r1, lbl_0805b468 @ =0x02035240
    ldr r2, lbl_0805b46c @ =0x05000240
    movs r3, #0xe0
    lsls r3, r3, #1
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldrb r0, [r5, #4]
    movs r1, #2
    eors r0, r1
    strb r0, [r5, #4]
    b lbl_0805b4c0
    .align 2, 0
lbl_0805b45c: .4byte 0x03000c72
lbl_0805b460: .4byte 0x03005520
lbl_0805b464: .4byte 0x02035000
lbl_0805b468: .4byte 0x02035240
lbl_0805b46c: .4byte 0x05000240
lbl_0805b470:
    ldr r4, lbl_0805b4c8 @ =0x03005520
    ldrb r1, [r4, #4]
    cmp r1, #0
    beq lbl_0805b4c0
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0805b49c
    ldr r1, lbl_0805b4cc @ =0x02035000
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldrb r1, [r4, #4]
    movs r0, #0xfe
    ands r0, r1
    strb r0, [r4, #4]
lbl_0805b49c:
    ldrb r1, [r4, #4]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0805b4c0
    ldr r1, lbl_0805b4d0 @ =0x02035200
    ldr r2, lbl_0805b4d4 @ =0x05000200
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldrb r1, [r4, #4]
    movs r0, #0xfd
    ands r0, r1
    strb r0, [r4, #4]
lbl_0805b4c0:
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b4c8: .4byte 0x03005520
lbl_0805b4cc: .4byte 0x02035000
lbl_0805b4d0: .4byte 0x02035200
lbl_0805b4d4: .4byte 0x05000200

    thumb_func_start sub_0805b4d8
sub_0805b4d8: @ 0x0805b4d8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #0xc
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    ldr r2, lbl_0805b508 @ =0x08345d00
    ldr r3, lbl_0805b50c @ =0x03005520
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0]
    mov r8, r2
    adds r6, r3, #0
    cmp r0, #0
    beq lbl_0805b510
    ldrb r0, [r6, #5]
    movs r5, #3
    cmp r0, #0
    bne lbl_0805b51c
    movs r5, #1
    b lbl_0805b51c
    .align 2, 0
lbl_0805b508: .4byte 0x08345d00
lbl_0805b50c: .4byte 0x03005520
lbl_0805b510:
    ldrb r1, [r6, #5]
    movs r5, #2
    rsbs r0, r1, #0
    orrs r0, r1
    asrs r0, r0, #0x1f
    ands r5, r0
lbl_0805b51c:
    ldr r0, lbl_0805b574 @ =0x02035000
    str r0, [sp, #8]
    ldr r0, lbl_0805b578 @ =0x02035400
    str r0, [sp, #4]
    ldrb r1, [r6]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    add r0, r8
    ldrh r0, [r0, #0x12]
    add r4, sp, #8
    str r0, [sp]
    adds r0, r5, #0
    adds r1, r7, #0
    add r2, sp, #4
    adds r3, r4, #0
    bl sub_0805baac
    ldr r0, lbl_0805b57c @ =0x02035200
    str r0, [sp, #8]
    ldr r0, lbl_0805b580 @ =0x02035600
    str r0, [sp, #4]
    ldrb r1, [r6]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    add r0, r8
    ldrh r0, [r0, #0x14]
    str r0, [sp]
    adds r0, r5, #0
    adds r1, r7, #0
    add r2, sp, #4
    adds r3, r4, #0
    bl sub_0805baac
    movs r0, #3
    strb r0, [r6, #4]
    add sp, #0xc
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b574: .4byte 0x02035000
lbl_0805b578: .4byte 0x02035400
lbl_0805b57c: .4byte 0x02035200
lbl_0805b580: .4byte 0x02035600

    thumb_func_start power_bomb_yellow_tint
power_bomb_yellow_tint: @ 0x0805b584
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    ldr r0, lbl_0805b618 @ =0x030056f4
    ldrb r0, [r0]
    movs r7, #0xf0
    cmp r0, #0
    bne lbl_0805b598
    adds r7, #0x10
lbl_0805b598:
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r4, lbl_0805b61c @ =0x02035000
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    lsls r0, r6, #5
    adds r5, r0, r4
    lsls r4, r6, #4
    cmp r4, r7
    bge lbl_0805b604
    movs r0, #0xf8
    lsls r0, r0, #2
    mov ip, r0
    movs r6, #0xf8
    lsls r6, r6, #7
lbl_0805b5c2:
    movs r0, #0xf
    ands r0, r4
    cmp r0, #0
    beq lbl_0805b5fc
    ldrh r2, [r5]
    movs r3, #0x1f
    ands r3, r2
    mov r1, ip
    ands r1, r2
    adds r0, r6, #0
    ands r0, r2
    lsrs r0, r0, #0xa
    adds r3, #5
    lsls r1, r1, #0x13
    movs r2, #0xa0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    lsrs r1, r1, #0x18
    cmp r3, #0x1f
    bls lbl_0805b5ec
    movs r3, #0x1f
lbl_0805b5ec:
    cmp r1, #0x1f
    bls lbl_0805b5f2
    movs r1, #0x1f
lbl_0805b5f2:
    lsls r0, r0, #0xa
    lsls r1, r1, #5
    orrs r0, r1
    orrs r0, r3
    strh r0, [r5]
lbl_0805b5fc:
    adds r4, #1
    adds r5, #2
    cmp r4, r7
    blt lbl_0805b5c2
lbl_0805b604:
    ldr r2, lbl_0805b620 @ =0x03005520
    ldrb r1, [r2, #4]
    movs r0, #1
    orrs r0, r1
    strb r0, [r2, #4]
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b618: .4byte 0x030056f4
lbl_0805b61c: .4byte 0x02035000
lbl_0805b620: .4byte 0x03005520

    thumb_func_start sub_0805b624
sub_0805b624: @ 0x0805b624
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r5, r0, #0
    adds r4, r1, #0
    lsls r2, r2, #0x18
    asrs r2, r2, #0x18
    mov r8, r2
    movs r6, #0xff
lbl_0805b636:
    ldrh r2, [r5]
    movs r0, #0x1f
    ands r0, r2
    movs r3, #0xf8
    lsls r3, r3, #2
    adds r1, r3, #0
    adds r3, r2, #0
    ands r3, r1
    lsrs r3, r3, #5
    movs r7, #0xf8
    lsls r7, r7, #7
    adds r1, r7, #0
    ands r2, r1
    lsrs r2, r2, #0xa
    adds r0, r0, r3
    adds r0, r0, r2
    movs r1, #3
    bl __divsi3
    mov r1, r8
    adds r2, r0, r1
    cmp r2, #0
    bge lbl_0805b668
    movs r2, #0
    b lbl_0805b66e
lbl_0805b668:
    cmp r2, #0x1f
    ble lbl_0805b66e
    movs r2, #0x1f
lbl_0805b66e:
    lsls r0, r2, #0xa
    lsls r1, r2, #5
    orrs r0, r1
    orrs r0, r2
    strh r0, [r4]
    subs r6, #1
    adds r5, #2
    adds r4, #2
    cmp r6, #0
    bge lbl_0805b636
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_0805b68c
sub_0805b68c: @ 0x0805b68c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    mov sl, r0
    mov r8, r1
    mov ip, r2
    lsls r3, r3, #0x18
    lsrs r7, r3, #0x18
    cmp r7, #0
    bne lbl_0805b6b8
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    mov r1, sl
    bl DMATransfer
    b lbl_0805b752
lbl_0805b6b8:
    cmp r7, #0x1e
    bls lbl_0805b6d0
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    mov r1, r8
    mov r2, ip
    bl DMATransfer
    b lbl_0805b752
lbl_0805b6d0:
    movs r0, #0x1f
    mov sb, r0
    movs r1, #0xff
    str r1, [sp, #4]
lbl_0805b6d8:
    mov r2, r8
    ldrh r1, [r2]
    adds r0, r1, #0
    mov r4, sb
    ands r0, r4
    asrs r1, r1, #5
    adds r5, r1, #0
    ands r5, r4
    asrs r6, r1, #5
    ands r6, r4
    mov r2, sl
    ldrh r1, [r2]
    adds r3, r1, #0
    ands r3, r4
    asrs r1, r1, #5
    adds r2, r1, #0
    ands r2, r4
    asrs r4, r1, #5
    mov r1, sb
    ands r4, r1
    subs r0, r0, r3
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b70a
    adds r0, #0x1f
lbl_0805b70a:
    asrs r1, r0, #5
    adds r0, r3, r1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    subs r0, r5, r2
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b71c
    adds r0, #0x1f
lbl_0805b71c:
    asrs r1, r0, #5
    adds r0, r2, r1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    subs r0, r6, r4
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b72e
    adds r0, #0x1f
lbl_0805b72e:
    asrs r1, r0, #5
    adds r0, r4, r1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0xe
    lsls r1, r2, #5
    orrs r0, r1
    orrs r0, r3
    mov r2, ip
    strh r0, [r2]
    ldr r4, [sp, #4]
    subs r4, #1
    str r4, [sp, #4]
    movs r0, #2
    add sl, r0
    add ip, r0
    add r8, r0
    cmp r4, #0
    bge lbl_0805b6d8
lbl_0805b752:
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0805b764
sub_0805b764: @ 0x0805b764
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    mov sb, r0
    mov r8, r1
    mov ip, r2
    lsls r3, r3, #0x18
    lsrs r7, r3, #0x18
    cmp r7, #0
    bne lbl_0805b788
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    mov r1, sb
    b lbl_0805b796
lbl_0805b788:
    cmp r7, #0x1e
    bls lbl_0805b79e
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    mov r1, r8
    mov r2, ip
lbl_0805b796:
    movs r3, #0x20
    bl DMATransfer
    b lbl_0805b820
lbl_0805b79e:
    movs r0, #0x1f
    mov sl, r0
    movs r1, #0x1f
    str r1, [sp, #4]
lbl_0805b7a6:
    mov r2, r8
    ldrh r1, [r2]
    adds r0, r1, #0
    mov r4, sl
    ands r0, r4
    asrs r1, r1, #5
    adds r5, r1, #0
    ands r5, r4
    asrs r6, r1, #5
    ands r6, r4
    mov r2, sb
    ldrh r1, [r2]
    adds r3, r1, #0
    ands r3, r4
    asrs r1, r1, #5
    adds r2, r1, #0
    ands r2, r4
    asrs r4, r1, #5
    mov r1, sl
    ands r4, r1
    subs r0, r0, r3
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b7d8
    adds r0, #0x1f
lbl_0805b7d8:
    asrs r1, r0, #5
    adds r0, r3, r1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    subs r0, r5, r2
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b7ea
    adds r0, #0x1f
lbl_0805b7ea:
    asrs r1, r0, #5
    adds r0, r2, r1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    subs r0, r6, r4
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b7fc
    adds r0, #0x1f
lbl_0805b7fc:
    asrs r1, r0, #5
    adds r0, r4, r1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0xe
    lsls r1, r2, #5
    orrs r0, r1
    orrs r0, r3
    mov r2, ip
    strh r0, [r2]
    ldr r4, [sp, #4]
    subs r4, #1
    str r4, [sp, #4]
    movs r0, #2
    add sb, r0
    add ip, r0
    add r8, r0
    cmp r4, #0
    bge lbl_0805b7a6
lbl_0805b820:
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_0805b830
sub_0805b830: @ 0x0805b830
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x10
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #4]
    lsls r1, r1, #0x10
    lsrs r5, r1, #0x10
    lsls r2, r2, #0x18
    lsrs r7, r2, #0x18
    cmp r7, #0
    bne lbl_0805b880
    ldr r5, lbl_0805b878 @ =0x02035800
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r6, #0xf0
    lsls r6, r6, #1
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r2, lbl_0805b87c @ =0x02035400
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    b lbl_0805b94e
    .align 2, 0
lbl_0805b878: .4byte 0x02035800
lbl_0805b87c: .4byte 0x02035400
lbl_0805b880:
    ldr r1, lbl_0805b960 @ =0x02035800
    ldr r4, lbl_0805b964 @ =0x02035000
    movs r3, #0xf0
    lsls r3, r3, #1
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    movs r0, #0x1f
    ands r0, r5
    str r0, [sp, #8]
    movs r0, #0xf8
    lsls r0, r0, #2
    ands r0, r5
    lsrs r0, r0, #5
    mov r8, r0
    movs r0, #0xf8
    lsls r0, r0, #7
    ands r0, r5
    lsrs r0, r0, #0xa
    mov ip, r0
    movs r2, #0
lbl_0805b8b0:
    ldr r1, [sp, #4]
    asrs r1, r2
    movs r0, #1
    ands r1, r0
    adds r4, r2, #1
    str r4, [sp, #0xc]
    cmp r1, #0
    beq lbl_0805b93c
    lsls r3, r2, #4
    adds r1, r3, #0
    adds r1, #0x10
    cmp r3, r1
    bge lbl_0805b93c
    movs r0, #0xf8
    lsls r0, r0, #2
    mov sl, r0
    movs r4, #0xf8
    lsls r4, r4, #7
    mov sb, r4
    lsls r0, r2, #5
    ldr r2, lbl_0805b964 @ =0x02035000
    adds r6, r0, r2
    subs r3, r1, r3
lbl_0805b8de:
    ldrh r1, [r6]
    movs r5, #0x1f
    ands r5, r1
    mov r0, sl
    ands r0, r1
    lsrs r2, r0, #5
    mov r0, sb
    ands r0, r1
    lsrs r1, r0, #0xa
    ldr r4, [sp, #8]
    subs r0, r4, r5
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b8fc
    adds r0, #0xf
lbl_0805b8fc:
    asrs r0, r0, #4
    adds r0, r5, r0
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    mov r4, r8
    subs r0, r4, r2
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b910
    adds r0, #0xf
lbl_0805b910:
    asrs r0, r0, #4
    adds r0, r2, r0
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    mov r4, ip
    subs r0, r4, r1
    muls r0, r7, r0
    cmp r0, #0
    bge lbl_0805b924
    adds r0, #0xf
lbl_0805b924:
    asrs r0, r0, #4
    adds r0, r1, r0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0xe
    lsls r1, r2, #5
    orrs r0, r1
    orrs r0, r5
    strh r0, [r6]
    adds r6, #2
    subs r3, #1
    cmp r3, #0
    bne lbl_0805b8de
lbl_0805b93c:
    ldr r2, [sp, #0xc]
    cmp r2, #0xf
    ble lbl_0805b8b0
    ldr r0, lbl_0805b968 @ =0x03005520
    ldrb r1, [r0, #4]
    movs r0, #1
    orrs r0, r1
    ldr r1, lbl_0805b968 @ =0x03005520
    strb r0, [r1, #4]
lbl_0805b94e:
    add sp, #0x10
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805b960: .4byte 0x02035800
lbl_0805b964: .4byte 0x02035000
lbl_0805b968: .4byte 0x03005520

    thumb_func_start sub_0805b96c
sub_0805b96c: @ 0x0805b96c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x10
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #4]
    lsls r1, r1, #0x10
    lsrs r4, r1, #0x10
    lsls r2, r2, #0x18
    lsrs r6, r2, #0x18
    cmp r6, #0
    bne lbl_0805b9bc
    ldr r5, lbl_0805b9b0 @ =0x02035a40
    ldr r2, lbl_0805b9b4 @ =0x05000240
    movs r6, #0xe0
    lsls r6, r6, #1
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r2, lbl_0805b9b8 @ =0x02035640
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    b lbl_0805ba8a
    .align 2, 0
lbl_0805b9b0: .4byte 0x02035a40
lbl_0805b9b4: .4byte 0x05000240
lbl_0805b9b8: .4byte 0x02035640
lbl_0805b9bc:
    ldr r1, lbl_0805ba9c @ =0x02035a40
    ldr r2, lbl_0805baa0 @ =0x02035240
    movs r3, #0xe0
    lsls r3, r3, #1
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    movs r0, #0x1f
    ands r0, r4
    str r0, [sp, #8]
    movs r0, #0xf8
    lsls r0, r0, #2
    ands r0, r4
    lsrs r0, r0, #5
    mov r8, r0
    movs r0, #0xf8
    lsls r0, r0, #7
    ands r0, r4
    lsrs r0, r0, #0xa
    mov ip, r0
    movs r2, #0
lbl_0805b9ea:
    ldr r1, [sp, #4]
    asrs r1, r2
    movs r0, #1
    ands r1, r0
    adds r7, r2, #1
    str r7, [sp, #0xc]
    cmp r1, #0
    beq lbl_0805ba78
    lsls r0, r2, #4
    adds r3, r0, #1
    adds r1, r0, #0
    adds r1, #0x10
    cmp r3, r1
    bge lbl_0805ba78
    movs r0, #0xf8
    lsls r0, r0, #2
    mov sl, r0
    movs r2, #0xf8
    lsls r2, r2, #7
    mov sb, r2
    lsls r0, r3, #1
    ldr r7, lbl_0805baa4 @ =0x02035200
    adds r5, r0, r7
    subs r3, r1, r3
lbl_0805ba1a:
    ldrh r1, [r5]
    movs r4, #0x1f
    ands r4, r1
    mov r0, sl
    ands r0, r1
    lsrs r2, r0, #5
    mov r0, sb
    ands r0, r1
    lsrs r1, r0, #0xa
    ldr r7, [sp, #8]
    subs r0, r7, r4
    muls r0, r6, r0
    cmp r0, #0
    bge lbl_0805ba38
    adds r0, #0xf
lbl_0805ba38:
    asrs r0, r0, #4
    adds r0, r4, r0
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    mov r7, r8
    subs r0, r7, r2
    muls r0, r6, r0
    cmp r0, #0
    bge lbl_0805ba4c
    adds r0, #0xf
lbl_0805ba4c:
    asrs r0, r0, #4
    adds r0, r2, r0
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    mov r7, ip
    subs r0, r7, r1
    muls r0, r6, r0
    cmp r0, #0
    bge lbl_0805ba60
    adds r0, #0xf
lbl_0805ba60:
    asrs r0, r0, #4
    adds r0, r1, r0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0xe
    lsls r1, r2, #5
    orrs r0, r1
    orrs r0, r4
    strh r0, [r5]
    adds r5, #2
    subs r3, #1
    cmp r3, #0
    bne lbl_0805ba1a
lbl_0805ba78:
    ldr r2, [sp, #0xc]
    cmp r2, #0xf
    ble lbl_0805b9ea
    ldr r0, lbl_0805baa8 @ =0x03005520
    ldrb r1, [r0, #4]
    movs r0, #2
    orrs r0, r1
    ldr r1, lbl_0805baa8 @ =0x03005520
    strb r0, [r1, #4]
lbl_0805ba8a:
    add sp, #0x10
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805ba9c: .4byte 0x02035a40
lbl_0805baa0: .4byte 0x02035240
lbl_0805baa4: .4byte 0x02035200
lbl_0805baa8: .4byte 0x03005520

    thumb_func_start sub_0805baac
sub_0805baac: @ 0x0805baac
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    mov sb, r2
    mov r8, r3
    ldr r2, [sp, #0x28]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov ip, r0
    lsls r1, r1, #0x18
    lsrs r7, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    str r2, [sp]
    movs r2, #0
lbl_0805bad0:
    ldr r0, [sp]
    asrs r0, r2
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0805baf2
    mov r1, sb
    ldr r0, [r1]
    adds r0, #0x20
    str r0, [r1]
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x20
    str r0, [r1]
    adds r2, #1
    str r2, [sp, #4]
    b lbl_0805bbcc
lbl_0805baf2:
    adds r2, #1
    str r2, [sp, #4]
    movs r6, #0x1f
    movs r0, #0xf
    mov sl, r0
lbl_0805bafc:
    mov r1, sb
    ldr r2, [r1]
    ldrh r1, [r2]
    adds r3, r6, #0
    ands r3, r1
    movs r0, #0xf8
    lsls r0, r0, #2
    ands r0, r1
    lsrs r5, r0, #5
    movs r0, #0xf8
    lsls r0, r0, #7
    ands r0, r1
    lsrs r4, r0, #0xa
    mov r0, ip
    cmp r0, #1
    beq lbl_0805bb4a
    cmp r0, #1
    bgt lbl_0805bb26
    cmp r0, #0
    beq lbl_0805bb32
    b lbl_0805bba4
lbl_0805bb26:
    mov r1, ip
    cmp r1, #2
    beq lbl_0805bb68
    cmp r1, #3
    beq lbl_0805bb86
    b lbl_0805bba4
lbl_0805bb32:
    adds r0, r3, #0
    muls r0, r7, r0
    asrs r3, r0, #5
    ands r3, r6
    adds r0, r5, #0
    muls r0, r7, r0
    asrs r5, r0, #5
    ands r5, r6
    adds r0, r4, #0
    muls r0, r7, r0
    asrs r4, r0, #5
    b lbl_0805bba2
lbl_0805bb4a:
    subs r0, r6, r3
    muls r0, r7, r0
    asrs r0, r0, #5
    subs r3, r6, r0
    ands r3, r6
    subs r0, r6, r5
    muls r0, r7, r0
    asrs r0, r0, #5
    subs r5, r6, r0
    ands r5, r6
    subs r0, r6, r4
    muls r0, r7, r0
    asrs r0, r0, #5
    subs r4, r6, r0
    b lbl_0805bba2
lbl_0805bb68:
    adds r0, r3, #0
    muls r0, r7, r0
    asrs r0, r0, #5
    subs r3, r3, r0
    ands r3, r6
    adds r0, r5, #0
    muls r0, r7, r0
    asrs r0, r0, #5
    subs r5, r5, r0
    ands r5, r6
    adds r0, r4, #0
    muls r0, r7, r0
    asrs r0, r0, #5
    subs r4, r4, r0
    b lbl_0805bba2
lbl_0805bb86:
    subs r0, r6, r3
    muls r0, r7, r0
    asrs r0, r0, #5
    adds r3, r3, r0
    ands r3, r6
    subs r0, r6, r5
    muls r0, r7, r0
    asrs r0, r0, #5
    adds r5, r5, r0
    ands r5, r6
    subs r0, r6, r4
    muls r0, r7, r0
    asrs r0, r0, #5
    adds r4, r4, r0
lbl_0805bba2:
    ands r4, r6
lbl_0805bba4:
    mov r0, r8
    ldr r1, [r0]
    lsls r0, r5, #5
    orrs r3, r0
    lsls r0, r4, #0xa
    orrs r3, r0
    strh r3, [r1]
    movs r1, #1
    rsbs r1, r1, #0
    add sl, r1
    adds r0, r2, #2
    mov r1, sb
    str r0, [r1]
    mov r1, r8
    ldr r0, [r1]
    adds r0, #2
    str r0, [r1]
    mov r0, sl
    cmp r0, #0
    bge lbl_0805bafc
lbl_0805bbcc:
    ldr r2, [sp, #4]
    cmp r2, #0xf
    bgt lbl_0805bbd4
    b lbl_0805bad0
lbl_0805bbd4:
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_0805bbe4
sub_0805bbe4: @ 0x0805bbe4
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    mov ip, r6
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    lsls r2, r2, #0x18
    lsrs r5, r2, #0x18
    movs r7, #0x1f
    adds r3, r1, #0
    ands r3, r7
    movs r0, #0xf8
    lsls r0, r0, #2
    ands r0, r1
    lsrs r4, r0, #5
    movs r0, #0xf8
    lsls r0, r0, #7
    ands r0, r1
    lsrs r2, r0, #0xa
    cmp r6, #1
    beq lbl_0805bc3e
    cmp r6, #1
    bgt lbl_0805bc18
    cmp r6, #0
    beq lbl_0805bc24
    b lbl_0805bc9e
lbl_0805bc18:
    mov r0, ip
    cmp r0, #2
    beq lbl_0805bc5e
    cmp r0, #3
    beq lbl_0805bc7e
    b lbl_0805bc9e
lbl_0805bc24:
    adds r0, r3, #0
    muls r0, r5, r0
    asrs r3, r0, #5
    movs r1, #0x1f
    ands r3, r1
    adds r0, r4, #0
    muls r0, r5, r0
    asrs r4, r0, #5
    ands r4, r1
    adds r0, r2, #0
    muls r0, r5, r0
    asrs r2, r0, #5
    b lbl_0805bc9c
lbl_0805bc3e:
    subs r0, r7, r3
    muls r0, r5, r0
    asrs r0, r0, #5
    movs r1, #0x1f
    subs r3, r1, r0
    ands r3, r1
    subs r0, r7, r4
    muls r0, r5, r0
    asrs r0, r0, #5
    subs r4, r1, r0
    ands r4, r1
    subs r0, r7, r2
    muls r0, r5, r0
    asrs r0, r0, #5
    subs r2, r1, r0
    b lbl_0805bc9c
lbl_0805bc5e:
    adds r0, r3, #0
    muls r0, r5, r0
    asrs r0, r0, #5
    subs r3, r3, r0
    movs r1, #0x1f
    ands r3, r1
    adds r0, r4, #0
    muls r0, r5, r0
    asrs r0, r0, #5
    subs r4, r4, r0
    ands r4, r1
    adds r0, r2, #0
    muls r0, r5, r0
    asrs r0, r0, #5
    subs r2, r2, r0
    b lbl_0805bc9c
lbl_0805bc7e:
    subs r0, r7, r3
    muls r0, r5, r0
    asrs r0, r0, #5
    adds r3, r3, r0
    movs r1, #0x1f
    ands r3, r1
    subs r0, r7, r4
    muls r0, r5, r0
    asrs r0, r0, #5
    adds r4, r4, r0
    ands r4, r1
    subs r0, r7, r2
    muls r0, r5, r0
    asrs r0, r0, #5
    adds r2, r2, r0
lbl_0805bc9c:
    ands r2, r1
lbl_0805bc9e:
    lsls r0, r4, #5
    orrs r3, r0
    lsls r0, r2, #0xa
    orrs r3, r0
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_0805bcb0
sub_0805bcb0: @ 0x0805bcb0
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_0805bccc @ =0x03005520
    ldrb r1, [r0, #5]
    adds r6, r0, #0
    cmp r1, #0
    beq lbl_0805bcd4
    ldr r2, lbl_0805bcd0 @ =0x08345d00
    ldrb r1, [r6]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r3, [r0, #0x10]
    b lbl_0805bce2
    .align 2, 0
lbl_0805bccc: .4byte 0x03005520
lbl_0805bcd0: .4byte 0x08345d00
lbl_0805bcd4:
    ldr r2, lbl_0805bcf8 @ =0x08345d00
    ldrb r1, [r6]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r3, [r0, #8]
lbl_0805bce2:
    adds r7, r2, #0
    ldr r1, lbl_0805bcfc @ =0x08345fd0
    lsls r2, r3, #3
    adds r0, r2, r1
    ldrb r4, [r0, #4]
    ldrb r0, [r6, #2]
    cmp r0, #0
    bne lbl_0805bd00
    movs r5, #0
    b lbl_0805bd10
    .align 2, 0
lbl_0805bcf8: .4byte 0x08345d00
lbl_0805bcfc: .4byte 0x08345fd0
lbl_0805bd00:
    ldrb r0, [r6, #2]
    movs r5, #2
    cmp r0, r4
    beq lbl_0805bd10
    movs r5, #1
    cmp r0, r4
    ble lbl_0805bd10
    movs r5, #3
lbl_0805bd10:
    cmp r5, #1
    bgt lbl_0805bd20
    adds r0, r2, r1
    ldrb r1, [r6, #2]
    ldr r0, [r0]
    adds r0, r0, r1
    ldrb r4, [r0]
    b lbl_0805bd22
lbl_0805bd20:
    movs r4, #0
lbl_0805bd22:
    ldrb r1, [r6]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrb r3, [r0, #0x16]
    ldr r0, lbl_0805bd48 @ =0x0875fd78
    lsls r2, r3, #2
    adds r2, r2, r0
    adds r0, r5, #0
    adds r1, r4, #0
    ldr r2, [r2]
    bl _call_via_r2
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805bd4c
    movs r0, #0
    b lbl_0805bd52
    .align 2, 0
lbl_0805bd48: .4byte 0x0875fd78
lbl_0805bd4c:
    movs r0, #0
    strb r0, [r6, #2]
    movs r0, #1
lbl_0805bd52:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_0805bd58
sub_0805bd58: @ 0x0805bd58
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r2, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r0, #1
    beq lbl_0805bd88
    cmp r0, #1
    bgt lbl_0805bd72
    cmp r0, #0
    beq lbl_0805bd7c
    b lbl_0805bdc0
lbl_0805bd72:
    cmp r2, #2
    beq lbl_0805bda0
    cmp r2, #3
    beq lbl_0805bdb6
    b lbl_0805bdc0
lbl_0805bd7c:
    ldr r0, lbl_0805bd98 @ =0x03005520
    ldrb r2, [r0, #5]
    cmp r2, #0
    bne lbl_0805bd88
    ldr r0, lbl_0805bd9c @ =0x030013ae
    strh r2, [r0]
lbl_0805bd88:
    adds r0, r1, #0
    bl sub_0805b4d8
    ldr r1, lbl_0805bd98 @ =0x03005520
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    b lbl_0805bdc0
    .align 2, 0
lbl_0805bd98: .4byte 0x03005520
lbl_0805bd9c: .4byte 0x030013ae
lbl_0805bda0:
    ldr r4, lbl_0805bdbc @ =0x03005520
    ldrb r0, [r4, #5]
    cmp r0, #0
    bne lbl_0805bdb0
    bl sub_0805b2c4
    movs r0, #3
    strb r0, [r4, #4]
lbl_0805bdb0:
    ldrb r0, [r4, #2]
    adds r0, #1
    strb r0, [r4, #2]
lbl_0805bdb6:
    movs r0, #1
    b lbl_0805bdc2
    .align 2, 0
lbl_0805bdbc: .4byte 0x03005520
lbl_0805bdc0:
    movs r0, #0
lbl_0805bdc2:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start sub_0805bdc8
sub_0805bdc8: @ 0x0805bdc8
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r2, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r0, #1
    beq lbl_0805bdf8
    cmp r0, #1
    bgt lbl_0805bde2
    cmp r0, #0
    beq lbl_0805bdec
    b lbl_0805be74
lbl_0805bde2:
    cmp r2, #2
    beq lbl_0805be10
    cmp r2, #3
    beq lbl_0805be6c
    b lbl_0805be74
lbl_0805bdec:
    ldr r0, lbl_0805be08 @ =0x03005520
    ldrb r2, [r0, #5]
    cmp r2, #0
    bne lbl_0805bdf8
    ldr r0, lbl_0805be0c @ =0x030013ae
    strh r2, [r0]
lbl_0805bdf8:
    adds r0, r1, #0
    bl sub_0805b4d8
    ldr r1, lbl_0805be08 @ =0x03005520
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    b lbl_0805be74
    .align 2, 0
lbl_0805be08: .4byte 0x03005520
lbl_0805be0c: .4byte 0x030013ae
lbl_0805be10:
    ldr r4, lbl_0805be30 @ =0x03005520
    ldrb r0, [r4, #5]
    cmp r0, #0
    beq lbl_0805be5c
    ldr r2, lbl_0805be34 @ =0x08345d00
    ldrb r1, [r4]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0805be3c
    ldr r1, lbl_0805be38 @ =0x04000050
    movs r0, #0xbf
    b lbl_0805be40
    .align 2, 0
lbl_0805be30: .4byte 0x03005520
lbl_0805be34: .4byte 0x08345d00
lbl_0805be38: .4byte 0x04000050
lbl_0805be3c:
    ldr r1, lbl_0805be50 @ =0x04000050
    movs r0, #0xff
lbl_0805be40:
    strh r0, [r1]
    ldr r2, lbl_0805be54 @ =0x04000054
    ldr r1, lbl_0805be58 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strh r0, [r2]
    b lbl_0805be64
    .align 2, 0
lbl_0805be50: .4byte 0x04000050
lbl_0805be54: .4byte 0x04000054
lbl_0805be58: .4byte 0x030013ae
lbl_0805be5c:
    bl sub_0805b2c4
    movs r0, #3
    strb r0, [r4, #4]
lbl_0805be64:
    ldr r1, lbl_0805be70 @ =0x03005520
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
lbl_0805be6c:
    movs r0, #1
    b lbl_0805be76
    .align 2, 0
lbl_0805be70: .4byte 0x03005520
lbl_0805be74:
    movs r0, #0
lbl_0805be76:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start sub_0805be7c
sub_0805be7c: @ 0x0805be7c
    push {lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r2, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r0, #2
    beq lbl_0805beb0
    cmp r0, #2
    ble lbl_0805be96
    cmp r0, #3
    beq lbl_0805beb8
    b lbl_0805bec0
lbl_0805be96:
    cmp r2, #0
    blt lbl_0805bec0
    adds r0, r1, #0
    bl sub_0805b4d8
    ldr r1, lbl_0805beac @ =0x03005520
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    b lbl_0805bec0
    .align 2, 0
lbl_0805beac: .4byte 0x03005520
lbl_0805beb0:
    ldr r1, lbl_0805bebc @ =0x03005520
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
lbl_0805beb8:
    movs r0, #1
    b lbl_0805bec2
    .align 2, 0
lbl_0805bebc: .4byte 0x03005520
lbl_0805bec0:
    movs r0, #0
lbl_0805bec2:
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0805bec8
sub_0805bec8: @ 0x0805bec8
    movs r0, #1
    bx lr

    thumb_func_start transfer_faded_palette_on_transition
transfer_faded_palette_on_transition: @ 0x0805becc
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r6, lbl_0805bfb8 @ =0x03005520
    movs r0, #0
    strb r0, [r6, #2]
    bl sub_0805b24c
    ldr r0, lbl_0805bfbc @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805bef2
    bl sub_0805b304
lbl_0805bef2:
    ldr r3, lbl_0805bfc0 @ =0x08345d00
    ldrb r0, [r6]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    adds r2, r1, r3
    ldrb r0, [r2]
    movs r1, #0
    cmp r0, #0
    beq lbl_0805bf08
    ldr r1, lbl_0805bfc4 @ =0x00007fff
lbl_0805bf08:
    adds r5, r1, #0
    ldrh r1, [r2, #0x12]
    ldrh r0, [r2, #0x14]
    orrs r0, r1
    cmp r0, #0
    beq lbl_0805bf84
    movs r4, #0
    mov sl, r6
    movs r0, #1
    mov sb, r0
    ldr r7, lbl_0805bfc8 @ =0x05000200
    movs r6, #0xa0
    lsls r6, r6, #0x13
    movs r1, #0x10
    mov r8, r1
lbl_0805bf26:
    mov r1, sl
    ldrb r0, [r1]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    ldr r0, lbl_0805bfc0 @ =0x08345d00
    adds r1, r1, r0
    ldrh r0, [r1, #0x12]
    asrs r0, r4
    mov r1, sb
    ands r0, r1
    cmp r0, #0
    beq lbl_0805bf50
    mov r0, r8
    str r0, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r2, r6, #0
    movs r3, #0x20
    bl BitFill
lbl_0805bf50:
    mov r1, sl
    ldrb r0, [r1]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    ldr r0, lbl_0805bfc0 @ =0x08345d00
    adds r1, r1, r0
    ldrh r0, [r1, #0x14]
    asrs r0, r4
    mov r1, sb
    ands r0, r1
    cmp r0, #0
    beq lbl_0805bf7a
    mov r0, r8
    str r0, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r2, r7, #0
    movs r3, #0x20
    bl BitFill
lbl_0805bf7a:
    adds r7, #0x20
    adds r6, #0x20
    adds r4, #1
    cmp r4, #0xf
    ble lbl_0805bf26
lbl_0805bf84:
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r2, lbl_0805bfcc @ =0x02035000
    movs r5, #0x80
    lsls r5, r5, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_0805bfc8 @ =0x05000200
    ldr r2, lbl_0805bfd0 @ =0x02035200
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805bfb8: .4byte 0x03005520
lbl_0805bfbc: .4byte 0x03000bf0
lbl_0805bfc0: .4byte 0x08345d00
lbl_0805bfc4: .4byte 0x00007fff
lbl_0805bfc8: .4byte 0x05000200
lbl_0805bfcc: .4byte 0x02035000
lbl_0805bfd0: .4byte 0x02035200

    thumb_func_start start_effect_for_cutscene
start_effect_for_cutscene: @ 0x0805bfd4
    push {lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    subs r0, #1
    cmp r0, #7
    bhi lbl_0805c06c
    lsls r0, r0, #2
    ldr r1, lbl_0805bfec @ =lbl_0805bff0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805bfec: .4byte lbl_0805bff0
lbl_0805bff0: @ jump table
    .4byte lbl_0805c010 @ case 0
    .4byte lbl_0805c02c @ case 1
    .4byte lbl_0805c034 @ case 2
    .4byte lbl_0805c03c @ case 3
    .4byte lbl_0805c044 @ case 4
    .4byte lbl_0805c04c @ case 5
    .4byte lbl_0805c054 @ case 6
    .4byte lbl_0805c05c @ case 7
lbl_0805c010:
    ldr r1, lbl_0805c024 @ =0x03000043
    movs r0, #1
    strb r0, [r1]
    ldr r1, lbl_0805c028 @ =0x03000c21
    movs r0, #0
    strb r0, [r1]
    bl sub_0805b340
    movs r0, #0xf
    b lbl_0805c062
    .align 2, 0
lbl_0805c024: .4byte 0x03000043
lbl_0805c028: .4byte 0x03000c21
lbl_0805c02c:
    bl sub_0805b340
    movs r0, #0xc
    b lbl_0805c062
lbl_0805c034:
    movs r0, #4
    bl start_special_background_effect
    b lbl_0805c06c
lbl_0805c03c:
    bl sub_0805b340
    movs r0, #0x11
    b lbl_0805c062
lbl_0805c044:
    bl sub_0805b340
    movs r0, #0x12
    b lbl_0805c062
lbl_0805c04c:
    bl sub_0805b340
    movs r0, #0x13
    b lbl_0805c062
lbl_0805c054:
    movs r0, #5
    bl start_special_background_effect
    b lbl_0805c06c
lbl_0805c05c:
    bl sub_0805b340
    movs r0, #0x16
lbl_0805c062:
    bl start_special_background_fading
    ldr r1, lbl_0805c070 @ =0x03000c72
    movs r0, #3
    strh r0, [r1]
lbl_0805c06c:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805c070: .4byte 0x03000c72

    thumb_func_start start_special_background_fading
start_special_background_fading: @ 0x0805c074
    ldr r1, lbl_0805c088 @ =0x03005520
    movs r2, #0
    strb r0, [r1]
    strb r2, [r1, #1]
    strb r2, [r1, #2]
    strb r2, [r1, #3]
    strb r2, [r1, #4]
    strb r2, [r1, #5]
    strh r2, [r1, #6]
    bx lr
    .align 2, 0
lbl_0805c088: .4byte 0x03005520

    thumb_func_start sub_0805c08c
sub_0805c08c: @ 0x0805c08c
    push {lr}
    ldr r0, lbl_0805c0d8 @ =0x03000c75
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c0be
    ldr r0, lbl_0805c0dc @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805c0be
    ldr r0, lbl_0805c0e0 @ =0x0300007d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805c0be
    ldr r0, lbl_0805c0e4 @ =0x0300007e
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c108
lbl_0805c0be:
    ldr r2, lbl_0805c0e8 @ =0x08345d00
    ldr r0, lbl_0805c0ec @ =0x03005520
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0805c0f4
    ldr r1, lbl_0805c0f0 @ =0x04000050
    movs r0, #0xbf
    b lbl_0805c0f8
    .align 2, 0
lbl_0805c0d8: .4byte 0x03000c75
lbl_0805c0dc: .4byte 0x03000bf0
lbl_0805c0e0: .4byte 0x0300007d
lbl_0805c0e4: .4byte 0x0300007e
lbl_0805c0e8: .4byte 0x08345d00
lbl_0805c0ec: .4byte 0x03005520
lbl_0805c0f0: .4byte 0x04000050
lbl_0805c0f4:
    ldr r1, lbl_0805c104 @ =0x04000050
    movs r0, #0xff
lbl_0805c0f8:
    strh r0, [r1]
    movs r1, #0x80
    lsls r1, r1, #0x13
    movs r0, #0
    b lbl_0805c146
    .align 2, 0
lbl_0805c104: .4byte 0x04000050
lbl_0805c108:
    ldr r2, lbl_0805c124 @ =0x08345d00
    ldr r0, lbl_0805c128 @ =0x03005520
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0805c130
    ldr r1, lbl_0805c12c @ =0x04000050
    movs r0, #0xa7
    b lbl_0805c134
    .align 2, 0
lbl_0805c124: .4byte 0x08345d00
lbl_0805c128: .4byte 0x03005520
lbl_0805c12c: .4byte 0x04000050
lbl_0805c130:
    ldr r1, lbl_0805c14c @ =0x04000050
    movs r0, #0xe7
lbl_0805c134:
    strh r0, [r1]
    ldr r1, lbl_0805c150 @ =0x0400000e
    ldr r2, lbl_0805c154 @ =0x00004604
    adds r0, r2, #0
    strh r0, [r1]
    subs r1, #0xe
    movs r2, #0xc0
    lsls r2, r2, #5
    adds r0, r2, #0
lbl_0805c146:
    strh r0, [r1]
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805c14c: .4byte 0x04000050
lbl_0805c150: .4byte 0x0400000e
lbl_0805c154: .4byte 0x00004604

    thumb_func_start bg30_fs_related
bg30_fs_related: @ 0x0805c158
    push {lr}
    ldr r2, lbl_0805c174 @ =0x08345d00
    ldr r0, lbl_0805c178 @ =0x03005520
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #0x16]
    cmp r0, #1
    bne lbl_0805c180
    ldr r1, lbl_0805c17c @ =0x0300002a
    movs r0, #4
    b lbl_0805c184
    .align 2, 0
lbl_0805c174: .4byte 0x08345d00
lbl_0805c178: .4byte 0x03005520
lbl_0805c17c: .4byte 0x0300002a
lbl_0805c180:
    ldr r1, lbl_0805c18c @ =0x0300002a
    movs r0, #3
lbl_0805c184:
    strb r0, [r1]
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805c18c: .4byte 0x0300002a

    thumb_func_start sub_0805c190
sub_0805c190: @ 0x0805c190
    push {r4, r5, lr}
    sub sp, #4
    ldr r0, lbl_0805c200 @ =0x030000e4
    ldrh r1, [r0, #0xe]
    movs r4, #0
    strh r1, [r0, #0x12]
    ldrh r1, [r0, #0xc]
    strh r1, [r0, #0x10]
    ldr r1, lbl_0805c204 @ =0x02007000
    ldr r2, lbl_0805c208 @ =0x06003000
    movs r3, #0x80
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_0805c20c @ =0x04000008
    ldr r5, lbl_0805c210 @ =0x03000088
    ldrh r0, [r5, #0x12]
    strh r0, [r1]
    adds r1, #6
    ldrh r0, [r5, #0x10]
    strh r0, [r1]
    ldr r0, lbl_0805c214 @ =0x0300007c
    strb r4, [r0]
    ldr r2, lbl_0805c218 @ =0x03000080
    ldrb r1, [r2, #7]
    movs r0, #0x7f
    ands r0, r1
    cmp r0, #0
    beq lbl_0805c1d6
    movs r0, #0x80
    orrs r0, r1
    strb r0, [r2, #7]
lbl_0805c1d6:
    ldrh r1, [r5, #2]
    movs r0, #2
    bl TransparencyUpdateBLDCNT
    movs r1, #0x80
    lsls r1, r1, #0x13
    ldrh r0, [r5]
    strh r0, [r1]
    ldr r0, lbl_0805c21c @ =0x0300007b
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_0805c1f6
    bl lock_hatches_with_timer
lbl_0805c1f6:
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805c200: .4byte 0x030000e4
lbl_0805c204: .4byte 0x02007000
lbl_0805c208: .4byte 0x06003000
lbl_0805c20c: .4byte 0x04000008
lbl_0805c210: .4byte 0x03000088
lbl_0805c214: .4byte 0x0300007c
lbl_0805c218: .4byte 0x03000080
lbl_0805c21c: .4byte 0x0300007b

    thumb_func_start sub_0805c220
sub_0805c220: @ 0x0805c220
    push {r4, r5, lr}
    ldr r0, lbl_0805c264 @ =0x030000e4
    ldrh r1, [r0, #0xe]
    movs r5, #0
    strh r1, [r0, #0x12]
    ldrh r1, [r0, #0xc]
    strh r1, [r0, #0x10]
    bl sub_0805b340
    bl sub_080595e4
    bl sub_0805e760
    ldr r1, lbl_0805c268 @ =0x030013b0
    ldr r2, lbl_0805c26c @ =0x03000088
    ldrb r0, [r2, #4]
    strh r0, [r1]
    ldr r1, lbl_0805c270 @ =0x030013b2
    ldrb r0, [r2, #5]
    strh r0, [r1]
    ldr r4, lbl_0805c274 @ =0x03000030
    movs r0, #3
    ldrsb r0, [r4, r0]
    cmp r0, #0
    beq lbl_0805c258
    bl sub_080039c8
    strb r5, [r4, #3]
lbl_0805c258:
    ldr r0, lbl_0805c278 @ =0x03005520
    strb r5, [r0, #3]
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805c264: .4byte 0x030000e4
lbl_0805c268: .4byte 0x030013b0
lbl_0805c26c: .4byte 0x03000088
lbl_0805c270: .4byte 0x030013b2
lbl_0805c274: .4byte 0x03000030
lbl_0805c278: .4byte 0x03005520

    thumb_func_start sub_0805c27c
sub_0805c27c: @ 0x0805c27c
    push {r4, r5, r6, lr}
    ldr r1, lbl_0805c2d4 @ =0x03000c77
    ldrb r1, [r1]
    ands r1, r0
    cmp r1, #0
    bne lbl_0805c2cc
    ldr r6, lbl_0805c2d8 @ =0x030013b2
    ldrh r3, [r6]
    lsls r0, r3, #8
    ldr r5, lbl_0805c2dc @ =0x030013b0
    ldrh r2, [r5]
    orrs r0, r2
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    ldr r1, lbl_0805c2e0 @ =0x0875fd88
    ldr r0, lbl_0805c2e4 @ =0x030000bc
    ldrb r0, [r0, #0x10]
    lsls r0, r0, #2
    adds r1, #3
    adds r0, r0, r1
    ldrb r0, [r0]
    cmp r0, #2
    bne lbl_0805c2cc
    cmp r4, #0
    beq lbl_0805c2cc
    cmp r3, #0
    beq lbl_0805c2b6
    subs r0, r3, #1
    strh r0, [r6]
lbl_0805c2b6:
    lsls r0, r2, #0x10
    cmp r0, #0
    beq lbl_0805c2c0
    subs r0, r2, #1
    strh r0, [r5]
lbl_0805c2c0:
    ldr r0, lbl_0805c2e8 @ =0x03000006
    ldrh r1, [r6]
    lsls r1, r1, #8
    ldrh r2, [r5]
    orrs r1, r2
    strh r1, [r0]
lbl_0805c2cc:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805c2d4: .4byte 0x03000c77
lbl_0805c2d8: .4byte 0x030013b2
lbl_0805c2dc: .4byte 0x030013b0
lbl_0805c2e0: .4byte 0x0875fd88
lbl_0805c2e4: .4byte 0x030000bc
lbl_0805c2e8: .4byte 0x03000006

    thumb_func_start sub_0805c2ec
sub_0805c2ec: @ 0x0805c2ec
    push {r4, r5, r6, lr}
    sub sp, #4
    bl sub_0805d09c
    movs r1, #0xa0
    lsls r1, r1, #0x13
    movs r0, #0
    strh r0, [r1]
    movs r4, #0x80
    lsls r4, r4, #0x13
    ldrh r1, [r4]
    ldr r0, lbl_0805c360 @ =0x0000f0ff
    ands r0, r1
    strh r0, [r4]
    ldr r1, lbl_0805c364 @ =0x08364f80
    ldr r5, lbl_0805c368 @ =0x02007000
    movs r0, #0
    adds r2, r5, #0
    bl rle_decompress
    ldr r2, lbl_0805c36c @ =0x06003000
    movs r3, #0x80
    lsls r3, r3, #5
    movs r6, #0x10
    str r6, [sp]
    movs r0, #3
    adds r1, r5, #0
    bl DMATransfer
    ldr r1, lbl_0805c370 @ =0x0400000e
    ldr r2, lbl_0805c374 @ =0x00004604
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0805c378 @ =0x030000e4
    movs r0, #0x40
    strh r0, [r1, #0xe]
    strh r0, [r1, #0x12]
    ldr r1, lbl_0805c37c @ =0x0400001e
    strh r0, [r1]
    ldrh r0, [r4]
    movs r2, #0x80
    lsls r2, r2, #4
    adds r1, r2, #0
    orrs r0, r1
    strh r0, [r4]
    ldr r0, lbl_0805c380 @ =0x0300002d
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_0805c38c
    ldr r1, lbl_0805c384 @ =0x085e0040
    ldr r2, lbl_0805c388 @ =0x05000020
    str r6, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    b lbl_0805c39a
    .align 2, 0
lbl_0805c360: .4byte 0x0000f0ff
lbl_0805c364: .4byte 0x08364f80
lbl_0805c368: .4byte 0x02007000
lbl_0805c36c: .4byte 0x06003000
lbl_0805c370: .4byte 0x0400000e
lbl_0805c374: .4byte 0x00004604
lbl_0805c378: .4byte 0x030000e4
lbl_0805c37c: .4byte 0x0400001e
lbl_0805c380: .4byte 0x0300002d
lbl_0805c384: .4byte 0x085e0040
lbl_0805c388: .4byte 0x05000020
lbl_0805c38c:
    ldr r1, lbl_0805c3a4 @ =0x085dfe40
    ldr r2, lbl_0805c3a8 @ =0x05000020
    str r6, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
lbl_0805c39a:
    add sp, #4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805c3a4: .4byte 0x085dfe40
lbl_0805c3a8: .4byte 0x05000020

    thumb_func_start sub_0805c3ac
sub_0805c3ac: @ 0x0805c3ac
    push {r4, r5, lr}
    ldr r4, lbl_0805c3e8 @ =0x03005520
    movs r0, #0
    strb r0, [r4, #5]
    ldr r5, lbl_0805c3ec @ =0x08345d00
    ldrb r1, [r4]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r1, r5, #4
    adds r0, r0, r1
    ldr r0, [r0]
    cmp r0, #0
    beq lbl_0805c458
    bl _call_via_r0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c458
    ldrb r1, [r4]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r1, [r0, #0x16]
    cmp r1, #1
    beq lbl_0805c3f0
    cmp r1, #2
    beq lbl_0805c408
    b lbl_0805c418
    .align 2, 0
lbl_0805c3e8: .4byte 0x03005520
lbl_0805c3ec: .4byte 0x08345d00
lbl_0805c3f0:
    ldr r0, lbl_0805c404 @ =0x03000030
    ldrb r0, [r0, #4]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805c418
    bl check_play_new_music_track
    b lbl_0805c418
    .align 2, 0
lbl_0805c404: .4byte 0x03000030
lbl_0805c408:
    ldr r0, lbl_0805c444 @ =0x03000030
    ldrb r0, [r0, #2]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c418
    bl sub_08060ab8
lbl_0805c418:
    ldr r0, lbl_0805c444 @ =0x03000030
    movs r4, #0
    strb r4, [r0, #4]
    strb r4, [r0, #2]
    movs r0, #2
    bl start_special_background_fading
    ldr r2, lbl_0805c448 @ =0x04000054
    ldr r1, lbl_0805c44c @ =0x03000088
    ldrb r0, [r1, #6]
    strh r0, [r2]
    ldrh r1, [r1, #2]
    movs r0, #3
    bl TransparencyUpdateBLDCNT
    ldr r0, lbl_0805c450 @ =0x0300007c
    strb r4, [r0]
    ldr r0, lbl_0805c454 @ =0x03005520
    strb r4, [r0, #1]
    movs r0, #1
    b lbl_0805c45a
    .align 2, 0
lbl_0805c444: .4byte 0x03000030
lbl_0805c448: .4byte 0x04000054
lbl_0805c44c: .4byte 0x03000088
lbl_0805c450: .4byte 0x0300007c
lbl_0805c454: .4byte 0x03005520
lbl_0805c458:
    movs r0, #0
lbl_0805c45a:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sub_0805c460
sub_0805c460: @ 0x0805c460
    push {r4, r5, lr}
    ldr r4, lbl_0805c498 @ =0x03005520
    movs r5, #0
    movs r0, #1
    strb r0, [r4, #5]
    ldrb r1, [r4, #3]
    adds r0, r1, #0
    cmp r0, #0xff
    beq lbl_0805c476
    adds r0, r1, #1
    strb r0, [r4, #3]
lbl_0805c476:
    ldr r2, lbl_0805c49c @ =0x08345d00
    ldrb r1, [r4]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r2, #0xc
    adds r0, r0, r2
    ldr r0, [r0]
    cmp r0, #0
    beq lbl_0805c494
    bl _call_via_r0
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805c4a0
lbl_0805c494:
    movs r0, #0
    b lbl_0805c4b4
    .align 2, 0
lbl_0805c498: .4byte 0x03005520
lbl_0805c49c: .4byte 0x08345d00
lbl_0805c4a0:
    ldr r0, lbl_0805c4bc @ =0x03001382
    strb r5, [r0]
    bl HUDDraw
    bl ParticleProcessAll
    bl ResetFreeOAM
    strb r5, [r4, #1]
    movs r0, #1
lbl_0805c4b4:
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0805c4bc: .4byte 0x03001382

    thumb_func_start sub_0805c4c0
sub_0805c4c0: @ 0x0805c4c0
    push {r4, lr}
    sub sp, #4
    ldr r0, lbl_0805c4dc @ =0x03005520
    ldrb r1, [r0, #1]
    adds r4, r0, #0
    cmp r1, #5
    bls lbl_0805c4d0
    b lbl_0805c71c
lbl_0805c4d0:
    lsls r0, r1, #2
    ldr r1, lbl_0805c4e0 @ =lbl_0805c4e4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805c4dc: .4byte 0x03005520
lbl_0805c4e0: .4byte lbl_0805c4e4
lbl_0805c4e4: @ jump table
    .4byte lbl_0805c4fc @ case 0
    .4byte lbl_0805c502 @ case 1
    .4byte lbl_0805c52c @ case 2
    .4byte lbl_0805c5a0 @ case 3
    .4byte lbl_0805c6bc @ case 4
    .4byte lbl_0805c714 @ case 5
lbl_0805c4fc:
    bl sub_0805c220
    b lbl_0805c582
lbl_0805c502:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c51a
    ldr r1, lbl_0805c524 @ =0x0300007c
    movs r0, #1
    strb r0, [r1]
    ldr r1, lbl_0805c528 @ =0x03005520
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
lbl_0805c51a:
    movs r0, #0
    bl sub_0805c27c
    b lbl_0805c71c
    .align 2, 0
lbl_0805c524: .4byte 0x0300007c
lbl_0805c528: .4byte 0x03005520
lbl_0805c52c:
    bl sub_0805d09c
    movs r1, #0xa0
    lsls r1, r1, #0x13
    movs r0, #0
    strh r0, [r1]
    ldr r0, lbl_0805c554 @ =0x0300002d
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_0805c560
    ldr r1, lbl_0805c558 @ =0x085e0040
    ldr r2, lbl_0805c55c @ =0x05000020
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    b lbl_0805c570
    .align 2, 0
lbl_0805c554: .4byte 0x0300002d
lbl_0805c558: .4byte 0x085e0040
lbl_0805c55c: .4byte 0x05000020
lbl_0805c560:
    ldr r1, lbl_0805c58c @ =0x085dfe40
    ldr r2, lbl_0805c590 @ =0x05000020
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
lbl_0805c570:
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2]
    ldr r0, lbl_0805c594 @ =0x0000b3ff
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_0805c598 @ =0x0300002b
    movs r0, #0
    strb r0, [r1]
lbl_0805c582:
    ldr r1, lbl_0805c59c @ =0x03005520
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    b lbl_0805c71c
    .align 2, 0
lbl_0805c58c: .4byte 0x085dfe40
lbl_0805c590: .4byte 0x05000020
lbl_0805c594: .4byte 0x0000b3ff
lbl_0805c598: .4byte 0x0300002b
lbl_0805c59c: .4byte 0x03005520
lbl_0805c5a0:
    ldr r1, lbl_0805c5d0 @ =0x08364f80
    ldr r4, lbl_0805c5d4 @ =0x02007000
    movs r0, #0
    adds r2, r4, #0
    bl rle_decompress
    ldr r2, lbl_0805c5d8 @ =0x06003000
    movs r3, #0x80
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl DMATransfer
    ldr r0, lbl_0805c5dc @ =0x030054e0
    ldrh r0, [r0]
    cmp r0, #0
    beq lbl_0805c5e4
    ldr r1, lbl_0805c5e0 @ =0x030000e4
    movs r0, #0x98
    lsls r0, r0, #1
    b lbl_0805c5ea
    .align 2, 0
lbl_0805c5d0: .4byte 0x08364f80
lbl_0805c5d4: .4byte 0x02007000
lbl_0805c5d8: .4byte 0x06003000
lbl_0805c5dc: .4byte 0x030054e0
lbl_0805c5e0: .4byte 0x030000e4
lbl_0805c5e4:
    ldr r1, lbl_0805c674 @ =0x030000e4
    movs r0, #0x8c
    lsls r0, r0, #2
lbl_0805c5ea:
    strh r0, [r1, #0x10]
    adds r3, r1, #0
    ldr r0, lbl_0805c678 @ =0x030054e0
    ldrh r0, [r0, #2]
    lsls r0, r0, #6
    ldr r1, lbl_0805c67c @ =0x030013ba
    ldrh r1, [r1]
    subs r0, r0, r1
    movs r1, #0x80
    lsls r1, r1, #3
    subs r1, r1, r0
    asrs r1, r1, #2
    strh r1, [r3, #0x12]
    ldr r2, lbl_0805c680 @ =0x0400001c
    ldrh r0, [r3, #0x10]
    strh r0, [r2]
    ldr r0, lbl_0805c684 @ =0x0400001e
    strh r1, [r0]
    ldr r1, lbl_0805c688 @ =0x0300544c
    ldr r2, lbl_0805c68c @ =0x00003f48
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_0805c690 @ =0x030000bc
    ldrb r0, [r0, #1]
    subs r0, #0x43
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r3, lbl_0805c694 @ =0x030013b2
    ldr r1, lbl_0805c698 @ =0x030013b0
    cmp r0, #2
    bls lbl_0805c630
    movs r0, #0x10
    strh r0, [r3]
    movs r0, #0
    strh r0, [r1]
lbl_0805c630:
    ldr r2, lbl_0805c69c @ =0x03000006
    ldrh r0, [r3]
    lsls r0, r0, #8
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_0805c6a0 @ =0x03005510
    ldr r3, lbl_0805c6a4 @ =0x00004604
    adds r0, r3, #0
    strh r0, [r1]
    ldr r2, lbl_0805c6a8 @ =0x03005512
    ldr r0, lbl_0805c6ac @ =0x0400000a
    ldrh r0, [r0]
    movs r1, #1
    orrs r0, r1
    strh r0, [r2]
    ldr r2, lbl_0805c6b0 @ =0x0300000a
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r0, [r0]
    movs r3, #0x80
    lsls r3, r3, #4
    adds r1, r3, #0
    orrs r0, r1
    ldr r1, lbl_0805c6b4 @ =0x0000feff
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_0805c6b8 @ =0x03005520
    movs r0, #4
    strb r0, [r1, #1]
    movs r0, #0
    strb r0, [r1, #3]
    b lbl_0805c71c
    .align 2, 0
lbl_0805c674: .4byte 0x030000e4
lbl_0805c678: .4byte 0x030054e0
lbl_0805c67c: .4byte 0x030013ba
lbl_0805c680: .4byte 0x0400001c
lbl_0805c684: .4byte 0x0400001e
lbl_0805c688: .4byte 0x0300544c
lbl_0805c68c: .4byte 0x00003f48
lbl_0805c690: .4byte 0x030000bc
lbl_0805c694: .4byte 0x030013b2
lbl_0805c698: .4byte 0x030013b0
lbl_0805c69c: .4byte 0x03000006
lbl_0805c6a0: .4byte 0x03005510
lbl_0805c6a4: .4byte 0x00004604
lbl_0805c6a8: .4byte 0x03005512
lbl_0805c6ac: .4byte 0x0400000a
lbl_0805c6b0: .4byte 0x0300000a
lbl_0805c6b4: .4byte 0x0000feff
lbl_0805c6b8: .4byte 0x03005520
lbl_0805c6bc:
    ldr r2, lbl_0805c6f0 @ =0x030013b2
    ldrh r3, [r2]
    ldr r1, lbl_0805c6f4 @ =0x030013b0
    cmp r3, #0
    bne lbl_0805c6cc
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_0805c6fc
lbl_0805c6cc:
    ldrh r0, [r2]
    subs r3, r0, #2
    cmp r3, #0
    bge lbl_0805c6d6
    movs r3, #0
lbl_0805c6d6:
    strh r3, [r2]
    ldrh r0, [r1]
    adds r2, r0, #2
    cmp r2, #0x10
    ble lbl_0805c6e2
    movs r2, #0x10
lbl_0805c6e2:
    strh r2, [r1]
    ldr r1, lbl_0805c6f8 @ =0x03000006
    lsls r0, r3, #8
    orrs r2, r0
    strh r2, [r1]
    b lbl_0805c71c
    .align 2, 0
lbl_0805c6f0: .4byte 0x030013b2
lbl_0805c6f4: .4byte 0x030013b0
lbl_0805c6f8: .4byte 0x03000006
lbl_0805c6fc:
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2]
    ldr r0, lbl_0805c710 @ =0x0000fdff
    ands r0, r1
    strh r0, [r2]
    strb r3, [r4, #3]
    movs r0, #5
    strb r0, [r4, #1]
    b lbl_0805c71c
    .align 2, 0
lbl_0805c710: .4byte 0x0000fdff
lbl_0805c714:
    movs r0, #0
    strb r0, [r4, #1]
    movs r0, #1
    b lbl_0805c71e
lbl_0805c71c:
    movs r0, #0
lbl_0805c71e:
    add sp, #4
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0805c728
sub_0805c728: @ 0x0805c728
    push {r4, lr}
    ldr r4, lbl_0805c73c @ =0x03005520
    ldrb r0, [r4, #1]
    cmp r0, #1
    beq lbl_0805c752
    cmp r0, #1
    bgt lbl_0805c740
    cmp r0, #0
    beq lbl_0805c746
    b lbl_0805c772
    .align 2, 0
lbl_0805c73c: .4byte 0x03005520
lbl_0805c740:
    cmp r0, #2
    beq lbl_0805c76a
    b lbl_0805c772
lbl_0805c746:
    bl sub_0805c220
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805c772
lbl_0805c752:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c762
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
lbl_0805c762:
    movs r0, #0
    bl sub_0805c27c
    b lbl_0805c772
lbl_0805c76a:
    bl sub_0805c2ec
    movs r0, #1
    b lbl_0805c774
lbl_0805c772:
    movs r0, #0
lbl_0805c774:
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start escape_failed_fade
escape_failed_fade: @ 0x0805c77c
    push {r4, lr}
    ldr r4, lbl_0805c790 @ =0x03005520
    ldrb r1, [r4, #1]
    cmp r1, #1
    beq lbl_0805c7b8
    cmp r1, #1
    bgt lbl_0805c794
    cmp r1, #0
    beq lbl_0805c79e
    b lbl_0805c80c
    .align 2, 0
lbl_0805c790: .4byte 0x03005520
lbl_0805c794:
    cmp r1, #2
    beq lbl_0805c7c4
    cmp r1, #3
    beq lbl_0805c7e4
    b lbl_0805c80c
lbl_0805c79e:
    ldr r0, lbl_0805c7b4 @ =0x03000bf0
    strb r1, [r0]
    bl sub_0805c220
    movs r0, #0x3c
    bl sub_08002acc
    movs r0, #0x3c
    bl FadeMusic
    b lbl_0805c7d6
    .align 2, 0
lbl_0805c7b4: .4byte 0x03000bf0
lbl_0805c7b8:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c80c
    b lbl_0805c7d6
lbl_0805c7c4:
    bl sub_0805d09c
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r2, lbl_0805c7e0 @ =0x00007fff
    adds r0, r2, #0
    strh r0, [r1]
    movs r0, #0
    strh r0, [r4, #6]
lbl_0805c7d6:
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805c80c
    .align 2, 0
lbl_0805c7e0: .4byte 0x00007fff
lbl_0805c7e4:
    ldrh r0, [r4, #6]
    adds r0, #1
    strh r0, [r4, #6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x3c
    bls lbl_0805c80c
    ldr r1, lbl_0805c804 @ =0x03000c72
    movs r0, #0
    strh r0, [r1]
    ldr r1, lbl_0805c808 @ =0x03000c70
    movs r0, #6
    strh r0, [r1]
    movs r0, #1
    b lbl_0805c80e
    .align 2, 0
lbl_0805c804: .4byte 0x03000c72
lbl_0805c808: .4byte 0x03000c70
lbl_0805c80c:
    movs r0, #0
lbl_0805c80e:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start before_chozodia_escape_fade
before_chozodia_escape_fade: @ 0x0805c814
    push {r4, lr}
    ldr r4, lbl_0805c828 @ =0x03005520
    ldrb r1, [r4, #1]
    cmp r1, #1
    beq lbl_0805c850
    cmp r1, #1
    bgt lbl_0805c82c
    cmp r1, #0
    beq lbl_0805c832
    b lbl_0805c890
    .align 2, 0
lbl_0805c828: .4byte 0x03005520
lbl_0805c82c:
    cmp r1, #2
    beq lbl_0805c880
    b lbl_0805c890
lbl_0805c832:
    movs r0, #0xa0
    lsls r0, r0, #0x13
    strh r1, [r0]
    ldr r2, lbl_0805c848 @ =0x0300000a
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0]
    ldr r0, lbl_0805c84c @ =0x0000e0ff
    ands r0, r1
    strh r0, [r2]
    b lbl_0805c888
    .align 2, 0
lbl_0805c848: .4byte 0x0300000a
lbl_0805c84c: .4byte 0x0000e0ff
lbl_0805c850:
    bl sub_0805d09c
    ldr r0, lbl_0805c86c @ =0x03000bf0
    movs r1, #0
    strb r1, [r0]
    ldr r0, lbl_0805c870 @ =0x0300007d
    strb r1, [r0]
    ldr r0, lbl_0805c874 @ =0x03000c21
    strb r1, [r0]
    ldr r1, lbl_0805c878 @ =0x03000028
    ldr r0, lbl_0805c87c @ =0x03000024
    ldrb r0, [r0]
    strb r0, [r1]
    b lbl_0805c888
    .align 2, 0
lbl_0805c86c: .4byte 0x03000bf0
lbl_0805c870: .4byte 0x0300007d
lbl_0805c874: .4byte 0x03000c21
lbl_0805c878: .4byte 0x03000028
lbl_0805c87c: .4byte 0x03000024
lbl_0805c880:
    bl sub_080737cc
    cmp r0, #0
    beq lbl_0805c89c
lbl_0805c888:
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805c89c
lbl_0805c890:
    ldr r1, lbl_0805c8a4 @ =0x03000c72
    movs r0, #0
    strh r0, [r1]
    ldr r1, lbl_0805c8a8 @ =0x03000c70
    movs r0, #7
    strh r0, [r1]
lbl_0805c89c:
    movs r0, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0805c8a4: .4byte 0x03000c72
lbl_0805c8a8: .4byte 0x03000c70

    thumb_func_start sub_0805c8ac
sub_0805c8ac: @ 0x0805c8ac
    push {r4, lr}
    ldr r4, lbl_0805c8c0 @ =0x03005520
    ldrb r0, [r4, #1]
    cmp r0, #1
    beq lbl_0805c8f4
    cmp r0, #1
    bgt lbl_0805c8c4
    cmp r0, #0
    beq lbl_0805c8ca
    b lbl_0805c91c
    .align 2, 0
lbl_0805c8c0: .4byte 0x03005520
lbl_0805c8c4:
    cmp r0, #2
    beq lbl_0805c90c
    b lbl_0805c91c
lbl_0805c8ca:
    bl sub_0805c220
    ldrb r0, [r4]
    cmp r0, #0xe
    bne lbl_0805c8e4
    ldr r2, lbl_0805c8f0 @ =0x03000038
    ldrb r1, [r2, #3]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2, #3]
lbl_0805c8e4:
    bl sub_08060d38
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805c91c
    .align 2, 0
lbl_0805c8f0: .4byte 0x03000038
lbl_0805c8f4:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c904
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
lbl_0805c904:
    movs r0, #3
    bl sub_0805c27c
    b lbl_0805c91c
lbl_0805c90c:
    bl sub_0805d09c
    movs r1, #0xa0
    lsls r1, r1, #0x13
    movs r0, #0
    strh r0, [r1]
    movs r0, #1
    b lbl_0805c91e
lbl_0805c91c:
    movs r0, #0
lbl_0805c91e:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start before_tourian_escape_fade
before_tourian_escape_fade: @ 0x0805c924
    push {r4, lr}
    ldr r4, lbl_0805c938 @ =0x03005520
    ldrb r0, [r4, #1]
    cmp r0, #1
    beq lbl_0805c94c
    cmp r0, #1
    bgt lbl_0805c93c
    cmp r0, #0
    beq lbl_0805c946
    b lbl_0805c994
    .align 2, 0
lbl_0805c938: .4byte 0x03005520
lbl_0805c93c:
    cmp r0, #2
    beq lbl_0805c968
    cmp r0, #3
    beq lbl_0805c980
    b lbl_0805c994
lbl_0805c946:
    bl sub_0805c220
    b lbl_0805c95c
lbl_0805c94c:
    ldr r1, lbl_0805c964 @ =0x030056f4
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0805c958
    movs r0, #0
    strb r0, [r1]
lbl_0805c958:
    movs r0, #0
    strh r0, [r4, #6]
lbl_0805c95c:
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805c994
    .align 2, 0
lbl_0805c964: .4byte 0x030056f4
lbl_0805c968:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c978
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
lbl_0805c978:
    movs r0, #7
    bl sub_0805c27c
    b lbl_0805c994
lbl_0805c980:
    bl sub_0805c2ec
    ldr r1, lbl_0805c990 @ =0x0300007e
    movs r0, #1
    strb r0, [r1]
    movs r0, #1
    b lbl_0805c996
    .align 2, 0
lbl_0805c990: .4byte 0x0300007e
lbl_0805c994:
    movs r0, #0
lbl_0805c996:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start before_getting_fully_powered_fade
before_getting_fully_powered_fade: @ 0x0805c99c
    push {r4, r5, lr}
    ldr r5, lbl_0805c9b0 @ =0x03005520
    ldrb r4, [r5, #1]
    cmp r4, #1
    beq lbl_0805c9c6
    cmp r4, #1
    bgt lbl_0805c9b4
    cmp r4, #0
    beq lbl_0805c9be
    b lbl_0805ca50
    .align 2, 0
lbl_0805c9b0: .4byte 0x03005520
lbl_0805c9b4:
    cmp r4, #2
    beq lbl_0805c9e4
    cmp r4, #3
    beq lbl_0805c9fc
    b lbl_0805ca50
lbl_0805c9be:
    bl sub_0805c220
    strb r4, [r5, #3]
    b lbl_0805c9d6
lbl_0805c9c6:
    ldr r1, lbl_0805c9e0 @ =0x030056f4
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0805c9d2
    movs r0, #0
    strb r0, [r1]
lbl_0805c9d2:
    movs r0, #0
    strb r0, [r5, #3]
lbl_0805c9d6:
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
    b lbl_0805ca50
    .align 2, 0
lbl_0805c9e0: .4byte 0x030056f4
lbl_0805c9e4:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805c9f4
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
lbl_0805c9f4:
    movs r0, #7
    bl sub_0805c27c
    b lbl_0805ca50
lbl_0805c9fc:
    bl sub_0805c2ec
    ldr r1, lbl_0805ca44 @ =0x0300007d
    movs r0, #0xc
    strb r0, [r1]
    movs r0, #2
    bl start_special_background_fading
    ldr r1, lbl_0805ca48 @ =0x0300070c
    movs r0, #6
    strb r0, [r1, #0xf]
    movs r0, #1
    movs r1, #0xd
    bl EventFunction
    movs r0, #3
    movs r1, #0x13
    bl EventFunction
    cmp r0, #0
    bne lbl_0805ca36
    movs r0, #1
    movs r1, #0x13
    bl EventFunction
    movs r0, #1
    movs r1, #0x44
    bl EventFunction
lbl_0805ca36:
    ldr r0, lbl_0805ca4c @ =0x03001530
    ldrb r1, [r0, #0xe]
    movs r2, #0x10
    orrs r1, r2
    strb r1, [r0, #0xe]
    movs r0, #1
    b lbl_0805ca52
    .align 2, 0
lbl_0805ca44: .4byte 0x0300007d
lbl_0805ca48: .4byte 0x0300070c
lbl_0805ca4c: .4byte 0x03001530
lbl_0805ca50:
    movs r0, #0
lbl_0805ca52:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start before_ridley_spawn_fade
before_ridley_spawn_fade: @ 0x0805ca58
    push {r4, r5, lr}
    ldr r5, lbl_0805ca6c @ =0x03005520
    ldrb r4, [r5, #1]
    cmp r4, #1
    beq lbl_0805ca82
    cmp r4, #1
    bgt lbl_0805ca70
    cmp r4, #0
    beq lbl_0805ca7a
    b lbl_0805cad0
    .align 2, 0
lbl_0805ca6c: .4byte 0x03005520
lbl_0805ca70:
    cmp r4, #2
    beq lbl_0805caa0
    cmp r4, #3
    beq lbl_0805cab8
    b lbl_0805cad0
lbl_0805ca7a:
    bl sub_0805c220
    strb r4, [r5, #3]
    b lbl_0805ca92
lbl_0805ca82:
    ldr r1, lbl_0805ca9c @ =0x030056f4
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0805ca8e
    movs r0, #0
    strb r0, [r1]
lbl_0805ca8e:
    movs r0, #0
    strb r0, [r5, #3]
lbl_0805ca92:
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
    b lbl_0805cad0
    .align 2, 0
lbl_0805ca9c: .4byte 0x030056f4
lbl_0805caa0:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805cab0
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
lbl_0805cab0:
    movs r0, #7
    bl sub_0805c27c
    b lbl_0805cad0
lbl_0805cab8:
    bl sub_0805c2ec
    ldr r1, lbl_0805cacc @ =0x0300007d
    movs r0, #9
    strb r0, [r1]
    movs r0, #2
    bl start_special_background_fading
    movs r0, #1
    b lbl_0805cad2
    .align 2, 0
lbl_0805cacc: .4byte 0x0300007d
lbl_0805cad0:
    movs r0, #0
lbl_0805cad2:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start before_statue_opening_fade
before_statue_opening_fade: @ 0x0805cad8
    push {r4, lr}
    ldr r4, lbl_0805caec @ =0x03005520
    ldrb r0, [r4, #1]
    cmp r0, #1
    beq lbl_0805cb06
    cmp r0, #1
    bgt lbl_0805caf0
    cmp r0, #0
    beq lbl_0805cafa
    b lbl_0805cb70
    .align 2, 0
lbl_0805caec: .4byte 0x03005520
lbl_0805caf0:
    cmp r0, #2
    beq lbl_0805cb40
    cmp r0, #3
    beq lbl_0805cb58
    b lbl_0805cb70
lbl_0805cafa:
    bl sub_0805c220
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805cb70
lbl_0805cb06:
    ldr r0, lbl_0805cb34 @ =0x03000054
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_0805cb12
    cmp r0, #3
    bne lbl_0805cb1c
lbl_0805cb12:
    movs r0, #0x3c
    movs r1, #0x1c
    movs r2, #0
    bl sub_08003b7c
lbl_0805cb1c:
    ldr r1, lbl_0805cb38 @ =0x030056f4
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0805cb28
    movs r0, #0
    strb r0, [r1]
lbl_0805cb28:
    ldr r1, lbl_0805cb3c @ =0x03005520
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    b lbl_0805cb70
    .align 2, 0
lbl_0805cb34: .4byte 0x03000054
lbl_0805cb38: .4byte 0x030056f4
lbl_0805cb3c: .4byte 0x03005520
lbl_0805cb40:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805cb50
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
lbl_0805cb50:
    movs r0, #7
    bl sub_0805c27c
    b lbl_0805cb70
lbl_0805cb58:
    bl sub_0805c2ec
    ldr r1, lbl_0805cb6c @ =0x0300007d
    movs r0, #6
    strb r0, [r1]
    movs r0, #2
    bl start_special_background_fading
    movs r0, #1
    b lbl_0805cb72
    .align 2, 0
lbl_0805cb6c: .4byte 0x0300007d
lbl_0805cb70:
    movs r0, #0
lbl_0805cb72:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start before_intro_text_fade
before_intro_text_fade: @ 0x0805cb78
    push {r4, lr}
    ldr r4, lbl_0805cb8c @ =0x03005520
    ldrb r0, [r4, #1]
    cmp r0, #1
    beq lbl_0805cba0
    cmp r0, #1
    bgt lbl_0805cb90
    cmp r0, #0
    beq lbl_0805cb9a
    b lbl_0805cc14
    .align 2, 0
lbl_0805cb8c: .4byte 0x03005520
lbl_0805cb90:
    cmp r0, #2
    beq lbl_0805cbb4
    cmp r0, #3
    beq lbl_0805cbcc
    b lbl_0805cc14
lbl_0805cb9a:
    bl sub_0805c220
    b lbl_0805cc00
lbl_0805cba0:
    ldr r1, lbl_0805cbb0 @ =0x030056f4
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0805cc00
    movs r0, #0
    strb r0, [r1]
    b lbl_0805cc00
    .align 2, 0
lbl_0805cbb0: .4byte 0x030056f4
lbl_0805cbb4:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805cbc4
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
lbl_0805cbc4:
    movs r0, #7
    bl sub_0805c27c
    b lbl_0805cc14
lbl_0805cbcc:
    ldr r0, lbl_0805cbf4 @ =0x0300007d
    movs r1, #1
    strb r1, [r0]
    bl sub_0805c2ec
    movs r0, #2
    bl start_special_background_fading
    ldr r0, lbl_0805cbf8 @ =0x0300002c
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_0805cc10
    cmp r0, #2
    bne lbl_0805cbfc
    movs r0, #1
    movs r1, #2
    bl EventFunction
    b lbl_0805cc10
    .align 2, 0
lbl_0805cbf4: .4byte 0x0300007d
lbl_0805cbf8: .4byte 0x0300002c
lbl_0805cbfc:
    cmp r0, #0
    beq lbl_0805cc08
lbl_0805cc00:
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805cc14
lbl_0805cc08:
    movs r0, #1
    movs r1, #1
    bl EventFunction
lbl_0805cc10:
    movs r0, #1
    b lbl_0805cc16
lbl_0805cc14:
    movs r0, #0
lbl_0805cc16:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start sub_0805cc1c
sub_0805cc1c: @ 0x0805cc1c
    push {r4, lr}
    ldr r4, lbl_0805cc30 @ =0x03005520
    ldrb r0, [r4, #1]
    cmp r0, #1
    beq lbl_0805cc44
    cmp r0, #1
    bgt lbl_0805cc34
    cmp r0, #0
    beq lbl_0805cc3e
    b lbl_0805cc8c
    .align 2, 0
lbl_0805cc30: .4byte 0x03005520
lbl_0805cc34:
    cmp r0, #2
    beq lbl_0805cc5c
    cmp r0, #3
    beq lbl_0805cc74
    b lbl_0805cc8c
lbl_0805cc3e:
    bl sub_0805c220
    b lbl_0805cc50
lbl_0805cc44:
    ldr r1, lbl_0805cc58 @ =0x030056f4
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0805cc50
    movs r0, #0
    strb r0, [r1]
lbl_0805cc50:
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805cc8c
    .align 2, 0
lbl_0805cc58: .4byte 0x030056f4
lbl_0805cc5c:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805cc6c
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
lbl_0805cc6c:
    movs r0, #7
    bl sub_0805c27c
    b lbl_0805cc8c
lbl_0805cc74:
    bl sub_0805c2ec
    ldr r1, lbl_0805cc88 @ =0x0300007d
    movs r0, #0xe
    strb r0, [r1]
    movs r0, #2
    bl start_special_background_fading
    movs r0, #1
    b lbl_0805cc8e
    .align 2, 0
lbl_0805cc88: .4byte 0x0300007d
lbl_0805cc8c:
    movs r0, #0
lbl_0805cc8e:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start sub_0805cc94
sub_0805cc94: @ 0x0805cc94
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_0805ccac @ =0x03005520
    ldrb r0, [r4, #1]
    cmp r0, #1
    beq lbl_0805ccbc
    cmp r0, #1
    bgt lbl_0805ccb0
    cmp r0, #0
    beq lbl_0805ccb6
    b lbl_0805cce6
    .align 2, 0
lbl_0805ccac: .4byte 0x03005520
lbl_0805ccb0:
    cmp r0, #2
    beq lbl_0805ccd4
    b lbl_0805cce6
lbl_0805ccb6:
    bl sub_0805c190
    b lbl_0805ccca
lbl_0805ccbc:
    ldrh r0, [r4, #6]
    adds r0, #1
    strh r0, [r4, #6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x3c
    bls lbl_0805cce6
lbl_0805ccca:
    strh r5, [r4, #6]
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805cce6
lbl_0805ccd4:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805cce6
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    movs r5, #1
lbl_0805cce6:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0805ccf0
sub_0805ccf0: @ 0x0805ccf0
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_0805cd08 @ =0x03005520
    ldrb r0, [r4, #1]
    cmp r0, #0
    bne lbl_0805cd0c
    bl sub_0805c190
    ldrb r0, [r4, #1]
    adds r0, #1
    strb r0, [r4, #1]
    b lbl_0805cd1c
    .align 2, 0
lbl_0805cd08: .4byte 0x03005520
lbl_0805cd0c:
    cmp r0, #1
    bne lbl_0805cd1c
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805cd1c
    movs r5, #1
lbl_0805cd1c:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sub_0805cd24
sub_0805cd24: @ 0x0805cd24
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r0, lbl_0805cd4c @ =0x03005520
    ldrb r2, [r0, #3]
    adds r1, r2, #0
    adds r3, r0, #0
    cmp r1, #0xff
    beq lbl_0805cd38
    adds r0, r2, #1
    strb r0, [r3, #3]
lbl_0805cd38:
    ldrb r0, [r3, #1]
    cmp r0, #6
    bls lbl_0805cd40
    b lbl_0805cf40
lbl_0805cd40:
    lsls r0, r0, #2
    ldr r1, lbl_0805cd50 @ =lbl_0805cd54
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805cd4c: .4byte 0x03005520
lbl_0805cd50: .4byte lbl_0805cd54
lbl_0805cd54: @ jump table
    .4byte lbl_0805cd70 @ case 0
    .4byte lbl_0805cdcc @ case 1
    .4byte lbl_0805ce18 @ case 2
    .4byte lbl_0805ce26 @ case 3
    .4byte lbl_0805cf04 @ case 4
    .4byte lbl_0805cf20 @ case 5
    .4byte lbl_0805cf38 @ case 6
lbl_0805cd70:
    ldr r0, lbl_0805cd88 @ =0x030000e4
    ldrh r0, [r0, #0x10]
    movs r1, #0x8c
    lsls r1, r1, #2
    cmp r0, r1
    bne lbl_0805cd90
    ldr r1, lbl_0805cd8c @ =0x030054e0
    movs r0, #0x98
    lsls r0, r0, #1
    strh r0, [r1]
    adds r2, r1, #0
    b lbl_0805cd96
    .align 2, 0
lbl_0805cd88: .4byte 0x030000e4
lbl_0805cd8c: .4byte 0x030054e0
lbl_0805cd90:
    ldr r0, lbl_0805cdc0 @ =0x030054e0
    strh r1, [r0]
    adds r2, r0, #0
lbl_0805cd96:
    ldrh r1, [r2, #2]
    lsls r1, r1, #6
    ldr r0, lbl_0805cdc4 @ =0x030013ba
    ldrh r0, [r0]
    subs r1, r1, r0
    asrs r1, r1, #2
    movs r3, #0x80
    lsls r3, r3, #1
    adds r0, r3, #0
    subs r0, r0, r1
    strh r0, [r2, #2]
    ldr r0, lbl_0805cdc8 @ =0x0300007b
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #1
    beq lbl_0805cdba
    b lbl_0805cf2a
lbl_0805cdba:
    bl lock_hatches_with_timer
    b lbl_0805cf2a
    .align 2, 0
lbl_0805cdc0: .4byte 0x030054e0
lbl_0805cdc4: .4byte 0x030013ba
lbl_0805cdc8: .4byte 0x0300007b
lbl_0805cdcc:
    ldr r0, lbl_0805cdf0 @ =0x030054e0
    ldr r5, lbl_0805cdf4 @ =0x030000e4
    ldrh r4, [r0, #2]
    ldrh r0, [r5, #0x12]
    adds r2, r4, #0
    adds r1, r0, #0
    cmp r2, r1
    bls lbl_0805cdf8
    adds r0, #3
    strh r0, [r5, #0x12]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r2
    bhi lbl_0805cdea
    b lbl_0805cf40
lbl_0805cdea:
    strh r4, [r5, #0x12]
    b lbl_0805cf40
    .align 2, 0
lbl_0805cdf0: .4byte 0x030054e0
lbl_0805cdf4: .4byte 0x030000e4
lbl_0805cdf8:
    cmp r2, r1
    bhs lbl_0805ce0e
    subs r0, #3
    strh r0, [r5, #0x12]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r2
    blo lbl_0805ce0a
    b lbl_0805cf40
lbl_0805ce0a:
    strh r4, [r5, #0x12]
    b lbl_0805cf40
lbl_0805ce0e:
    movs r0, #0
    strb r0, [r3, #3]
    movs r0, #2
    strb r0, [r3, #1]
    b lbl_0805cf40
lbl_0805ce18:
    ldrb r0, [r3, #3]
    cmp r0, #2
    bhi lbl_0805ce20
    b lbl_0805cf40
lbl_0805ce20:
    movs r0, #0
    strb r0, [r3, #3]
    b lbl_0805cf12
lbl_0805ce26:
    ldr r0, lbl_0805ce48 @ =0x030054e0
    ldr r4, lbl_0805ce4c @ =0x030000e4
    ldrh r3, [r0]
    ldrh r0, [r4, #0x10]
    adds r2, r3, #0
    adds r1, r0, #0
    cmp r2, r1
    bls lbl_0805ce50
    adds r0, #6
    strh r0, [r4, #0x10]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r2, r0
    blo lbl_0805ce44
    b lbl_0805cf40
lbl_0805ce44:
    strh r3, [r4, #0x10]
    b lbl_0805cf40
    .align 2, 0
lbl_0805ce48: .4byte 0x030054e0
lbl_0805ce4c: .4byte 0x030000e4
lbl_0805ce50:
    cmp r2, r1
    bhs lbl_0805ce64
    subs r0, #6
    strh r0, [r4, #0x10]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r2, r0
    bls lbl_0805cf40
    strh r3, [r4, #0x10]
    b lbl_0805cf40
lbl_0805ce64:
    movs r6, #0x80
    lsls r6, r6, #0x13
    ldrh r0, [r6]
    movs r2, #0x80
    lsls r2, r2, #2
    adds r1, r2, #0
    orrs r0, r1
    strh r0, [r6]
    ldr r2, lbl_0805cedc @ =0x04000050
    ldrh r1, [r2]
    ldr r0, lbl_0805cee0 @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldrh r1, [r6]
    ldr r0, lbl_0805cee4 @ =0x0000f7ff
    ands r0, r1
    strh r0, [r6]
    ldr r1, lbl_0805cee8 @ =0x02007000
    ldr r2, lbl_0805ceec @ =0x06003000
    movs r3, #0x80
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_0805cef0 @ =0x04000008
    ldr r5, lbl_0805cef4 @ =0x03000088
    ldrh r0, [r5, #0x12]
    strh r0, [r1]
    adds r1, #6
    ldrh r0, [r5, #0x10]
    strh r0, [r1]
    ldrh r0, [r4, #0xe]
    movs r7, #0
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0xc]
    strh r0, [r4, #0x10]
    ldr r2, lbl_0805cef8 @ =0x03000080
    ldrb r1, [r2, #7]
    movs r0, #0x7f
    ands r0, r1
    cmp r0, #0
    beq lbl_0805cec2
    movs r0, #0x80
    orrs r0, r1
    strb r0, [r2, #7]
lbl_0805cec2:
    ldrh r1, [r5, #2]
    movs r0, #2
    bl TransparencyUpdateBLDCNT
    ldrh r0, [r5]
    strh r0, [r6]
    ldr r1, lbl_0805cefc @ =0x03005520
    strb r7, [r1, #3]
    ldr r0, lbl_0805cf00 @ =0x0300007c
    strb r7, [r0]
    movs r0, #5
    strb r0, [r1, #1]
    b lbl_0805cf40
    .align 2, 0
lbl_0805cedc: .4byte 0x04000050
lbl_0805cee0: .4byte 0x0000fffd
lbl_0805cee4: .4byte 0x0000f7ff
lbl_0805cee8: .4byte 0x02007000
lbl_0805ceec: .4byte 0x06003000
lbl_0805cef0: .4byte 0x04000008
lbl_0805cef4: .4byte 0x03000088
lbl_0805cef8: .4byte 0x03000080
lbl_0805cefc: .4byte 0x03005520
lbl_0805cf00: .4byte 0x0300007c
lbl_0805cf04:
    ldrb r0, [r3, #3]
    cmp r0, #0
    beq lbl_0805cf40
    movs r1, #0
    strb r1, [r3, #3]
    ldr r0, lbl_0805cf1c @ =0x0300007c
    strb r1, [r0]
lbl_0805cf12:
    ldrb r0, [r3, #1]
    adds r0, #1
    strb r0, [r3, #1]
    b lbl_0805cf40
    .align 2, 0
lbl_0805cf1c: .4byte 0x0300007c
lbl_0805cf20:
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805cf40
lbl_0805cf2a:
    ldr r1, lbl_0805cf34 @ =0x03005520
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    b lbl_0805cf40
    .align 2, 0
lbl_0805cf34: .4byte 0x03005520
lbl_0805cf38:
    movs r0, #0
    strb r0, [r3, #1]
    movs r0, #1
    b lbl_0805cf42
lbl_0805cf40:
    movs r0, #0
lbl_0805cf42:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start apply_background_fading
apply_background_fading: @ 0x0805cf4c
    push {r4, r5, lr}
    ldr r5, lbl_0805cf8c @ =0x03000029
    ldrb r3, [r5]
    adds r2, r3, #0
    cmp r2, #0
    beq lbl_0805cfd4
    cmp r2, #0xff
    beq lbl_0805cfd4
    ldr r1, lbl_0805cf90 @ =0x03005520
    movs r0, #1
    strb r0, [r1, #5]
    movs r0, #0x80
    ands r0, r3
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #0
    beq lbl_0805cf98
    bl sub_0805bcb0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805cfd4
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2]
    ldr r0, lbl_0805cf94 @ =0x0000f0ff
    ands r0, r1
    strh r0, [r2]
    movs r0, #0xff
    strb r0, [r5]
    b lbl_0805cfd4
    .align 2, 0
lbl_0805cf8c: .4byte 0x03000029
lbl_0805cf90: .4byte 0x03005520
lbl_0805cf94: .4byte 0x0000f0ff
lbl_0805cf98:
    cmp r2, #1
    bne lbl_0805cfb8
    movs r0, #0x18
    bl start_special_background_fading
    ldr r1, lbl_0805cfb4 @ =0x0300006b
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0805cfc6
    strb r4, [r1]
    bl sub_0805d09c
    b lbl_0805cfc6
    .align 2, 0
lbl_0805cfb4: .4byte 0x0300006b
lbl_0805cfb8:
    cmp r2, #2
    bne lbl_0805cfc4
    movs r0, #0x17
    bl start_special_background_fading
    b lbl_0805cfc6
lbl_0805cfc4:
    strb r4, [r5]
lbl_0805cfc6:
    bl sub_0805b340
    ldr r0, lbl_0805cfdc @ =0x03000029
    ldrb r1, [r0]
    movs r2, #0x80
    orrs r1, r2
    strb r1, [r0]
lbl_0805cfd4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805cfdc: .4byte 0x03000029

    thumb_func_start SetBGHazeEffect
SetBGHazeEffect: @ 0x0805cfe0
    push {r4, r5, lr}
    bl reset_haze_loops
    ldr r5, lbl_0805d024 @ =0x0300006b
    ldr r4, lbl_0805d028 @ =0x0875fd88
    ldr r3, lbl_0805d02c @ =0x030000bc
    ldrb r0, [r3, #0x10]
    lsls r0, r0, #2
    adds r0, r0, r4
    ldrb r0, [r0]
    strb r0, [r5]
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805d016
    ldrb r0, [r3, #0x10]
    lsls r0, r0, #2
    adds r1, r4, #1
    adds r0, r0, r1
    ldrb r0, [r0]
    strb r0, [r3, #0x14]
    ldr r2, lbl_0805d030 @ =0x0300551c
    ldrb r0, [r3, #0x10]
    lsls r0, r0, #2
    adds r1, r4, #2
    adds r0, r0, r1
    ldrb r0, [r0]
    strb r0, [r2]
lbl_0805d016:
    ldrb r0, [r5]
    bl SetupHazeCode
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d024: .4byte 0x0300006b
lbl_0805d028: .4byte 0x0875fd88
lbl_0805d02c: .4byte 0x030000bc
lbl_0805d030: .4byte 0x0300551c

    thumb_func_start sub_0805d034
sub_0805d034: @ 0x0805d034
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r6, lbl_0805d088 @ =0x03000080
    ldrb r7, [r6, #7]
    movs r0, #0x80
    ands r0, r7
    cmp r0, #0
    beq lbl_0805d07e
    ldr r2, lbl_0805d08c @ =0x040000b0
    ldr r5, lbl_0805d090 @ =0x02026300
    str r5, [r2]
    ldr r4, [r6]
    str r4, [r2, #4]
    ldrb r0, [r6, #6]
    lsrs r0, r0, #1
    ldr r1, lbl_0805d094 @ =0x80600000
    orrs r0, r1
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    mov r3, sp
    ldr r0, lbl_0805d098 @ =0x08345ff8
    ldrb r1, [r0]
    strb r1, [r3]
    mov r0, sp
    strb r1, [r0]
    str r5, [r2]
    str r4, [r2, #4]
    ldrb r0, [r6, #6]
    lsrs r0, r0, #1
    movs r1, #0xc0
    lsls r1, r1, #0xf
    orrs r0, r1
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    movs r0, #0x7f
    ands r0, r7
    strb r0, [r6, #7]
lbl_0805d07e:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d088: .4byte 0x03000080
lbl_0805d08c: .4byte 0x040000b0
lbl_0805d090: .4byte 0x02026300
lbl_0805d094: .4byte 0x80600000
lbl_0805d098: .4byte 0x08345ff8

    thumb_func_start sub_0805d09c
sub_0805d09c: @ 0x0805d09c
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r6, lbl_0805d0fc @ =0x03000080
    ldrb r7, [r6, #7]
    movs r0, #0x80
    ands r0, r7
    cmp r0, #0
    beq lbl_0805d0f4
    ldr r2, lbl_0805d100 @ =0x040000b0
    ldr r5, lbl_0805d104 @ =0x02026300
    str r5, [r2]
    ldr r4, [r6]
    str r4, [r2, #4]
    ldrb r0, [r6, #6]
    lsrs r0, r0, #1
    ldr r1, lbl_0805d108 @ =0x80600000
    orrs r0, r1
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    mov r3, sp
    ldr r0, lbl_0805d10c @ =0x08345ff8
    ldrb r1, [r0]
    strb r1, [r3]
    mov r0, sp
    strb r1, [r0]
    str r5, [r2]
    str r4, [r2, #4]
    ldrb r0, [r6, #6]
    lsrs r0, r0, #1
    movs r1, #0xc0
    lsls r1, r1, #0xf
    orrs r0, r1
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    movs r0, #0x7f
    ands r0, r7
    strb r0, [r6, #7]
    movs r1, #0
    movs r0, #2
    strb r0, [r6, #6]
    ldr r0, lbl_0805d110 @ =0x02026d00
    str r0, [r6]
    ldr r0, lbl_0805d114 @ =0x0300006b
    strb r1, [r0]
lbl_0805d0f4:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d0fc: .4byte 0x03000080
lbl_0805d100: .4byte 0x040000b0
lbl_0805d104: .4byte 0x02026300
lbl_0805d108: .4byte 0x80600000
lbl_0805d10c: .4byte 0x08345ff8
lbl_0805d110: .4byte 0x02026d00
lbl_0805d114: .4byte 0x0300006b

    thumb_func_start SetupHazeCode
SetupHazeCode: @ 0x0805d118
    push {r4, lr}
    sub sp, #4
    ldr r4, lbl_0805d144 @ =0x0300006b
    strb r0, [r4]
    ldr r2, lbl_0805d148 @ =0x03000080
    ldrb r1, [r2, #7]
    movs r0, #0x80
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r2, #7]
    bl sub_0805d034
    ldrb r0, [r4]
    subs r0, #1
    cmp r0, #9
    bls lbl_0805d13a
    b lbl_0805d3ca
lbl_0805d13a:
    lsls r0, r0, #2
    ldr r1, lbl_0805d14c @ =lbl_0805d150
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805d144: .4byte 0x0300006b
lbl_0805d148: .4byte 0x03000080
lbl_0805d14c: .4byte lbl_0805d150
lbl_0805d150: @ jump table
    .4byte lbl_0805d178 @ case 0
    .4byte lbl_0805d1a4 @ case 1
    .4byte lbl_0805d1ac @ case 2
    .4byte lbl_0805d1b4 @ case 3
    .4byte lbl_0805d204 @ case 4
    .4byte lbl_0805d254 @ case 5
    .4byte lbl_0805d2a4 @ case 6
    .4byte lbl_0805d378 @ case 7
    .4byte lbl_0805d3c4 @ case 8
    .4byte lbl_0805d3c4 @ case 9
lbl_0805d178:
    bl gradient_related
    ldr r2, lbl_0805d1a0 @ =0x03000080
    ldrb r1, [r2, #7]
    movs r0, #0x80
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2, #7]
    movs r0, #2
    strb r0, [r2, #6]
    movs r0, #0xa0
    lsls r0, r0, #1
    strh r0, [r2, #4]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r2]
    b lbl_0805d3ca
    .align 2, 0
lbl_0805d1a0: .4byte 0x03000080
lbl_0805d1a4:
    ldr r1, lbl_0805d1a8 @ =haze_bg3
    b lbl_0805d1b6
    .align 2, 0
lbl_0805d1a8: .4byte haze_bg3
lbl_0805d1ac:
    ldr r1, lbl_0805d1b0 @ =haze_bg3_strong_effect_weak_outside
    b lbl_0805d1b6
    .align 2, 0
lbl_0805d1b0: .4byte haze_bg3_strong_effect_weak_outside
lbl_0805d1b4:
    ldr r1, lbl_0805d1f0 @ =haze_bg3_none_effect_weak_outside
lbl_0805d1b6:
    ldr r4, lbl_0805d1f4 @ =0x03001944
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    ldr r0, lbl_0805d1f8 @ =0x0300572c
    adds r4, #1
    str r4, [r0]
    ldr r2, lbl_0805d1fc @ =0x03000080
    ldrb r1, [r2, #7]
    movs r0, #0x80
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2, #7]
    movs r0, #2
    strb r0, [r2, #6]
    movs r0, #0xa0
    lsls r0, r0, #1
    strh r0, [r2, #4]
    ldr r0, lbl_0805d200 @ =0x0400001c
    str r0, [r2]
    b lbl_0805d3ca
    .align 2, 0
lbl_0805d1f0: .4byte haze_bg3_none_effect_weak_outside
lbl_0805d1f4: .4byte 0x03001944
lbl_0805d1f8: .4byte 0x0300572c
lbl_0805d1fc: .4byte 0x03000080
lbl_0805d200: .4byte 0x0400001c
lbl_0805d204:
    ldr r1, lbl_0805d240 @ =haze_bg3_bg2_strong_effect_weak_outside_medium_everywhere
    ldr r4, lbl_0805d244 @ =0x03001944
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    ldr r0, lbl_0805d248 @ =0x0300572c
    adds r4, #1
    str r4, [r0]
    ldr r2, lbl_0805d24c @ =0x03000080
    ldrb r1, [r2, #7]
    movs r0, #0x80
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2, #7]
    movs r0, #8
    strb r0, [r2, #6]
    movs r0, #0xa0
    lsls r0, r0, #3
    strh r0, [r2, #4]
    ldr r0, lbl_0805d250 @ =0x04000018
    str r0, [r2]
    b lbl_0805d3ca
    .align 2, 0
lbl_0805d240: .4byte haze_bg3_bg2_strong_effect_weak_outside_medium_everywhere
lbl_0805d244: .4byte 0x03001944
lbl_0805d248: .4byte 0x0300572c
lbl_0805d24c: .4byte 0x03000080
lbl_0805d250: .4byte 0x04000018
lbl_0805d254:
    ldr r1, lbl_0805d290 @ =sub_0805da40
    ldr r4, lbl_0805d294 @ =0x03001944
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    ldr r0, lbl_0805d298 @ =0x0300572c
    adds r4, #1
    str r4, [r0]
    ldr r2, lbl_0805d29c @ =0x03000080
    ldrb r1, [r2, #7]
    movs r0, #0x80
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2, #7]
    movs r0, #0xc
    strb r0, [r2, #6]
    movs r0, #0xf0
    lsls r0, r0, #3
    strh r0, [r2, #4]
    ldr r0, lbl_0805d2a0 @ =0x04000014
    str r0, [r2]
    b lbl_0805d3ca
    .align 2, 0
lbl_0805d290: .4byte sub_0805da40
lbl_0805d294: .4byte 0x03001944
lbl_0805d298: .4byte 0x0300572c
lbl_0805d29c: .4byte 0x03000080
lbl_0805d2a0: .4byte 0x04000014
lbl_0805d2a4:
    ldr r1, lbl_0805d338 @ =0x0300000e
    movs r0, #0x1f
    strb r0, [r1]
    ldr r1, lbl_0805d33c @ =0x0300000f
    movs r0, #0x37
    strb r0, [r1]
    ldr r1, lbl_0805d340 @ =0x0300544c
    movs r0, #0xcf
    strh r0, [r1]
    ldr r1, lbl_0805d344 @ =0x04000054
    movs r0, #0xc
    strh r0, [r1]
    ldr r1, lbl_0805d348 @ =0x0300544a
    movs r0, #0xa0
    strh r0, [r1]
    ldr r1, lbl_0805d34c @ =0x03005448
    movs r0, #0
    strh r0, [r1]
    movs r0, #0
    bl power_bomb_yellow_tint
    ldr r0, lbl_0805d350 @ =0x03000088
    ldrh r1, [r0]
    movs r3, #0x80
    lsls r3, r3, #1
    adds r0, r3, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0805d2f4
    ldr r0, lbl_0805d354 @ =0x030000bc
    ldrb r0, [r0, #1]
    cmp r0, #0x12
    beq lbl_0805d2f4
    ldr r2, lbl_0805d358 @ =0x0300000a
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0]
    adds r0, r3, #0
    eors r0, r1
    strh r0, [r2]
lbl_0805d2f4:
    ldr r1, lbl_0805d35c @ =0x03000010
    ldr r2, lbl_0805d360 @ =0x00007fff
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0805d364 @ =haze_power_bomb_expanding
    ldr r4, lbl_0805d368 @ =0x03001944
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    ldr r0, lbl_0805d36c @ =0x0300572c
    adds r4, #1
    str r4, [r0]
    ldr r2, lbl_0805d370 @ =0x03000080
    ldrb r0, [r2, #7]
    movs r1, #0x80
    rsbs r1, r1, #0
    ands r1, r0
    movs r0, #1
    orrs r1, r0
    strb r1, [r2, #7]
    movs r0, #2
    strb r0, [r2, #6]
    movs r0, #0xa0
    lsls r0, r0, #1
    strh r0, [r2, #4]
    ldr r0, lbl_0805d374 @ =0x04000042
    str r0, [r2]
    b lbl_0805d3a2
    .align 2, 0
lbl_0805d338: .4byte 0x0300000e
lbl_0805d33c: .4byte 0x0300000f
lbl_0805d340: .4byte 0x0300544c
lbl_0805d344: .4byte 0x04000054
lbl_0805d348: .4byte 0x0300544a
lbl_0805d34c: .4byte 0x03005448
lbl_0805d350: .4byte 0x03000088
lbl_0805d354: .4byte 0x030000bc
lbl_0805d358: .4byte 0x0300000a
lbl_0805d35c: .4byte 0x03000010
lbl_0805d360: .4byte 0x00007fff
lbl_0805d364: .4byte haze_power_bomb_expanding
lbl_0805d368: .4byte 0x03001944
lbl_0805d36c: .4byte 0x0300572c
lbl_0805d370: .4byte 0x03000080
lbl_0805d374: .4byte 0x04000042
lbl_0805d378:
    ldr r1, lbl_0805d3b4 @ =haze_power_bomb_retracting
    ldr r4, lbl_0805d3b8 @ =0x03001944
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    ldr r0, lbl_0805d3bc @ =0x0300572c
    adds r4, #1
    str r4, [r0]
    ldr r2, lbl_0805d3c0 @ =0x03000080
    ldrb r0, [r2, #7]
    movs r1, #0x80
    rsbs r1, r1, #0
    ands r1, r0
    movs r0, #1
    orrs r1, r0
    strb r1, [r2, #7]
lbl_0805d3a2:
    movs r0, #0x7f
    ands r0, r1
    cmp r0, #0
    beq lbl_0805d3ca
    movs r0, #0x80
    orrs r1, r0
    strb r1, [r2, #7]
    b lbl_0805d3ca
    .align 2, 0
lbl_0805d3b4: .4byte haze_power_bomb_retracting
lbl_0805d3b8: .4byte 0x03001944
lbl_0805d3bc: .4byte 0x0300572c
lbl_0805d3c0: .4byte 0x03000080
lbl_0805d3c4:
    ldr r1, lbl_0805d3d4 @ =0x0300006b
    movs r0, #0
    strb r0, [r1]
lbl_0805d3ca:
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d3d4: .4byte 0x0300006b

    thumb_func_start reset_haze_loops
reset_haze_loops: @ 0x0805d3d8
    push {lr}
    ldr r0, lbl_0805d400 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805d3f2
    ldr r1, lbl_0805d404 @ =0x0300571c
    ldr r0, lbl_0805d408 @ =0x0835f944
    ldr r0, [r0]
    str r0, [r1]
    str r0, [r1, #4]
    str r0, [r1, #8]
lbl_0805d3f2:
    ldr r0, lbl_0805d40c @ =0x03005728
    movs r1, #0
    strb r1, [r0]
    ldr r0, lbl_0805d410 @ =0x03005729
    strb r1, [r0]
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d400: .4byte 0x03000bf0
lbl_0805d404: .4byte 0x0300571c
lbl_0805d408: .4byte 0x0835f944
lbl_0805d40c: .4byte 0x03005728
lbl_0805d410: .4byte 0x03005729

    thumb_func_start gradient_related
gradient_related: @ 0x0805d414
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x28
    ldr r0, lbl_0805d434 @ =0x02026d00
    str r0, [sp]
    movs r3, #0
lbl_0805d426:
    movs r7, #0
    cmp r3, #4
    bgt lbl_0805d43c
    ldr r1, lbl_0805d438 @ =0x050001c0
    ldrh r7, [r1]
    b lbl_0805d444
    .align 2, 0
lbl_0805d434: .4byte 0x02026d00
lbl_0805d438: .4byte 0x050001c0
lbl_0805d43c:
    cmp r3, #0x9a
    ble lbl_0805d444
    ldr r1, lbl_0805d5b8 @ =0x050001c0
    ldrh r7, [r1, #0x1e]
lbl_0805d444:
    strh r7, [r0]
    adds r0, #2
    adds r3, #1
    cmp r3, #0x9f
    ble lbl_0805d426
    ldr r0, [sp]
    adds r0, #0xa
    str r0, [sp]
    movs r3, #0
lbl_0805d456:
    lsls r2, r3, #1
    ldr r1, lbl_0805d5b8 @ =0x050001c0
    adds r2, r2, r1
    ldrh r1, [r2]
    movs r6, #0x1f
    ands r6, r1
    movs r5, #0xf8
    lsls r5, r5, #2
    ands r5, r1
    lsrs r5, r5, #5
    movs r0, #0xf8
    lsls r0, r0, #7
    ands r0, r1
    lsrs r0, r0, #0xa
    str r0, [sp, #4]
    ldrh r1, [r2, #2]
    movs r4, #0x1f
    ands r4, r1
    movs r0, #0xf8
    lsls r0, r0, #2
    ands r0, r1
    lsrs r0, r0, #5
    mov sl, r0
    movs r0, #0xf8
    lsls r0, r0, #7
    ands r0, r1
    lsrs r0, r0, #0xa
    mov r8, r0
    subs r4, r4, r6
    mov r0, sl
    subs r0, r0, r5
    mov sl, r0
    mov r1, r8
    ldr r0, [sp, #4]
    subs r1, r1, r0
    mov r8, r1
    movs r7, #0
    adds r3, #1
    str r3, [sp, #0x18]
    adds r0, r4, #0
    movs r1, #0xa
    bl __divsi3
    str r0, [sp, #8]
    adds r0, r4, #0
    movs r1, #0xa
    bl __modsi3
    str r0, [sp, #0xc]
    movs r1, #0
    str r1, [sp, #0x1c]
    lsls r6, r6, #0x18
    str r6, [sp, #0x20]
    adds r0, r4, #0
    movs r1, #0x64
    bl __modsi3
    str r0, [sp, #0x10]
    mov r0, sl
    movs r1, #0xa
    bl __divsi3
    str r0, [sp, #0x14]
    lsls r5, r5, #0x18
    mov sb, r5
    movs r0, #0
    str r0, [sp, #0x24]
lbl_0805d4dc:
    ldr r1, [sp, #0x20]
    lsrs r6, r1, #0x18
    ldr r0, [sp, #0x1c]
    movs r1, #0xa
    bl __divsi3
    adds r6, r6, r0
    lsls r6, r6, #0x18
    lsrs r6, r6, #0x18
    ldr r0, [sp, #0x24]
    movs r1, #0x64
    bl __divsi3
    adds r6, r6, r0
    lsls r6, r6, #0x18
    lsrs r6, r6, #0x18
    mov r0, sb
    lsrs r5, r0, #0x18
    mov r0, sl
    movs r1, #0xa
    bl __modsi3
    muls r0, r7, r0
    movs r1, #0xa
    bl __divsi3
    adds r5, r5, r0
    lsls r5, r5, #0x18
    lsrs r5, r5, #0x18
    mov r0, sl
    movs r1, #0x64
    bl __modsi3
    muls r0, r7, r0
    movs r1, #0x64
    bl __divsi3
    adds r5, r5, r0
    lsls r5, r5, #0x18
    lsrs r5, r5, #0x18
    mov r0, r8
    movs r1, #0xa
    bl __divsi3
    adds r4, r7, #0
    muls r4, r0, r4
    ldr r1, [sp, #4]
    adds r4, r1, r4
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    mov r0, r8
    movs r1, #0xa
    bl __modsi3
    muls r0, r7, r0
    movs r1, #0xa
    bl __divsi3
    adds r4, r4, r0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    mov r0, r8
    movs r1, #0x64
    bl __modsi3
    muls r0, r7, r0
    movs r1, #0x64
    bl __divsi3
    adds r4, r4, r0
    lsls r4, r4, #0x18
    lsls r5, r5, #5
    orrs r6, r5
    lsrs r4, r4, #0xe
    orrs r6, r4
    ldr r0, [sp]
    strh r6, [r0]
    adds r0, #2
    str r0, [sp]
    ldr r1, [sp, #0x1c]
    ldr r0, [sp, #0xc]
    adds r1, r1, r0
    str r1, [sp, #0x1c]
    ldr r1, [sp, #8]
    lsls r0, r1, #0x18
    ldr r1, [sp, #0x20]
    adds r1, r1, r0
    str r1, [sp, #0x20]
    ldr r1, [sp, #0x14]
    lsls r0, r1, #0x18
    add sb, r0
    ldr r0, [sp, #0x24]
    ldr r1, [sp, #0x10]
    adds r0, r0, r1
    str r0, [sp, #0x24]
    adds r7, #1
    cmp r7, #9
    ble lbl_0805d4dc
    ldr r3, [sp, #0x18]
    cmp r3, #0xe
    bgt lbl_0805d5a8
    b lbl_0805d456
lbl_0805d5a8:
    add sp, #0x28
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d5b8: .4byte 0x050001c0

    thumb_func_start ProcessHaze
ProcessHaze: @ 0x0805d5bc
    push {r4, lr}
    movs r4, #0
    ldr r0, lbl_0805d5d4 @ =0x0300006b
    ldrb r0, [r0]
    cmp r0, #8
    bls lbl_0805d5ca
    b lbl_0805d748
lbl_0805d5ca:
    lsls r0, r0, #2
    ldr r1, lbl_0805d5d8 @ =lbl_0805d5dc
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805d5d4: .4byte 0x0300006b
lbl_0805d5d8: .4byte lbl_0805d5dc
lbl_0805d5dc: @ jump table
    .4byte lbl_0805d748 @ case 0
    .4byte lbl_0805d748 @ case 1
    .4byte lbl_0805d600 @ case 2
    .4byte lbl_0805d600 @ case 3
    .4byte lbl_0805d600 @ case 4
    .4byte lbl_0805d600 @ case 5
    .4byte lbl_0805d744 @ case 6
    .4byte lbl_0805d610 @ case 7
    .4byte lbl_0805d6b8 @ case 8
lbl_0805d600:
    ldr r0, lbl_0805d60c @ =0x0300572c
    ldr r0, [r0]
    bl _call_via_r0
    b lbl_0805d748
    .align 2, 0
lbl_0805d60c: .4byte 0x0300572c
lbl_0805d610:
    ldr r0, lbl_0805d648 @ =0x0300572c
    ldr r0, [r0]
    bl _call_via_r0
    cmp r0, #0
    bne lbl_0805d61e
    b lbl_0805d748
lbl_0805d61e:
    ldr r1, lbl_0805d64c @ =0x0300006b
    movs r0, #8
    strb r0, [r1]
    movs r0, #8
    bl SetupHazeCode
    ldr r1, lbl_0805d650 @ =0x03000130
    movs r0, #4
    strb r0, [r1]
    ldr r0, lbl_0805d654 @ =0x030056f4
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0805d668
    ldr r1, lbl_0805d658 @ =0x040000d4
    ldr r0, lbl_0805d65c @ =0x02009000
    str r0, [r1]
    ldr r0, lbl_0805d660 @ =0x02035000
    str r0, [r1, #4]
    ldr r0, lbl_0805d664 @ =0x80000100
    b lbl_0805d674
    .align 2, 0
lbl_0805d648: .4byte 0x0300572c
lbl_0805d64c: .4byte 0x0300006b
lbl_0805d650: .4byte 0x03000130
lbl_0805d654: .4byte 0x030056f4
lbl_0805d658: .4byte 0x040000d4
lbl_0805d65c: .4byte 0x02009000
lbl_0805d660: .4byte 0x02035000
lbl_0805d664: .4byte 0x80000100
lbl_0805d668:
    ldr r1, lbl_0805d698 @ =0x040000d4
    ldr r0, lbl_0805d69c @ =0x02009000
    str r0, [r1]
    ldr r0, lbl_0805d6a0 @ =0x02035000
    str r0, [r1, #4]
    ldr r0, lbl_0805d6a4 @ =0x800000f0
lbl_0805d674:
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r2, lbl_0805d6a8 @ =0x03005520
    ldrb r1, [r2, #4]
    movs r0, #1
    movs r3, #0
    orrs r0, r1
    strb r0, [r2, #4]
    ldr r1, lbl_0805d6ac @ =0x0300000e
    movs r0, #0x37
    strb r0, [r1]
    ldr r1, lbl_0805d6b0 @ =0x0300000f
    movs r0, #0x1f
    strb r0, [r1]
    ldr r0, lbl_0805d6b4 @ =0x03000010
    strh r3, [r0]
    b lbl_0805d748
    .align 2, 0
lbl_0805d698: .4byte 0x040000d4
lbl_0805d69c: .4byte 0x02009000
lbl_0805d6a0: .4byte 0x02035000
lbl_0805d6a4: .4byte 0x800000f0
lbl_0805d6a8: .4byte 0x03005520
lbl_0805d6ac: .4byte 0x0300000e
lbl_0805d6b0: .4byte 0x0300000f
lbl_0805d6b4: .4byte 0x03000010
lbl_0805d6b8:
    ldr r0, lbl_0805d6f0 @ =0x0300572c
    ldr r0, [r0]
    bl _call_via_r0
    cmp r0, #0
    beq lbl_0805d748
    ldr r0, lbl_0805d6f4 @ =0x03000088
    ldrh r1, [r0, #0xa]
    movs r2, #0
    strh r1, [r0, #0x12]
    ldr r1, lbl_0805d6f8 @ =0x03000130
    movs r0, #5
    strb r0, [r1]
    strb r2, [r1, #1]
    movs r0, #9
    bl SetupHazeCode
    ldr r0, lbl_0805d6fc @ =0x030056f4
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0805d710
    ldr r1, lbl_0805d700 @ =0x040000d4
    ldr r0, lbl_0805d704 @ =0x02009000
    str r0, [r1]
    ldr r0, lbl_0805d708 @ =0x02035000
    str r0, [r1, #4]
    ldr r0, lbl_0805d70c @ =0x80000100
    b lbl_0805d71c
    .align 2, 0
lbl_0805d6f0: .4byte 0x0300572c
lbl_0805d6f4: .4byte 0x03000088
lbl_0805d6f8: .4byte 0x03000130
lbl_0805d6fc: .4byte 0x030056f4
lbl_0805d700: .4byte 0x040000d4
lbl_0805d704: .4byte 0x02009000
lbl_0805d708: .4byte 0x02035000
lbl_0805d70c: .4byte 0x80000100
lbl_0805d710:
    ldr r1, lbl_0805d730 @ =0x040000d4
    ldr r0, lbl_0805d734 @ =0x02009000
    str r0, [r1]
    ldr r0, lbl_0805d738 @ =0x02035000
    str r0, [r1, #4]
    ldr r0, lbl_0805d73c @ =0x800000f0
lbl_0805d71c:
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r2, lbl_0805d740 @ =0x03005520
    ldrb r1, [r2, #4]
    movs r0, #1
    orrs r0, r1
    strb r0, [r2, #4]
    movs r4, #1
    b lbl_0805d74c
    .align 2, 0
lbl_0805d730: .4byte 0x040000d4
lbl_0805d734: .4byte 0x02009000
lbl_0805d738: .4byte 0x02035000
lbl_0805d73c: .4byte 0x800000f0
lbl_0805d740: .4byte 0x03005520
lbl_0805d744:
    bl sub_0805da40
lbl_0805d748:
    cmp r4, #0
    beq lbl_0805d75a
lbl_0805d74c:
    bl SetBGHazeEffect
    ldr r0, lbl_0805d764 @ =0x0300006b
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0805d75a
    movs r4, #0
lbl_0805d75a:
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0805d764: .4byte 0x0300006b

    thumb_func_start haze_bg3
haze_bg3: @ 0x0805d768
    push {r4, r5, r6, r7, lr}
    ldr r6, lbl_0805d7b4 @ =0x02026d00
    movs r3, #0
    ldr r2, lbl_0805d7b8 @ =0x0300571c
    strb r3, [r2, #0xb]
    strb r3, [r2, #7]
    ldr r0, lbl_0805d7bc @ =0x0834607c
    mov ip, r0
    movs r7, #0xf
    strb r3, [r2, #3]
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #5
    ble lbl_0805d790
    movs r0, #1
    strb r0, [r2, #3]
    strh r3, [r2]
lbl_0805d790:
    ldr r1, lbl_0805d7c0 @ =0x03005728
    ldrb r0, [r2, #3]
    ldrb r2, [r1]
    adds r0, r0, r2
    strb r0, [r1]
    ldr r0, lbl_0805d7c4 @ =0x0300006c
    ldrh r1, [r0]
    lsrs r1, r1, #2
    ldr r0, lbl_0805d7c8 @ =0x030013ba
    ldrh r0, [r0]
    lsrs r0, r0, #2
    subs r1, r1, r0
    subs r1, #1
    cmp r1, #0xa0
    ble lbl_0805d7cc
    movs r1, #0xa0
    b lbl_0805d7d2
    .align 2, 0
lbl_0805d7b4: .4byte 0x02026d00
lbl_0805d7b8: .4byte 0x0300571c
lbl_0805d7bc: .4byte 0x0834607c
lbl_0805d7c0: .4byte 0x03005728
lbl_0805d7c4: .4byte 0x0300006c
lbl_0805d7c8: .4byte 0x030013ba
lbl_0805d7cc:
    cmp r1, #0
    bge lbl_0805d7d2
    movs r1, #0
lbl_0805d7d2:
    movs r3, #0
    cmp r3, r1
    bge lbl_0805d7ec
    ldr r4, lbl_0805d820 @ =0x030000e4
    adds r2, r6, #0
    adds r3, r1, #0
lbl_0805d7de:
    ldrh r0, [r4, #0xc]
    strh r0, [r2]
    adds r2, #2
    subs r3, #1
    cmp r3, #0
    bne lbl_0805d7de
    adds r3, r1, #0
lbl_0805d7ec:
    cmp r3, #0x9f
    bgt lbl_0805d81a
    ldr r5, lbl_0805d824 @ =0x03005728
    ldr r4, lbl_0805d820 @ =0x030000e4
    lsls r0, r3, #1
    adds r2, r0, r6
lbl_0805d7f8:
    ldrh r0, [r4, #0xe]
    adds r0, r0, r3
    ldrb r6, [r5]
    adds r1, r0, r6
    ands r1, r7
    mov r6, ip
    adds r0, r6, r1
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r1, [r4, #0xc]
    adds r0, r0, r1
    strh r0, [r2]
    adds r2, #2
    adds r3, #1
    cmp r3, #0x9f
    ble lbl_0805d7f8
lbl_0805d81a:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d820: .4byte 0x030000e4
lbl_0805d824: .4byte 0x03005728

    thumb_func_start haze_bg3_strong_effect_weak_outside
haze_bg3_strong_effect_weak_outside: @ 0x0805d828
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r0, lbl_0805d8a4 @ =0x02026d00
    mov ip, r0
    movs r3, #0
    ldr r2, lbl_0805d8a8 @ =0x0300571c
    strb r3, [r2, #0xb]
    ldr r5, lbl_0805d8ac @ =0x0834607c
    mov sb, r5
    movs r7, #0xf
    mov r8, r7
    strb r3, [r2, #3]
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #5
    ble lbl_0805d85a
    movs r0, #1
    strb r0, [r2, #3]
    strh r3, [r2]
lbl_0805d85a:
    ldr r0, lbl_0805d8b0 @ =0x0835f914
    mov sl, r0
    movs r6, #0xf
    movs r0, #0
    strb r0, [r2, #7]
    ldrh r0, [r2, #4]
    adds r0, #1
    strh r0, [r2, #4]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0xb
    ble lbl_0805d878
    movs r0, #1
    strb r0, [r2, #7]
    strh r3, [r2, #4]
lbl_0805d878:
    ldr r1, lbl_0805d8b4 @ =0x03005728
    ldrb r0, [r2, #3]
    ldrb r3, [r1]
    adds r0, r0, r3
    strb r0, [r1]
    ldr r1, lbl_0805d8b8 @ =0x03005729
    ldrb r0, [r2, #7]
    ldrb r5, [r1]
    adds r0, r0, r5
    strb r0, [r1]
    ldr r0, lbl_0805d8bc @ =0x0300006c
    ldrh r1, [r0]
    lsrs r1, r1, #2
    ldr r0, lbl_0805d8c0 @ =0x030013ba
    ldrh r0, [r0]
    lsrs r0, r0, #2
    subs r1, r1, r0
    subs r1, #1
    cmp r1, #0xa0
    ble lbl_0805d8c4
    movs r1, #0xa0
    b lbl_0805d8ca
    .align 2, 0
lbl_0805d8a4: .4byte 0x02026d00
lbl_0805d8a8: .4byte 0x0300571c
lbl_0805d8ac: .4byte 0x0834607c
lbl_0805d8b0: .4byte 0x0835f914
lbl_0805d8b4: .4byte 0x03005728
lbl_0805d8b8: .4byte 0x03005729
lbl_0805d8bc: .4byte 0x0300006c
lbl_0805d8c0: .4byte 0x030013ba
lbl_0805d8c4:
    cmp r1, #0
    bge lbl_0805d8ca
    movs r1, #0
lbl_0805d8ca:
    movs r3, #0
    cmp r3, r1
    bge lbl_0805d8f6
    ldr r5, lbl_0805d934 @ =0x03005729
    ldr r4, lbl_0805d938 @ =0x030000e4
    mov r2, ip
lbl_0805d8d6:
    ldrh r0, [r4, #0xe]
    adds r0, r0, r3
    ldrb r7, [r5]
    adds r0, r0, r7
    ands r0, r6
    add r0, sl
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r7, [r4, #0xc]
    adds r0, r0, r7
    strh r0, [r2]
    adds r2, #2
    adds r3, #1
    cmp r3, r1
    blt lbl_0805d8d6
lbl_0805d8f6:
    cmp r3, #0x9f
    bgt lbl_0805d926
    ldr r4, lbl_0805d93c @ =0x03005728
    ldr r2, lbl_0805d938 @ =0x030000e4
    lsls r0, r3, #1
    mov r5, ip
    adds r1, r0, r5
lbl_0805d904:
    ldrh r0, [r2, #0xe]
    adds r0, r0, r3
    ldrb r7, [r4]
    adds r0, r0, r7
    mov r5, r8
    ands r0, r5
    add r0, sb
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r7, [r2, #0xc]
    adds r0, r0, r7
    strh r0, [r1]
    adds r1, #2
    adds r3, #1
    cmp r3, #0x9f
    ble lbl_0805d904
lbl_0805d926:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d934: .4byte 0x03005729
lbl_0805d938: .4byte 0x030000e4
lbl_0805d93c: .4byte 0x03005728

    thumb_func_start haze_bg3_none_effect_weak_outside
haze_bg3_none_effect_weak_outside: @ 0x0805d940
    push {r4, r5, r6, r7, lr}
    movs r3, #0
    ldr r2, lbl_0805d99c @ =0x0300571c
    strb r3, [r2, #0xb]
    strb r3, [r2, #7]
    ldr r6, lbl_0805d9a0 @ =0x0835f924
    movs r5, #0x1f
    strb r3, [r2, #3]
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #5
    ble lbl_0805d964
    movs r0, #1
    strb r0, [r2, #3]
    strh r3, [r2]
lbl_0805d964:
    ldr r1, lbl_0805d9a4 @ =0x03005728
    ldrb r0, [r2, #3]
    ldrb r2, [r1]
    adds r0, r0, r2
    strb r0, [r1]
    adds r4, r1, #0
    ldr r1, lbl_0805d9a8 @ =0x030000e4
    ldr r2, lbl_0805d9ac @ =0x02026d00
lbl_0805d974:
    ldrh r0, [r1, #0xe]
    adds r0, r0, r3
    ldrb r7, [r4]
    adds r0, r0, r7
    ands r0, r5
    adds r0, r6, r0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r7, [r1, #0xc]
    adds r0, r0, r7
    strh r0, [r2]
    adds r2, #2
    adds r3, #1
    cmp r3, #0x9f
    ble lbl_0805d974
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805d99c: .4byte 0x0300571c
lbl_0805d9a0: .4byte 0x0835f924
lbl_0805d9a4: .4byte 0x03005728
lbl_0805d9a8: .4byte 0x030000e4
lbl_0805d9ac: .4byte 0x02026d00

    thumb_func_start haze_bg3_bg2_strong_effect_weak_outside_medium_everywhere
haze_bg3_bg2_strong_effect_weak_outside_medium_everywhere: @ 0x0805d9b0
    push {r4, r5, r6, r7, lr}
    movs r4, #0
    ldr r2, lbl_0805da2c @ =0x0300571c
    strb r4, [r2, #7]
    ldr r6, lbl_0805da30 @ =0x0835f924
    movs r5, #0x1f
    strb r4, [r2, #3]
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #5
    ble lbl_0805d9d2
    movs r0, #1
    strb r0, [r2, #3]
    strh r4, [r2]
lbl_0805d9d2:
    ldr r1, lbl_0805da34 @ =0x03005728
    ldrb r0, [r2, #3]
    ldrb r2, [r1]
    adds r0, r0, r2
    strb r0, [r1]
    ldr r2, lbl_0805da38 @ =0x02026d00
    ldr r3, lbl_0805da3c @ =0x030000e4
lbl_0805d9e0:
    ldrh r0, [r3, #0xa]
    adds r0, r0, r4
    ldrb r7, [r1]
    adds r0, r0, r7
    ands r0, r5
    adds r0, r6, r0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r7, [r3, #8]
    adds r0, r0, r7
    strh r0, [r2]
    adds r2, #2
    ldrh r0, [r3, #0xa]
    strh r0, [r2]
    adds r2, #2
    ldrh r0, [r3, #0xe]
    adds r0, r0, r4
    ldrb r7, [r1]
    adds r0, r0, r7
    ands r0, r5
    adds r0, r6, r0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r7, [r3, #0xc]
    adds r0, r0, r7
    strh r0, [r2]
    adds r2, #2
    ldrh r0, [r3, #0xe]
    strh r0, [r2]
    adds r2, #2
    adds r4, #1
    cmp r4, #0x9f
    ble lbl_0805d9e0
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805da2c: .4byte 0x0300571c
lbl_0805da30: .4byte 0x0835f924
lbl_0805da34: .4byte 0x03005728
lbl_0805da38: .4byte 0x02026d00
lbl_0805da3c: .4byte 0x030000e4

    thumb_func_start sub_0805da40
sub_0805da40: @ 0x0805da40
    push {r4, r5, r6, r7, lr}
    movs r5, #0
    ldr r1, lbl_0805da6c @ =0x0300571c
    ldrh r0, [r1, #8]
    adds r2, r0, #1
    strh r2, [r1, #8]
    ldr r0, lbl_0805da70 @ =0x03005514
    ldrb r0, [r0]
    adds r3, r1, #0
    cmp r0, #1
    bne lbl_0805da74
    lsls r0, r2, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0xf
    ble lbl_0805da88
    strh r5, [r3, #8]
    ldrb r0, [r3, #0xb]
    cmp r0, #3
    bhi lbl_0805da88
    adds r0, #1
    b lbl_0805da86
    .align 2, 0
lbl_0805da6c: .4byte 0x0300571c
lbl_0805da70: .4byte 0x03005514
lbl_0805da74:
    lsls r0, r2, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0xf
    ble lbl_0805da88
    strh r5, [r3, #8]
    ldrb r0, [r3, #0xb]
    cmp r0, #0
    beq lbl_0805da88
    subs r0, #1
lbl_0805da86:
    strb r0, [r3, #0xb]
lbl_0805da88:
    adds r2, r3, #0
    ldrb r0, [r2, #0xb]
    lsls r0, r0, #5
    ldr r1, lbl_0805db1c @ =0x0835f7f4
    adds r4, r0, r1
    movs r0, #0x1f
    mov ip, r0
    movs r1, #0
    strb r1, [r2, #3]
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #7
    ble lbl_0805daae
    movs r0, #1
    strb r0, [r2, #3]
    strh r1, [r2]
lbl_0805daae:
    ldr r0, lbl_0805db20 @ =0x03005728
    ldrb r1, [r0]
    ldrb r2, [r3, #3]
    subs r1, r1, r2
    strb r1, [r0]
    ldr r2, lbl_0805db24 @ =0x02026d00
    movs r5, #0
    adds r6, r0, #0
    ldr r3, lbl_0805db28 @ =0x030000e4
lbl_0805dac0:
    ldrh r0, [r3, #6]
    adds r0, r0, r5
    ldrb r7, [r6]
    adds r1, r0, r7
    mov r0, ip
    ands r1, r0
    adds r0, r4, r1
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r7, [r3, #4]
    adds r1, r0, r7
    strh r1, [r2]
    adds r2, #2
    ldrh r0, [r3, #6]
    strh r0, [r2]
    adds r2, #2
    strh r1, [r2]
    adds r2, #2
    ldrh r0, [r3, #0xa]
    strh r0, [r2]
    adds r2, #2
    ldrh r0, [r3, #0xe]
    adds r0, r0, r5
    ldrb r7, [r6]
    adds r1, r0, r7
    mov r0, ip
    ands r1, r0
    adds r0, r4, r1
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r1, [r3, #0xc]
    adds r0, r0, r1
    strh r0, [r2]
    adds r2, #2
    ldrh r0, [r3, #0xe]
    strh r0, [r2]
    adds r2, #2
    adds r5, #1
    cmp r5, #0x9f
    ble lbl_0805dac0
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805db1c: .4byte 0x0835f7f4
lbl_0805db20: .4byte 0x03005728
lbl_0805db24: .4byte 0x02026d00
lbl_0805db28: .4byte 0x030000e4

    thumb_func_start haze_power_bomb_expanding
haze_power_bomb_expanding: @ 0x0805db2c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r0, lbl_0805db84 @ =0x03000130
    ldrb r1, [r0, #0x12]
    mov ip, r0
    cmp r1, #0
    beq lbl_0805db3e
    b lbl_0805dc38
lbl_0805db3e:
    ldr r2, lbl_0805db88 @ =0x0835f570
    mov r0, ip
    ldrb r1, [r0, #2]
    lsls r0, r1, #2
    adds r0, r0, r2
    ldr r0, [r0]
    mov r8, r0
    adds r7, r1, #0
    mov r1, ip
    ldrh r0, [r1, #4]
    ldr r1, lbl_0805db8c @ =0x030013b8
    ldrh r1, [r1]
    subs r0, r0, r1
    asrs r6, r0, #2
    mov r2, ip
    ldrh r0, [r2, #6]
    ldr r1, lbl_0805db90 @ =0x030013ba
    ldrh r1, [r1]
    subs r0, r0, r1
    asrs r2, r0, #2
    ldr r5, lbl_0805db94 @ =0x02026d00
    movs r0, #0
    movs r4, #0x9f
lbl_0805db6c:
    strh r0, [r5]
    subs r4, #1
    adds r5, #2
    cmp r4, #0
    bge lbl_0805db6c
    adds r0, r2, r7
    adds r1, r0, #1
    cmp r1, #0x9f
    ble lbl_0805db98
    movs r1, #0x9f
    b lbl_0805db9e
    .align 2, 0
lbl_0805db84: .4byte 0x03000130
lbl_0805db88: .4byte 0x0835f570
lbl_0805db8c: .4byte 0x030013b8
lbl_0805db90: .4byte 0x030013ba
lbl_0805db94: .4byte 0x02026d00
lbl_0805db98:
    cmp r1, #0
    bge lbl_0805db9e
    movs r1, #0
lbl_0805db9e:
    movs r3, #0
    subs r4, r2, r7
    cmp r4, #0
    bge lbl_0805dbac
    rsbs r3, r4, #0
    movs r4, #0
    b lbl_0805dbb2
lbl_0805dbac:
    cmp r4, #0x9f
    ble lbl_0805dbb2
    movs r4, #0x9f
lbl_0805dbb2:
    lsls r0, r4, #1
    ldr r2, lbl_0805dbe4 @ =0x02026d00
    adds r5, r0, r2
    cmp r4, r1
    bge lbl_0805dc0c
    subs r4, r1, r4
    lsls r0, r3, #2
    mov r1, r8
    adds r3, r0, r1
lbl_0805dbc4:
    movs r2, #2
    ldrsh r0, [r3, r2]
    lsls r0, r0, #1
    adds r0, r6, r0
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    movs r1, #0
    ldrsh r0, [r3, r1]
    lsls r0, r0, #1
    adds r0, r6, r0
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    cmp r2, #0
    bge lbl_0805dbe8
    movs r2, #0
    b lbl_0805dbee
    .align 2, 0
lbl_0805dbe4: .4byte 0x02026d00
lbl_0805dbe8:
    cmp r2, #0xf0
    ble lbl_0805dbee
    movs r2, #0xf0
lbl_0805dbee:
    cmp r1, #0xf0
    ble lbl_0805dbf6
    movs r1, #0xf0
    b lbl_0805dbfc
lbl_0805dbf6:
    cmp r1, #0
    bge lbl_0805dbfc
    movs r1, #0
lbl_0805dbfc:
    lsls r0, r2, #8
    orrs r1, r0
    strh r1, [r5]
    subs r4, #1
    adds r3, #4
    adds r5, #2
    cmp r4, #0
    bne lbl_0805dbc4
lbl_0805dc0c:
    mov r1, ip
    ldrb r0, [r1, #2]
    cmp r0, #0x9e
    bls lbl_0805dc26
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #4
    bls lbl_0805dc38
    movs r0, #1
    b lbl_0805dc3a
lbl_0805dc26:
    adds r0, #3
    mov r2, ip
    strb r0, [r2, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x9f
    bls lbl_0805dc38
    movs r0, #0x9f
    strb r0, [r2, #2]
lbl_0805dc38:
    movs r0, #0
lbl_0805dc3a:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start haze_power_bomb_retracting
haze_power_bomb_retracting: @ 0x0805dc44
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r0, lbl_0805dc9c @ =0x03000130
    ldrb r1, [r0, #0x12]
    mov ip, r0
    cmp r1, #0
    beq lbl_0805dc56
    b lbl_0805dd50
lbl_0805dc56:
    ldr r2, lbl_0805dca0 @ =0x0835f570
    mov r0, ip
    ldrb r1, [r0, #2]
    lsls r0, r1, #2
    adds r0, r0, r2
    ldr r0, [r0]
    mov r8, r0
    adds r7, r1, #0
    mov r1, ip
    ldrh r0, [r1, #4]
    ldr r1, lbl_0805dca4 @ =0x030013b8
    ldrh r1, [r1]
    subs r0, r0, r1
    asrs r6, r0, #2
    mov r2, ip
    ldrh r0, [r2, #6]
    ldr r1, lbl_0805dca8 @ =0x030013ba
    ldrh r1, [r1]
    subs r0, r0, r1
    asrs r2, r0, #2
    ldr r5, lbl_0805dcac @ =0x02026d00
    movs r0, #0
    movs r4, #0x9f
lbl_0805dc84:
    strh r0, [r5]
    subs r4, #1
    adds r5, #2
    cmp r4, #0
    bge lbl_0805dc84
    adds r0, r2, r7
    adds r1, r0, #1
    cmp r1, #0x9f
    ble lbl_0805dcb0
    movs r1, #0x9f
    b lbl_0805dcb6
    .align 2, 0
lbl_0805dc9c: .4byte 0x03000130
lbl_0805dca0: .4byte 0x0835f570
lbl_0805dca4: .4byte 0x030013b8
lbl_0805dca8: .4byte 0x030013ba
lbl_0805dcac: .4byte 0x02026d00
lbl_0805dcb0:
    cmp r1, #0
    bge lbl_0805dcb6
    movs r1, #0
lbl_0805dcb6:
    movs r3, #0
    subs r4, r2, r7
    cmp r4, #0
    bge lbl_0805dcc4
    rsbs r3, r4, #0
    movs r4, #0
    b lbl_0805dcca
lbl_0805dcc4:
    cmp r4, #0x9f
    ble lbl_0805dcca
    movs r4, #0x9f
lbl_0805dcca:
    lsls r0, r4, #1
    ldr r2, lbl_0805dcfc @ =0x02026d00
    adds r5, r0, r2
    cmp r4, r1
    bge lbl_0805dd24
    subs r4, r1, r4
    lsls r0, r3, #2
    mov r1, r8
    adds r3, r0, r1
lbl_0805dcdc:
    movs r2, #2
    ldrsh r0, [r3, r2]
    lsls r0, r0, #1
    adds r0, r6, r0
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    movs r1, #0
    ldrsh r0, [r3, r1]
    lsls r0, r0, #1
    adds r0, r6, r0
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    cmp r2, #0
    bge lbl_0805dd00
    movs r2, #0
    b lbl_0805dd06
    .align 2, 0
lbl_0805dcfc: .4byte 0x02026d00
lbl_0805dd00:
    cmp r2, #0xf0
    ble lbl_0805dd06
    movs r2, #0xf0
lbl_0805dd06:
    cmp r1, #0xf0
    ble lbl_0805dd0e
    movs r1, #0xf0
    b lbl_0805dd14
lbl_0805dd0e:
    cmp r1, #0
    bge lbl_0805dd14
    movs r1, #0
lbl_0805dd14:
    lsls r0, r2, #8
    orrs r1, r0
    strh r1, [r5]
    subs r4, #1
    adds r3, #4
    adds r5, #2
    cmp r4, #0
    bne lbl_0805dcdc
lbl_0805dd24:
    mov r1, ip
    ldrb r0, [r1, #2]
    cmp r0, #4
    bhi lbl_0805dd3e
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #4
    bls lbl_0805dd50
    movs r0, #1
    b lbl_0805dd52
lbl_0805dd3e:
    subs r0, #3
    mov r2, ip
    strb r0, [r2, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #3
    bhi lbl_0805dd50
    movs r0, #4
    strb r0, [r2, #2]
lbl_0805dd50:
    movs r0, #0
lbl_0805dd52:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_0805dd5c
sub_0805dd5c: @ 0x0805dd5c
    push {r4, r5, lr}
    ldr r5, lbl_0805df30 @ =0x03000046
    ldrh r1, [r5]
    cmp r1, #0
    bne lbl_0805dd68
    b lbl_0805df28
lbl_0805dd68:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0805dd80
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df38 @ =0x0201b000
    str r0, [r1]
    ldr r0, lbl_0805df3c @ =0x06004000
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805dd80:
    ldrh r1, [r5]
    movs r0, #2
    ands r0, r1
    adds r4, r1, #0
    cmp r0, #0
    beq lbl_0805dd9c
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df44 @ =0x0201b080
    str r0, [r1]
    ldr r0, lbl_0805df48 @ =0x06004080
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805dd9c:
    movs r0, #4
    ands r0, r4
    cmp r0, #0
    beq lbl_0805ddb4
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df4c @ =0x0201b100
    str r0, [r1]
    ldr r0, lbl_0805df50 @ =0x06004100
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805ddb4:
    movs r0, #8
    ands r0, r4
    cmp r0, #0
    beq lbl_0805ddcc
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df54 @ =0x0201b180
    str r0, [r1]
    ldr r0, lbl_0805df58 @ =0x06004180
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805ddcc:
    movs r0, #0x10
    ands r0, r4
    cmp r0, #0
    beq lbl_0805dde4
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df5c @ =0x0201b200
    str r0, [r1]
    ldr r0, lbl_0805df60 @ =0x06004200
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805dde4:
    movs r0, #0x20
    ands r0, r4
    cmp r0, #0
    beq lbl_0805ddfc
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df64 @ =0x0201b280
    str r0, [r1]
    ldr r0, lbl_0805df68 @ =0x06004280
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805ddfc:
    movs r0, #0x40
    ands r0, r4
    cmp r0, #0
    beq lbl_0805de14
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df6c @ =0x0201b300
    str r0, [r1]
    ldr r0, lbl_0805df70 @ =0x06004300
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805de14:
    movs r0, #0x80
    ands r0, r4
    cmp r0, #0
    beq lbl_0805de2c
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df74 @ =0x0201b380
    str r0, [r1]
    ldr r0, lbl_0805df78 @ =0x06004380
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805de2c:
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r4
    cmp r0, #0
    beq lbl_0805de46
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df7c @ =0x0201b400
    str r0, [r1]
    ldr r0, lbl_0805df80 @ =0x06004400
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805de46:
    movs r0, #0x80
    lsls r0, r0, #2
    ands r0, r4
    cmp r0, #0
    beq lbl_0805de60
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df84 @ =0x0201b480
    str r0, [r1]
    ldr r0, lbl_0805df88 @ =0x06004480
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805de60:
    movs r0, #0x80
    lsls r0, r0, #3
    ands r0, r4
    cmp r0, #0
    beq lbl_0805de7a
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df8c @ =0x0201b500
    str r0, [r1]
    ldr r0, lbl_0805df90 @ =0x06004500
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805de7a:
    movs r0, #0x80
    lsls r0, r0, #4
    ands r0, r4
    cmp r0, #0
    beq lbl_0805de94
    ldr r1, lbl_0805df34 @ =0x040000d4
    ldr r0, lbl_0805df94 @ =0x0201b580
    str r0, [r1]
    ldr r0, lbl_0805df98 @ =0x06004580
    str r0, [r1, #4]
    ldr r0, lbl_0805df40 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0805de94:
    movs r0, #0x80
    lsls r0, r0, #5
    ands r0, r4
    cmp r0, #0
    beq lbl_0805deb8
    ldr r0, lbl_0805df34 @ =0x040000d4
    ldr r3, lbl_0805df9c @ =0x0201b600
    str r3, [r0]
    ldr r1, lbl_0805dfa0 @ =0x06004600
    str r1, [r0, #4]
    ldr r2, lbl_0805df40 @ =0x80000040
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_0805dfa4 @ =0x0600fde0
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
lbl_0805deb8:
    movs r0, #0x80
    lsls r0, r0, #6
    ands r0, r4
    cmp r0, #0
    beq lbl_0805dedc
    ldr r0, lbl_0805df34 @ =0x040000d4
    ldr r3, lbl_0805dfa8 @ =0x0201b680
    str r3, [r0]
    ldr r1, lbl_0805dfac @ =0x06004680
    str r1, [r0, #4]
    ldr r2, lbl_0805df40 @ =0x80000040
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_0805dfb0 @ =0x0600fe60
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
lbl_0805dedc:
    movs r0, #0x80
    lsls r0, r0, #7
    ands r0, r4
    cmp r0, #0
    beq lbl_0805df00
    ldr r0, lbl_0805df34 @ =0x040000d4
    ldr r3, lbl_0805dfb4 @ =0x0201b700
    str r3, [r0]
    ldr r1, lbl_0805dfb8 @ =0x06004700
    str r1, [r0, #4]
    ldr r2, lbl_0805df40 @ =0x80000040
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_0805dfbc @ =0x0600fee0
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
lbl_0805df00:
    movs r0, #0x80
    lsls r0, r0, #8
    ands r0, r4
    cmp r0, #0
    beq lbl_0805df24
    ldr r0, lbl_0805df34 @ =0x040000d4
    ldr r3, lbl_0805dfc0 @ =0x0201b780
    str r3, [r0]
    ldr r1, lbl_0805dfc4 @ =0x06004780
    str r1, [r0, #4]
    ldr r2, lbl_0805df40 @ =0x80000040
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_0805dfc8 @ =0x0600ff60
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
lbl_0805df24:
    movs r0, #0
    strh r0, [r5]
lbl_0805df28:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805df30: .4byte 0x03000046
lbl_0805df34: .4byte 0x040000d4
lbl_0805df38: .4byte 0x0201b000
lbl_0805df3c: .4byte 0x06004000
lbl_0805df40: .4byte 0x80000040
lbl_0805df44: .4byte 0x0201b080
lbl_0805df48: .4byte 0x06004080
lbl_0805df4c: .4byte 0x0201b100
lbl_0805df50: .4byte 0x06004100
lbl_0805df54: .4byte 0x0201b180
lbl_0805df58: .4byte 0x06004180
lbl_0805df5c: .4byte 0x0201b200
lbl_0805df60: .4byte 0x06004200
lbl_0805df64: .4byte 0x0201b280
lbl_0805df68: .4byte 0x06004280
lbl_0805df6c: .4byte 0x0201b300
lbl_0805df70: .4byte 0x06004300
lbl_0805df74: .4byte 0x0201b380
lbl_0805df78: .4byte 0x06004380
lbl_0805df7c: .4byte 0x0201b400
lbl_0805df80: .4byte 0x06004400
lbl_0805df84: .4byte 0x0201b480
lbl_0805df88: .4byte 0x06004480
lbl_0805df8c: .4byte 0x0201b500
lbl_0805df90: .4byte 0x06004500
lbl_0805df94: .4byte 0x0201b580
lbl_0805df98: .4byte 0x06004580
lbl_0805df9c: .4byte 0x0201b600
lbl_0805dfa0: .4byte 0x06004600
lbl_0805dfa4: .4byte 0x0600fde0
lbl_0805dfa8: .4byte 0x0201b680
lbl_0805dfac: .4byte 0x06004680
lbl_0805dfb0: .4byte 0x0600fe60
lbl_0805dfb4: .4byte 0x0201b700
lbl_0805dfb8: .4byte 0x06004700
lbl_0805dfbc: .4byte 0x0600fee0
lbl_0805dfc0: .4byte 0x0201b780
lbl_0805dfc4: .4byte 0x06004780
lbl_0805dfc8: .4byte 0x0600ff60

    thumb_func_start update_animated_graphics
update_animated_graphics: @ 0x0805dfcc
    push {r4, r5, r6, lr}
    ldr r3, lbl_0805dfe8 @ =0x03005730
    movs r5, #0
lbl_0805dfd2:
    movs r4, #0
    ldrb r0, [r3]
    cmp r0, #6
    bls lbl_0805dfdc
    b lbl_0805e0d6
lbl_0805dfdc:
    lsls r0, r0, #2
    ldr r1, lbl_0805dfec @ =lbl_0805dff0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805dfe8: .4byte 0x03005730
lbl_0805dfec: .4byte lbl_0805dff0
lbl_0805dff0: @ jump table
    .4byte lbl_0805e0d6 @ case 0
    .4byte lbl_0805e00c @ case 1
    .4byte lbl_0805e0d6 @ case 2
    .4byte lbl_0805e036 @ case 3
    .4byte lbl_0805e05e @ case 4
    .4byte lbl_0805e08a @ case 5
    .4byte lbl_0805e0ae @ case 6
lbl_0805e00c:
    ldrb r0, [r3, #2]
    adds r0, #1
    movs r1, #0
    strb r0, [r3, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrb r2, [r3, #1]
    cmp r0, r2
    bne lbl_0805e0d6
    movs r4, #1
    strb r1, [r3, #2]
    ldrb r0, [r3, #4]
    adds r0, #1
    strb r0, [r3, #4]
    movs r0, #4
    ldrsb r0, [r3, r0]
    ldrb r6, [r3, #3]
    cmp r0, r6
    bne lbl_0805e0d6
    strb r1, [r3, #4]
    b lbl_0805e0d6
lbl_0805e036:
    movs r1, #4
    ldrsb r1, [r3, r1]
    ldrb r0, [r3, #3]
    subs r0, #1
    cmp r1, r0
    beq lbl_0805e0d6
    ldrb r0, [r3, #2]
    adds r0, #1
    movs r1, #0
    strb r0, [r3, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrb r2, [r3, #1]
    cmp r0, r2
    bne lbl_0805e0d6
    movs r4, #1
    strb r1, [r3, #2]
    ldrb r0, [r3, #4]
    adds r0, #1
    b lbl_0805e0d4
lbl_0805e05e:
    ldrb r0, [r3, #2]
    adds r0, #1
    movs r1, #0
    strb r0, [r3, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrb r6, [r3, #1]
    cmp r0, r6
    bne lbl_0805e0d6
    movs r4, #1
    strb r1, [r3, #2]
    ldrb r0, [r3, #4]
    adds r0, #1
    strb r0, [r3, #4]
    movs r1, #4
    ldrsb r1, [r3, r1]
    ldrb r0, [r3, #3]
    cmp r1, r0
    bne lbl_0805e0d6
    movs r0, #2
    subs r0, r0, r1
    b lbl_0805e0d4
lbl_0805e08a:
    ldrb r1, [r3, #4]
    movs r0, #4
    ldrsb r0, [r3, r0]
    cmp r0, #0
    beq lbl_0805e0d6
    ldrb r0, [r3, #2]
    adds r0, #1
    movs r2, #0
    strb r0, [r3, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrb r6, [r3, #1]
    cmp r0, r6
    bne lbl_0805e0d6
    movs r4, #1
    strb r2, [r3, #2]
    subs r0, r1, #1
    b lbl_0805e0d4
lbl_0805e0ae:
    ldrb r0, [r3, #2]
    adds r0, #1
    movs r1, #0
    strb r0, [r3, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrb r2, [r3, #1]
    cmp r0, r2
    bne lbl_0805e0d6
    movs r4, #1
    strb r1, [r3, #2]
    ldrb r0, [r3, #4]
    subs r0, #1
    strb r0, [r3, #4]
    lsls r0, r0, #0x18
    cmp r0, #0
    bge lbl_0805e0d6
    ldrb r0, [r3, #3]
    subs r0, #1
lbl_0805e0d4:
    strb r0, [r3, #4]
lbl_0805e0d6:
    cmp r4, #0
    beq lbl_0805e110
    movs r1, #4
    ldrsb r1, [r3, r1]
    adds r0, r1, #0
    cmp r0, #0
    bge lbl_0805e0ec
    mvns r0, r1
    adds r0, #1
    lsls r0, r0, #0x18
    asrs r1, r0, #0x18
lbl_0805e0ec:
    lsls r1, r1, #7
    ldr r0, [r3, #8]
    adds r0, r0, r1
    ldr r1, lbl_0805e120 @ =0x040000d4
    str r0, [r1]
    lsls r0, r5, #7
    ldr r6, lbl_0805e124 @ =0x0201b000
    adds r0, r0, r6
    str r0, [r1, #4]
    ldr r0, lbl_0805e128 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r2, lbl_0805e12c @ =0x03000046
    movs r0, #1
    lsls r0, r5
    ldrh r1, [r2]
    orrs r0, r1
    strh r0, [r2]
lbl_0805e110:
    adds r5, #1
    adds r3, #0xc
    cmp r5, #0xf
    bgt lbl_0805e11a
    b lbl_0805dfd2
lbl_0805e11a:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805e120: .4byte 0x040000d4
lbl_0805e124: .4byte 0x0201b000
lbl_0805e128: .4byte 0x80000040
lbl_0805e12c: .4byte 0x03000046

    thumb_func_start load_animated_graphics
load_animated_graphics: @ 0x0805e130
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r1, lbl_0805e1f0 @ =0x03000046
    movs r0, #0
    strh r0, [r1]
    ldr r3, lbl_0805e1f4 @ =0x03005730
    movs r5, #0
    ldr r0, lbl_0805e1f8 @ =0x0835f948
    mov sl, r0
    ldr r1, lbl_0805e1fc @ =0x03000bf0
    mov sb, r1
    ldr r2, lbl_0805e200 @ =0x0835fa78
    mov r8, r2
    mov ip, r5
    ldr r4, lbl_0805e204 @ =0x040000d4
    ldr r7, lbl_0805e208 @ =0x03005518
    movs r6, #0
lbl_0805e158:
    ldr r0, lbl_0805e20c @ =0x030056f4
    ldrb r1, [r0, #1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r6, r0
    add r0, r8
    ldrb r0, [r0]
    strb r0, [r3, #5]
    ldrb r1, [r3, #5]
    lsls r1, r1, #3
    add r1, sl
    ldrb r0, [r1]
    strb r0, [r3]
    ldrb r0, [r1, #1]
    strb r0, [r3, #1]
    ldrb r2, [r1, #2]
    strb r2, [r3, #3]
    mov r0, ip
    strb r0, [r3, #2]
    strb r0, [r3, #4]
    ldr r0, [r1, #4]
    str r0, [r3, #8]
    ldrb r0, [r3]
    cmp r0, #3
    beq lbl_0805e190
    cmp r0, #6
    bne lbl_0805e194
lbl_0805e190:
    subs r0, r2, #1
    strb r0, [r3, #4]
lbl_0805e194:
    movs r0, #4
    ldrsb r0, [r3, r0]
    lsls r0, r0, #7
    ldr r1, [r3, #8]
    adds r1, r1, r0
    lsls r0, r5, #7
    ldr r2, lbl_0805e210 @ =0x06004000
    adds r0, r0, r2
    str r1, [r4]
    str r0, [r4, #4]
    ldr r0, lbl_0805e214 @ =0x80000040
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    mov r1, sb
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r0, #0
    bne lbl_0805e1c6
    ldrb r0, [r3, #5]
    cmp r0, #0xd
    bne lbl_0805e1c6
    ldrh r0, [r7]
    movs r1, #1
    orrs r0, r1
    strh r0, [r7]
lbl_0805e1c6:
    adds r6, #3
    adds r5, #1
    adds r3, #0xc
    cmp r5, #0xf
    ble lbl_0805e158
    ldr r1, lbl_0805e204 @ =0x040000d4
    ldr r0, lbl_0805e218 @ =0x06004600
    str r0, [r1]
    ldr r0, lbl_0805e21c @ =0x0600fde0
    str r0, [r1, #4]
    ldr r0, lbl_0805e220 @ =0x80000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805e1f0: .4byte 0x03000046
lbl_0805e1f4: .4byte 0x03005730
lbl_0805e1f8: .4byte 0x0835f948
lbl_0805e1fc: .4byte 0x03000bf0
lbl_0805e200: .4byte 0x0835fa78
lbl_0805e204: .4byte 0x040000d4
lbl_0805e208: .4byte 0x03005518
lbl_0805e20c: .4byte 0x030056f4
lbl_0805e210: .4byte 0x06004000
lbl_0805e214: .4byte 0x80000040
lbl_0805e218: .4byte 0x06004600
lbl_0805e21c: .4byte 0x0600fde0
lbl_0805e220: .4byte 0x80000100

    thumb_func_start ResetTanksAnimation
ResetTanksAnimation: @ 0x0805e224
    ldr r0, lbl_0805e244 @ =0x030057f0
    movs r2, #0
    movs r1, #1
    strb r1, [r0]
    strb r2, [r0, #1]
    movs r1, #2
    strb r1, [r0, #4]
    strb r2, [r0, #5]
    movs r1, #3
    strb r1, [r0, #8]
    strb r2, [r0, #9]
    movs r1, #4
    strb r1, [r0, #0xc]
    strb r2, [r0, #0xd]
    bx lr
    .align 2, 0
lbl_0805e244: .4byte 0x030057f0

    thumb_func_start sub_0805e248
sub_0805e248: @ 0x0805e248
    push {r4, r5, lr}
    movs r3, #3
    ldr r0, lbl_0805e2a0 @ =0x030057f0
    movs r5, #0
    ldr r4, lbl_0805e2a4 @ =0x040000d4
    adds r2, r0, #0
    adds r2, #0xc
lbl_0805e256:
    ldrb r0, [r2]
    adds r0, #1
    strb r0, [r2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #4
    bls lbl_0805e292
    strb r5, [r2]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #3
    bls lbl_0805e276
    strb r5, [r2, #1]
lbl_0805e276:
    lsls r1, r3, #9
    ldrb r0, [r2, #1]
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r0, lbl_0805e2a8 @ =0x08752ab4
    adds r1, r1, r0
    str r1, [r4]
    lsls r0, r3, #7
    ldr r1, lbl_0805e2ac @ =0x06004820
    adds r0, r0, r1
    str r0, [r4, #4]
    ldr r0, lbl_0805e2b0 @ =0x80000040
    str r0, [r4, #8]
    ldr r0, [r4, #8]
lbl_0805e292:
    subs r2, #4
    subs r3, #1
    cmp r3, #0
    bge lbl_0805e256
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805e2a0: .4byte 0x030057f0
lbl_0805e2a4: .4byte 0x040000d4
lbl_0805e2a8: .4byte 0x08752ab4
lbl_0805e2ac: .4byte 0x06004820
lbl_0805e2b0: .4byte 0x80000040

    thumb_func_start update_animated_palette
update_animated_palette: @ 0x0805e2b4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r0, lbl_0805e310 @ =0x030056f4
    ldrb r1, [r0]
    mov sb, r0
    cmp r1, #0
    bne lbl_0805e2ca
    b lbl_0805e408
lbl_0805e2ca:
    ldr r0, lbl_0805e314 @ =0x03000130
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0805e2d4
    b lbl_0805e408
lbl_0805e2d4:
    ldr r0, lbl_0805e318 @ =0x0300004d
    mov r8, r0
    movs r1, #0
    ldrsb r1, [r0, r1]
    mov ip, r1
    cmp r1, #0
    ble lbl_0805e2e4
    b lbl_0805e408
lbl_0805e2e4:
    movs r7, #0
    ldr r1, lbl_0805e31c @ =0x030056ec
    ldrb r0, [r1]
    adds r6, r0, #1
    strb r6, [r1]
    ldr r2, lbl_0805e320 @ =0x0835fbfc
    mov r3, sb
    ldrb r0, [r3]
    lsls r0, r0, #3
    adds r3, r0, r2
    ldrb r4, [r3]
    adds r5, r1, #0
    mov sl, r2
    cmp r4, #1
    beq lbl_0805e324
    cmp r4, #1
    ble lbl_0805e3aa
    cmp r4, #2
    beq lbl_0805e34e
    cmp r4, #3
    beq lbl_0805e38a
    b lbl_0805e3aa
    .align 2, 0
lbl_0805e310: .4byte 0x030056f4
lbl_0805e314: .4byte 0x03000130
lbl_0805e318: .4byte 0x0300004d
lbl_0805e31c: .4byte 0x030056ec
lbl_0805e320: .4byte 0x0835fbfc
lbl_0805e324:
    ldrb r1, [r3, #1]
    lsls r0, r6, #0x18
    lsrs r0, r0, #0x18
    cmp r1, r0
    bhi lbl_0805e3aa
    strb r7, [r5]
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
    ldrb r1, [r3, #2]
    movs r0, #1
    ldrsb r0, [r5, r0]
    cmp r1, r0
    bgt lbl_0805e386
    strb r7, [r5, #1]
    mov r0, ip
    cmp r0, #0
    bge lbl_0805e386
    mov r1, r8
    strb r4, [r1]
    b lbl_0805e386
lbl_0805e34e:
    ldrb r1, [r3, #1]
    lsls r0, r6, #0x18
    lsrs r0, r0, #0x18
    cmp r1, r0
    bhi lbl_0805e3aa
    strb r7, [r5]
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
    ldrb r1, [r3, #2]
    movs r0, #1
    ldrsb r0, [r5, r0]
    cmp r1, r0
    bgt lbl_0805e370
    subs r0, r1, #1
    rsbs r0, r0, #0
    strb r0, [r5, #1]
lbl_0805e370:
    mov r3, r8
    movs r0, #0
    ldrsb r0, [r3, r0]
    cmp r0, #0
    bge lbl_0805e386
    movs r0, #1
    ldrsb r0, [r5, r0]
    cmp r0, #0
    bne lbl_0805e386
    movs r0, #1
    strb r0, [r3]
lbl_0805e386:
    adds r7, #1
    b lbl_0805e3aa
lbl_0805e38a:
    ldrb r1, [r3, #1]
    lsls r0, r6, #0x18
    lsrs r0, r0, #0x18
    cmp r1, r0
    bhi lbl_0805e3aa
    strb r7, [r5]
    ldrb r0, [r5, #1]
    subs r0, #1
    strb r0, [r5, #1]
    lsls r0, r0, #0x18
    cmp r0, #0
    bge lbl_0805e3a8
    ldrb r0, [r3, #2]
    subs r0, #1
    strb r0, [r5, #1]
lbl_0805e3a8:
    movs r7, #1
lbl_0805e3aa:
    cmp r7, #0
    beq lbl_0805e408
    movs r3, #1
    ldrsb r3, [r5, r3]
    cmp r3, #0
    bge lbl_0805e3b8
    rsbs r3, r3, #0
lbl_0805e3b8:
    ldr r0, lbl_0805e3dc @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #2
    bne lbl_0805e3e8
    ldr r2, lbl_0805e3e0 @ =0x040000d4
    mov r1, sb
    ldrb r0, [r1]
    lsls r0, r0, #3
    mov r1, sl
    adds r1, #4
    adds r0, r0, r1
    lsls r1, r3, #5
    ldr r0, [r0]
    adds r0, r0, r1
    str r0, [r2]
    ldr r0, lbl_0805e3e4 @ =0x050001e0
    b lbl_0805e400
    .align 2, 0
lbl_0805e3dc: .4byte 0x03000c72
lbl_0805e3e0: .4byte 0x040000d4
lbl_0805e3e4: .4byte 0x050001e0
lbl_0805e3e8:
    ldr r2, lbl_0805e418 @ =0x040000d4
    mov r1, sb
    ldrb r0, [r1]
    lsls r0, r0, #3
    mov r1, sl
    adds r1, #4
    adds r0, r0, r1
    lsls r1, r3, #5
    ldr r0, [r0]
    adds r0, r0, r1
    str r0, [r2]
    ldr r0, lbl_0805e41c @ =0x020355e0
lbl_0805e400:
    str r0, [r2, #4]
    ldr r0, lbl_0805e420 @ =0x80000010
    str r0, [r2, #8]
    ldr r0, [r2, #8]
lbl_0805e408:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805e418: .4byte 0x040000d4
lbl_0805e41c: .4byte 0x020355e0
lbl_0805e420: .4byte 0x80000010

    thumb_func_start sub_0805e424
sub_0805e424: @ 0x0805e424
    push {r4, lr}
    ldr r2, lbl_0805e46c @ =0x030056ec
    ldr r0, lbl_0805e470 @ =0x0835fbf8
    ldr r1, [r0]
    str r1, [r2]
    ldr r0, lbl_0805e474 @ =0x030056f0
    str r1, [r0]
    ldr r1, lbl_0805e478 @ =0x0300004d
    movs r0, #0
    strb r0, [r1]
    ldr r3, lbl_0805e47c @ =0x030056f4
    ldrb r0, [r3]
    adds r4, r1, #0
    cmp r0, #0
    beq lbl_0805e4f4
    ldr r2, lbl_0805e480 @ =0x040000d4
    ldr r1, lbl_0805e484 @ =0x0835fbfc
    lsls r0, r0, #3
    adds r1, #4
    adds r0, r0, r1
    ldr r0, [r0]
    str r0, [r2]
    ldr r0, lbl_0805e488 @ =0x050001e0
    str r0, [r2, #4]
    ldr r0, lbl_0805e48c @ =0x80000010
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    ldrb r0, [r3]
    subs r0, #3
    cmp r0, #0xe
    bhi lbl_0805e4f4
    lsls r0, r0, #2
    ldr r1, lbl_0805e490 @ =lbl_0805e494
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805e46c: .4byte 0x030056ec
lbl_0805e470: .4byte 0x0835fbf8
lbl_0805e474: .4byte 0x030056f0
lbl_0805e478: .4byte 0x0300004d
lbl_0805e47c: .4byte 0x030056f4
lbl_0805e480: .4byte 0x040000d4
lbl_0805e484: .4byte 0x0835fbfc
lbl_0805e488: .4byte 0x050001e0
lbl_0805e48c: .4byte 0x80000010
lbl_0805e490: .4byte lbl_0805e494
lbl_0805e494: @ jump table
    .4byte lbl_0805e4d0 @ case 0
    .4byte lbl_0805e4e8 @ case 1
    .4byte lbl_0805e4f4 @ case 2
    .4byte lbl_0805e4e8 @ case 3
    .4byte lbl_0805e4f4 @ case 4
    .4byte lbl_0805e4e8 @ case 5
    .4byte lbl_0805e4e8 @ case 6
    .4byte lbl_0805e4e8 @ case 7
    .4byte lbl_0805e4e8 @ case 8
    .4byte lbl_0805e4e8 @ case 9
    .4byte lbl_0805e4f4 @ case 10
    .4byte lbl_0805e4f4 @ case 11
    .4byte lbl_0805e4f4 @ case 12
    .4byte lbl_0805e4e8 @ case 13
    .4byte lbl_0805e4e8 @ case 14
lbl_0805e4d0:
    movs r0, #3
    movs r1, #0x2e
    bl EventFunction
    cmp r0, #0
    bne lbl_0805e4f4
    ldr r1, lbl_0805e4e4 @ =0x0300004d
    movs r0, #1
    strb r0, [r1]
    b lbl_0805e4f4
    .align 2, 0
lbl_0805e4e4: .4byte 0x0300004d
lbl_0805e4e8:
    ldr r0, lbl_0805e4fc @ =0x030001a8
    ldrh r0, [r0]
    cmp r0, #0
    bne lbl_0805e4f4
    movs r0, #1
    strb r0, [r4]
lbl_0805e4f4:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805e4fc: .4byte 0x030001a8

    thumb_func_start check_play_lightning_effect
check_play_lightning_effect: @ 0x0805e500
    push {lr}
    movs r1, #0
    ldr r0, lbl_0805e538 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805e534
    ldr r0, lbl_0805e53c @ =0x030056f8
    ldrb r0, [r0, #5]
    cmp r0, #0
    bne lbl_0805e534
    ldr r0, lbl_0805e540 @ =0x03000054
    ldrb r0, [r0]
    cmp r0, #5
    bne lbl_0805e52a
    ldr r0, lbl_0805e544 @ =0x03000055
    ldrb r0, [r0]
    cmp r0, #5
    bne lbl_0805e52a
    movs r1, #1
lbl_0805e52a:
    cmp r1, #0
    beq lbl_0805e534
    adds r0, r1, #0
    bl start_special_background_effect
lbl_0805e534:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805e538: .4byte 0x03000bf0
lbl_0805e53c: .4byte 0x030056f8
lbl_0805e540: .4byte 0x03000054
lbl_0805e544: .4byte 0x03000055

    thumb_func_start sub_0805e548
sub_0805e548: @ 0x0805e548
    push {r4, r5, r6, lr}
    ldr r5, lbl_0805e570 @ =0x030056f8
    ldrh r0, [r5, #2]
    adds r0, #1
    strh r0, [r5, #2]
    bl process_special_background_effect
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #0
    beq lbl_0805e5b8
    cmp r4, #2
    bne lbl_0805e578
    ldr r1, lbl_0805e574 @ =0x0835fc8c
    ldrb r0, [r5, #5]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldrh r0, [r0, #4]
    b lbl_0805e582
    .align 2, 0
lbl_0805e570: .4byte 0x030056f8
lbl_0805e574: .4byte 0x0835fc8c
lbl_0805e578:
    ldr r1, lbl_0805e5c0 @ =0x0835fc8c
    ldrb r0, [r5, #5]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldrh r0, [r0, #2]
lbl_0805e582:
    adds r6, r1, #0
    adds r4, r0, #0
    movs r0, #0x80
    lsls r0, r0, #8
    ands r0, r4
    cmp r0, #0
    bne lbl_0805e5b8
    ldr r5, lbl_0805e5c4 @ =0x030056f8
    ldrb r0, [r5, #5]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrh r0, [r0]
    ldrb r2, [r5, #4]
    adds r1, r4, #0
    bl sub_0805b830
    ldrb r0, [r5, #5]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #6]
    cmp r0, #0
    beq lbl_0805e5b8
    ldr r0, lbl_0805e5c8 @ =0x0000fffc
    ldrb r2, [r5, #4]
    adds r1, r4, #0
    bl sub_0805b96c
lbl_0805e5b8:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805e5c0: .4byte 0x0835fc8c
lbl_0805e5c4: .4byte 0x030056f8
lbl_0805e5c8: .4byte 0x0000fffc

    thumb_func_start process_special_background_effect
process_special_background_effect: @ 0x0805e5cc
    push {r4, r5, lr}
    movs r5, #0
    ldr r0, lbl_0805e5f8 @ =0x0875fdbc
    ldr r3, lbl_0805e5fc @ =0x030056f8
    ldrb r1, [r3, #5]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldrb r2, [r3, #6]
    lsls r0, r2, #1
    adds r0, r0, r2
    lsls r0, r0, #1
    ldr r1, [r1]
    adds r4, r1, r0
    ldrh r0, [r4]
    cmp r0, #9
    bls lbl_0805e5ee
    b lbl_0805e6ec
lbl_0805e5ee:
    lsls r0, r0, #2
    ldr r1, lbl_0805e600 @ =lbl_0805e604
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805e5f8: .4byte 0x0875fdbc
lbl_0805e5fc: .4byte 0x030056f8
lbl_0805e600: .4byte lbl_0805e604
lbl_0805e604: @ jump table
    .4byte lbl_0805e64c @ case 0
    .4byte lbl_0805e62c @ case 1
    .4byte lbl_0805e656 @ case 2
    .4byte lbl_0805e66c @ case 3
    .4byte lbl_0805e688 @ case 4
    .4byte lbl_0805e6a4 @ case 5
    .4byte lbl_0805e6c0 @ case 6
    .4byte lbl_0805e6c4 @ case 7
    .4byte lbl_0805e6cc @ case 8
    .4byte lbl_0805e6d8 @ case 9
lbl_0805e62c:
    ldrh r2, [r3, #2]
    ldrh r1, [r4, #2]
    ldr r0, lbl_0805e644 @ =0x03000c77
    ldrb r0, [r0]
    adds r1, r1, r0
    ldr r0, lbl_0805e648 @ =0x03000002
    ldrh r0, [r0]
    lsrs r0, r0, #4
    adds r1, r1, r0
    cmp r2, r1
    ble lbl_0805e6ec
    b lbl_0805e660
    .align 2, 0
lbl_0805e644: .4byte 0x03000c77
lbl_0805e648: .4byte 0x03000002
lbl_0805e64c:
    ldrh r0, [r3, #2]
    ldrh r4, [r4, #2]
    cmp r0, r4
    bls lbl_0805e6ec
    b lbl_0805e660
lbl_0805e656:
    ldrh r1, [r3, #2]
    ldrh r0, [r4, #2]
    subs r0, #1
    cmp r1, r0
    blt lbl_0805e6ec
lbl_0805e660:
    ldrb r0, [r3, #6]
    adds r0, #1
    movs r1, #0
    strb r0, [r3, #6]
    strh r1, [r3, #2]
    b lbl_0805e6ec
lbl_0805e66c:
    ldr r0, lbl_0805e684 @ =0x03005520
    ldrb r1, [r0, #4]
    cmp r1, #0
    bne lbl_0805e6ec
    ldrh r0, [r4, #4]
    strb r0, [r3, #4]
    ldrb r0, [r3, #6]
    adds r0, #1
    strb r0, [r3, #6]
    strh r1, [r3, #2]
    movs r5, #1
    b lbl_0805e6ec
    .align 2, 0
lbl_0805e684: .4byte 0x03005520
lbl_0805e688:
    ldr r0, lbl_0805e6a0 @ =0x03005520
    ldrb r1, [r0, #4]
    cmp r1, #0
    bne lbl_0805e6ec
    ldrh r0, [r4, #4]
    strb r0, [r3, #4]
    ldrb r0, [r3, #6]
    adds r0, #1
    strb r0, [r3, #6]
    strh r1, [r3, #2]
    movs r5, #2
    b lbl_0805e6ec
    .align 2, 0
lbl_0805e6a0: .4byte 0x03005520
lbl_0805e6a4:
    ldrh r0, [r4, #4]
    cmp r0, #0
    beq lbl_0805e6ae
    bl SoundPlay
lbl_0805e6ae:
    ldr r0, lbl_0805e6bc @ =0x030056f8
    ldrb r1, [r0, #6]
    adds r1, #1
    movs r2, #0
    strb r1, [r0, #6]
    strh r2, [r0, #2]
    b lbl_0805e6ec
    .align 2, 0
lbl_0805e6bc: .4byte 0x030056f8
lbl_0805e6c0:
    movs r0, #0
    strb r0, [r3, #5]
lbl_0805e6c4:
    movs r0, #0
    strb r0, [r3, #6]
    strh r0, [r3, #2]
    b lbl_0805e6ec
lbl_0805e6cc:
    movs r0, #0
    strb r0, [r3, #5]
    strb r0, [r3, #6]
    strh r0, [r3, #2]
    movs r0, #0x10
    b lbl_0805e6e2
lbl_0805e6d8:
    movs r0, #0
    strb r0, [r3, #5]
    strb r0, [r3, #6]
    strh r0, [r3, #2]
    movs r0, #0x14
lbl_0805e6e2:
    bl start_special_background_fading
    ldr r1, lbl_0805e6f4 @ =0x03000c72
    movs r0, #3
    strh r0, [r1]
lbl_0805e6ec:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0805e6f4: .4byte 0x03000c72

    thumb_func_start start_special_background_effect
start_special_background_effect: @ 0x0805e6f8
    push {r4, r5, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r2, lbl_0805e740 @ =0x030056f8
    ldrb r1, [r2, #5]
    cmp r1, #0
    bne lbl_0805e754
    cmp r0, #0xff
    beq lbl_0805e754
    strb r0, [r2, #5]
    strb r1, [r2, #4]
    strb r1, [r2, #6]
    movs r0, #0
    strh r1, [r2, #2]
    strb r0, [r2, #7]
    ldr r1, lbl_0805e744 @ =0x02035400
    ldr r2, lbl_0805e748 @ =0x02035800
    movs r5, #0x80
    lsls r5, r5, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_0805e74c @ =0x02035600
    ldr r2, lbl_0805e750 @ =0x02035a00
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    movs r0, #1
    b lbl_0805e756
    .align 2, 0
lbl_0805e740: .4byte 0x030056f8
lbl_0805e744: .4byte 0x02035400
lbl_0805e748: .4byte 0x02035800
lbl_0805e74c: .4byte 0x02035600
lbl_0805e750: .4byte 0x02035a00
lbl_0805e754:
    movs r0, #0
lbl_0805e756:
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0805e760
sub_0805e760: @ 0x0805e760
    push {r4, r5, r6, r7, lr}
    movs r7, #0
lbl_0805e764:
    ldr r0, lbl_0805e7a0 @ =0x0300545c
    lsls r2, r7, #3
    adds r3, r2, r0
    ldrb r1, [r3]
    lsls r1, r1, #0x1f
    adds r4, r0, #0
    adds r6, r2, #0
    cmp r1, #0
    bne lbl_0805e778
    b lbl_0805e8e6
lbl_0805e778:
    ldrb r2, [r3, #1]
    lsls r1, r2, #0x1e
    lsrs r0, r1, #0x1e
    cmp r0, #1
    beq lbl_0805e7a4
    cmp r0, #3
    beq lbl_0805e7a4
    lsrs r0, r2, #4
    cmp r0, #0
    bne lbl_0805e78e
    b lbl_0805e8e6
lbl_0805e78e:
    ldrb r0, [r3, #3]
    cmp r0, #3
    beq lbl_0805e796
    b lbl_0805e8e6
lbl_0805e796:
    lsls r0, r7, #0x18
    lsrs r0, r0, #0x18
    bl sub_0805ea54
    b lbl_0805e8e6
    .align 2, 0
lbl_0805e7a0: .4byte 0x0300545c
lbl_0805e7a4:
    adds r5, r6, r4
    ldrb r1, [r5]
    lsls r2, r1, #0x1c
    lsrs r0, r2, #0x1d
    cmp r0, #0
    bne lbl_0805e834
    ldrb r0, [r5, #1]
    lsls r0, r0, #0x1e
    lsrs r0, r0, #0x1e
    cmp r0, #1
    bne lbl_0805e7c4
    movs r0, #0x86
    lsls r0, r0, #1
    bl SoundPlay
    b lbl_0805e80a
lbl_0805e7c4:
    ldrb r0, [r5, #3]
    cmp r0, #7
    bhi lbl_0805e804
    lsls r0, r0, #2
    ldr r1, lbl_0805e7d4 @ =lbl_0805e7d8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805e7d4: .4byte lbl_0805e7d8
lbl_0805e7d8: @ jump table
    .4byte lbl_0805e804 @ case 0
    .4byte lbl_0805e804 @ case 1
    .4byte lbl_0805e804 @ case 2
    .4byte lbl_0805e804 @ case 3
    .4byte lbl_0805e804 @ case 4
    .4byte lbl_0805e804 @ case 5
    .4byte lbl_0805e7f8 @ case 6
    .4byte lbl_0805e7f8 @ case 7
lbl_0805e7f8:
    ldr r0, lbl_0805e800 @ =0x00000117
    bl SoundPlay
    b lbl_0805e80a
    .align 2, 0
lbl_0805e800: .4byte 0x00000117
lbl_0805e804:
    ldr r0, lbl_0805e82c @ =0x0000010d
    bl SoundPlay
lbl_0805e80a:
    ldr r2, lbl_0805e830 @ =0x0300545c
    adds r2, r6, r2
    movs r0, #0
    strb r0, [r2, #4]
    ldrb r3, [r2]
    lsls r1, r3, #0x1c
    lsrs r1, r1, #0x1d
    adds r1, #1
    movs r0, #7
    ands r1, r0
    lsls r1, r1, #1
    movs r0, #0xf
    rsbs r0, r0, #0
    ands r0, r3
    orrs r0, r1
    strb r0, [r2]
    b lbl_0805e8e6
    .align 2, 0
lbl_0805e82c: .4byte 0x0000010d
lbl_0805e830: .4byte 0x0300545c
lbl_0805e834:
    lsrs r0, r2, #0x1d
    cmp r0, #7
    bne lbl_0805e870
    ldrb r0, [r5, #1]
    lsls r0, r0, #0x1e
    lsrs r0, r0, #0x1e
    cmp r0, #1
    bne lbl_0805e8e6
    movs r4, #0xf
    rsbs r4, r4, #0
    adds r0, r4, #0
    ands r0, r1
    movs r1, #8
    orrs r0, r1
    strb r0, [r5]
    movs r0, #1
    adds r1, r7, #0
    bl update_hatch_anim
    ldrb r1, [r5, #1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r5, #1]
    ldrb r0, [r5]
    ands r4, r0
    strb r4, [r5]
    b lbl_0805e8e6
lbl_0805e870:
    ldr r1, lbl_0805e884 @ =0x083602c2
    lsrs r0, r2, #0x1d
    adds r0, r0, r1
    ldrb r1, [r5, #4]
    ldrb r0, [r0]
    cmp r1, r0
    bhs lbl_0805e888
    adds r0, r1, #1
    strb r0, [r5, #4]
    b lbl_0805e8e6
    .align 2, 0
lbl_0805e884: .4byte 0x083602c2
lbl_0805e888:
    movs r0, #0
    strb r0, [r5, #4]
    movs r0, #1
    adds r1, r7, #0
    bl update_hatch_anim
    ldrb r2, [r5]
    lsls r1, r2, #0x1c
    lsrs r1, r1, #0x1d
    adds r1, #1
    movs r0, #7
    ands r1, r0
    lsls r1, r1, #1
    movs r0, #0xf
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r5]
    lsls r0, r0, #0x1c
    lsrs r0, r0, #0x1d
    cmp r0, #5
    bne lbl_0805e8e6
    ldrb r2, [r5, #1]
    lsls r1, r2, #0x1e
    lsrs r0, r1, #0x1e
    cmp r0, #1
    bne lbl_0805e8ca
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    movs r1, #2
    orrs r0, r1
    b lbl_0805e8d6
lbl_0805e8ca:
    lsrs r0, r1, #0x1e
    cmp r0, #3
    bne lbl_0805e8d8
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
lbl_0805e8d6:
    strb r0, [r5, #1]
lbl_0805e8d8:
    ldr r0, lbl_0805e8f4 @ =0x0300545c
    adds r0, r6, r0
    ldrb r2, [r0]
    movs r1, #0xf
    rsbs r1, r1, #0
    ands r1, r2
    strb r1, [r0]
lbl_0805e8e6:
    adds r7, #1
    cmp r7, #0xf
    bgt lbl_0805e8ee
    b lbl_0805e764
lbl_0805e8ee:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805e8f4: .4byte 0x0300545c

    thumb_func_start update_hatch_anim
update_hatch_anim: @ 0x0805e8f8
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    adds r5, r1, #0
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    ldr r0, lbl_0805e948 @ =0x0300545c
    lsls r4, r5, #3
    adds r1, r4, r0
    ldrb r2, [r1]
    lsls r3, r2, #0x1b
    ldr r7, lbl_0805e94c @ =0x00000411
    mov r8, r0
    cmp r3, #0
    bge lbl_0805e91e
    adds r7, #5
lbl_0805e91e:
    lsls r0, r2, #0x1c
    lsrs r0, r0, #0x1d
    subs r2, r0, #1
    ldrb r0, [r1, #1]
    lsls r0, r0, #0x1e
    lsrs r0, r0, #0x1e
    cmp r0, #3
    bne lbl_0805e95e
    movs r0, #2
    subs r2, r0, r2
    cmp r2, #0
    bge lbl_0805e954
    movs r2, #0
    ldr r0, lbl_0805e950 @ =0x083602c8
    ldrb r1, [r1, #3]
    lsls r1, r1, #1
    adds r1, r1, r0
    lsrs r0, r3, #0x1f
    ldrh r1, [r1]
    adds r7, r0, r1
    b lbl_0805e95e
    .align 2, 0
lbl_0805e948: .4byte 0x0300545c
lbl_0805e94c: .4byte 0x00000411
lbl_0805e950: .4byte 0x083602c8
lbl_0805e954:
    ldrb r0, [r1, #3]
    mov sl, r4
    cmp r0, #0
    beq lbl_0805e96c
    adds r2, #0x40
lbl_0805e95e:
    lsls r0, r5, #3
    mov r3, r8
    adds r1, r0, r3
    ldrb r1, [r1, #3]
    mov sl, r0
    cmp r1, #0
    bne lbl_0805e96e
lbl_0805e96c:
    adds r2, #0x80
lbl_0805e96e:
    adds r7, r7, r2
    cmp r6, #0
    beq lbl_0805e9c0
    ldr r4, lbl_0805e9bc @ =0x0300545c
    add r4, sl
    ldrb r1, [r4, #6]
    ldrb r2, [r4, #5]
    adds r0, r7, #0
    bl set_bg1_block_value
    movs r0, #0x10
    adds r0, r0, r7
    mov r8, r0
    ldrb r1, [r4, #6]
    adds r1, #1
    ldrb r2, [r4, #5]
    bl set_bg1_block_value
    adds r1, r7, #0
    adds r1, #0x20
    str r1, [sp]
    ldrb r1, [r4, #6]
    adds r1, #2
    ldrb r2, [r4, #5]
    ldr r0, [sp]
    bl set_bg1_block_value
    adds r5, r7, #0
    adds r5, #0x30
    ldrb r1, [r4, #6]
    adds r1, #3
    ldrb r2, [r4, #5]
    adds r0, r5, #0
    bl set_bg1_block_value
    mov r6, r8
    ldr r3, [sp]
    mov r8, r3
    b lbl_0805ea04
    .align 2, 0
lbl_0805e9bc: .4byte 0x0300545c
lbl_0805e9c0:
    ldr r4, lbl_0805ea50 @ =0x0300545c
    add r4, sl
    ldrb r1, [r4, #6]
    ldrb r2, [r4, #5]
    adds r0, r7, #0
    bl set_raw_bg1_block_value
    movs r0, #0x10
    adds r0, r0, r7
    mov r8, r0
    ldrb r1, [r4, #6]
    adds r1, #1
    ldrb r2, [r4, #5]
    bl set_raw_bg1_block_value
    movs r1, #0x20
    adds r1, r1, r7
    mov sb, r1
    ldrb r1, [r4, #6]
    adds r1, #2
    ldrb r2, [r4, #5]
    mov r0, sb
    bl set_raw_bg1_block_value
    adds r5, r7, #0
    adds r5, #0x30
    ldrb r1, [r4, #6]
    adds r1, #3
    ldrb r2, [r4, #5]
    adds r0, r5, #0
    bl set_raw_bg1_block_value
    mov r6, r8
    mov r8, sb
lbl_0805ea04:
    lsls r0, r7, #0x10
    lsrs r0, r0, #0x10
    ldr r4, lbl_0805ea50 @ =0x0300545c
    add r4, sl
    ldrb r1, [r4, #6]
    ldrb r2, [r4, #5]
    bl set_clipdata_block_value
    lsls r0, r6, #0x10
    lsrs r0, r0, #0x10
    ldrb r1, [r4, #6]
    adds r1, #1
    ldrb r2, [r4, #5]
    bl set_clipdata_block_value
    mov r3, r8
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    ldrb r1, [r4, #6]
    adds r1, #2
    ldrb r2, [r4, #5]
    bl set_clipdata_block_value
    lsls r0, r5, #0x10
    lsrs r0, r0, #0x10
    ldrb r1, [r4, #6]
    adds r1, #3
    ldrb r2, [r4, #5]
    bl set_clipdata_block_value
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805ea50: .4byte 0x0300545c

    thumb_func_start sub_0805ea54
sub_0805ea54: @ 0x0805ea54
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldr r1, lbl_0805ea88 @ =0x0300545c
    lsls r0, r4, #3
    adds r3, r0, r1
    ldrb r2, [r3, #2]
    lsls r0, r2, #0x1c
    adds r6, r1, #0
    cmp r0, #0
    bne lbl_0805ea90
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    movs r1, #4
    orrs r0, r1
    strb r0, [r3, #2]
    ldrb r1, [r3, #1]
    lsrs r1, r1, #4
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0805eaa4
    ldr r5, lbl_0805ea8c @ =0x0000049a
    b lbl_0805eaae
    .align 2, 0
lbl_0805ea88: .4byte 0x0300545c
lbl_0805ea8c: .4byte 0x0000049a
lbl_0805ea90:
    lsrs r0, r0, #0x1c
    subs r0, #1
    movs r1, #0xf
    ands r0, r1
    movs r1, #0x10
    rsbs r1, r1, #0
    ands r1, r2
    orrs r1, r0
    strb r1, [r3, #2]
    b lbl_0805eb12
lbl_0805eaa4:
    ldr r1, lbl_0805eb00 @ =0x083602c8
    ldrb r0, [r3, #3]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r5, [r0]
lbl_0805eaae:
    lsls r0, r4, #3
    adds r4, r0, r6
    ldrb r0, [r4]
    lsls r0, r0, #0x1b
    cmp r0, #0
    bge lbl_0805eabc
    adds r5, #1
lbl_0805eabc:
    ldrb r1, [r4, #6]
    ldrb r2, [r4, #5]
    adds r0, r5, #0
    bl set_bg1_block_value
    adds r0, r5, #0
    adds r0, #0x10
    ldrb r1, [r4, #6]
    adds r1, #1
    ldrb r2, [r4, #5]
    bl set_bg1_block_value
    adds r0, r5, #0
    adds r0, #0x20
    ldrb r1, [r4, #6]
    adds r1, #2
    ldrb r2, [r4, #5]
    bl set_bg1_block_value
    adds r0, r5, #0
    adds r0, #0x30
    ldrb r1, [r4, #6]
    adds r1, #3
    ldrb r2, [r4, #5]
    bl set_bg1_block_value
    ldrb r2, [r4, #1]
    lsls r1, r2, #0x18
    lsrs r0, r1, #0x1c
    cmp r0, #3
    bls lbl_0805eb04
    movs r0, #0xf
    ands r0, r2
    b lbl_0805eb10
    .align 2, 0
lbl_0805eb00: .4byte 0x083602c8
lbl_0805eb04:
    lsrs r1, r1, #0x1c
    adds r1, #1
    lsls r1, r1, #4
    movs r0, #0xf
    ands r0, r2
    orrs r0, r1
lbl_0805eb10:
    strb r0, [r4, #1]
lbl_0805eb12:
    pop {r4, r5, r6}
    pop {r0}
    bx r0

    thumb_func_start sub_0805eb18
sub_0805eb18: @ 0x0805eb18
    push {r4, r5, r6, lr}
    mov r6, sl
    mov r5, sb
    mov r4, r8
    push {r4, r5, r6}
    adds r5, r0, #0
    lsls r5, r5, #0x18
    ldr r0, lbl_0805ebe8 @ =0x0300545c
    lsrs r5, r5, #0x15
    adds r5, r5, r0
    movs r0, #0
    mov sl, r0
    strb r1, [r5, #3]
    ldr r1, lbl_0805ebec @ =0x083602c8
    ldrb r0, [r5, #3]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrb r4, [r5]
    lsls r4, r4, #0x1b
    lsrs r4, r4, #0x1f
    ldrh r0, [r0]
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldrb r1, [r5, #6]
    ldrb r2, [r5, #5]
    adds r0, r4, #0
    bl set_bg1_block_value
    adds r6, r4, #0
    adds r6, #0x10
    ldrb r1, [r5, #6]
    adds r1, #1
    ldrb r2, [r5, #5]
    adds r0, r6, #0
    bl set_bg1_block_value
    movs r0, #0x20
    adds r0, r0, r4
    mov r8, r0
    ldrb r1, [r5, #6]
    adds r1, #2
    ldrb r2, [r5, #5]
    bl set_bg1_block_value
    movs r0, #0x30
    adds r0, r0, r4
    mov sb, r0
    ldrb r1, [r5, #6]
    adds r1, #3
    ldrb r2, [r5, #5]
    bl set_bg1_block_value
    ldrb r1, [r5, #6]
    ldrb r2, [r5, #5]
    adds r0, r4, #0
    bl set_clipdata_block_value
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    ldrb r1, [r5, #6]
    adds r1, #1
    ldrb r2, [r5, #5]
    adds r0, r6, #0
    bl set_clipdata_block_value
    mov r0, r8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    ldrb r1, [r5, #6]
    adds r1, #2
    ldrb r2, [r5, #5]
    bl set_clipdata_block_value
    mov r0, sb
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov sb, r0
    ldrb r1, [r5, #6]
    adds r1, #3
    ldrb r2, [r5, #5]
    bl set_clipdata_block_value
    ldrb r1, [r5, #1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r5, #1]
    ldrb r1, [r5]
    movs r0, #0xf
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r5]
    mov r0, sl
    strb r0, [r5, #4]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805ebe8: .4byte 0x0300545c
lbl_0805ebec: .4byte 0x083602c8

    thumb_func_start check_enter_door
check_enter_door: @ 0x0805ebf0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    ldr r0, lbl_0805ec10 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #2
    beq lbl_0805ec14
    movs r0, #0
    b lbl_0805ed84
    .align 2, 0
lbl_0805ec10: .4byte 0x03000c72
lbl_0805ec14:
    movs r5, #0
    mov ip, r5
    ldr r0, lbl_0805ec9c @ =0x0300545c
    ldr r2, lbl_0805eca0 @ =0x03000054
    mov sl, r2
    adds r3, r0, #7
    mov sb, r5
    ldr r0, lbl_0805eca4 @ =0x03000056
    mov r8, r0
lbl_0805ec26:
    ldrb r0, [r3]
    ldr r1, lbl_0805eca8 @ =0x08345868
    ldrb r1, [r1, #7]
    cmp r0, r1
    bne lbl_0805ec32
    b lbl_0805ed70
lbl_0805ec32:
    mov r0, sl
    ldrb r2, [r0]
    lsls r2, r2, #2
    ldr r1, lbl_0805ecac @ =0x0875faa8
    adds r2, r2, r1
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #2
    ldr r1, [r2]
    adds r4, r1, r0
    ldrb r1, [r4]
    movs r0, #0xf
    ands r0, r1
    cmp r0, #1
    bhi lbl_0805ec54
    b lbl_0805ed70
lbl_0805ec54:
    ldrb r0, [r4, #2]
    cmp r0, r6
    bls lbl_0805ec5c
    b lbl_0805ed70
lbl_0805ec5c:
    ldrb r2, [r4, #3]
    cmp r6, r2
    bls lbl_0805ec64
    b lbl_0805ed70
lbl_0805ec64:
    ldrb r0, [r4, #4]
    cmp r0, r7
    bls lbl_0805ec6c
    b lbl_0805ed70
lbl_0805ec6c:
    ldrb r0, [r4, #5]
    cmp r7, r0
    bls lbl_0805ec74
    b lbl_0805ed70
lbl_0805ec74:
    ldr r1, lbl_0805ecb0 @ =0x030054e0
    movs r0, #0
    strh r0, [r1]
    strh r0, [r1, #2]
    ldrb r1, [r4]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0805ecbc
    ldrb r0, [r3]
    bl find_event_based_door_number
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0xff
    beq lbl_0805ecb4
    mov r1, r8
    strb r5, [r1]
    b lbl_0805ecc2
    .align 2, 0
lbl_0805ec9c: .4byte 0x0300545c
lbl_0805eca0: .4byte 0x03000054
lbl_0805eca4: .4byte 0x03000056
lbl_0805eca8: .4byte 0x08345868
lbl_0805ecac: .4byte 0x0875faa8
lbl_0805ecb0: .4byte 0x030054e0
lbl_0805ecb4:
    ldrb r0, [r4, #6]
    mov r2, r8
    strb r0, [r2]
    b lbl_0805ecc2
lbl_0805ecbc:
    ldrb r0, [r4, #6]
    mov r1, r8
    strb r0, [r1]
lbl_0805ecc2:
    ldrb r1, [r4]
    movs r0, #0xf
    ands r0, r1
    cmp r0, #2
    bls lbl_0805ece4
    ldrb r1, [r4, #2]
    ldr r0, lbl_0805ed54 @ =0x030013b8
    ldrh r0, [r0]
    lsrs r0, r0, #6
    adds r0, #8
    ldr r2, lbl_0805ed58 @ =0x030054e0
    cmp r1, r0
    ble lbl_0805ece0
    movs r0, #1
    strh r0, [r2]
lbl_0805ece0:
    ldrb r0, [r4, #4]
    strh r0, [r2, #2]
lbl_0805ece4:
    ldr r2, lbl_0805ed5c @ =0x0300550c
    ldrb r0, [r4, #5]
    adds r0, #1
    lsls r0, r0, #6
    ldr r1, lbl_0805ed60 @ =0x030013d4
    ldrh r1, [r1, #0x14]
    subs r0, r0, r1
    subs r0, #1
    strh r0, [r2]
    ldrb r0, [r4]
    bl process_door_type
    ldr r1, lbl_0805ed64 @ =0x03000c72
    movs r0, #3
    strh r0, [r1]
    ldr r0, lbl_0805ed68 @ =0x0300545c
    mov r2, sb
    adds r1, r2, r0
    ldrb r2, [r1]
    lsls r0, r2, #0x1f
    cmp r0, #0
    beq lbl_0805ed20
    ldrb r0, [r1, #1]
    lsls r0, r0, #0x1e
    lsrs r0, r0, #0x1e
    cmp r0, #1
    bne lbl_0805ed20
    movs r0, #0xe
    orrs r0, r2
    strb r0, [r1]
lbl_0805ed20:
    mov r1, sl
    ldrb r0, [r1]
    lsls r3, r0, #2
    ldr r2, lbl_0805ed6c @ =0x0875faa8
    adds r3, r3, r2
    mov r1, r8
    ldrb r2, [r1]
    lsls r1, r2, #1
    adds r1, r1, r2
    lsls r1, r1, #2
    ldr r2, [r3]
    adds r4, r2, r1
    ldrb r1, [r4, #1]
    adds r1, #1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl check_play_cutscene_during_transition
    mov r2, sl
    ldrb r0, [r2]
    ldrb r1, [r4, #1]
    bl check_play_room_music_track
    movs r5, #1
    b lbl_0805ed82
    .align 2, 0
lbl_0805ed54: .4byte 0x030013b8
lbl_0805ed58: .4byte 0x030054e0
lbl_0805ed5c: .4byte 0x0300550c
lbl_0805ed60: .4byte 0x030013d4
lbl_0805ed64: .4byte 0x03000c72
lbl_0805ed68: .4byte 0x0300545c
lbl_0805ed6c: .4byte 0x0875faa8
lbl_0805ed70:
    adds r3, #8
    movs r0, #8
    add sb, r0
    movs r1, #1
    add ip, r1
    mov r2, ip
    cmp r2, #0xf
    bgt lbl_0805ed82
    b lbl_0805ec26
lbl_0805ed82:
    adds r0, r5, #0
lbl_0805ed84:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start check_area_connection
check_area_connection: @ 0x0805ed94
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    ldr r0, lbl_0805ee20 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #2
    beq lbl_0805edb2
    b lbl_0805eeb4
lbl_0805edb2:
    movs r4, #0
    mov r8, r4
    ldr r1, lbl_0805ee24 @ =0x0300545c
    ldr r0, lbl_0805ee28 @ =0x08345868
    ldrb r0, [r0, #7]
    mov ip, r0
    adds r3, r1, #7
    ldr r2, lbl_0805ee2c @ =0x03000056
    mov sb, r2
lbl_0805edc4:
    ldrb r0, [r3]
    cmp r0, ip
    beq lbl_0805ee4a
    ldr r2, lbl_0805ee30 @ =0x0875faa8
    ldr r0, lbl_0805ee34 @ =0x03000054
    ldrb r1, [r0]
    lsls r1, r1, #2
    adds r1, r1, r2
    ldrb r2, [r3]
    lsls r0, r2, #1
    adds r0, r0, r2
    lsls r0, r0, #2
    ldr r1, [r1]
    adds r5, r1, r0
    ldrb r1, [r5]
    movs r0, #0xf
    ands r0, r1
    cmp r0, #1
    bne lbl_0805ee4a
    ldrb r0, [r5, #2]
    cmp r0, r6
    bhi lbl_0805ee4a
    ldrb r0, [r5, #3]
    cmp r6, r0
    bhi lbl_0805ee4a
    ldrb r0, [r5, #4]
    cmp r0, r7
    bhi lbl_0805ee4a
    ldrb r0, [r5, #5]
    cmp r7, r0
    bhi lbl_0805ee4a
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0805ee40
    adds r0, r2, #0
    bl find_event_based_door_number
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #0xff
    beq lbl_0805ee38
    mov r1, sb
    strb r4, [r1]
    b lbl_0805ee46
    .align 2, 0
lbl_0805ee20: .4byte 0x03000c72
lbl_0805ee24: .4byte 0x0300545c
lbl_0805ee28: .4byte 0x08345868
lbl_0805ee2c: .4byte 0x03000056
lbl_0805ee30: .4byte 0x0875faa8
lbl_0805ee34: .4byte 0x03000054
lbl_0805ee38:
    ldrb r0, [r5, #6]
    mov r2, sb
    strb r0, [r2]
    b lbl_0805ee46
lbl_0805ee40:
    ldrb r0, [r5, #6]
    mov r3, sb
    strb r0, [r3]
lbl_0805ee46:
    movs r4, #1
    b lbl_0805ee6c
lbl_0805ee4a:
    adds r3, #8
    movs r0, #1
    add r8, r0
    mov r1, r8
    cmp r1, #0xf
    ble lbl_0805edc4
    cmp r4, #0
    bne lbl_0805ee6c
    b lbl_0805eeb4
lbl_0805ee5c:
    mov r0, sl
    adds r0, #2
    adds r0, r1, r0
    ldrb r0, [r0]
    mov r2, sb
    strb r0, [r2]
    movs r4, #2
    b lbl_0805eeaa
lbl_0805ee6c:
    ldr r2, lbl_0805eeb8 @ =0x08360274
    ldrb r0, [r2]
    mov ip, r2
    cmp r0, #0xff
    beq lbl_0805eeaa
    mov sl, r2
    ldr r3, lbl_0805eebc @ =0x03000054
    mov sb, r3
    ldrb r7, [r3]
    ldr r1, lbl_0805eec0 @ =0x0300545c
    mov r3, r8
    lsls r0, r3, #3
    adds r6, r0, r1
    movs r1, #0
    adds r3, r2, #0
lbl_0805ee8a:
    ldrb r0, [r3]
    cmp r0, r7
    bne lbl_0805ee9c
    adds r0, r2, #1
    adds r0, r1, r0
    ldrb r0, [r0]
    ldrb r2, [r6, #7]
    cmp r0, r2
    beq lbl_0805ee5c
lbl_0805ee9c:
    adds r1, #3
    adds r3, #3
    mov r2, ip
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #0xff
    bne lbl_0805ee8a
lbl_0805eeaa:
    cmp r4, #2
    beq lbl_0805eec8
    ldr r1, lbl_0805eec4 @ =0x03000056
    movs r0, #0
    strb r0, [r1]
lbl_0805eeb4:
    movs r0, #0
    b lbl_0805ef22
    .align 2, 0
lbl_0805eeb8: .4byte 0x08360274
lbl_0805eebc: .4byte 0x03000054
lbl_0805eec0: .4byte 0x0300545c
lbl_0805eec4: .4byte 0x03000056
lbl_0805eec8:
    ldr r2, lbl_0805eed8 @ =0x030013d4
    ldrb r0, [r2]
    cmp r0, #0x1d
    bne lbl_0805eee0
    ldr r1, lbl_0805eedc @ =0x0300550c
    movs r0, #0
    strh r0, [r1]
    b lbl_0805eef0
    .align 2, 0
lbl_0805eed8: .4byte 0x030013d4
lbl_0805eedc: .4byte 0x0300550c
lbl_0805eee0:
    ldr r0, lbl_0805ef30 @ =0x0300550c
    ldrb r1, [r5, #5]
    adds r1, #1
    lsls r1, r1, #6
    ldrh r2, [r2, #0x14]
    subs r1, r1, r2
    subs r1, #1
    strh r1, [r0]
lbl_0805eef0:
    movs r0, #6
    bl start_special_background_fading
    ldr r1, lbl_0805ef34 @ =0x03000c72
    movs r0, #3
    strh r0, [r1]
    ldr r0, lbl_0805ef38 @ =0x0875faa8
    ldr r4, lbl_0805ef3c @ =0x03000054
    ldrb r1, [r4]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldr r0, lbl_0805ef40 @ =0x03000056
    ldrb r2, [r0]
    lsls r0, r2, #1
    adds r0, r0, r2
    lsls r0, r0, #2
    ldr r1, [r1]
    adds r5, r1, r0
    bl check_play_cutscene_during_elevator
    ldrb r0, [r4]
    ldrb r1, [r5, #1]
    bl check_play_room_music_track
    movs r0, #1
lbl_0805ef22:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0805ef30: .4byte 0x0300550c
lbl_0805ef34: .4byte 0x03000c72
lbl_0805ef38: .4byte 0x0875faa8
lbl_0805ef3c: .4byte 0x03000054
lbl_0805ef40: .4byte 0x03000056

    thumb_func_start process_door_type
process_door_type: @ 0x0805ef44
    push {lr}
    lsls r0, r0, #0x18
    movs r2, #6
    movs r1, #0xf0
    lsls r1, r1, #0x14
    ands r1, r0
    lsrs r1, r1, #0x18
    cmp r1, #5
    beq lbl_0805ef6a
    cmp r1, #5
    bgt lbl_0805ef64
    cmp r1, #2
    bgt lbl_0805ef84
    cmp r1, #1
    blt lbl_0805ef84
    b lbl_0805ef94
lbl_0805ef64:
    cmp r1, #6
    beq lbl_0805ef78
    b lbl_0805ef84
lbl_0805ef6a:
    ldr r1, lbl_0805ef74 @ =0x0300002d
    movs r0, #0
    strb r0, [r1]
    b lbl_0805ef94
    .align 2, 0
lbl_0805ef74: .4byte 0x0300002d
lbl_0805ef78:
    ldr r1, lbl_0805ef80 @ =0x0300002d
    movs r0, #1
    strb r0, [r1]
    b lbl_0805ef94
    .align 2, 0
lbl_0805ef80: .4byte 0x0300002d
lbl_0805ef84:
    ldr r1, lbl_0805efa0 @ =0x0300002a
    movs r0, #4
    strb r0, [r1]
    ldr r0, lbl_0805efa4 @ =0x03000042
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0805ef94
    movs r2, #4
lbl_0805ef94:
    adds r0, r2, #0
    bl start_special_background_fading
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805efa0: .4byte 0x0300002a
lbl_0805efa4: .4byte 0x03000042

    thumb_func_start find_event_based_door_number
find_event_based_door_number: @ 0x0805efa8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    movs r5, #0x28
    ldr r0, lbl_0805efe8 @ =0x03000054
    mov r8, r0
    ldr r6, lbl_0805efec @ =0x083601d0
    adds r4, r6, #0
    adds r4, #0xa0
lbl_0805efbe:
    lsls r1, r5, #2
    mov r2, r8
    ldrb r0, [r2]
    ldrb r2, [r4]
    cmp r0, r2
    bne lbl_0805eff0
    adds r0, r6, #1
    adds r0, r1, r0
    ldrb r0, [r0]
    cmp r7, r0
    bne lbl_0805eff0
    adds r0, r6, #2
    adds r0, r1, r0
    ldrb r1, [r0]
    movs r0, #3
    bl EventFunction
    cmp r0, #0
    beq lbl_0805eff0
    ldrb r0, [r4, #3]
    b lbl_0805effa
    .align 2, 0
lbl_0805efe8: .4byte 0x03000054
lbl_0805efec: .4byte 0x083601d0
lbl_0805eff0:
    subs r4, #4
    subs r5, #1
    cmp r5, #0
    bge lbl_0805efbe
    movs r0, #0xff
lbl_0805effa:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start set_hatch_as_opened
set_hatch_as_opened: @ 0x0805f004
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #0xc
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldr r0, lbl_0805f078 @ =0x03000054
    mov ip, r0
    ldrb r0, [r0]
    lsls r0, r0, #5
    ldr r2, lbl_0805f07c @ =0x02037c00
    adds r5, r0, r2
    movs r7, #0
    lsrs r1, r1, #0x1d
    movs r3, #0x1f
    mov r8, r3
    adds r3, r4, #0
    mov r0, r8
    ands r3, r0
    cmp r6, #0
    beq lbl_0805f084
    lsls r2, r1, #2
    adds r2, r2, r5
    movs r1, #1
    lsls r1, r3
    ldr r0, [r2]
    bics r0, r1
    str r0, [r2]
    cmp r6, #1
    bne lbl_0805f096
    ldr r1, lbl_0805f080 @ =0x0875faa8
    mov r2, ip
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r2, [r0]
    lsls r0, r4, #1
    adds r0, r0, r4
    lsls r0, r0, #2
    mov r1, sp
    adds r0, r0, r2
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    mov r0, sp
    ldrb r0, [r0, #6]
    lsrs r1, r0, #5
    mov r3, r8
    ands r0, r3
    lsls r2, r1, #2
    adds r2, r2, r5
    adds r1, r6, #0
    lsls r1, r0
    ldr r0, [r2]
    bics r0, r1
    str r0, [r2]
    b lbl_0805f096
    .align 2, 0
lbl_0805f078: .4byte 0x03000054
lbl_0805f07c: .4byte 0x02037c00
lbl_0805f080: .4byte 0x0875faa8
lbl_0805f084:
    lsls r1, r1, #2
    adds r1, r1, r5
    movs r0, #1
    lsls r0, r3
    ldr r7, [r1]
    ands r7, r0
    cmp r7, #0
    beq lbl_0805f096
    movs r7, #1
lbl_0805f096:
    adds r0, r7, #0
    add sp, #0xc
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start check_unlock_doors
check_unlock_doors: @ 0x0805f0a4
    push {r4, lr}
    ldr r1, lbl_0805f0dc @ =0x0300007b
    ldrb r2, [r1]
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r0, #0
    bge lbl_0805f0d6
    adds r0, r2, #1
    strb r0, [r1]
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_0805f0d6
    ldr r4, lbl_0805f0e0 @ =0x030054e4
    ldrh r0, [r4, #2]
    cmp r0, #0
    bne lbl_0805f0ca
    ldrh r0, [r4, #6]
    cmp r0, #0
    beq lbl_0805f0d6
lbl_0805f0ca:
    movs r0, #0x8b
    lsls r0, r0, #1
    bl SoundPlay
    movs r0, #1
    strb r0, [r4]
lbl_0805f0d6:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805f0dc: .4byte 0x0300007b
lbl_0805f0e0: .4byte 0x030054e4

    thumb_func_start sub_0805f0e4
sub_0805f0e4: @ 0x0805f0e4
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    ldr r3, lbl_0805f11c @ =0x0300545c
    lsls r4, r1, #3
    adds r4, r4, r3
    movs r3, #3
    ands r2, r3
    ldrb r5, [r4, #1]
    subs r3, #7
    ands r3, r5
    orrs r3, r2
    strb r3, [r4, #1]
    ldrb r3, [r4]
    movs r2, #0xf
    rsbs r2, r2, #0
    ands r2, r3
    strb r2, [r4]
    bl update_hatch_anim
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805f11c: .4byte 0x0300545c

    thumb_func_start lock_hatches
lock_hatches: @ 0x0805f120
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r5, #0
    movs r7, #0
    ldr r2, lbl_0805f160 @ =0x030054e4
    movs r3, #1
    ldr r1, lbl_0805f164 @ =0x0300545c
lbl_0805f138:
    ldrb r0, [r1]
    lsls r0, r0, #0x1f
    cmp r0, #0
    beq lbl_0805f14a
    adds r0, r3, #0
    lsls r0, r5
    orrs r0, r7
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
lbl_0805f14a:
    adds r1, #8
    adds r5, #1
    cmp r5, #0xf
    ble lbl_0805f138
    cmp r4, #0
    bne lbl_0805f168
    ldrh r0, [r2, #2]
    ands r0, r7
    strh r0, [r2, #2]
    b lbl_0805f174
    .align 2, 0
lbl_0805f160: .4byte 0x030054e4
lbl_0805f164: .4byte 0x0300545c
lbl_0805f168:
    ldrh r0, [r2, #4]
    ands r0, r7
    strh r0, [r2, #4]
    ldrh r0, [r2, #6]
    ands r0, r7
    strh r0, [r2, #6]
lbl_0805f174:
    cmp r4, #0
    bne lbl_0805f1e8
    ldrh r0, [r2, #4]
    ldrh r1, [r2, #6]
    orrs r0, r1
    ldrh r1, [r2, #2]
    bics r1, r0
    strh r1, [r2, #2]
    adds r7, r1, #0
    movs r5, #0
    movs r4, #0
lbl_0805f18a:
    adds r0, r7, #0
    asrs r0, r5
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0805f1da
    ldr r0, lbl_0805f1c8 @ =0x0300545c
    lsls r2, r5, #3
    adds r2, r2, r0
    ldrb r1, [r2, #1]
    movs r3, #0xd
    rsbs r3, r3, #0
    adds r0, r3, #0
    ands r1, r0
    movs r0, #4
    orrs r1, r0
    strb r1, [r2, #1]
    movs r0, #6
    strb r0, [r2, #3]
    ldr r1, lbl_0805f1cc @ =0x03000056
    ldrb r0, [r2, #7]
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_0805f1d0
    lsrs r1, r4, #0x18
    movs r0, #1
    movs r2, #0
    bl sub_0805f0e4
    b lbl_0805f1da
    .align 2, 0
lbl_0805f1c8: .4byte 0x0300545c
lbl_0805f1cc: .4byte 0x03000056
lbl_0805f1d0:
    lsrs r1, r4, #0x18
    movs r0, #1
    movs r2, #3
    bl sub_0805f0e4
lbl_0805f1da:
    movs r0, #0x80
    lsls r0, r0, #0x11
    adds r4, r4, r0
    adds r5, #1
    cmp r5, #0xf
    ble lbl_0805f18a
    b lbl_0805f284
lbl_0805f1e8:
    ldrh r1, [r2, #4]
    ldrh r0, [r2, #6]
    adds r7, r0, #0
    orrs r7, r1
    movs r5, #0
    movs r1, #1
    mov sl, r1
    mov r8, r5
    ldr r4, lbl_0805f22c @ =0x0300545c
    movs r3, #0xd
    rsbs r3, r3, #0
    mov sb, r3
    movs r6, #0
lbl_0805f202:
    adds r0, r7, #0
    asrs r0, r5
    mov r1, sl
    ands r0, r1
    cmp r0, #0
    beq lbl_0805f272
    ldr r0, lbl_0805f230 @ =0x030054e4
    ldrh r0, [r0, #6]
    asrs r0, r5
    ands r0, r1
    cmp r0, #0
    beq lbl_0805f234
    ldrb r0, [r4, #1]
    mov r3, sb
    ands r0, r3
    movs r1, #4
    orrs r0, r1
    strb r0, [r4, #1]
    movs r0, #6
    b lbl_0805f242
    .align 2, 0
lbl_0805f22c: .4byte 0x0300545c
lbl_0805f230: .4byte 0x030054e4
lbl_0805f234:
    ldrb r0, [r4, #1]
    mov r1, sb
    ands r0, r1
    movs r1, #8
    orrs r0, r1
    strb r0, [r4, #1]
    movs r0, #7
lbl_0805f242:
    strb r0, [r4, #3]
    ldr r0, lbl_0805f260 @ =0x0300545c
    add r0, r8
    ldr r1, lbl_0805f264 @ =0x03000056
    ldrb r0, [r0, #7]
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_0805f268
    lsrs r1, r6, #0x18
    movs r0, #1
    movs r2, #0
    bl sub_0805f0e4
    b lbl_0805f272
    .align 2, 0
lbl_0805f260: .4byte 0x0300545c
lbl_0805f264: .4byte 0x03000056
lbl_0805f268:
    lsrs r1, r6, #0x18
    movs r0, #1
    movs r2, #3
    bl sub_0805f0e4
lbl_0805f272:
    movs r3, #8
    add r8, r3
    adds r4, #8
    movs r0, #0x80
    lsls r0, r0, #0x11
    adds r6, r6, r0
    adds r5, #1
    cmp r5, #0xf
    ble lbl_0805f202
lbl_0805f284:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start load_doors
load_doors: @ 0x0805f294
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r0, lbl_0805f3b8 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805f2ae
    b lbl_0805f590
lbl_0805f2ae:
    ldr r1, lbl_0805f3bc @ =0x0300545c
    ldr r6, lbl_0805f3c0 @ =0x0875faa8
    ldr r5, lbl_0805f3c4 @ =0x03000054
    ldr r0, lbl_0805f3c8 @ =0x08345868
    ldr r3, [r0]
    ldr r4, [r0, #4]
    adds r2, r1, #0
    adds r2, #0x78
lbl_0805f2be:
    str r3, [r2]
    str r4, [r2, #4]
    subs r2, #8
    cmp r2, r1
    bge lbl_0805f2be
    movs r0, #0xff
    mov sl, r0
    movs r0, #0
    ldr r1, lbl_0805f3cc @ =0x030054dc
    strb r0, [r1]
    ldrb r0, [r5]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldr r6, [r0]
    movs r2, #0
    str r2, [sp]
    mov r8, r2
    ldrb r1, [r6]
    cmp r1, #0
    bne lbl_0805f2e8
    b lbl_0805f4ae
lbl_0805f2e8:
    ldr r4, lbl_0805f3d0 @ =0x030054e4
    mov sb, r4
lbl_0805f2ec:
    ldr r0, lbl_0805f3d4 @ =0x03000055
    ldrb r0, [r0]
    ldrb r2, [r6, #1]
    cmp r0, r2
    beq lbl_0805f2f8
    b lbl_0805f4a0
lbl_0805f2f8:
    movs r0, #0xf
    ands r0, r1
    subs r0, #3
    cmp r0, #1
    bls lbl_0805f304
    b lbl_0805f47e
lbl_0805f304:
    ldr r2, lbl_0805f3d8 @ =0x0300009c
    ldrh r1, [r2, #0x1c]
    ldrb r0, [r6, #4]
    muls r0, r1, r0
    ldrb r4, [r6, #2]
    adds r0, r0, r4
    ldr r1, [r2, #0x18]
    lsls r0, r0, #1
    adds r2, r0, r1
    ldrh r1, [r2, #2]
    ldr r3, lbl_0805f3dc @ =0x03005450
    ldr r0, [r3, #4]
    adds r0, r0, r1
    ldrb r0, [r0]
    movs r4, #1
    mov ip, r4
    cmp r0, #0xb
    beq lbl_0805f330
    movs r0, #0
    mov ip, r0
    subs r0, r2, #2
    ldrh r1, [r0]
lbl_0805f330:
    ldr r0, [r3, #8]
    lsls r1, r1, #1
    adds r1, r1, r0
    ldrh r1, [r1]
    adds r0, r1, #0
    subs r0, #0x80
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r7, #0
    cmp r0, #4
    bhi lbl_0805f34a
    adds r7, r1, #0
    subs r7, #0x7f
lbl_0805f34a:
    ldr r0, lbl_0805f3e0 @ =0x08360130
    adds r0, r7, r0
    ldrb r7, [r0]
    ldr r1, lbl_0805f3cc @ =0x030054dc
    ldrb r4, [r1]
    cmp r4, #0xf
    ble lbl_0805f35a
    b lbl_0805f462
lbl_0805f35a:
    lsls r0, r4, #3
    ldr r2, lbl_0805f3bc @ =0x0300545c
    adds r1, r0, r2
    ldrb r1, [r1]
    lsls r1, r1, #0x1f
    adds r5, r0, #0
    cmp r1, #0
    beq lbl_0805f384
    adds r0, r2, #0
    adds r1, r5, #0
    adds r2, r1, r0
lbl_0805f370:
    adds r1, #8
    adds r2, #8
    adds r4, #1
    cmp r4, #0xf
    bgt lbl_0805f462
    ldrb r0, [r2]
    lsls r0, r0, #0x1f
    adds r5, r1, #0
    cmp r0, #0
    bne lbl_0805f370
lbl_0805f384:
    cmp r4, #0xf
    bgt lbl_0805f462
    ldr r0, lbl_0805f3bc @ =0x0300545c
    adds r3, r5, r0
    strb r7, [r3, #3]
    cmp r7, #1
    ble lbl_0805f42a
    mov r1, ip
    movs r2, #1
    ands r1, r2
    lsls r1, r1, #4
    ldrb r2, [r3]
    movs r0, #0x11
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    ldrb r0, [r6, #4]
    strb r0, [r3, #6]
    ldrb r0, [r6, #2]
    strb r0, [r3, #5]
    mov r1, ip
    cmp r1, #0
    beq lbl_0805f3e4
    adds r0, #1
    b lbl_0805f3e6
    .align 2, 0
lbl_0805f3b8: .4byte 0x03000bf0
lbl_0805f3bc: .4byte 0x0300545c
lbl_0805f3c0: .4byte 0x0875faa8
lbl_0805f3c4: .4byte 0x03000054
lbl_0805f3c8: .4byte 0x08345868
lbl_0805f3cc: .4byte 0x030054dc
lbl_0805f3d0: .4byte 0x030054e4
lbl_0805f3d4: .4byte 0x03000055
lbl_0805f3d8: .4byte 0x0300009c
lbl_0805f3dc: .4byte 0x03005450
lbl_0805f3e0: .4byte 0x08360130
lbl_0805f3e4:
    subs r0, #1
lbl_0805f3e6:
    strb r0, [r3, #5]
    ldr r2, lbl_0805f410 @ =0x0300545c
    adds r0, r5, r2
    ldrb r1, [r0]
    movs r2, #1
    orrs r1, r2
    strb r1, [r0]
    mov r1, r8
    strb r1, [r0, #7]
    adds r0, r4, #1
    ldr r2, lbl_0805f414 @ =0x030054dc
    strb r0, [r2]
    cmp r7, #6
    bne lbl_0805f418
    movs r0, #1
    lsls r0, r4
    mov r2, sb
    ldrh r1, [r2, #2]
    orrs r0, r1
    strh r0, [r2, #2]
    b lbl_0805f45c
    .align 2, 0
lbl_0805f410: .4byte 0x0300545c
lbl_0805f414: .4byte 0x030054dc
lbl_0805f418:
    cmp r7, #7
    bne lbl_0805f45c
    movs r0, #1
    lsls r0, r4
    mov r2, sb
    ldrh r1, [r2, #4]
    orrs r0, r1
    strh r0, [r2, #4]
    b lbl_0805f45c
lbl_0805f42a:
    ldrb r0, [r6, #4]
    strb r0, [r3, #6]
    ldrb r2, [r6, #2]
    strb r2, [r3, #5]
    ldrb r0, [r3]
    movs r1, #1
    orrs r1, r0
    strb r1, [r3]
    mov r0, r8
    strb r0, [r3, #7]
    movs r0, #7
    ldrsb r0, [r6, r0]
    cmp r0, #0
    ble lbl_0805f450
    adds r0, r2, #1
    strb r0, [r3, #5]
    movs r0, #0x10
    orrs r1, r0
    b lbl_0805f45a
lbl_0805f450:
    subs r0, r2, #1
    strb r0, [r3, #5]
    movs r2, #0x11
    rsbs r2, r2, #0
    ands r1, r2
lbl_0805f45a:
    strb r1, [r3]
lbl_0805f45c:
    ldr r0, [sp]
    adds r0, #1
    str r0, [sp]
lbl_0805f462:
    mov r1, sl
    cmp r1, #0xff
    bne lbl_0805f49a
    ldr r0, lbl_0805f474 @ =0x03000056
    ldrb r0, [r0]
    cmp r8, r0
    bne lbl_0805f49a
    mov sl, r4
    b lbl_0805f49a
    .align 2, 0
lbl_0805f474: .4byte 0x03000056
lbl_0805f478:
    mov r2, r8
    strb r2, [r1, #7]
    b lbl_0805f49a
lbl_0805f47e:
    movs r4, #0xf
    ldr r1, lbl_0805f52c @ =0x0300545c
    ldr r0, lbl_0805f530 @ =0x08345868
    ldrb r2, [r0, #7]
    adds r1, #0x78
    movs r3, #1
    rsbs r3, r3, #0
lbl_0805f48c:
    ldrb r0, [r1, #7]
    cmp r0, r2
    beq lbl_0805f478
    subs r1, #8
    subs r4, #1
    cmp r4, r3
    bgt lbl_0805f48c
lbl_0805f49a:
    ldr r4, [sp]
    cmp r4, #0xf
    bgt lbl_0805f4ae
lbl_0805f4a0:
    adds r6, #0xc
    movs r0, #1
    add r8, r0
    ldrb r1, [r6]
    cmp r1, #0
    beq lbl_0805f4ae
    b lbl_0805f2ec
lbl_0805f4ae:
    movs r4, #0
lbl_0805f4b0:
    ldr r1, lbl_0805f52c @ =0x0300545c
    lsls r0, r4, #3
    adds r1, r0, r1
    ldrb r0, [r1]
    lsls r0, r0, #0x1f
    cmp r0, #0
    beq lbl_0805f4da
    ldrb r0, [r1, #3]
    cmp r0, #1
    bls lbl_0805f4da
    ldrb r1, [r1, #7]
    movs r0, #0
    bl set_hatch_as_opened
    cmp r0, #0
    bne lbl_0805f4da
    lsls r0, r4, #0x18
    lsrs r0, r0, #0x18
    movs r1, #2
    bl sub_0805eb18
lbl_0805f4da:
    adds r4, #1
    cmp r4, #0xf
    ble lbl_0805f4b0
    mov r1, sl
    cmp r1, #0xff
    beq lbl_0805f590
    ldr r0, lbl_0805f534 @ =0x03000c75
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805f590
    ldr r0, lbl_0805f52c @ =0x0300545c
    lsls r1, r1, #3
    adds r2, r1, r0
    ldrb r0, [r2]
    lsls r0, r0, #0x1f
    adds r4, r1, #0
    cmp r0, #0
    beq lbl_0805f516
    ldrb r0, [r2, #3]
    cmp r0, #0
    beq lbl_0805f516
    mov r2, sl
    lsls r1, r2, #0x18
    lsrs r1, r1, #0x18
    movs r0, #0
    movs r2, #3
    bl sub_0805f0e4
lbl_0805f516:
    ldr r1, lbl_0805f52c @ =0x0300545c
    adds r0, r4, r1
    ldrb r2, [r0, #5]
    mov r8, r2
    ldrb r0, [r0]
    lsls r0, r0, #0x1b
    cmp r0, #0
    bge lbl_0805f538
    movs r0, #1
    add r8, r0
    b lbl_0805f53e
    .align 2, 0
lbl_0805f52c: .4byte 0x0300545c
lbl_0805f530: .4byte 0x08345868
lbl_0805f534: .4byte 0x03000c75
lbl_0805f538:
    movs r2, #1
    rsbs r2, r2, #0
    add r8, r2
lbl_0805f53e:
    adds r0, r4, r1
    ldrb r4, [r0, #6]
    ldr r2, lbl_0805f5a0 @ =0x03005450
    ldr r1, lbl_0805f5a4 @ =0x0300009c
    ldrh r0, [r1, #0x1c]
    muls r0, r4, r0
    add r0, r8
    ldr r1, [r1, #0x18]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    ldr r1, [r2, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    adds r0, r1, #0
    bl check_clipdata_behavior_change_bldalpha
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0
    beq lbl_0805f590
    movs r0, #0xff
    ands r0, r1
    lsrs r1, r1, #8
    movs r2, #1
    movs r3, #1
    bl TransparencyUpdateBLDALPHA
    ldr r2, lbl_0805f5a8 @ =0x03000088
    ldr r1, lbl_0805f5ac @ =0x030056cc
    ldrb r0, [r1, #3]
    strb r0, [r2, #5]
    ldrb r0, [r1, #4]
    strb r0, [r2, #4]
    ldr r3, lbl_0805f5b0 @ =0x04000052
    ldrb r1, [r2, #5]
    lsls r1, r1, #8
    ldrb r0, [r2, #4]
    orrs r0, r1
    strh r0, [r3]
lbl_0805f590:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805f5a0: .4byte 0x03005450
lbl_0805f5a4: .4byte 0x0300009c
lbl_0805f5a8: .4byte 0x03000088
lbl_0805f5ac: .4byte 0x030056cc
lbl_0805f5b0: .4byte 0x04000052

    thumb_func_start lock_hatches_with_timer
lock_hatches_with_timer: @ 0x0805f5b4
    push {lr}
    ldr r1, lbl_0805f5cc @ =0x030054e4
    ldr r0, lbl_0805f5d0 @ =0x0000ffff
    strh r0, [r1, #2]
    movs r0, #0
    bl lock_hatches
    ldr r1, lbl_0805f5d4 @ =0x0300007b
    movs r0, #2
    strb r0, [r1]
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805f5cc: .4byte 0x030054e4
lbl_0805f5d0: .4byte 0x0000ffff
lbl_0805f5d4: .4byte 0x0300007b

    thumb_func_start check_hatch_lock_events
check_hatch_lock_events: @ 0x0805f5d8
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_0805f6fc @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0805f5e8
    b lbl_0805f73a
lbl_0805f5e8:
    ldr r3, lbl_0805f700 @ =0x030054e4
    strh r0, [r3, #4]
    strh r0, [r3, #6]
    ldr r1, lbl_0805f704 @ =0x03000054
    ldrb r0, [r1]
    cmp r0, #6
    bls lbl_0805f5f8
    b lbl_0805f73a
lbl_0805f5f8:
    ldr r2, lbl_0805f708 @ =0x083602d8
    adds r1, r0, #0
    lsls r0, r1, #1
    adds r0, r0, r2
    ldrh r2, [r0]
    ldr r0, lbl_0805f70c @ =0x0875fde0
    lsls r1, r1, #2
    adds r1, r1, r0
    ldr r5, [r1]
    cmp r2, #0
    bne lbl_0805f610
    b lbl_0805f72c
lbl_0805f610:
    adds r6, r3, #0
    adds r7, r2, #0
lbl_0805f614:
    movs r4, #0
    ldr r1, lbl_0805f710 @ =0x03000055
    ldrb r0, [r5]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_0805f6ea
    ldrb r1, [r5, #1]
    movs r0, #3
    bl EventFunction
    adds r1, r0, #0
    ldrb r0, [r5, #2]
    cmp r0, #1
    beq lbl_0805f636
    cmp r0, #3
    bne lbl_0805f638
    movs r0, #1
lbl_0805f636:
    eors r1, r0
lbl_0805f638:
    cmp r1, #0
    beq lbl_0805f6ea
    ldrb r1, [r5, #3]
    lsls r0, r1, #0x1f
    lsrs r0, r0, #0x1f
    orrs r4, r0
    movs r0, #2
    ands r0, r1
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    movs r0, #4
    ands r0, r1
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    movs r0, #8
    ands r0, r1
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    movs r0, #0x10
    ands r0, r1
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    movs r0, #0x20
    ands r0, r1
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    movs r0, #0x40
    ands r0, r1
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    lsrs r1, r1, #7
    lsls r1, r1, #7
    orrs r4, r1
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    ldrb r1, [r5, #4]
    lsls r0, r1, #0x1f
    lsrs r0, r0, #0x1f
    lsls r0, r0, #8
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    lsls r0, r1, #0x1e
    lsrs r0, r0, #0x1f
    lsls r0, r0, #9
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    lsls r0, r1, #0x1d
    lsrs r0, r0, #0x1f
    lsls r0, r0, #0xa
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    lsls r0, r1, #0x1c
    lsrs r0, r0, #0x1f
    lsls r0, r0, #0xb
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    lsls r0, r1, #0x1b
    lsrs r0, r0, #0x1f
    lsls r0, r0, #0xc
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    lsls r0, r1, #0x1a
    lsrs r0, r0, #0x1f
    lsls r0, r0, #0xd
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    lsls r0, r1, #0x19
    lsrs r0, r0, #0x1f
    lsls r0, r0, #0xe
    orrs r4, r0
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
    lsrs r1, r1, #7
    lsls r1, r1, #0xf
    orrs r4, r1
    lsls r0, r4, #0x10
    lsrs r4, r0, #0x10
lbl_0805f6ea:
    ldrb r0, [r5, #2]
    cmp r0, #0
    beq lbl_0805f6f4
    cmp r0, #1
    bne lbl_0805f714
lbl_0805f6f4:
    ldrh r0, [r6, #4]
    orrs r4, r0
    strh r4, [r6, #4]
    b lbl_0805f722
    .align 2, 0
lbl_0805f6fc: .4byte 0x03000bf0
lbl_0805f700: .4byte 0x030054e4
lbl_0805f704: .4byte 0x03000054
lbl_0805f708: .4byte 0x083602d8
lbl_0805f70c: .4byte 0x0875fde0
lbl_0805f710: .4byte 0x03000055
lbl_0805f714:
    cmp r0, #2
    beq lbl_0805f71c
    cmp r0, #3
    bne lbl_0805f722
lbl_0805f71c:
    ldrh r0, [r6, #6]
    orrs r4, r0
    strh r4, [r6, #6]
lbl_0805f722:
    subs r7, #1
    adds r5, #8
    cmp r7, #0
    beq lbl_0805f72c
    b lbl_0805f614
lbl_0805f72c:
    ldr r0, lbl_0805f740 @ =0x030054e4
    ldr r0, [r0, #4]
    cmp r0, #0
    beq lbl_0805f73a
    movs r0, #1
    bl lock_hatches
lbl_0805f73a:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805f740: .4byte 0x030054e4

    thumb_func_start check_play_cutscene_during_transition
check_play_cutscene_during_transition: @ 0x0805f744
    push {lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r2, r1, #0x18
    cmp r0, #6
    bhi lbl_0805f7ea
    lsls r0, r0, #2
    ldr r1, lbl_0805f75c @ =lbl_0805f760
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805f75c: .4byte lbl_0805f760
lbl_0805f760: @ jump table
    .4byte lbl_0805f7ea @ case 0
    .4byte lbl_0805f77c @ case 1
    .4byte lbl_0805f7ea @ case 2
    .4byte lbl_0805f7ea @ case 3
    .4byte lbl_0805f7ea @ case 4
    .4byte lbl_0805f7ea @ case 5
    .4byte lbl_0805f7a4 @ case 6
lbl_0805f77c:
    cmp r2, #0x1f
    bne lbl_0805f7ea
    movs r0, #3
    movs r1, #0x1e
    bl EventFunction
    cmp r0, #0
    bne lbl_0805f7ea
    movs r0, #0xa
    bl FadeMusic
    movs r0, #0xa
    bl sub_08002acc
    ldr r1, lbl_0805f7a0 @ =0x0300007d
    movs r0, #5
    b lbl_0805f7e8
    .align 2, 0
lbl_0805f7a0: .4byte 0x0300007d
lbl_0805f7a4:
    cmp r2, #0x2b
    bne lbl_0805f7c0
    movs r0, #3
    movs r1, #0x43
    bl EventFunction
    cmp r0, #0
    bne lbl_0805f7ea
    ldr r1, lbl_0805f7bc @ =0x0300007d
    movs r0, #0xb
    b lbl_0805f7e8
    .align 2, 0
lbl_0805f7bc: .4byte 0x0300007d
lbl_0805f7c0:
    cmp r2, #0xb
    bne lbl_0805f7ea
    movs r0, #3
    movs r1, #6
    bl EventFunction
    cmp r0, #0
    bne lbl_0805f7ea
    ldr r0, lbl_0805f7f0 @ =0x03005518
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0805f7e4
    ldr r0, lbl_0805f7f4 @ =0x00000121
    movs r1, #0xa
    bl SoundFade
lbl_0805f7e4:
    ldr r1, lbl_0805f7f8 @ =0x0300007d
    movs r0, #0xd
lbl_0805f7e8:
    strb r0, [r1]
lbl_0805f7ea:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805f7f0: .4byte 0x03005518
lbl_0805f7f4: .4byte 0x00000121
lbl_0805f7f8: .4byte 0x0300007d

    thumb_func_start check_play_cutscene_during_elevator
check_play_cutscene_during_elevator: @ 0x0805f7fc
    push {lr}
    ldr r0, lbl_0805f814 @ =0x03000198
    ldrb r1, [r0, #2]
    adds r2, r0, #0
    cmp r1, #5
    bhi lbl_0805f8ec
    lsls r0, r1, #2
    ldr r1, lbl_0805f818 @ =lbl_0805f81c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805f814: .4byte 0x03000198
lbl_0805f818: .4byte lbl_0805f81c
lbl_0805f81c: @ jump table
    .4byte lbl_0805f8ec @ case 0
    .4byte lbl_0805f8ec @ case 1
    .4byte lbl_0805f834 @ case 2
    .4byte lbl_0805f854 @ case 3
    .4byte lbl_0805f884 @ case 4
    .4byte lbl_0805f8bc @ case 5
lbl_0805f834:
    movs r0, #3
    ldrsb r0, [r2, r0]
    cmp r0, #1
    bne lbl_0805f8ec
    movs r0, #3
    movs r1, #3
    bl EventFunction
    cmp r0, #0
    bne lbl_0805f8ec
    ldr r0, lbl_0805f850 @ =0x0300007d
    movs r1, #4
    b lbl_0805f89c
    .align 2, 0
lbl_0805f850: .4byte 0x0300007d
lbl_0805f854:
    movs r1, #3
    ldrsb r1, [r2, r1]
    movs r0, #1
    rsbs r0, r0, #0
    cmp r1, r0
    bne lbl_0805f8ec
    movs r0, #3
    movs r1, #0x1e
    bl EventFunction
    cmp r0, #0
    beq lbl_0805f8ec
    movs r0, #3
    movs r1, #4
    bl EventFunction
    cmp r0, #0
    bne lbl_0805f8ec
    ldr r0, lbl_0805f880 @ =0x0300007d
    movs r1, #7
    b lbl_0805f89c
    .align 2, 0
lbl_0805f880: .4byte 0x0300007d
lbl_0805f884:
    movs r0, #3
    ldrsb r0, [r2, r0]
    cmp r0, #1
    bne lbl_0805f8ec
    movs r0, #3
    movs r1, #5
    bl EventFunction
    cmp r0, #0
    bne lbl_0805f8ec
    ldr r0, lbl_0805f8b8 @ =0x0300007d
    movs r1, #8
lbl_0805f89c:
    strb r1, [r0]
    movs r0, #2
    bl start_special_background_fading
    movs r0, #0x87
    lsls r0, r0, #1
    movs r1, #0xa
    bl SoundFade
    movs r0, #0xa
    bl FadeMusic
    b lbl_0805f8ec
    .align 2, 0
lbl_0805f8b8: .4byte 0x0300007d
lbl_0805f8bc:
    movs r0, #3
    ldrsb r0, [r2, r0]
    cmp r0, #1
    bne lbl_0805f8ec
    movs r0, #3
    movs r1, #7
    bl EventFunction
    cmp r0, #0
    bne lbl_0805f8ec
    ldr r0, lbl_0805f8f0 @ =0x0300007d
    movs r1, #0xa
    strb r1, [r0]
    movs r0, #2
    bl start_special_background_fading
    movs r0, #0x87
    lsls r0, r0, #1
    movs r1, #0xa
    bl SoundFade
    movs r0, #0xa
    bl FadeMusic
lbl_0805f8ec:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805f8f0: .4byte 0x0300007d

    thumb_func_start samus_close_up
samus_close_up: @ 0x0805f8f4
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #4
    movs r5, #0
    ldr r0, lbl_0805f918 @ =0x0300019c
    ldrb r1, [r0, #2]
    adds r2, r0, #0
    cmp r1, #0xe
    bls lbl_0805f90c
    b lbl_0805fd3e
lbl_0805f90c:
    lsls r0, r1, #2
    ldr r1, lbl_0805f91c @ =lbl_0805f920
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805f918: .4byte 0x0300019c
lbl_0805f91c: .4byte lbl_0805f920
lbl_0805f920: @ jump table
    .4byte lbl_0805f95c @ case 0
    .4byte lbl_0805f970 @ case 1
    .4byte lbl_0805f97a @ case 2
    .4byte lbl_0805f998 @ case 3
    .4byte lbl_0805f9a4 @ case 4
    .4byte lbl_0805f98c @ case 5
    .4byte lbl_0805faa8 @ case 6
    .4byte lbl_0805f98c @ case 7
    .4byte lbl_0805fbac @ case 8
    .4byte lbl_0805f998 @ case 9
    .4byte lbl_0805fcc4 @ case 10
    .4byte lbl_0805fcd4 @ case 11
    .4byte lbl_0805fcec @ case 12
    .4byte lbl_0805fd14 @ case 13
    .4byte lbl_0805fd24 @ case 14
lbl_0805f95c:
    ldrh r0, [r2]
    cmp r0, #0
    bne lbl_0805f964
    b lbl_0805fd3e
lbl_0805f964:
    movs r5, #1
    movs r0, #1
    movs r1, #4
    bl sub_0806087c
    b lbl_0805fd3e
lbl_0805f970:
    movs r0, #0x10
    movs r1, #0
    movs r2, #7
    movs r3, #1
    b lbl_0805fccc
lbl_0805f97a:
    ldr r0, lbl_0805f988 @ =0x03000088
    ldrh r0, [r0, #4]
    cmp r0, #0x10
    beq lbl_0805f984
    b lbl_0805fd3e
lbl_0805f984:
    movs r5, #1
    b lbl_0805fd3e
    .align 2, 0
lbl_0805f988: .4byte 0x03000088
lbl_0805f98c:
    ldrh r0, [r2]
    cmp r0, #2
    bhi lbl_0805f994
    b lbl_0805fd3e
lbl_0805f994:
    movs r5, #1
    b lbl_0805fd3e
lbl_0805f998:
    ldrh r0, [r2]
    cmp r0, #0x66
    bhi lbl_0805f9a0
    b lbl_0805fd3e
lbl_0805f9a0:
    movs r5, #1
    b lbl_0805fd3e
lbl_0805f9a4:
    ldr r5, lbl_0805fa60 @ =0x08369e20
    ldr r2, lbl_0805fa64 @ =0x0600b940
    movs r6, #0xa0
    lsls r6, r6, #1
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fa68 @ =0x0202b000
    ldr r2, lbl_0805fa6c @ =0x06000294
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #3
    adds r1, r5, r0
    ldr r2, lbl_0805fa70 @ =0x0600bd40
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fa74 @ =0x0202b040
    ldr r2, lbl_0805fa78 @ =0x060002d4
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #4
    adds r1, r5, r0
    ldr r2, lbl_0805fa7c @ =0x0600c140
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fa80 @ =0x0202b080
    ldr r2, lbl_0805fa84 @ =0x06000314
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0xc0
    lsls r0, r0, #4
    adds r1, r5, r0
    ldr r2, lbl_0805fa88 @ =0x0600c540
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fa8c @ =0x0202b0c0
    ldr r2, lbl_0805fa90 @ =0x06000354
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #5
    adds r1, r5, r0
    ldr r2, lbl_0805fa94 @ =0x0600c940
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fa98 @ =0x0202b100
    ldr r2, lbl_0805fa9c @ =0x06000394
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0xa0
    lsls r0, r0, #5
    adds r5, r5, r0
    ldr r2, lbl_0805faa0 @ =0x0600cd40
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805faa4 @ =0x0202b140
    b lbl_0805fc66
    .align 2, 0
lbl_0805fa60: .4byte 0x08369e20
lbl_0805fa64: .4byte 0x0600b940
lbl_0805fa68: .4byte 0x0202b000
lbl_0805fa6c: .4byte 0x06000294
lbl_0805fa70: .4byte 0x0600bd40
lbl_0805fa74: .4byte 0x0202b040
lbl_0805fa78: .4byte 0x060002d4
lbl_0805fa7c: .4byte 0x0600c140
lbl_0805fa80: .4byte 0x0202b080
lbl_0805fa84: .4byte 0x06000314
lbl_0805fa88: .4byte 0x0600c540
lbl_0805fa8c: .4byte 0x0202b0c0
lbl_0805fa90: .4byte 0x06000354
lbl_0805fa94: .4byte 0x0600c940
lbl_0805fa98: .4byte 0x0202b100
lbl_0805fa9c: .4byte 0x06000394
lbl_0805faa0: .4byte 0x0600cd40
lbl_0805faa4: .4byte 0x0202b140
lbl_0805faa8:
    ldr r5, lbl_0805fb6c @ =0x08369f60
    ldr r2, lbl_0805fb70 @ =0x0600b940
    movs r6, #0xa0
    lsls r6, r6, #1
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r0, lbl_0805fb74 @ =0x0202b014
    mov r8, r0
    ldr r0, lbl_0805fb78 @ =0x06000294
    mov sb, r0
    str r4, [sp]
    movs r0, #3
    mov r1, r8
    mov r2, sb
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #3
    adds r1, r5, r0
    ldr r2, lbl_0805fb7c @ =0x0600bd40
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    str r4, [sp]
    movs r0, #3
    mov r1, r8
    mov r2, sb
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #4
    adds r1, r5, r0
    ldr r2, lbl_0805fb80 @ =0x0600c140
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fb84 @ =0x0202b094
    ldr r2, lbl_0805fb88 @ =0x06000314
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0xc0
    lsls r0, r0, #4
    adds r1, r5, r0
    ldr r2, lbl_0805fb8c @ =0x0600c540
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fb90 @ =0x0202b0d4
    ldr r2, lbl_0805fb94 @ =0x06000354
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #5
    adds r1, r5, r0
    ldr r2, lbl_0805fb98 @ =0x0600c940
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fb9c @ =0x0202b114
    ldr r2, lbl_0805fba0 @ =0x06000394
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0xa0
    lsls r0, r0, #5
    adds r5, r5, r0
    ldr r2, lbl_0805fba4 @ =0x0600cd40
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fba8 @ =0x0202b154
    b lbl_0805fc66
    .align 2, 0
lbl_0805fb6c: .4byte 0x08369f60
lbl_0805fb70: .4byte 0x0600b940
lbl_0805fb74: .4byte 0x0202b014
lbl_0805fb78: .4byte 0x06000294
lbl_0805fb7c: .4byte 0x0600bd40
lbl_0805fb80: .4byte 0x0600c140
lbl_0805fb84: .4byte 0x0202b094
lbl_0805fb88: .4byte 0x06000314
lbl_0805fb8c: .4byte 0x0600c540
lbl_0805fb90: .4byte 0x0202b0d4
lbl_0805fb94: .4byte 0x06000354
lbl_0805fb98: .4byte 0x0600c940
lbl_0805fb9c: .4byte 0x0202b114
lbl_0805fba0: .4byte 0x06000394
lbl_0805fba4: .4byte 0x0600cd40
lbl_0805fba8: .4byte 0x0202b154
lbl_0805fbac:
    ldr r5, lbl_0805fc78 @ =0x0836a0a0
    ldr r2, lbl_0805fc7c @ =0x0600b940
    movs r6, #0xa0
    lsls r6, r6, #1
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fc80 @ =0x0202b028
    ldr r2, lbl_0805fc84 @ =0x06000294
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #3
    adds r1, r5, r0
    ldr r2, lbl_0805fc88 @ =0x0600bd40
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fc8c @ =0x0202b068
    ldr r2, lbl_0805fc90 @ =0x060002d4
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #4
    adds r1, r5, r0
    ldr r2, lbl_0805fc94 @ =0x0600c140
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fc98 @ =0x0202b0a8
    ldr r2, lbl_0805fc9c @ =0x06000314
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0xc0
    lsls r0, r0, #4
    adds r1, r5, r0
    ldr r2, lbl_0805fca0 @ =0x0600c540
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fca4 @ =0x0202b0e8
    ldr r2, lbl_0805fca8 @ =0x06000354
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #5
    adds r1, r5, r0
    ldr r2, lbl_0805fcac @ =0x0600c940
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fcb0 @ =0x0202b128
    ldr r2, lbl_0805fcb4 @ =0x06000394
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r0, #0xa0
    lsls r0, r0, #5
    adds r5, r5, r0
    ldr r2, lbl_0805fcb8 @ =0x0600cd40
    str r4, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0805fcbc @ =0x0202b168
lbl_0805fc66:
    ldr r2, lbl_0805fcc0 @ =0x060003d4
    str r4, [sp]
    movs r0, #3
    movs r3, #0x14
    bl DMATransfer
    movs r5, #1
    b lbl_0805fd3e
    .align 2, 0
lbl_0805fc78: .4byte 0x0836a0a0
lbl_0805fc7c: .4byte 0x0600b940
lbl_0805fc80: .4byte 0x0202b028
lbl_0805fc84: .4byte 0x06000294
lbl_0805fc88: .4byte 0x0600bd40
lbl_0805fc8c: .4byte 0x0202b068
lbl_0805fc90: .4byte 0x060002d4
lbl_0805fc94: .4byte 0x0600c140
lbl_0805fc98: .4byte 0x0202b0a8
lbl_0805fc9c: .4byte 0x06000314
lbl_0805fca0: .4byte 0x0600c540
lbl_0805fca4: .4byte 0x0202b0e8
lbl_0805fca8: .4byte 0x06000354
lbl_0805fcac: .4byte 0x0600c940
lbl_0805fcb0: .4byte 0x0202b128
lbl_0805fcb4: .4byte 0x06000394
lbl_0805fcb8: .4byte 0x0600cd40
lbl_0805fcbc: .4byte 0x0202b168
lbl_0805fcc0: .4byte 0x060003d4
lbl_0805fcc4:
    movs r0, #0
    movs r1, #0x10
    movs r2, #0
    movs r3, #0x10
lbl_0805fccc:
    bl TransparencyUpdateBLDALPHA
    movs r5, #1
    b lbl_0805fd3e
lbl_0805fcd4:
    ldr r0, lbl_0805fce4 @ =0x03000088
    ldrh r1, [r0, #4]
    movs r0, #0x80
    lsls r0, r0, #5
    cmp r1, r0
    bne lbl_0805fd3e
    ldr r1, lbl_0805fce8 @ =0x0300004a
    b lbl_0805fd00
    .align 2, 0
lbl_0805fce4: .4byte 0x03000088
lbl_0805fce8: .4byte 0x0300004a
lbl_0805fcec:
    ldr r1, lbl_0805fd08 @ =0x0201e000
    ldr r2, lbl_0805fd0c @ =0x06009000
    movs r3, #0x80
    lsls r3, r3, #6
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_0805fd10 @ =0x03000c21
lbl_0805fd00:
    movs r0, #0
    strb r0, [r1]
    movs r5, #1
    b lbl_0805fd3e
    .align 2, 0
lbl_0805fd08: .4byte 0x0201e000
lbl_0805fd0c: .4byte 0x06009000
lbl_0805fd10: .4byte 0x03000c21
lbl_0805fd14:
    bl sub_080735b0
    cmp r0, #0
    beq lbl_0805fd3e
    bl sub_08074cf8
    movs r5, #1
    b lbl_0805fd3e
lbl_0805fd24:
    ldr r6, lbl_0805fd50 @ =0x03001606
    ldrh r4, [r6]
    cmp r4, #0
    bne lbl_0805fd3e
    movs r0, #1
    movs r1, #4
    bl sub_0806087c
    movs r1, #0
    strh r4, [r6]
    ldr r0, lbl_0805fd54 @ =0x03000049
    strb r1, [r0]
    movs r5, #5
lbl_0805fd3e:
    adds r0, r5, #0
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0805fd50: .4byte 0x03001606
lbl_0805fd54: .4byte 0x03000049

    thumb_func_start sub_0805fd58
sub_0805fd58: @ 0x0805fd58
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    ldr r0, lbl_0805fdc0 @ =0x0202aa94
    mov sb, r0
    ldr r1, lbl_0805fdc4 @ =0x0202b000
    mov r8, r1
    movs r0, #0
    ldr r1, lbl_0805fdc8 @ =0x00000fff
    mov ip, r1
    movs r6, #0xf0
    lsls r6, r6, #8
lbl_0805fd72:
    movs r5, #0
    adds r7, r0, #1
    lsls r0, r0, #6
    mov r1, r8
    adds r3, r0, r1
    mov r1, sb
    adds r4, r0, r1
lbl_0805fd80:
    ldrh r0, [r4]
    mov r1, ip
    ands r1, r0
    ldrh r2, [r3]
    adds r0, r6, #0
    ands r0, r2
    orrs r0, r1
    strh r0, [r3]
    ldrh r2, [r3, #0x14]
    adds r0, r6, #0
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x14]
    ldrh r2, [r3, #0x28]
    adds r0, r6, #0
    ands r0, r2
    orrs r1, r0
    strh r1, [r3, #0x28]
    adds r3, #2
    adds r4, #2
    adds r5, #1
    cmp r5, #9
    ble lbl_0805fd80
    adds r0, r7, #0
    cmp r0, #5
    ble lbl_0805fd72
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0805fdc0: .4byte 0x0202aa94
lbl_0805fdc4: .4byte 0x0202b000
lbl_0805fdc8: .4byte 0x00000fff

    thumb_func_start sub_0805fdcc
sub_0805fdcc: @ 0x0805fdcc
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    movs r0, #0
    mov sl, r0
    movs r6, #0
    ldr r2, lbl_0805fdf0 @ =0x030013d4
    ldrh r1, [r2, #0x12]
    ldr r0, lbl_0805fdf4 @ =0x030013b8
    ldrh r0, [r0]
    subs r1, r1, r0
    cmp r1, #0
    bge lbl_0805fdf8
    mov r8, r6
    b lbl_0805fe08
    .align 2, 0
lbl_0805fdf0: .4byte 0x030013d4
lbl_0805fdf4: .4byte 0x030013b8
lbl_0805fdf8:
    movs r0, #0xee
    lsls r0, r0, #2
    asrs r3, r1, #2
    mov r8, r3
    cmp r1, r0
    ble lbl_0805fe08
    movs r0, #0xee
    mov r8, r0
lbl_0805fe08:
    movs r1, #2
    add r1, r8
    mov sb, r1
    ldrh r0, [r2, #0x14]
    adds r5, r0, #0
    subs r5, #0x60
    ldr r0, lbl_0805fe24 @ =0x030013ba
    ldrh r0, [r0]
    subs r1, r5, r0
    cmp r1, #0
    bge lbl_0805fe28
    movs r7, #0
    b lbl_0805fe34
    .align 2, 0
lbl_0805fe24: .4byte 0x030013ba
lbl_0805fe28:
    movs r0, #0x9e
    lsls r0, r0, #2
    asrs r7, r1, #2
    cmp r1, r0
    ble lbl_0805fe34
    movs r7, #0x9e
lbl_0805fe34:
    adds r5, r7, #2
    ldr r0, lbl_0805fe60 @ =0x03000108
    ldrb r3, [r0, #4]
    adds r1, r3, #0
    mov ip, r0
    cmp r1, #0xff
    beq lbl_0805fe48
    adds r0, r3, #1
    mov r3, ip
    strb r0, [r3, #4]
lbl_0805fe48:
    ldr r0, lbl_0805fe64 @ =0x0300019c
    ldrb r3, [r0, #2]
    adds r4, r0, #0
    cmp r3, #0x13
    bls lbl_0805fe54
    b lbl_08060314
lbl_0805fe54:
    lsls r0, r3, #2
    ldr r1, lbl_0805fe68 @ =lbl_0805fe6c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0805fe60: .4byte 0x03000108
lbl_0805fe64: .4byte 0x0300019c
lbl_0805fe68: .4byte lbl_0805fe6c
lbl_0805fe6c: @ jump table
    .4byte lbl_0805febc @ case 0
    .4byte lbl_0805fee4 @ case 1
    .4byte lbl_0805ff0c @ case 2
    .4byte lbl_0805ff58 @ case 3
    .4byte lbl_0805ff94 @ case 4
    .4byte lbl_08060318 @ case 5
    .4byte lbl_08060318 @ case 6
    .4byte lbl_0805ffc0 @ case 7
    .4byte lbl_0806004c @ case 8
    .4byte lbl_0806008a @ case 9
    .4byte lbl_080600fc @ case 10
    .4byte lbl_080600c8 @ case 11
    .4byte lbl_080600fc @ case 12
    .4byte lbl_08060106 @ case 13
    .4byte lbl_08060168 @ case 14
    .4byte lbl_080601d0 @ case 15
    .4byte lbl_08060238 @ case 16
    .4byte lbl_08060268 @ case 17
    .4byte lbl_0806027c @ case 18
    .4byte lbl_080602f0 @ case 19
lbl_0805febc:
    ldr r0, lbl_0805fedc @ =0x03000bf2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0xe
    bne lbl_0805feca
    b lbl_08060318
lbl_0805feca:
    cmp r0, #0xf
    beq lbl_0805fed0
    b lbl_08060314
lbl_0805fed0:
    ldr r0, lbl_0805fee0 @ =0x0300070c
    ldrb r0, [r0, #0xf]
    cmp r0, #7
    beq lbl_0805feda
    b lbl_08060314
lbl_0805feda:
    b lbl_08060318
    .align 2, 0
lbl_0805fedc: .4byte 0x03000bf2
lbl_0805fee0: .4byte 0x0300070c
lbl_0805fee4:
    ldr r1, lbl_0805fefc @ =0x030056c4
    movs r0, #1
    strb r0, [r1]
    ldr r1, lbl_0805ff00 @ =0x030013b2
    ldr r2, lbl_0805ff04 @ =0x03000088
    ldrb r0, [r2, #5]
    strh r0, [r1]
    ldr r1, lbl_0805ff08 @ =0x030013b0
    ldrb r0, [r2, #4]
    strh r0, [r1]
    b lbl_08060318
    .align 2, 0
lbl_0805fefc: .4byte 0x030056c4
lbl_0805ff00: .4byte 0x030013b2
lbl_0805ff04: .4byte 0x03000088
lbl_0805ff08: .4byte 0x030013b0
lbl_0805ff0c:
    ldrh r1, [r4]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0805ff18
    b lbl_08060314
lbl_0805ff18:
    ldr r0, lbl_0805ff34 @ =0x030013b2
    ldrh r2, [r0]
    adds r5, r0, #0
    cmp r2, #0x10
    beq lbl_0805ff38
    adds r0, r2, #1
    strh r0, [r5]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x10
    bls lbl_0805ff3a
    movs r0, #0x10
    strh r0, [r5]
    b lbl_0805ff3a
    .align 2, 0
lbl_0805ff34: .4byte 0x030013b2
lbl_0805ff38:
    adds r6, #1
lbl_0805ff3a:
    ldr r0, lbl_0805ff54 @ =0x030013b0
    ldrh r1, [r0]
    adds r4, r0, #0
    cmp r1, #0
    bne lbl_0805ff46
    b lbl_080602d8
lbl_0805ff46:
    ldrh r0, [r4]
    subs r0, #1
    cmp r0, #0
    blt lbl_0805ff50
    b lbl_080602c8
lbl_0805ff50:
    movs r0, #0
    b lbl_080602c8
    .align 2, 0
lbl_0805ff54: .4byte 0x030013b0
lbl_0805ff58:
    ldr r2, lbl_0805ff78 @ =0x0300000a
    ldr r0, lbl_0805ff7c @ =0x03000088
    ldrh r1, [r0]
    ldr r0, lbl_0805ff80 @ =0x0000feff
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_0805ff84 @ =0x040000d4
    ldr r0, lbl_0805ff88 @ =0x06000800
    str r0, [r1]
    ldr r0, lbl_0805ff8c @ =0x0201e000
    str r0, [r1, #4]
    ldr r0, lbl_0805ff90 @ =0x80000400
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    b lbl_08060318
    .align 2, 0
lbl_0805ff78: .4byte 0x0300000a
lbl_0805ff7c: .4byte 0x03000088
lbl_0805ff80: .4byte 0x0000feff
lbl_0805ff84: .4byte 0x040000d4
lbl_0805ff88: .4byte 0x06000800
lbl_0805ff8c: .4byte 0x0201e000
lbl_0805ff90: .4byte 0x80000400
lbl_0805ff94:
    ldr r1, lbl_0805ffb4 @ =0x000090c0
    ldr r2, lbl_0805ffb8 @ =0x06000800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl BitFill
    ldr r1, lbl_0805ffbc @ =0x04000008
    movs r2, #0x82
    lsls r2, r2, #1
    adds r0, r2, #0
    strh r0, [r1]
    b lbl_08060318
    .align 2, 0
lbl_0805ffb4: .4byte 0x000090c0
lbl_0805ffb8: .4byte 0x06000800
lbl_0805ffbc: .4byte 0x04000008
lbl_0805ffc0:
    ldr r1, lbl_0806000c @ =0x0300000a
    ldr r0, lbl_08060010 @ =0x03000088
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_08060014 @ =0x0300000e
    movs r0, #0x3f
    strb r0, [r1]
    ldr r1, lbl_08060018 @ =0x0300000f
    movs r0, #0x1e
    strb r0, [r1]
    ldr r1, lbl_0806001c @ =0x03000006
    ldr r3, lbl_08060020 @ =0x0000100d
    adds r0, r3, #0
    strh r0, [r1]
    ldr r1, lbl_08060024 @ =0x0300544c
    ldr r2, lbl_08060028 @ =0x00003f41
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_0806002c @ =0x03000108
    movs r1, #0
    mov r3, r8
    strb r3, [r0]
    mov r2, sb
    strb r2, [r0, #1]
    strb r7, [r0, #2]
    strb r5, [r0, #3]
    strb r1, [r0, #4]
    ldr r0, lbl_08060030 @ =0x03000bf2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0xe
    bne lbl_08060038
    ldr r0, lbl_08060034 @ =0x00000222
    bl SoundPlay
    b lbl_08060318
    .align 2, 0
lbl_0806000c: .4byte 0x0300000a
lbl_08060010: .4byte 0x03000088
lbl_08060014: .4byte 0x0300000e
lbl_08060018: .4byte 0x0300000f
lbl_0806001c: .4byte 0x03000006
lbl_08060020: .4byte 0x0000100d
lbl_08060024: .4byte 0x0300544c
lbl_08060028: .4byte 0x00003f41
lbl_0806002c: .4byte 0x03000108
lbl_08060030: .4byte 0x03000bf2
lbl_08060034: .4byte 0x00000222
lbl_08060038:
    cmp r0, #0xf
    beq lbl_0806003e
    b lbl_08060318
lbl_0806003e:
    ldr r0, lbl_08060048 @ =0x00000223
    bl SoundPlay
    b lbl_08060318
    .align 2, 0
lbl_08060048: .4byte 0x00000223
lbl_0806004c:
    movs r1, #4
    mov r3, ip
    ldrb r0, [r3, #2]
    cmp r0, #0
    beq lbl_08060068
    cmp r0, #4
    ble lbl_08060060
    subs r0, #4
    strb r0, [r3, #2]
    b lbl_0806006a
lbl_08060060:
    movs r0, #0
    mov r2, ip
    strb r0, [r2, #2]
    b lbl_0806006a
lbl_08060068:
    adds r6, #1
lbl_0806006a:
    mov r3, ip
    ldrb r0, [r3, #3]
    cmp r0, #0x9f
    bhi lbl_08060086
    adds r0, r0, r1
    strb r0, [r3, #3]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xa0
    bhi lbl_08060080
    b lbl_080602e6
lbl_08060080:
    movs r0, #0xa0
    strb r0, [r3, #3]
    b lbl_080602e6
lbl_08060086:
    adds r6, #1
    b lbl_080602e6
lbl_0806008a:
    movs r1, #7
    mov r2, ip
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_080600a6
    cmp r0, #7
    ble lbl_0806009e
    subs r0, #7
    strb r0, [r2]
    b lbl_080600a8
lbl_0806009e:
    movs r0, #0
    mov r3, ip
    strb r0, [r3]
    b lbl_080600a8
lbl_080600a6:
    adds r6, #1
lbl_080600a8:
    mov r2, ip
    ldrb r0, [r2, #1]
    cmp r0, #0xef
    bhi lbl_080600c4
    adds r0, r0, r1
    strb r0, [r2, #1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xf0
    bhi lbl_080600be
    b lbl_080602e6
lbl_080600be:
    movs r0, #0xf0
    strb r0, [r2, #1]
    b lbl_080602e6
lbl_080600c4:
    adds r6, #1
    b lbl_080602e6
lbl_080600c8:
    ldr r0, lbl_080600dc @ =0x03000bf2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0xe
    bne lbl_080600e4
    ldr r2, lbl_080600e0 @ =0x03001530
    ldrb r1, [r2, #0xf]
    movs r0, #0x10
    b lbl_080600f0
    .align 2, 0
lbl_080600dc: .4byte 0x03000bf2
lbl_080600e0: .4byte 0x03001530
lbl_080600e4:
    cmp r0, #0xf
    beq lbl_080600ea
    b lbl_08060318
lbl_080600ea:
    ldr r2, lbl_080600f8 @ =0x03001530
    ldrb r1, [r2, #0xf]
    movs r0, #0x20
lbl_080600f0:
    orrs r0, r1
    strb r0, [r2, #0xf]
    b lbl_08060318
    .align 2, 0
lbl_080600f8: .4byte 0x03001530
lbl_080600fc:
    ldrh r0, [r4]
    cmp r0, #5
    bhi lbl_08060104
    b lbl_08060314
lbl_08060104:
    b lbl_08060318
lbl_08060106:
    ldr r4, lbl_0806013c @ =0x03000108
    ldrb r1, [r4, #2]
    subs r1, r7, r1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldrb r2, [r4, #3]
    subs r2, r2, r5
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r0, #3
    bl sub_08060374
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r2, #0xff
    ands r2, r0
    lsrs r0, r0, #8
    ldrb r1, [r4, #2]
    cmp r1, r7
    bge lbl_08060140
    adds r0, r1, r0
    strb r0, [r4, #2]
    ldrb r0, [r4, #2]
    cmp r0, r7
    ble lbl_08060142
    strb r7, [r4, #2]
    b lbl_08060142
    .align 2, 0
lbl_0806013c: .4byte 0x03000108
lbl_08060140:
    adds r6, #1
lbl_08060142:
    ldr r0, lbl_08060160 @ =0x03000108
    ldrb r1, [r0, #3]
    mov ip, r0
    cmp r1, r5
    ble lbl_08060164
    subs r0, r1, r2
    mov r3, ip
    strb r0, [r3, #3]
    ldrb r0, [r3, #3]
    cmp r0, r5
    blt lbl_0806015a
    b lbl_080602e6
lbl_0806015a:
    strb r5, [r3, #3]
    b lbl_080602e6
    .align 2, 0
lbl_08060160: .4byte 0x03000108
lbl_08060164:
    adds r6, #1
    b lbl_080602e6
lbl_08060168:
    ldr r4, lbl_080601a4 @ =0x03000108
    ldrb r1, [r4]
    mov r0, r8
    subs r1, r0, r1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldrb r2, [r4, #1]
    mov r3, sb
    subs r2, r2, r3
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r0, #9
    bl sub_08060374
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r2, #0xff
    ands r2, r0
    lsrs r0, r0, #8
    ldrb r1, [r4]
    cmp r1, r8
    bge lbl_080601a8
    adds r0, r1, r0
    strb r0, [r4]
    ldrb r0, [r4]
    cmp r0, r8
    ble lbl_080601aa
    mov r0, r8
    strb r0, [r4]
    b lbl_080601aa
    .align 2, 0
lbl_080601a4: .4byte 0x03000108
lbl_080601a8:
    adds r6, #1
lbl_080601aa:
    ldr r0, lbl_080601c8 @ =0x03000108
    ldrb r1, [r0, #1]
    mov ip, r0
    cmp r1, sb
    ble lbl_080601cc
    subs r0, r1, r2
    mov r1, ip
    strb r0, [r1, #1]
    ldrb r0, [r1, #1]
    cmp r0, sb
    blt lbl_080601c2
    b lbl_080602e6
lbl_080601c2:
    mov r2, sb
    strb r2, [r1, #1]
    b lbl_080602e6
    .align 2, 0
lbl_080601c8: .4byte 0x03000108
lbl_080601cc:
    adds r6, #1
    b lbl_080602e6
lbl_080601d0:
    ldr r3, lbl_08060210 @ =0x0300000a
    ldr r2, lbl_08060214 @ =0x03000088
    ldrh r1, [r2]
    ldr r0, lbl_08060218 @ =0x0000feff
    ands r0, r1
    strh r0, [r3]
    ldr r1, lbl_0806021c @ =0x0300000f
    ldrb r0, [r2, #8]
    strb r0, [r1]
    ldr r1, lbl_08060220 @ =0x0300000e
    ldrb r0, [r2, #7]
    strb r0, [r1]
    ldr r3, lbl_08060224 @ =0x03000006
    ldr r0, lbl_08060228 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_0806022c @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r3]
    ldr r1, lbl_08060230 @ =0x0300544c
    ldrh r0, [r2, #2]
    strh r0, [r1]
    ldr r1, lbl_08060234 @ =0x03000108
    movs r2, #0
    strb r2, [r1]
    movs r0, #0xf0
    strb r0, [r1, #1]
    strb r2, [r1, #2]
    movs r0, #0xa0
    strb r0, [r1, #3]
    b lbl_08060318
    .align 2, 0
lbl_08060210: .4byte 0x0300000a
lbl_08060214: .4byte 0x03000088
lbl_08060218: .4byte 0x0000feff
lbl_0806021c: .4byte 0x0300000f
lbl_08060220: .4byte 0x0300000e
lbl_08060224: .4byte 0x03000006
lbl_08060228: .4byte 0x030013b2
lbl_0806022c: .4byte 0x030013b0
lbl_08060230: .4byte 0x0300544c
lbl_08060234: .4byte 0x03000108
lbl_08060238:
    ldr r1, lbl_08060254 @ =0x040000d4
    ldr r0, lbl_08060258 @ =0x0201e000
    str r0, [r1]
    ldr r0, lbl_0806025c @ =0x06000800
    str r0, [r1, #4]
    ldr r0, lbl_08060260 @ =0x80000400
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xcc
    ldr r0, lbl_08060264 @ =0x03000088
    ldrh r0, [r0, #0xa]
    strh r0, [r1]
    b lbl_08060318
    .align 2, 0
lbl_08060254: .4byte 0x040000d4
lbl_08060258: .4byte 0x0201e000
lbl_0806025c: .4byte 0x06000800
lbl_08060260: .4byte 0x80000400
lbl_08060264: .4byte 0x03000088
lbl_08060268:
    ldr r0, lbl_08060274 @ =0x0300000a
    ldr r1, lbl_08060278 @ =0x03000088
    ldrh r1, [r1]
    strh r1, [r0]
    b lbl_08060318
    .align 2, 0
lbl_08060274: .4byte 0x0300000a
lbl_08060278: .4byte 0x03000088
lbl_0806027c:
    ldrh r1, [r4]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_08060314
    ldr r0, lbl_080602a0 @ =0x030013b2
    ldr r1, lbl_080602a4 @ =0x03000088
    ldrh r4, [r0]
    adds r3, r4, #0
    ldrb r2, [r1, #5]
    adds r5, r0, #0
    cmp r3, r2
    beq lbl_080602b2
    cmp r3, r2
    bls lbl_080602a8
    subs r0, r4, #1
    strh r0, [r5]
    b lbl_080602b4
    .align 2, 0
lbl_080602a0: .4byte 0x030013b2
lbl_080602a4: .4byte 0x03000088
lbl_080602a8:
    cmp r3, r2
    bhs lbl_080602b4
    adds r0, r4, #1
    strh r0, [r5]
    b lbl_080602b4
lbl_080602b2:
    adds r6, #1
lbl_080602b4:
    ldr r0, lbl_080602cc @ =0x030013b0
    ldrh r2, [r0]
    adds r3, r2, #0
    ldrb r1, [r1, #4]
    adds r4, r0, #0
    cmp r3, r1
    beq lbl_080602d8
    cmp r3, r1
    bls lbl_080602d0
    subs r0, r2, #1
lbl_080602c8:
    strh r0, [r4]
    b lbl_080602da
    .align 2, 0
lbl_080602cc: .4byte 0x030013b0
lbl_080602d0:
    cmp r3, r1
    bhs lbl_080602da
    adds r0, r2, #1
    b lbl_080602c8
lbl_080602d8:
    adds r6, #1
lbl_080602da:
    ldr r0, lbl_080602ec @ =0x03000006
    ldrh r1, [r5]
    lsls r1, r1, #8
    ldrh r2, [r4]
    orrs r1, r2
    strh r1, [r0]
lbl_080602e6:
    asrs r6, r6, #1
    b lbl_08060314
    .align 2, 0
lbl_080602ec: .4byte 0x03000006
lbl_080602f0:
    ldr r0, lbl_08060354 @ =0x03000bf2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0xf
    bne lbl_08060302
    ldr r1, lbl_08060358 @ =0x0300070c
    movs r0, #8
    strb r0, [r1, #0xf]
lbl_08060302:
    movs r1, #0
    movs r0, #0
    strh r0, [r2, #0xc]
    ldr r0, lbl_0806035c @ =0x03000049
    strb r1, [r0]
    ldr r0, lbl_08060360 @ =0x030056c4
    strb r1, [r0]
    movs r3, #1
    mov sl, r3
lbl_08060314:
    cmp r6, #0
    beq lbl_08060328
lbl_08060318:
    ldr r0, lbl_08060364 @ =0x0300019c
    ldrb r1, [r0, #2]
    adds r1, #1
    movs r2, #0
    strb r1, [r0, #2]
    strh r2, [r0]
    ldr r0, lbl_08060368 @ =0x03000108
    mov ip, r0
lbl_08060328:
    ldr r2, lbl_0806036c @ =0x03005448
    mov r3, ip
    ldrb r1, [r3]
    lsls r1, r1, #8
    ldrb r0, [r3, #1]
    orrs r0, r1
    strh r0, [r2]
    ldr r2, lbl_08060370 @ =0x0300544a
    ldrb r1, [r3, #2]
    lsls r1, r1, #8
    ldrb r0, [r3, #3]
    orrs r0, r1
    strh r0, [r2]
    mov r0, sl
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08060354: .4byte 0x03000bf2
lbl_08060358: .4byte 0x0300070c
lbl_0806035c: .4byte 0x03000049
lbl_08060360: .4byte 0x030056c4
lbl_08060364: .4byte 0x0300019c
lbl_08060368: .4byte 0x03000108
lbl_0806036c: .4byte 0x03005448
lbl_08060370: .4byte 0x0300544a

    thumb_func_start sub_08060374
sub_08060374: @ 0x08060374
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    adds r7, r4, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r3, r1, #0
    lsls r2, r2, #0x18
    lsrs r0, r2, #0x18
    adds r5, r0, #0
    movs r6, #0
    movs r2, #0
    cmp r1, r0
    bls lbl_080603a0
    subs r1, r1, r4
    cmp r0, r1
    ble lbl_0806039c
    subs r0, r0, r1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
lbl_0806039c:
    adds r6, r4, #0
    b lbl_080603b8
lbl_080603a0:
    cmp r3, r5
    bhs lbl_080603b4
    subs r0, r5, r4
    cmp r3, r0
    ble lbl_080603b0
    subs r0, r3, r0
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
lbl_080603b0:
    adds r2, r4, #0
    b lbl_080603b8
lbl_080603b4:
    adds r2, r7, #0
    adds r6, r2, #0
lbl_080603b8:
    lsls r0, r6, #8
    orrs r0, r2
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start make_background_flash
make_background_flash: @ 0x080603c4
    push {lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r1, r0, #0
    cmp r0, #1
    beq lbl_080603f4
    cmp r0, #1
    bgt lbl_080603da
    cmp r0, #0
    beq lbl_080603e4
    b lbl_08060416
lbl_080603da:
    cmp r1, #2
    beq lbl_080603ec
    cmp r1, #3
    beq lbl_08060410
    b lbl_08060416
lbl_080603e4:
    movs r0, #2
    bl start_special_background_effect
    b lbl_08060416
lbl_080603ec:
    movs r0, #3
    bl start_special_background_effect
    b lbl_08060416
lbl_080603f4:
    ldr r1, lbl_0806040c @ =0x030056c4
    ldrb r0, [r1, #3]
    ldrb r1, [r1, #2]
    movs r2, #2
    movs r3, #1
    bl TransparencyUpdateBLDALPHA
    movs r0, #1
    movs r1, #7
    bl sub_0806087c
    b lbl_08060416
    .align 2, 0
lbl_0806040c: .4byte 0x030056c4
lbl_08060410:
    movs r0, #6
    bl start_special_background_effect
lbl_08060416:
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0806041c
sub_0806041c: @ 0x0806041c
    push {lr}
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    ldr r2, lbl_08060430 @ =0x0300019c
    ldrb r0, [r2, #3]
    cmp r0, #0
    bne lbl_0806042c
    strb r1, [r2, #3]
lbl_0806042c:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060430: .4byte 0x0300019c

    thumb_func_start sub_08060434
sub_08060434: @ 0x08060434
    push {r4, lr}
    ldr r4, lbl_08060478 @ =0x0300019c
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    ldrb r1, [r4, #3]
    cmp r1, #0
    beq lbl_080604d8
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_080604d4
    ldr r2, [r4, #8]
    cmp r2, #0
    beq lbl_080604d8
    movs r0, #0x7f
    ands r0, r1
    cmp r0, #0
    beq lbl_080604d8
    bl _call_via_r2
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08060468
    movs r0, #0
    strh r0, [r4]
lbl_08060468:
    subs r0, r1, #1
    cmp r0, #4
    bhi lbl_080604d8
    lsls r0, r0, #2
    ldr r1, lbl_0806047c @ =lbl_08060480
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08060478: .4byte 0x0300019c
lbl_0806047c: .4byte lbl_08060480
lbl_08060480: @ jump table
    .4byte lbl_08060494 @ case 0
    .4byte lbl_080604a4 @ case 1
    .4byte lbl_080604b4 @ case 2
    .4byte lbl_080604d8 @ case 3
    .4byte lbl_080604c4 @ case 4
lbl_08060494:
    ldr r1, lbl_080604a0 @ =0x0300019c
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    b lbl_080604d8
    .align 2, 0
lbl_080604a0: .4byte 0x0300019c
lbl_080604a4:
    ldr r1, lbl_080604b0 @ =0x0300019c
    ldrb r0, [r1, #2]
    subs r0, #1
    strb r0, [r1, #2]
    b lbl_080604d8
    .align 2, 0
lbl_080604b0: .4byte 0x0300019c
lbl_080604b4:
    ldr r1, lbl_080604c0 @ =0x0300019c
    ldrb r0, [r1, #2]
    subs r0, #3
    strb r0, [r1, #2]
    b lbl_080604d8
    .align 2, 0
lbl_080604c0: .4byte 0x0300019c
lbl_080604c4:
    ldr r0, lbl_080604d0 @ =0x0300019c
    movs r2, #0
    movs r1, #0x80
    strb r1, [r0, #3]
    strb r2, [r0, #2]
    b lbl_080604d8
    .align 2, 0
lbl_080604d0: .4byte 0x0300019c
lbl_080604d4:
    bl sub_080604e0
lbl_080604d8:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_080604e0
sub_080604e0: @ 0x080604e0
    push {lr}
    movs r3, #0
    ldr r0, lbl_080604f8 @ =0x0300019c
    ldrb r1, [r0, #3]
    adds r2, r0, #0
    cmp r1, #6
    beq lbl_08060528
    cmp r1, #6
    bgt lbl_080604fc
    cmp r1, #4
    beq lbl_08060518
    b lbl_08060532
    .align 2, 0
lbl_080604f8: .4byte 0x0300019c
lbl_080604fc:
    cmp r1, #0xa
    bgt lbl_08060532
    cmp r1, #9
    blt lbl_08060532
    ldr r1, lbl_08060514 @ =0x03000130
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_08060532
    ldrb r0, [r1, #0x10]
    cmp r0, #0
    bne lbl_08060532
    b lbl_08060530
    .align 2, 0
lbl_08060514: .4byte 0x03000130
lbl_08060518:
    ldr r1, lbl_08060524 @ =0x03001606
    movs r3, #0xb4
    lsls r3, r3, #1
    adds r0, r3, #0
    strh r0, [r1]
    b lbl_08060536
    .align 2, 0
lbl_08060524: .4byte 0x03001606
lbl_08060528:
    ldrh r0, [r2]
    cmp r0, #0x3c
    bls lbl_08060532
    b lbl_08060536
lbl_08060530:
    movs r3, #1
lbl_08060532:
    cmp r3, #0
    beq lbl_08060552
lbl_08060536:
    movs r0, #0
    strb r0, [r2, #2]
    strh r0, [r2]
    ldr r1, lbl_08060558 @ =0x083602e8
    ldrb r0, [r2, #3]
    lsls r0, r0, #3
    adds r1, #4
    adds r0, r0, r1
    ldr r0, [r0]
    str r0, [r2, #8]
    ldrb r1, [r2, #3]
    movs r0, #0x80
    orrs r0, r1
    strb r0, [r2, #3]
lbl_08060552:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060558: .4byte 0x083602e8

    thumb_func_start LoadFirstRoom
LoadFirstRoom: @ 0x0806055c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    ldr r0, lbl_0806058c @ =0x0300019c
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_080605c4
    movs r4, #0
lbl_0806056e:
    movs r0, #0x1f
    ands r0, r4
    cmp r0, #0
    bne lbl_08060594
    ldr r1, lbl_08060590 @ =0x03000050
    asrs r0, r4, #5
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r1, [r0]
    movs r0, #1
    rsbs r0, r0, #0
    cmp r1, r0
    bne lbl_08060594
    adds r4, #0x20
    b lbl_080605be
    .align 2, 0
lbl_0806058c: .4byte 0x0300019c
lbl_08060590: .4byte 0x03000050
lbl_08060594:
    lsls r0, r4, #0x18
    lsrs r5, r0, #0x18
    movs r0, #0
    adds r1, r5, #0
    bl sub_0806087c
    cmp r0, #0
    beq lbl_080605be
    ldr r1, lbl_080605d4 @ =0x083602e8
    lsls r0, r4, #3
    adds r0, r0, r1
    ldr r1, lbl_080605d8 @ =0x03000054
    ldrb r0, [r0, #1]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_080605be
    adds r0, r5, #0
    bl sub_08060760
    cmp r0, #0
    bne lbl_080605c4
lbl_080605be:
    adds r4, #1
    cmp r4, #0x1f
    ble lbl_0806056e
lbl_080605c4:
    ldr r0, lbl_080605dc @ =0x0300019c
    ldrb r7, [r0, #4]
    cmp r7, #4
    beq lbl_080605e0
    cmp r7, #7
    bne lbl_080605d2
    b lbl_0806071c
lbl_080605d2:
    b lbl_08060746
    .align 2, 0
lbl_080605d4: .4byte 0x083602e8
lbl_080605d8: .4byte 0x03000054
lbl_080605dc: .4byte 0x0300019c
lbl_080605e0:
    ldr r0, lbl_080606b8 @ =0x03000bf0
    movs r6, #0
    ldrsb r6, [r0, r6]
    cmp r6, #0
    beq lbl_080605ec
    b lbl_08060746
lbl_080605ec:
    ldr r0, lbl_080606bc @ =0x03000049
    movs r1, #1
    mov r8, r1
    strb r1, [r0]
    ldr r0, lbl_080606c0 @ =0x03000058
    strb r6, [r0]
    movs r0, #1
    movs r1, #0
    bl PlayMusic
    movs r0, #0x36
    movs r1, #1
    bl InsertMusicAndQueueCurrent
    movs r0, #0x1e
    bl SamusSetPose
    ldr r2, lbl_080606c4 @ =0x030013d4
    ldr r0, lbl_080606c8 @ =0x03001602
    ldr r3, lbl_080606cc @ =0x0000077f
    adds r1, r3, #0
    strh r1, [r0]
    movs r5, #0
    strh r1, [r2, #0x14]
    ldr r4, lbl_080606d0 @ =0x06009000
    ldr r2, lbl_080606d4 @ =0x0201e000
    movs r3, #0x80
    lsls r3, r3, #6
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl DMATransfer
    ldr r0, lbl_080606d8 @ =0x083679e4
    adds r1, r4, #0
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080606dc @ =0x0836b620
    ldr r1, lbl_080606e0 @ =0x0202a800
    bl CallLZ77UncompWRAM
    ldr r0, lbl_080606e4 @ =0x0836bc24
    ldr r1, lbl_080606e8 @ =0x0202b000
    bl CallLZ77UncompWRAM
    ldr r1, lbl_080606ec @ =0x040000d4
    ldr r0, lbl_080606f0 @ =0x08367924
    str r0, [r1]
    ldr r0, lbl_080606f4 @ =0x050000e0
    str r0, [r1, #4]
    ldr r0, lbl_080606f8 @ =0x80000060
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    bl sub_0805fd58
    ldr r1, lbl_080606fc @ =0x030000bc
    movs r0, #0x41
    strb r0, [r1, #1]
    strb r5, [r1, #0x18]
    ldr r0, lbl_08060700 @ =0x030013b4
    strh r6, [r0]
    ldr r0, lbl_08060704 @ =0x030013b6
    strh r6, [r0]
    ldr r4, lbl_08060708 @ =0x03000088
    ldr r1, lbl_0806070c @ =0x030056c4
    strb r7, [r1, #3]
    strb r7, [r4, #4]
    movs r0, #0xc
    strb r0, [r1, #2]
    strb r0, [r4, #5]
    ldr r1, lbl_08060710 @ =0x04000052
    lsls r0, r0, #8
    orrs r7, r0
    strh r7, [r1]
    movs r0, #4
    movs r1, #0xc
    movs r2, #1
    movs r3, #1
    bl TransparencyUpdateBLDALPHA
    ldr r1, lbl_08060714 @ =0x00003e41
    strh r1, [r4, #2]
    movs r0, #0
    bl TransparencyUpdateBLDCNT
    movs r0, #8
    strh r0, [r4, #0xa]
    strh r0, [r4, #0x12]
    ldrh r0, [r4]
    movs r2, #0x80
    lsls r2, r2, #1
    adds r1, r2, #0
    orrs r0, r1
    strh r0, [r4]
    movs r0, #8
    bl start_special_background_fading
    ldr r0, lbl_08060718 @ =0x0300004a
    mov r3, r8
    strb r3, [r0]
    b lbl_08060746
    .align 2, 0
lbl_080606b8: .4byte 0x03000bf0
lbl_080606bc: .4byte 0x03000049
lbl_080606c0: .4byte 0x03000058
lbl_080606c4: .4byte 0x030013d4
lbl_080606c8: .4byte 0x03001602
lbl_080606cc: .4byte 0x0000077f
lbl_080606d0: .4byte 0x06009000
lbl_080606d4: .4byte 0x0201e000
lbl_080606d8: .4byte 0x083679e4
lbl_080606dc: .4byte 0x0836b620
lbl_080606e0: .4byte 0x0202a800
lbl_080606e4: .4byte 0x0836bc24
lbl_080606e8: .4byte 0x0202b000
lbl_080606ec: .4byte 0x040000d4
lbl_080606f0: .4byte 0x08367924
lbl_080606f4: .4byte 0x050000e0
lbl_080606f8: .4byte 0x80000060
lbl_080606fc: .4byte 0x030000bc
lbl_08060700: .4byte 0x030013b4
lbl_08060704: .4byte 0x030013b6
lbl_08060708: .4byte 0x03000088
lbl_0806070c: .4byte 0x030056c4
lbl_08060710: .4byte 0x04000052
lbl_08060714: .4byte 0x00003e41
lbl_08060718: .4byte 0x0300004a
lbl_0806071c:
    ldr r0, lbl_08060754 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08060746
    ldr r4, lbl_08060758 @ =0x03000088
    strb r0, [r4, #5]
    movs r0, #0x10
    strb r0, [r4, #4]
    movs r1, #0
    movs r2, #1
    movs r3, #1
    bl TransparencyUpdateBLDALPHA
    ldr r2, lbl_0806075c @ =0x04000052
    ldrb r1, [r4, #5]
    lsls r1, r1, #8
    ldrb r0, [r4, #4]
    orrs r0, r1
    strh r0, [r2]
lbl_08060746:
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060754: .4byte 0x03000bf0
lbl_08060758: .4byte 0x03000088
lbl_0806075c: .4byte 0x04000052

    thumb_func_start sub_08060760
sub_08060760: @ 0x08060760
    push {lr}
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    movs r2, #0
    cmp r1, #6
    beq lbl_080607d0
    cmp r1, #6
    bgt lbl_08060776
    cmp r1, #4
    beq lbl_0806077c
    b lbl_080607ea
lbl_08060776:
    cmp r1, #7
    beq lbl_080607e0
    b lbl_080607ea
lbl_0806077c:
    ldr r0, lbl_080607b8 @ =0x03000055
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080607ea
    ldr r0, lbl_080607bc @ =0x03000056
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080607ea
    ldr r0, lbl_080607c0 @ =0x03000c1d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080607ea
    ldr r0, lbl_080607c4 @ =0x03000c75
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080607ea
    ldr r0, lbl_080607c8 @ =0x03000000
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080607ea
    ldr r0, lbl_080607cc @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080607ea
    movs r2, #1
    b lbl_080607ee
    .align 2, 0
lbl_080607b8: .4byte 0x03000055
lbl_080607bc: .4byte 0x03000056
lbl_080607c0: .4byte 0x03000c1d
lbl_080607c4: .4byte 0x03000c75
lbl_080607c8: .4byte 0x03000000
lbl_080607cc: .4byte 0x030013d2
lbl_080607d0:
    ldr r0, lbl_080607dc @ =0x03000055
    ldrb r0, [r0]
    cmp r0, #5
    bne lbl_080607ea
    movs r2, #1
    b lbl_080607ee
    .align 2, 0
lbl_080607dc: .4byte 0x03000055
lbl_080607e0:
    ldr r0, lbl_080607f8 @ =0x03000055
    ldrb r0, [r0]
    cmp r0, #2
    bne lbl_080607ea
    movs r2, #1
lbl_080607ea:
    cmp r2, #0
    beq lbl_080607f2
lbl_080607ee:
    ldr r0, lbl_080607fc @ =0x0300019c
    strb r1, [r0, #4]
lbl_080607f2:
    adds r0, r2, #0
    pop {r1}
    bx r1
    .align 2, 0
lbl_080607f8: .4byte 0x03000055
lbl_080607fc: .4byte 0x0300019c

    thumb_func_start sub_08060800
sub_08060800: @ 0x08060800
    push {lr}
    ldr r0, lbl_08060820 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0806081c
    ldr r1, lbl_08060824 @ =0x0300019c
    strb r0, [r1, #2]
    ldrb r0, [r1, #4]
    cmp r0, #0
    beq lbl_0806081c
    bl sub_0806041c
lbl_0806081c:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060820: .4byte 0x03000bf0
lbl_08060824: .4byte 0x0300019c

    thumb_func_start update_animated_palette_after_transition_or_reload
update_animated_palette_after_transition_or_reload: @ 0x08060828
    push {lr}
    ldr r0, lbl_08060850 @ =0x03000bf0
    movs r1, #0
    ldrsb r1, [r0, r1]
    cmp r1, #0
    beq lbl_08060868
    ldr r0, lbl_08060854 @ =0x030056f4
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08060872
    ldr r1, lbl_08060858 @ =0x040000d4
    ldr r0, lbl_0806085c @ =0x020355e0
    str r0, [r1]
    ldr r0, lbl_08060860 @ =0x050001e0
    str r0, [r1, #4]
    ldr r0, lbl_08060864 @ =0x80000010
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    b lbl_08060872
    .align 2, 0
lbl_08060850: .4byte 0x03000bf0
lbl_08060854: .4byte 0x030056f4
lbl_08060858: .4byte 0x040000d4
lbl_0806085c: .4byte 0x020355e0
lbl_08060860: .4byte 0x050001e0
lbl_08060864: .4byte 0x80000010
lbl_08060868:
    ldr r0, lbl_08060878 @ =0x0300019c
    strb r1, [r0, #2]
    strh r1, [r0]
    bl sub_0805e424
lbl_08060872:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060878: .4byte 0x0300019c

    thumb_func_start sub_0806087c
sub_0806087c: @ 0x0806087c
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    lsls r1, r1, #0x18
    movs r0, #0xf8
    lsls r0, r0, #0x15
    ands r0, r1
    lsrs r0, r0, #0x18
    lsrs r1, r1, #0x1d
    movs r4, #0
    ldr r2, lbl_080608b8 @ =0x03000050
    lsls r1, r1, #2
    adds r1, r1, r2
    movs r3, #1
    lsls r3, r0
    ldr r2, [r1]
    adds r0, r2, #0
    ands r0, r3
    cmp r0, #0
    bne lbl_080608ae
    movs r4, #1
    cmp r5, #0
    beq lbl_080608ae
    orrs r2, r3
    str r2, [r1]
lbl_080608ae:
    adds r0, r4, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080608b8: .4byte 0x03000050

    thumb_func_start EventFunction
EventFunction: @ 0x080608bc
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r3, r1, #0x18
    movs r2, #0xff
    lsls r2, r2, #0x18
    adds r0, r1, r2
    lsrs r0, r0, #0x18
    cmp r0, #0x4d
    bls lbl_080608d6
    movs r0, #0
    b lbl_08060922
lbl_080608d6:
    ldr r5, lbl_08060904 @ =0x02037e00
    lsrs r0, r1, #0x1d
    lsls r0, r0, #2
    adds r5, r0, r5
    movs r0, #0x1f
    ands r3, r0
    movs r6, #1
    adds r2, r6, #0
    lsls r2, r3
    ldr r1, [r5]
    adds r0, r1, #0
    ands r0, r2
    cmp r0, #0
    beq lbl_080608f4
    movs r0, #1
lbl_080608f4:
    cmp r4, #1
    beq lbl_08060914
    cmp r4, #1
    bgt lbl_08060908
    cmp r4, #0
    beq lbl_0806090e
    b lbl_08060922
    .align 2, 0
lbl_08060904: .4byte 0x02037e00
lbl_08060908:
    cmp r4, #2
    beq lbl_0806091c
    b lbl_08060922
lbl_0806090e:
    bics r1, r2
    str r1, [r5]
    b lbl_08060922
lbl_08060914:
    orrs r1, r2
    str r1, [r5]
    eors r0, r6
    b lbl_08060922
lbl_0806091c:
    eors r1, r2
    str r1, [r5]
    eors r0, r6
lbl_08060922:
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start check_play_room_music_track
check_play_room_music_track: @ 0x08060928
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldr r2, lbl_0806095c @ =0x03000030
    ldr r1, lbl_08060960 @ =0x0875fac4
    lsrs r0, r0, #0x16
    adds r0, r0, r1
    ldr r1, [r0]
    lsls r0, r4, #4
    subs r0, r0, r4
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrh r1, [r0, #0x3a]
    movs r0, #0
    strh r1, [r2]
    strb r0, [r2, #4]
    ldr r0, lbl_08060964 @ =0x03000bf1
    ldrb r0, [r0]
    adds r5, r2, #0
    cmp r0, #2
    beq lbl_08060968
    cmp r0, #6
    beq lbl_08060976
    b lbl_08060994
    .align 2, 0
lbl_0806095c: .4byte 0x03000030
lbl_08060960: .4byte 0x0875fac4
lbl_08060964: .4byte 0x03000bf1
lbl_08060968:
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x5f
    bne lbl_08060994
    movs r0, #1
    strb r0, [r5, #4]
    b lbl_08060994
lbl_08060976:
    ldr r0, lbl_080609d0 @ =0x03001530
    ldrb r2, [r0, #0x12]
    cmp r2, #1
    bne lbl_08060994
    ldr r0, lbl_080609d4 @ =0x030001a8
    ldrh r0, [r0]
    cmp r0, #0
    beq lbl_08060994
    adds r0, r1, #0
    subs r0, #0x5b
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #1
    bhi lbl_08060994
    strb r2, [r5, #4]
lbl_08060994:
    movs r0, #4
    ldrsb r0, [r5, r0]
    cmp r0, #0
    bne lbl_080609c4
    ldr r1, lbl_080609d8 @ =0x0300007d
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r0, #0
    beq lbl_080609ba
    ldr r0, lbl_080609dc @ =0x0836bdac
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    lsls r1, r1, #4
    adds r1, r1, r0
    ldrb r0, [r1, #1]
    lsls r0, r0, #0x1c
    cmp r0, #0
    beq lbl_080609c4
lbl_080609ba:
    ldrh r0, [r5]
    bl update_music_track
    movs r0, #1
    strb r0, [r5, #3]
lbl_080609c4:
    ldr r0, lbl_080609e0 @ =0x0300550e
    strb r4, [r0]
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080609d0: .4byte 0x03001530
lbl_080609d4: .4byte 0x030001a8
lbl_080609d8: .4byte 0x0300007d
lbl_080609dc: .4byte 0x0836bdac
lbl_080609e0: .4byte 0x0300550e

    thumb_func_start check_play_loading_jingle
check_play_loading_jingle: @ 0x080609e4
    push {lr}
    ldr r1, lbl_08060a2c @ =0x03000030
    ldr r0, lbl_08060a30 @ =0x030000bc
    ldrh r0, [r0, #0x16]
    strh r0, [r1]
    ldr r0, lbl_08060a34 @ =0x03000c75
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08060a28
    ldr r0, lbl_08060a38 @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08060a28
    ldr r0, lbl_08060a3c @ =0x03000c1d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08060a28
    bl sub_08003eb8
    ldr r0, lbl_08060a40 @ =0x030013d4
    ldrb r0, [r0]
    cmp r0, #0x2c
    bne lbl_08060a28
    ldr r1, lbl_08060a44 @ =0x03000049
    movs r0, #1
    strb r0, [r1]
    movs r0, #0x36
    movs r1, #1
    bl InsertMusicAndQueueCurrent
lbl_08060a28:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060a2c: .4byte 0x03000030
lbl_08060a30: .4byte 0x030000bc
lbl_08060a34: .4byte 0x03000c75
lbl_08060a38: .4byte 0x030013d2
lbl_08060a3c: .4byte 0x03000c1d
lbl_08060a40: .4byte 0x030013d4
lbl_08060a44: .4byte 0x03000049

    thumb_func_start sub_08060a48
sub_08060a48: @ 0x08060a48
    push {lr}
    ldr r2, lbl_08060a6c @ =0x03000030
    movs r0, #0
    strb r0, [r2, #2]
    ldr r1, lbl_08060a70 @ =0x03000bf0
    ldrb r0, [r1]
    subs r0, #1
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r3, r1, #0
    cmp r0, #7
    bhi lbl_08060ab4
    lsls r0, r0, #2
    ldr r1, lbl_08060a74 @ =lbl_08060a78
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08060a6c: .4byte 0x03000030
lbl_08060a70: .4byte 0x03000bf0
lbl_08060a74: .4byte lbl_08060a78
lbl_08060a78: @ jump table
    .4byte lbl_08060ab4 @ case 0
    .4byte lbl_08060a98 @ case 1
    .4byte lbl_08060ab4 @ case 2
    .4byte lbl_08060ab0 @ case 3
    .4byte lbl_08060ab4 @ case 4
    .4byte lbl_08060ab0 @ case 5
    .4byte lbl_08060ab4 @ case 6
    .4byte lbl_08060ab4 @ case 7
lbl_08060a98:
    bl sub_08003f20
    ldr r0, lbl_08060aa8 @ =0x03000030
    ldr r1, lbl_08060aac @ =0x03000bf0
    ldrb r1, [r1]
    strb r1, [r0, #2]
    b lbl_08060ab4
    .align 2, 0
lbl_08060aa8: .4byte 0x03000030
lbl_08060aac: .4byte 0x03000bf0
lbl_08060ab0:
    ldrb r0, [r3]
    strb r0, [r2, #2]
lbl_08060ab4:
    pop {r0}
    bx r0

    thumb_func_start sub_08060ab8
sub_08060ab8: @ 0x08060ab8
    push {lr}
    ldr r0, lbl_08060ad4 @ =0x03000030
    ldrb r0, [r0, #2]
    subs r0, #1
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #7
    bhi lbl_08060b10
    lsls r0, r0, #2
    ldr r1, lbl_08060ad8 @ =lbl_08060adc
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08060ad4: .4byte 0x03000030
lbl_08060ad8: .4byte lbl_08060adc
lbl_08060adc: @ jump table
    .4byte lbl_08060b10 @ case 0
    .4byte lbl_08060afc @ case 1
    .4byte lbl_08060b10 @ case 2
    .4byte lbl_08060b10 @ case 3
    .4byte lbl_08060b10 @ case 4
    .4byte lbl_08060b02 @ case 5
    .4byte lbl_08060b08 @ case 6
    .4byte lbl_08060b10 @ case 7
lbl_08060afc:
    bl sub_08003f6c
    b lbl_08060b10
lbl_08060b02:
    bl RetrieveTrackData2SoundChannels
    b lbl_08060b10
lbl_08060b08:
    movs r0, #0xe
    movs r1, #0x10
    bl PlayMusic
lbl_08060b10:
    pop {r0}
    bx r0

    thumb_func_start sub_08060b14
sub_08060b14: @ 0x08060b14
    sub sp, #4
    mov r1, sp
    movs r0, #0
    strb r0, [r1]
    add sp, #4
    bx lr

    thumb_func_start start_new_demo
start_new_demo: @ 0x08060b20
    push {lr}
    ldr r3, lbl_08060b6c @ =0x03000038
    ldrb r2, [r3, #3]
    movs r1, #0xf
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3, #3]
    ldrb r2, [r3, #2]
    ands r1, r2
    cmp r1, #0
    bne lbl_08060b5e
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    movs r1, #1
    orrs r0, r1
    strb r0, [r3, #2]
    ldr r2, lbl_08060b70 @ =0x03000c77
    ldr r0, lbl_08060b74 @ =0x03000002
    ldrh r1, [r0]
    lsrs r1, r1, #8
    ldrb r2, [r2]
    adds r1, r1, r2
    movs r0, #1
    ands r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    asrs r0, r0, #0x1f
    movs r1, #8
    ands r0, r1
    strb r0, [r3]
lbl_08060b5e:
    ldr r1, lbl_08060b78 @ =0x030013d2
    movs r0, #3
    strb r0, [r1]
    bl init_new_demo
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060b6c: .4byte 0x03000038
lbl_08060b70: .4byte 0x03000c77
lbl_08060b74: .4byte 0x03000002
lbl_08060b78: .4byte 0x030013d2

    thumb_func_start init_new_demo
init_new_demo: @ 0x08060b7c
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    ldr r0, lbl_08060b9c @ =sub_08060b14
    bl CallbackSetVBlank
    ldr r5, lbl_08060ba0 @ =0x03000038
    ldrb r0, [r5, #3]
    movs r1, #0xf0
    ands r1, r0
    cmp r1, #0
    beq lbl_08060ba4
    ldrb r7, [r5]
    b lbl_08060bb4
    .align 2, 0
lbl_08060b9c: .4byte sub_08060b14
lbl_08060ba0: .4byte 0x03000038
lbl_08060ba4:
    ldrb r0, [r5]
    cmp r0, #0xf
    bls lbl_08060bac
    strb r1, [r5]
lbl_08060bac:
    ldr r1, lbl_08060c0c @ =0x08363ce8
    ldrb r0, [r5]
    adds r0, r0, r1
    ldrb r7, [r0]
lbl_08060bb4:
    movs r0, #1
    bl sub_0807584c
    movs r0, #0
    adds r1, r7, #0
    bl load_demo_ram_values
    ldr r0, lbl_08060c10 @ =0x030013d2
    mov sb, r0
    ldrb r0, [r0]
    cmp r0, #3
    bne lbl_08060bfe
    ldr r4, lbl_08060c14 @ =0x08363be8
    lsls r5, r7, #4
    adds r6, r5, r4
    ldr r1, [r6]
    ldr r2, lbl_08060c18 @ =0x03004fca
    ldrh r3, [r6, #4]
    movs r0, #0x10
    mov r8, r0
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    adds r4, #8
    adds r5, r5, r4
    ldr r1, [r5]
    ldr r2, lbl_08060c1c @ =0x030051ca
    ldrh r3, [r6, #0xc]
    mov r0, r8
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    movs r0, #2
    mov r1, sb
    strb r0, [r1]
lbl_08060bfe:
    cmp r7, #7
    beq lbl_08060c44
    cmp r7, #7
    bgt lbl_08060c20
    cmp r7, #6
    beq lbl_08060c2a
    b lbl_08060c66
    .align 2, 0
lbl_08060c0c: .4byte 0x08363ce8
lbl_08060c10: .4byte 0x030013d2
lbl_08060c14: .4byte 0x08363be8
lbl_08060c18: .4byte 0x03004fca
lbl_08060c1c: .4byte 0x030051ca
lbl_08060c20:
    cmp r7, #0xa
    beq lbl_08060c56
    cmp r7, #0xb
    beq lbl_08060c60
    b lbl_08060c66
lbl_08060c2a:
    movs r0, #1
    movs r1, #0x2e
    bl EventFunction
    movs r0, #1
    movs r1, #0x16
    bl EventFunction
    movs r0, #1
    movs r1, #0x1e
    bl EventFunction
    b lbl_08060c66
lbl_08060c44:
    movs r0, #1
    movs r1, #0x1e
    bl EventFunction
    movs r0, #1
    movs r1, #0x10
    bl EventFunction
    b lbl_08060c66
lbl_08060c56:
    movs r0, #1
    movs r1, #0x2e
    bl EventFunction
    b lbl_08060c66
lbl_08060c60:
    ldr r1, lbl_08060ca4 @ =0x0203383c
    movs r0, #1
    str r0, [r1]
lbl_08060c66:
    ldr r0, lbl_08060ca8 @ =0x030053ca
    movs r4, #0
    strh r4, [r0]
    ldr r2, lbl_08060cac @ =0x03000038
    ldrb r1, [r2, #2]
    movs r0, #0xf
    ands r0, r1
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r2, #2]
    movs r3, #0
    movs r0, #1
    strb r0, [r2, #1]
    ldrb r1, [r2, #3]
    subs r0, #0x11
    ands r0, r1
    strb r0, [r2, #3]
    ldr r0, lbl_08060cb0 @ =0x03000c77
    strb r4, [r0]
    ldr r0, lbl_08060cb4 @ =0x03000002
    strh r3, [r0]
    ldr r0, lbl_08060cb8 @ =sub_08060b14
    bl CallbackSetVBlank
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060ca4: .4byte 0x0203383c
lbl_08060ca8: .4byte 0x030053ca
lbl_08060cac: .4byte 0x03000038
lbl_08060cb0: .4byte 0x03000c77
lbl_08060cb4: .4byte 0x03000002
lbl_08060cb8: .4byte sub_08060b14

    thumb_func_start sub_08060cbc
sub_08060cbc: @ 0x08060cbc
    push {lr}
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldr r2, lbl_08060cd4 @ =0x03000038
    ldrb r1, [r2, #3]
    movs r0, #0xf0
    ands r0, r1
    cmp r0, #0
    beq lbl_08060cd8
    ldrb r1, [r2]
    b lbl_08060ce0
    .align 2, 0
lbl_08060cd4: .4byte 0x03000038
lbl_08060cd8:
    ldr r1, lbl_08060cec @ =0x08363ce8
    ldrb r0, [r2]
    adds r0, r0, r1
    ldrb r1, [r0]
lbl_08060ce0:
    cmp r3, #0
    bne lbl_08060cf4
    ldr r0, lbl_08060cf0 @ =0x03000055
    strb r3, [r0]
    b lbl_08060d22
    .align 2, 0
lbl_08060cec: .4byte 0x08363ce8
lbl_08060cf0: .4byte 0x03000055
lbl_08060cf4:
    movs r0, #1
    bl load_demo_ram_values
    ldr r2, lbl_08060d28 @ =0x03000038
    ldrb r1, [r2, #2]
    movs r3, #0xf
    adds r0, r3, #0
    ands r0, r1
    strb r0, [r2, #2]
    ldr r1, lbl_08060d2c @ =0x03000c77
    movs r0, #0
    strb r0, [r1]
    ldr r1, lbl_08060d30 @ =0x03000002
    movs r0, #0
    strh r0, [r1]
    ldr r0, lbl_08060d34 @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08060d22
    ldrb r1, [r2, #3]
    adds r0, r3, #0
    ands r0, r1
    strb r0, [r2, #3]
lbl_08060d22:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08060d28: .4byte 0x03000038
lbl_08060d2c: .4byte 0x03000c77
lbl_08060d30: .4byte 0x03000002
lbl_08060d34: .4byte 0x030013d2

    thumb_func_start sub_08060d38
sub_08060d38: @ 0x08060d38
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_08060d78 @ =0x03000038
    movs r7, #0
    strb r7, [r0, #1]
    ldr r1, lbl_08060d7c @ =0x030013d2
    ldrb r2, [r1]
    adds r3, r0, #0
    adds r5, r1, #0
    cmp r2, #1
    bne lbl_08060d9c
    ldr r0, lbl_08060d80 @ =0x040000d4
    ldr r1, lbl_08060d84 @ =0x03004fca
    str r1, [r0]
    ldr r1, lbl_08060d88 @ =0x0203f080
    str r1, [r0, #4]
    ldr r2, lbl_08060d8c @ =0x80000100
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    ldr r1, lbl_08060d90 @ =0x030051ca
    str r1, [r0]
    ldr r1, lbl_08060d94 @ =0x0203f280
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    movs r0, #0xb
    bl sub_08000c48
    ldr r1, lbl_08060d98 @ =0x03000c74
    movs r0, #0x10
    strb r0, [r1]
    strb r7, [r5]
    b lbl_08060e22
    .align 2, 0
lbl_08060d78: .4byte 0x03000038
lbl_08060d7c: .4byte 0x030013d2
lbl_08060d80: .4byte 0x040000d4
lbl_08060d84: .4byte 0x03004fca
lbl_08060d88: .4byte 0x0203f080
lbl_08060d8c: .4byte 0x80000100
lbl_08060d90: .4byte 0x030051ca
lbl_08060d94: .4byte 0x0203f280
lbl_08060d98: .4byte 0x03000c74
lbl_08060d9c:
    ldr r6, lbl_08060db0 @ =0x03000c74
    movs r0, #0xb
    strb r0, [r6]
    ldrb r0, [r3, #3]
    movs r4, #0xf0
    ands r4, r0
    cmp r4, #0
    beq lbl_08060db4
    strb r7, [r5]
    b lbl_08060dfe
    .align 2, 0
lbl_08060db0: .4byte 0x03000c74
lbl_08060db4:
    movs r1, #0xf
    ands r1, r0
    cmp r1, #0
    beq lbl_08060de0
    ldrb r0, [r3]
    adds r0, #1
    strb r0, [r3]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xf
    bls lbl_08060dcc
    strb r4, [r3]
lbl_08060dcc:
    movs r0, #0xa
    bl sub_08002acc
    movs r0, #0xa
    bl sub_08003ae4
    strb r4, [r5]
    movs r0, #2
    strb r0, [r6]
    b lbl_08060e22
lbl_08060de0:
    ldrb r0, [r3]
    adds r0, #1
    strb r0, [r3]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xf
    bls lbl_08060df8
    strb r1, [r5]
    strb r1, [r3]
    movs r0, #1
    strb r0, [r6]
    b lbl_08060e08
lbl_08060df8:
    cmp r0, #8
    bne lbl_08060e04
    strb r1, [r5]
lbl_08060dfe:
    movs r0, #2
    strb r0, [r6]
    b lbl_08060e08
lbl_08060e04:
    movs r0, #3
    strb r0, [r5]
lbl_08060e08:
    ldrb r0, [r5]
    cmp r0, #0
    bne lbl_08060e22
    ldrb r1, [r3, #3]
    movs r0, #0xf
    ands r0, r1
    strb r0, [r3, #3]
    movs r0, #0
    bl sub_08002acc
    movs r0, #0
    bl sub_08003ae4
lbl_08060e22:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start return_one
return_one: @ 0x08060e28
    movs r0, #1
    bx lr

    thumb_func_start tourian_escape_main
tourian_escape_main: @ 0x08060e2c
    push {r4, r5, lr}
    movs r4, #0
    ldr r1, lbl_08060e94 @ =0x0875fe3c
    ldr r5, lbl_08060e98 @ =0x0300007e
    movs r0, #0
    ldrsb r0, [r5, r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_08060e60
    movs r0, #0xa0
    lsls r0, r0, #0x13
    movs r1, #0
    strh r4, [r0]
    ldr r0, lbl_08060e9c @ =0x03000005
    strb r1, [r0]
    ldr r0, lbl_08060ea0 @ =0x03000c72
    strh r4, [r0]
    ldr r1, lbl_08060ea4 @ =0x03000c74
    movs r0, #4
    strb r0, [r1]
    movs r4, #1
lbl_08060e60:
    cmp r4, #0
    beq lbl_08060eb8
    movs r0, #0
    ldrsb r0, [r5, r0]
    cmp r0, #1
    bne lbl_08060e8e
    movs r0, #2
    bl start_special_background_fading
    ldr r1, lbl_08060ea8 @ =0x03000054
    movs r0, #6
    strb r0, [r1]
    ldr r0, lbl_08060eac @ =0x03000055
    movs r1, #0
    strb r1, [r0]
    ldr r0, lbl_08060eb0 @ =0x03000056
    strb r1, [r0]
    ldr r1, lbl_08060eb4 @ =0x0300007d
    movs r0, #3
    strb r0, [r1]
    ldr r1, lbl_08060ea4 @ =0x03000c74
    movs r0, #0xa
    strb r0, [r1]
lbl_08060e8e:
    movs r0, #1
    b lbl_08060eba
    .align 2, 0
lbl_08060e94: .4byte 0x0875fe3c
lbl_08060e98: .4byte 0x0300007e
lbl_08060e9c: .4byte 0x03000005
lbl_08060ea0: .4byte 0x03000c72
lbl_08060ea4: .4byte 0x03000c74
lbl_08060ea8: .4byte 0x03000054
lbl_08060eac: .4byte 0x03000055
lbl_08060eb0: .4byte 0x03000056
lbl_08060eb4: .4byte 0x0300007d
lbl_08060eb8:
    movs r0, #0
lbl_08060eba:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sub_08060ec0
sub_08060ec0: @ 0x08060ec0
    push {lr}
    ldr r0, lbl_08060ed4 @ =0x0300007d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #5
    beq lbl_08060ed8
    cmp r0, #9
    beq lbl_08060ee2
    b lbl_08060eea
    .align 2, 0
lbl_08060ed4: .4byte 0x0300007d
lbl_08060ed8:
    movs r0, #0x34
    movs r1, #0
    bl PlayMusic
    b lbl_08060eea
lbl_08060ee2:
    movs r0, #0x93
    lsls r0, r0, #2
    bl SoundPlay
lbl_08060eea:
    movs r0, #0xa
    bl sub_08002acc
    pop {r0}
    bx r0

    thumb_func_start end_cutscene
end_cutscene: @ 0x08060ef4
    push {r4, r5, lr}
    ldr r0, lbl_08060f10 @ =0x0300007d
    ldrb r0, [r0]
    subs r0, #1
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0xb
    bhi lbl_08060fda
    lsls r0, r0, #2
    ldr r1, lbl_08060f14 @ =lbl_08060f18
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08060f10: .4byte 0x0300007d
lbl_08060f14: .4byte lbl_08060f18
lbl_08060f18: @ jump table
    .4byte lbl_08060f5c @ case 0
    .4byte lbl_08060fda @ case 1
    .4byte lbl_08060f94 @ case 2
    .4byte lbl_08060fda @ case 3
    .4byte lbl_08060fda @ case 4
    .4byte lbl_08060fac @ case 5
    .4byte lbl_08060fda @ case 6
    .4byte lbl_08060f48 @ case 7
    .4byte lbl_08060fda @ case 8
    .4byte lbl_08060fda @ case 9
    .4byte lbl_08060fda @ case 10
    .4byte lbl_08060f88 @ case 11
lbl_08060f48:
    ldr r0, lbl_08060f58 @ =0x0836bdac
    adds r0, #0x7d
    ldrb r1, [r0]
    movs r0, #1
    bl EventFunction
    b lbl_08060fda
    .align 2, 0
lbl_08060f58: .4byte 0x0836bdac
lbl_08060f5c:
    ldr r0, lbl_08060f74 @ =0x03000054
    movs r1, #0
    strb r1, [r0]
    ldr r0, lbl_08060f78 @ =0x03000055
    strb r1, [r0]
    ldr r0, lbl_08060f7c @ =0x03000056
    strb r1, [r0]
    ldr r0, lbl_08060f80 @ =0x03000c75
    strb r1, [r0]
    ldr r0, lbl_08060f84 @ =0x0300004b
    strb r1, [r0]
    b lbl_08060fda
    .align 2, 0
lbl_08060f74: .4byte 0x03000054
lbl_08060f78: .4byte 0x03000055
lbl_08060f7c: .4byte 0x03000056
lbl_08060f80: .4byte 0x03000c75
lbl_08060f84: .4byte 0x0300004b
lbl_08060f88:
    ldr r1, lbl_08060f90 @ =0x03000bf0
    movs r0, #8
    strb r0, [r1]
    b lbl_08060fda
    .align 2, 0
lbl_08060f90: .4byte 0x03000bf0
lbl_08060f94:
    ldr r1, lbl_08060fa4 @ =0x03000bf0
    movs r0, #7
    strb r0, [r1]
    ldr r1, lbl_08060fa8 @ =0x03000030
    movs r0, #7
    strb r0, [r1, #2]
    b lbl_08060fda
    .align 2, 0
lbl_08060fa4: .4byte 0x03000bf0
lbl_08060fa8: .4byte 0x03000030
lbl_08060fac:
    ldr r0, lbl_08060fc4 @ =0x03000054
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08060fc8
    movs r0, #0x1c
    bl SoundStop
    movs r0, #0x34
    movs r1, #0x3c
    bl sub_08003bd0
    b lbl_08060fda
    .align 2, 0
lbl_08060fc4: .4byte 0x03000054
lbl_08060fc8:
    cmp r0, #3
    bne lbl_08060fda
    movs r0, #0x1c
    bl SoundStop
    movs r0, #0x35
    movs r1, #0x3c
    bl sub_08003bd0
lbl_08060fda:
    ldr r5, lbl_08061038 @ =0x0836bdac
    ldr r4, lbl_0806103c @ =0x0300007d
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r0, r0, #4
    adds r0, r0, r5
    ldrb r0, [r0, #0xc]
    bl start_special_background_fading
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r0, r0, #4
    adds r1, r0, r5
    ldrb r0, [r1, #0xd]
    cmp r0, #0
    beq lbl_08061002
    adds r1, r0, #0
    movs r0, #1
    bl EventFunction
lbl_08061002:
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r0, r0, #4
    adds r1, r0, r5
    ldrb r0, [r1, #1]
    lsls r0, r0, #0x1a
    lsrs r0, r0, #0x1e
    cmp r0, #0
    beq lbl_08061032
    movs r0, #0x87
    lsls r0, r0, #1
    ldrh r1, [r1, #0xa]
    bl sub_08002de8
    ldr r0, lbl_08061040 @ =0x03000030
    ldrh r0, [r0]
    movs r1, #0
    ldrsb r1, [r4, r1]
    lsls r1, r1, #4
    adds r1, r1, r5
    ldrh r1, [r1, #0xa]
    movs r2, #0
    bl sub_08003c20
lbl_08061032:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061038: .4byte 0x0836bdac
lbl_0806103c: .4byte 0x0300007d
lbl_08061040: .4byte 0x03000030

    thumb_func_start cutscene_main
cutscene_main: @ 0x08061044
    push {r4, lr}
    sub sp, #4
    ldr r0, lbl_0806105c @ =0x03000005
    ldrb r0, [r0]
    cmp r0, #4
    bls lbl_08061052
    b lbl_0806121c
lbl_08061052:
    lsls r0, r0, #2
    ldr r1, lbl_08061060 @ =lbl_08061064
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806105c: .4byte 0x03000005
lbl_08061060: .4byte lbl_08061064
lbl_08061064: @ jump table
    .4byte lbl_08061078 @ case 0
    .4byte lbl_080610bc @ case 1
    .4byte lbl_080610ce @ case 2
    .4byte lbl_080610e0 @ case 3
    .4byte lbl_08061158 @ case 4
lbl_08061078:
    ldr r0, lbl_080610a0 @ =sub_080612d4
    bl CallbackSetVBlank
    ldr r1, lbl_080610a4 @ =0x0836bdac
    ldr r0, lbl_080610a8 @ =0x0300007d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #4
    adds r0, r0, r1
    ldrb r0, [r0, #8]
    bl sub_08061fa0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_080610b0
    ldr r1, lbl_080610ac @ =0x03000005
    movs r0, #2
    strb r0, [r1]
    b lbl_0806121c
    .align 2, 0
lbl_080610a0: .4byte sub_080612d4
lbl_080610a4: .4byte 0x0836bdac
lbl_080610a8: .4byte 0x0300007d
lbl_080610ac: .4byte 0x03000005
lbl_080610b0:
    ldr r1, lbl_080610b8 @ =0x03000005
    movs r0, #1
    strb r0, [r1]
    b lbl_0806121c
    .align 2, 0
lbl_080610b8: .4byte 0x03000005
lbl_080610bc:
    bl sub_08061f60
    bl sub_080621d0
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_080610cc
    b lbl_0806121c
lbl_080610cc:
    b lbl_08061136
lbl_080610ce:
    bl sub_080612e0
    ldr r0, lbl_080610dc @ =sub_0806122c
    bl CallbackSetVBlank
    b lbl_08061136
    .align 2, 0
lbl_080610dc: .4byte sub_0806122c
lbl_080610e0:
    ldr r0, lbl_08061140 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #2]
    adds r0, #1
    strh r0, [r1, #2]
    bl sub_08061be4
    ldr r1, lbl_08061144 @ =0x0836bdac
    ldr r4, lbl_08061148 @ =0x0300007d
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r0, r0, #4
    adds r1, #4
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    rsbs r1, r0, #0
    orrs r1, r0
    lsrs r2, r1, #0x1f
    ldr r0, lbl_0806114c @ =0x0300002f
    ldrb r1, [r0]
    movs r0, #0
    ldrsb r0, [r4, r0]
    cmp r1, r0
    bne lbl_0806112a
    ldr r0, lbl_08061150 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0806112a
    bl sub_08060ec0
    movs r2, #1
lbl_0806112a:
    cmp r2, #0
    beq lbl_0806121c
    ldr r0, lbl_08061140 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #0x1c]
lbl_08061136:
    ldr r1, lbl_08061154 @ =0x03000005
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0806121c
    .align 2, 0
lbl_08061140: .4byte 0x08754bc4
lbl_08061144: .4byte 0x0836bdac
lbl_08061148: .4byte 0x0300007d
lbl_0806114c: .4byte 0x0300002f
lbl_08061150: .4byte 0x03001380
lbl_08061154: .4byte 0x03000005
lbl_08061158:
    ldr r0, lbl_0806117c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbf
    ldrb r0, [r0]
    cmp r0, #3
    bne lbl_08061184
    ldr r1, lbl_08061180 @ =0x00007fff
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl BitFill
    b lbl_08061198
    .align 2, 0
lbl_0806117c: .4byte 0x08754bc4
lbl_08061180: .4byte 0x00007fff
lbl_08061184:
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
lbl_08061198:
    movs r2, #0xc0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #9
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    movs r1, #0x40
    bl BitFill
    ldr r2, lbl_08061208 @ =0x06010000
    movs r3, #0x80
    lsls r3, r3, #8
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    movs r2, #0xe0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0xff
    bl BitFill
    bl end_cutscene
    ldr r3, lbl_0806120c @ =0x0836bdac
    ldr r2, lbl_08061210 @ =0x0300007d
    movs r0, #0
    ldrsb r0, [r2, r0]
    lsls r0, r0, #4
    adds r0, r0, r3
    ldrb r0, [r0, #1]
    lsrs r0, r0, #6
    cmp r0, #0
    beq lbl_080611ee
    ldr r1, lbl_08061214 @ =0x0300002f
    ldrb r0, [r2]
    strb r0, [r1]
lbl_080611ee:
    ldr r1, lbl_08061218 @ =0x03000005
    movs r0, #0
    strb r0, [r1]
    movs r0, #0
    ldrsb r0, [r2, r0]
    lsls r0, r0, #4
    adds r0, r0, r3
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08061204
    strb r0, [r2]
lbl_08061204:
    movs r0, #1
    b lbl_0806121e
    .align 2, 0
lbl_08061208: .4byte 0x06010000
lbl_0806120c: .4byte 0x0836bdac
lbl_08061210: .4byte 0x0300007d
lbl_08061214: .4byte 0x0300002f
lbl_08061218: .4byte 0x03000005
lbl_0806121c:
    movs r0, #0
lbl_0806121e:
    add sp, #4
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start return_one_cutscene
return_one_cutscene: @ 0x08061228
    movs r0, #1
    bx lr

    thumb_func_start sub_0806122c
sub_0806122c: @ 0x0806122c
    ldr r1, lbl_080612b0 @ =0x040000d4
    ldr r0, lbl_080612b4 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_080612b8 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xc4
    ldr r0, lbl_080612bc @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0x30]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x28]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x32]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x2a]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x34]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x2c]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x36]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x2e]
    strh r0, [r1]
    subs r1, #0x16
    ldrh r0, [r2, #0x20]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x22]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x24]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #0x26]
    strh r0, [r1]
    adds r1, #0x46
    ldr r0, lbl_080612c0 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r3, lbl_080612c4 @ =0x04000052
    ldr r0, lbl_080612c8 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_080612cc @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r3]
    ldr r1, lbl_080612d0 @ =0x04000050
    ldrh r0, [r2, #0x1e]
    strh r0, [r1]
    subs r1, #0x50
    ldrh r0, [r2, #0x1c]
    strh r0, [r1]
    bx lr
    .align 2, 0
lbl_080612b0: .4byte 0x040000d4
lbl_080612b4: .4byte 0x03000e7c
lbl_080612b8: .4byte 0x84000100
lbl_080612bc: .4byte 0x08754bc4
lbl_080612c0: .4byte 0x030013ae
lbl_080612c4: .4byte 0x04000052
lbl_080612c8: .4byte 0x030013b2
lbl_080612cc: .4byte 0x030013b0
lbl_080612d0: .4byte 0x04000050

    thumb_func_start sub_080612d4
sub_080612d4: @ 0x080612d4
    sub sp, #4
    mov r1, sp
    movs r0, #0
    strb r0, [r1]
    add sp, #4
    bx lr

    thumb_func_start sub_080612e0
sub_080612e0: @ 0x080612e0
    push {r4, lr}
    sub sp, #4
    ldr r0, lbl_080613c0 @ =sub_080612d4
    bl CallbackSetVBlank
    ldr r2, lbl_080613c4 @ =0x030016c4
    movs r3, #0xc5
    lsls r3, r3, #3
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r2, lbl_080613c8 @ =0x03005806
    ldr r1, lbl_080613cc @ =0x03005807
    movs r0, #0
    strb r0, [r1]
    strb r0, [r2]
    ldr r1, lbl_080613d0 @ =0x03001382
    strb r0, [r1]
    bl ResetFreeOAM
    ldr r1, lbl_080613d4 @ =0x04000050
    ldr r0, lbl_080613d8 @ =0x08754bc4
    ldr r3, [r0]
    movs r4, #0
    movs r0, #0xff
    strh r0, [r3, #0x1e]
    strh r0, [r1]
    ldr r2, lbl_080613dc @ =0x04000054
    ldr r1, lbl_080613e0 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strh r0, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r4, [r3, #0x1c]
    strh r4, [r0]
    ldr r1, lbl_080613e4 @ =0x0836bdac
    ldr r0, lbl_080613e8 @ =0x0300007d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #4
    adds r0, r0, r1
    ldrb r3, [r0]
    cmp r3, #0
    beq lbl_0806135e
    cmp r3, #2
    bne lbl_0806134a
    ldr r0, lbl_080613ec @ =0x03000bf0
    strb r3, [r0]
lbl_0806134a:
    cmp r3, #2
    bgt lbl_0806135e
    ldr r1, lbl_080613f0 @ =0x06010000
    ldr r2, lbl_080613f4 @ =0x0201e000
    lsls r3, r3, #0xe
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_0806135e:
    ldr r2, lbl_080613f8 @ =0x0300002f
    ldrb r1, [r2]
    ldr r4, lbl_080613e8 @ =0x0300007d
    movs r0, #0
    ldrsb r0, [r4, r0]
    cmp r1, r0
    beq lbl_08061370
    movs r0, #0
    strb r0, [r2]
lbl_08061370:
    bl ClearGFXRAM
    ldr r2, lbl_080613fc @ =0x03000bf4
    ldr r0, lbl_08061400 @ =0x03000bf6
    movs r3, #0x80
    lsls r3, r3, #4
    adds r1, r3, #0
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_08061404 @ =0x03000bf8
    ldr r0, lbl_08061408 @ =0x03000bfa
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_0806140c @ =0x03000bfc
    ldr r0, lbl_08061410 @ =0x03000bfe
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_08061414 @ =0x03000c00
    ldr r0, lbl_08061418 @ =0x03000c02
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_080613d8 @ =0x08754bc4
    ldr r0, [r2]
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r2]
    strh r1, [r0, #2]
    ldr r1, lbl_080613e4 @ =0x0836bdac
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r0, r0, #4
    adds r1, #4
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080613c0: .4byte sub_080612d4
lbl_080613c4: .4byte 0x030016c4
lbl_080613c8: .4byte 0x03005806
lbl_080613cc: .4byte 0x03005807
lbl_080613d0: .4byte 0x03001382
lbl_080613d4: .4byte 0x04000050
lbl_080613d8: .4byte 0x08754bc4
lbl_080613dc: .4byte 0x04000054
lbl_080613e0: .4byte 0x030013ae
lbl_080613e4: .4byte 0x0836bdac
lbl_080613e8: .4byte 0x0300007d
lbl_080613ec: .4byte 0x03000bf0
lbl_080613f0: .4byte 0x06010000
lbl_080613f4: .4byte 0x0201e000
lbl_080613f8: .4byte 0x0300002f
lbl_080613fc: .4byte 0x03000bf4
lbl_08061400: .4byte 0x03000bf6
lbl_08061404: .4byte 0x03000bf8
lbl_08061408: .4byte 0x03000bfa
lbl_0806140c: .4byte 0x03000bfc
lbl_08061410: .4byte 0x03000bfe
lbl_08061414: .4byte 0x03000c00
lbl_08061418: .4byte 0x03000c02

    thumb_func_start sub_0806141c
sub_0806141c: @ 0x0806141c
    push {r4, lr}
    adds r4, r1, #0
    adds r3, r0, #0
    lsls r0, r4, #0x10
    lsrs r1, r0, #0x10
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_08061432
    movs r1, #0
    b lbl_08061454
lbl_08061432:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_0806143e
    movs r1, #1
    b lbl_08061454
lbl_0806143e:
    movs r0, #0x80
    lsls r0, r0, #3
    cmp r1, r0
    bne lbl_0806144a
    movs r1, #2
    b lbl_08061454
lbl_0806144a:
    movs r0, #0x80
    lsls r0, r0, #4
    cmp r1, r0
    bne lbl_08061478
    movs r1, #3
lbl_08061454:
    ldr r0, lbl_08061480 @ =0x08754bc4
    ldr r2, [r0]
    lsls r0, r1, #1
    adds r2, #0x20
    adds r2, r2, r0
    lsrs r0, r4, #0x10
    lsrs r1, r3, #0x10
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    orrs r1, r0
    movs r0, #0xff
    lsls r0, r0, #8
    ands r0, r3
    orrs r1, r0
    lsls r0, r3, #0x18
    lsrs r0, r0, #0x16
    orrs r1, r0
    strh r1, [r2]
lbl_08061478:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061480: .4byte 0x08754bc4

    thumb_func_start sub_08061484
sub_08061484: @ 0x08061484
    push {lr}
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    adds r2, r1, #0
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_0806149c
    movs r1, #0
    b lbl_080614be
lbl_0806149c:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_080614a8
    movs r1, #1
    b lbl_080614be
lbl_080614a8:
    movs r0, #0x80
    lsls r0, r0, #3
    cmp r1, r0
    bne lbl_080614b4
    movs r1, #2
    b lbl_080614be
lbl_080614b4:
    movs r0, #0x80
    lsls r0, r0, #4
    cmp r2, r0
    bne lbl_080614ca
    movs r1, #3
lbl_080614be:
    ldr r0, lbl_080614d0 @ =0x08754bc4
    ldr r0, [r0]
    lsls r1, r1, #1
    adds r0, #0x20
    adds r0, r0, r1
    strh r3, [r0]
lbl_080614ca:
    pop {r0}
    bx r0
    .align 2, 0
lbl_080614d0: .4byte 0x08754bc4

    thumb_func_start sub_080614d4
sub_080614d4: @ 0x080614d4
    push {lr}
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    movs r0, #1
    ands r0, r3
    cmp r0, #0
    beq lbl_08061528
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_080614fc
    ldr r0, lbl_080614f8 @ =0x03000bf4
    b lbl_08061526
    .align 2, 0
lbl_080614f8: .4byte 0x03000bf4
lbl_080614fc:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_0806150c
    ldr r0, lbl_08061508 @ =0x03000bf8
    b lbl_08061526
    .align 2, 0
lbl_08061508: .4byte 0x03000bf8
lbl_0806150c:
    movs r0, #0x80
    lsls r0, r0, #3
    cmp r1, r0
    bne lbl_0806151c
    ldr r0, lbl_08061518 @ =0x03000bfc
    b lbl_08061526
    .align 2, 0
lbl_08061518: .4byte 0x03000bfc
lbl_0806151c:
    movs r0, #0x80
    lsls r0, r0, #4
    cmp r1, r0
    bne lbl_08061528
    ldr r0, lbl_0806153c @ =0x03000c00
lbl_08061526:
    strh r2, [r0]
lbl_08061528:
    movs r0, #2
    ands r0, r3
    cmp r0, #0
    beq lbl_08061570
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_08061544
    ldr r0, lbl_08061540 @ =0x03000bf6
    b lbl_0806156e
    .align 2, 0
lbl_0806153c: .4byte 0x03000c00
lbl_08061540: .4byte 0x03000bf6
lbl_08061544:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_08061554
    ldr r0, lbl_08061550 @ =0x03000bfa
    b lbl_0806156e
    .align 2, 0
lbl_08061550: .4byte 0x03000bfa
lbl_08061554:
    movs r0, #0x80
    lsls r0, r0, #3
    cmp r1, r0
    bne lbl_08061564
    ldr r0, lbl_08061560 @ =0x03000bfe
    b lbl_0806156e
    .align 2, 0
lbl_08061560: .4byte 0x03000bfe
lbl_08061564:
    movs r0, #0x80
    lsls r0, r0, #4
    cmp r1, r0
    bne lbl_08061570
    ldr r0, lbl_08061574 @ =0x03000c02
lbl_0806156e:
    strh r2, [r0]
lbl_08061570:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061574: .4byte 0x03000c02

    thumb_func_start sub_08061578
sub_08061578: @ 0x08061578
    push {lr}
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r3, r1, #0
    movs r2, #0
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_08061594
    ldr r2, lbl_08061590 @ =0x03000bf4
    b lbl_080615be
    .align 2, 0
lbl_08061590: .4byte 0x03000bf4
lbl_08061594:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_080615a4
    ldr r2, lbl_080615a0 @ =0x03000bf8
    b lbl_080615be
    .align 2, 0
lbl_080615a0: .4byte 0x03000bf8
lbl_080615a4:
    movs r0, #0x80
    lsls r0, r0, #3
    cmp r1, r0
    bne lbl_080615b4
    ldr r2, lbl_080615b0 @ =0x03000bfc
    b lbl_080615be
    .align 2, 0
lbl_080615b0: .4byte 0x03000bfc
lbl_080615b4:
    movs r0, #0x80
    lsls r0, r0, #4
    cmp r3, r0
    bne lbl_080615be
    ldr r2, lbl_080615c4 @ =0x03000c00
lbl_080615be:
    adds r0, r2, #0
    pop {r1}
    bx r1
    .align 2, 0
lbl_080615c4: .4byte 0x03000c00

    thumb_func_start sub_080615c8
sub_080615c8: @ 0x080615c8
    push {lr}
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r3, r1, #0
    movs r2, #0
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_080615e4
    ldr r2, lbl_080615e0 @ =0x03000bf6
    b lbl_0806160e
    .align 2, 0
lbl_080615e0: .4byte 0x03000bf6
lbl_080615e4:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_080615f4
    ldr r2, lbl_080615f0 @ =0x03000bfa
    b lbl_0806160e
    .align 2, 0
lbl_080615f0: .4byte 0x03000bfa
lbl_080615f4:
    movs r0, #0x80
    lsls r0, r0, #3
    cmp r1, r0
    bne lbl_08061604
    ldr r2, lbl_08061600 @ =0x03000bfe
    b lbl_0806160e
    .align 2, 0
lbl_08061600: .4byte 0x03000bfe
lbl_08061604:
    movs r0, #0x80
    lsls r0, r0, #4
    cmp r3, r0
    bne lbl_0806160e
    ldr r2, lbl_08061614 @ =0x03000c02
lbl_0806160e:
    adds r0, r2, #0
    pop {r1}
    bx r1
    .align 2, 0
lbl_08061614: .4byte 0x03000c02

    thumb_func_start sub_08061618
sub_08061618: @ 0x08061618
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r1, #0
    adds r5, r0, #0
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov ip, r2
    movs r7, #0
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r2
    cmp r0, #0
    beq lbl_0806164e
    ldr r0, lbl_080616d0 @ =0x08754bc4
    ldr r2, [r0]
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #2
    adds r2, #0x38
    adds r2, r2, r1
    ldr r1, [r2]
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r7, r0, #0x1f
lbl_0806164e:
    movs r0, #0x80
    lsls r0, r0, #2
    mov r1, ip
    ands r0, r1
    cmp r0, #0
    beq lbl_08061676
    ldr r0, lbl_080616d0 @ =0x08754bc4
    ldr r2, [r0]
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    adds r0, #2
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #2
    adds r2, #0x38
    adds r2, r2, r1
    ldr r0, [r2]
    cmp r0, #0
    beq lbl_08061676
    adds r7, #1
lbl_08061676:
    movs r0, #0x80
    lsls r0, r0, #3
    mov r2, ip
    ands r0, r2
    cmp r0, #0
    beq lbl_0806169e
    ldr r0, lbl_080616d0 @ =0x08754bc4
    ldr r2, [r0]
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    adds r0, #4
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #2
    adds r2, #0x38
    adds r2, r2, r1
    ldr r0, [r2]
    cmp r0, #0
    beq lbl_0806169e
    adds r7, #1
lbl_0806169e:
    movs r0, #0x80
    lsls r0, r0, #4
    mov r3, ip
    ands r0, r3
    cmp r0, #0
    beq lbl_080616c6
    ldr r0, lbl_080616d0 @ =0x08754bc4
    ldr r2, [r0]
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    adds r0, #6
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #2
    adds r2, #0x38
    adds r2, r2, r1
    ldr r0, [r2]
    cmp r0, #0
    beq lbl_080616c6
    adds r7, #1
lbl_080616c6:
    cmp r7, #0
    beq lbl_080616d4
    movs r0, #0
    b lbl_080618ce
    .align 2, 0
lbl_080616d0: .4byte 0x08754bc4
lbl_080616d4:
    cmp r7, #1
    beq lbl_080616fc
    cmp r7, #1
    bgt lbl_080616e2
    cmp r7, #0
    beq lbl_080616ec
    b lbl_08061738
lbl_080616e2:
    cmp r7, #2
    beq lbl_08061710
    cmp r7, #3
    beq lbl_08061724
    b lbl_08061738
lbl_080616ec:
    movs r0, #0x80
    lsls r0, r0, #1
    mov r1, ip
    ands r0, r1
    movs r3, #0
    cmp r0, #0
    bne lbl_0806173c
    b lbl_08061738
lbl_080616fc:
    movs r0, #0x80
    lsls r0, r0, #2
    mov r2, ip
    ands r0, r2
    movs r3, #1
    rsbs r3, r3, #0
    cmp r0, #0
    beq lbl_0806173c
    movs r3, #2
    b lbl_0806173c
lbl_08061710:
    movs r0, #0x80
    lsls r0, r0, #3
    mov r3, ip
    ands r0, r3
    movs r3, #1
    rsbs r3, r3, #0
    cmp r0, #0
    beq lbl_0806173c
    movs r3, #4
    b lbl_0806173c
lbl_08061724:
    movs r0, #0x80
    lsls r0, r0, #4
    mov r1, ip
    ands r0, r1
    movs r3, #1
    rsbs r3, r3, #0
    cmp r0, #0
    beq lbl_0806173c
    movs r3, #6
    b lbl_0806173c
lbl_08061738:
    movs r3, #1
    rsbs r3, r3, #0
lbl_0806173c:
    adds r7, #1
    cmp r3, #0
    bge lbl_08061744
    b lbl_080618c6
lbl_08061744:
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    adds r3, r3, r0
    ldr r2, lbl_08061760 @ =0x08754bc4
    mov r8, r2
    cmp r3, #7
    bls lbl_08061754
    b lbl_08061860
lbl_08061754:
    lsls r0, r3, #2
    ldr r1, lbl_08061764 @ =lbl_08061768
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08061760: .4byte 0x08754bc4
lbl_08061764: .4byte lbl_08061768
lbl_08061768: @ jump table
    .4byte lbl_08061788 @ case 0
    .4byte lbl_080617a4 @ case 1
    .4byte lbl_080617c0 @ case 2
    .4byte lbl_080617dc @ case 3
    .4byte lbl_080617f8 @ case 4
    .4byte lbl_08061814 @ case 5
    .4byte lbl_08061830 @ case 6
    .4byte lbl_0806184c @ case 7
lbl_08061788:
    ldr r2, lbl_0806179c @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #2
    adds r1, #0x38
    adds r1, r1, r0
    ldr r0, lbl_080617a0 @ =0x03000bf4
    b lbl_0806185c
    .align 2, 0
lbl_0806179c: .4byte 0x08754bc4
lbl_080617a0: .4byte 0x03000bf4
lbl_080617a4:
    ldr r2, lbl_080617b8 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #2
    adds r1, #0x38
    adds r1, r1, r0
    ldr r0, lbl_080617bc @ =0x03000bf6
    b lbl_0806185c
    .align 2, 0
lbl_080617b8: .4byte 0x08754bc4
lbl_080617bc: .4byte 0x03000bf6
lbl_080617c0:
    ldr r2, lbl_080617d4 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #2
    adds r1, #0x38
    adds r1, r1, r0
    ldr r0, lbl_080617d8 @ =0x03000bf8
    b lbl_0806185c
    .align 2, 0
lbl_080617d4: .4byte 0x08754bc4
lbl_080617d8: .4byte 0x03000bf8
lbl_080617dc:
    ldr r2, lbl_080617f0 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #2
    adds r1, #0x38
    adds r1, r1, r0
    ldr r0, lbl_080617f4 @ =0x03000bfa
    b lbl_0806185c
    .align 2, 0
lbl_080617f0: .4byte 0x08754bc4
lbl_080617f4: .4byte 0x03000bfa
lbl_080617f8:
    ldr r2, lbl_0806180c @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #2
    adds r1, #0x38
    adds r1, r1, r0
    ldr r0, lbl_08061810 @ =0x03000bfc
    b lbl_0806185c
    .align 2, 0
lbl_0806180c: .4byte 0x08754bc4
lbl_08061810: .4byte 0x03000bfc
lbl_08061814:
    ldr r2, lbl_08061828 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #2
    adds r1, #0x38
    adds r1, r1, r0
    ldr r0, lbl_0806182c @ =0x03000bfe
    b lbl_0806185c
    .align 2, 0
lbl_08061828: .4byte 0x08754bc4
lbl_0806182c: .4byte 0x03000bfe
lbl_08061830:
    ldr r2, lbl_08061844 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #2
    adds r1, #0x38
    adds r1, r1, r0
    ldr r0, lbl_08061848 @ =0x03000c00
    b lbl_0806185c
    .align 2, 0
lbl_08061844: .4byte 0x08754bc4
lbl_08061848: .4byte 0x03000c00
lbl_0806184c:
    ldr r2, lbl_08061888 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #2
    adds r1, #0x38
    adds r1, r1, r0
    ldr r0, lbl_0806188c @ =0x03000c02
lbl_0806185c:
    str r0, [r1]
    mov r8, r2
lbl_08061860:
    adds r4, r6, #0
    lsls r0, r4, #0x18
    cmp r0, #0
    bne lbl_08061890
    mov r0, r8
    ldr r2, [r0]
    lsls r1, r3, #1
    adds r0, r1, r3
    lsls r0, r0, #2
    adds r0, r2, r0
    movs r2, #1
    rsbs r2, r2, #0
    adds r4, r2, #0
    cmp r5, #0
    blt lbl_08061880
    movs r4, #1
lbl_08061880:
    adds r0, #0x3f
    strb r4, [r0]
    b lbl_080618a2
    .align 2, 0
lbl_08061888: .4byte 0x08754bc4
lbl_0806188c: .4byte 0x03000c02
lbl_08061890:
    mov r1, r8
    ldr r0, [r1]
    lsls r2, r3, #1
    adds r1, r2, r3
    lsls r1, r1, #2
    adds r0, r0, r1
    adds r0, #0x3f
    strb r4, [r0]
    adds r1, r2, #0
lbl_080618a2:
    mov r2, r8
    ldr r0, [r2]
    adds r2, r1, r3
    lsls r2, r2, #2
    adds r0, r0, r2
    lsls r1, r6, #0x10
    asrs r1, r1, #0x18
    adds r0, #0x40
    strb r1, [r0]
    mov r3, r8
    ldr r0, [r3]
    adds r0, r0, r2
    adds r0, #0x3e
    strb r1, [r0]
    ldr r0, [r3]
    adds r0, r0, r2
    asrs r1, r5, #0x10
    strh r1, [r0, #0x3c]
lbl_080618c6:
    cmp r7, #3
    bgt lbl_080618cc
    b lbl_080616d4
lbl_080618cc:
    movs r0, #1
lbl_080618ce:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_080618d8
sub_080618d8: @ 0x080618d8
    push {r4, lr}
    adds r2, r0, #0
    movs r0, #4
    ldrsh r3, [r2, r0]
    cmp r3, #0
    beq lbl_08061938
    ldrb r1, [r2, #6]
    movs r0, #6
    ldrsb r0, [r2, r0]
    cmp r0, #0
    ble lbl_080618f4
    subs r0, r1, #1
    strb r0, [r2, #6]
    b lbl_08061930
lbl_080618f4:
    ldrb r0, [r2, #8]
    strb r0, [r2, #6]
    movs r0, #7
    ldrsb r0, [r2, r0]
    cmp r0, #0
    blt lbl_08061908
    movs r4, #1
    cmp r3, r0
    bge lbl_08061914
    b lbl_08061920
lbl_08061908:
    movs r0, #7
    ldrsb r0, [r2, r0]
    movs r4, #1
    cmp r3, r0
    ble lbl_08061914
    movs r4, #0
lbl_08061914:
    cmp r4, #0
    beq lbl_08061920
    adds r4, r0, #0
    ldrh r0, [r2, #4]
    subs r0, r0, r4
    b lbl_08061926
lbl_08061920:
    movs r1, #4
    ldrsh r4, [r2, r1]
    movs r0, #0
lbl_08061926:
    strh r0, [r2, #4]
    ldr r1, [r2]
    ldrh r0, [r1]
    adds r0, r0, r4
    strh r0, [r1]
lbl_08061930:
    movs r1, #4
    ldrsh r0, [r2, r1]
    cmp r0, #0
    bne lbl_0806193c
lbl_08061938:
    movs r0, #0
    str r0, [r2]
lbl_0806193c:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_08061944
sub_08061944: @ 0x08061944
    push {r4, lr}
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r4, r1, #0
    movs r3, #0
    movs r2, #1
    rsbs r2, r2, #0
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_0806195e
    movs r2, #0
    b lbl_08061984
lbl_0806195e:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_0806196a
    movs r2, #2
    b lbl_08061984
lbl_0806196a:
    movs r0, #0x80
    lsls r0, r0, #3
    cmp r1, r0
    bne lbl_08061976
    movs r2, #4
    b lbl_08061984
lbl_08061976:
    movs r0, #0x80
    lsls r0, r0, #4
    cmp r4, r0
    bne lbl_08061980
    movs r2, #6
lbl_08061980:
    cmp r2, #0
    blt lbl_080619b8
lbl_08061984:
    ldr r0, lbl_080619c0 @ =0x08754bc4
    ldr r1, [r0]
    lsls r0, r2, #1
    adds r0, r0, r2
    lsls r0, r0, #2
    adds r1, #0x38
    adds r0, r1, r0
    ldr r0, [r0]
    cmp r0, #0
    beq lbl_0806199c
    movs r0, #1
    orrs r3, r0
lbl_0806199c:
    adds r0, r2, #1
    lsls r0, r0, #0x18
    asrs r2, r0, #0x18
    lsls r0, r2, #1
    adds r0, r0, r2
    lsls r0, r0, #2
    adds r0, r1, r0
    ldr r0, [r0]
    cmp r0, #0
    beq lbl_080619b8
    movs r0, #2
    orrs r3, r0
    lsls r0, r3, #0x18
    lsrs r3, r0, #0x18
lbl_080619b8:
    adds r0, r3, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080619c0: .4byte 0x08754bc4

    thumb_func_start sub_080619c4
sub_080619c4: @ 0x080619c4
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080619f8
    movs r6, #0x38
    movs r5, #0
    movs r4, #7
lbl_080619d8:
    ldr r0, lbl_08061a64 @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0x38
    adds r0, r0, r5
    ldr r0, [r0]
    cmp r0, #0
    beq lbl_080619ee
    adds r0, r1, r6
    bl sub_080618d8
lbl_080619ee:
    adds r6, #0xc
    adds r5, #0xc
    subs r4, #1
    cmp r4, #0
    bge lbl_080619d8
lbl_080619f8:
    ldr r4, lbl_08061a64 @ =0x08754bc4
    ldr r1, [r4]
    ldr r0, lbl_08061a68 @ =0x03000bf4
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1, #0x30]
    ldr r0, lbl_08061a6c @ =0x03000bf6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1, #0x28]
    ldr r0, lbl_08061a70 @ =0x03000bf8
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1, #0x32]
    ldr r0, lbl_08061a74 @ =0x03000bfa
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1, #0x2a]
    ldr r0, lbl_08061a78 @ =0x03000bfc
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1, #0x34]
    ldr r0, lbl_08061a7c @ =0x03000bfe
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1, #0x2c]
    ldr r0, lbl_08061a80 @ =0x03000c00
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1, #0x36]
    ldr r0, lbl_08061a84 @ =0x03000c02
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1, #0x2e]
    adds r1, #0x98
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08061a4a
    movs r0, #0
    bl sub_08061a88
lbl_08061a4a:
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0xa0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08061a5c
    movs r0, #1
    bl sub_08061a88
lbl_08061a5c:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061a64: .4byte 0x08754bc4
lbl_08061a68: .4byte 0x03000bf4
lbl_08061a6c: .4byte 0x03000bf6
lbl_08061a70: .4byte 0x03000bf8
lbl_08061a74: .4byte 0x03000bfa
lbl_08061a78: .4byte 0x03000bfc
lbl_08061a7c: .4byte 0x03000bfe
lbl_08061a80: .4byte 0x03000c00
lbl_08061a84: .4byte 0x03000c02

    thumb_func_start sub_08061a88
sub_08061a88: @ 0x08061a88
    push {r4, lr}
    adds r2, r1, #0
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldrb r1, [r2, #2]
    movs r0, #2
    ldrsb r0, [r2, r0]
    cmp r0, #1
    ble lbl_08061aa0
    subs r0, r1, #1
    strb r0, [r2, #2]
    b lbl_08061b8c
lbl_08061aa0:
    ldrb r0, [r2, #3]
    strb r0, [r2, #2]
    ldr r0, lbl_08061b28 @ =0x0875fe58
    ldrb r3, [r2, #4]
    adds r0, r3, r0
    ldrb r1, [r2, #5]
    ldrb r0, [r0]
    cmp r1, r0
    ble lbl_08061ab6
    movs r0, #0
    strb r0, [r2, #5]
lbl_08061ab6:
    ldr r1, lbl_08061b2c @ =0x0875fe48
    lsls r0, r3, #2
    adds r0, r0, r1
    ldrb r1, [r2, #5]
    ldr r0, [r0]
    adds r0, r0, r1
    movs r3, #0
    ldrsb r3, [r0, r3]
    adds r1, #1
    strb r1, [r2, #5]
    cmp r4, #0
    bne lbl_08061b34
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08061ae4
    ldr r0, lbl_08061b30 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x30]
    adds r0, r0, r3
    strh r0, [r1, #0x30]
lbl_08061ae4:
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08061afa
    ldr r0, lbl_08061b30 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x32]
    adds r0, r0, r3
    strh r0, [r1, #0x32]
lbl_08061afa:
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #3
    ands r0, r1
    cmp r0, #0
    beq lbl_08061b10
    ldr r0, lbl_08061b30 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x34]
    adds r0, r0, r3
    strh r0, [r1, #0x34]
lbl_08061b10:
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_08061b8c
    ldr r0, lbl_08061b30 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x36]
    adds r0, r0, r3
    strh r0, [r1, #0x36]
    b lbl_08061b8c
    .align 2, 0
lbl_08061b28: .4byte 0x0875fe58
lbl_08061b2c: .4byte 0x0875fe48
lbl_08061b30: .4byte 0x08754bc4
lbl_08061b34:
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08061b4a
    ldr r0, lbl_08061b94 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x28]
    adds r0, r0, r3
    strh r0, [r1, #0x28]
lbl_08061b4a:
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08061b60
    ldr r0, lbl_08061b94 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x2a]
    adds r0, r0, r3
    strh r0, [r1, #0x2a]
lbl_08061b60:
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #3
    ands r0, r1
    cmp r0, #0
    beq lbl_08061b76
    ldr r0, lbl_08061b94 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x2c]
    adds r0, r0, r3
    strh r0, [r1, #0x2c]
lbl_08061b76:
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_08061b8c
    ldr r0, lbl_08061b94 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x2e]
    adds r0, r0, r3
    strh r0, [r1, #0x2e]
lbl_08061b8c:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061b94: .4byte 0x08754bc4

    thumb_func_start sub_08061b98
sub_08061b98: @ 0x08061b98
    push {r4, r5, lr}
    adds r3, r0, #0
    lsls r1, r1, #0x10
    lsrs r4, r1, #0x10
    adds r5, r4, #0
    lsls r0, r3, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08061bbc
    ldr r0, lbl_08061bb8 @ =0x08754bc4
    ldr r0, [r0]
    adds r2, r0, #0
    adds r2, #0x98
    movs r1, #0
    strh r4, [r2]
    b lbl_08061bcc
    .align 2, 0
lbl_08061bb8: .4byte 0x08754bc4
lbl_08061bbc:
    cmp r0, #1
    bne lbl_08061bd8
    ldr r0, lbl_08061be0 @ =0x08754bc4
    ldr r0, [r0]
    adds r2, r0, #0
    adds r2, #0xa0
    movs r1, #0
    strh r5, [r2]
lbl_08061bcc:
    strb r1, [r2, #2]
    lsrs r0, r3, #8
    strb r0, [r2, #3]
    lsrs r0, r3, #0x10
    strb r0, [r2, #4]
    strb r1, [r2, #5]
lbl_08061bd8:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061be0: .4byte 0x08754bc4

    thumb_func_start sub_08061be4
sub_08061be4: @ 0x08061be4
    push {r4, r5, r6, r7, lr}
    ldr r1, lbl_08061c18 @ =0x08754bc4
    ldr r2, [r1]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r3, [r0]
    movs r0, #5
    ands r0, r3
    adds r7, r1, #0
    cmp r0, #0
    bne lbl_08061bfc
    b lbl_08061d62
lbl_08061bfc:
    movs r0, #1
    ands r0, r3
    cmp r0, #0
    beq lbl_08061ca0
    adds r1, r2, #0
    adds r1, #0xb0
    ldrb r3, [r1]
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r0, #0
    ble lbl_08061c1c
    subs r0, r3, #1
    b lbl_08061d60
    .align 2, 0
lbl_08061c18: .4byte 0x08754bc4
lbl_08061c1c:
    adds r0, r2, #0
    adds r0, #0xaf
    ldrb r0, [r0]
    strb r0, [r1]
    ldr r0, lbl_08061c4c @ =0x030013ae
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0xa9
    ldrb r3, [r2]
    ldrh r4, [r0]
    adds r2, r3, #0
    adds r5, r0, #0
    cmp r4, r2
    beq lbl_08061c6e
    cmp r4, r2
    bhs lbl_08061c50
    ldrh r0, [r5]
    adds r1, #0xae
    ldrb r1, [r1]
    adds r0, r0, r1
    cmp r0, r3
    bgt lbl_08061c5c
    b lbl_08061c60
    .align 2, 0
lbl_08061c4c: .4byte 0x030013ae
lbl_08061c50:
    ldrh r0, [r5]
    adds r1, #0xae
    ldrb r1, [r1]
    subs r0, r0, r1
    cmp r0, r3
    bge lbl_08061c60
lbl_08061c5c:
    strh r3, [r5]
    b lbl_08061c62
lbl_08061c60:
    strh r0, [r5]
lbl_08061c62:
    ldr r0, [r7]
    adds r0, #0xa9
    ldrh r1, [r5]
    ldrb r0, [r0]
    cmp r1, r0
    bne lbl_08061d62
lbl_08061c6e:
    ldr r1, [r7]
    adds r1, #0xa8
    ldrb r2, [r1]
    movs r0, #0xfe
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r7]
    adds r1, #0xa8
    ldrb r2, [r1]
    movs r0, #2
    orrs r0, r2
    strb r0, [r1]
    ldr r2, [r7]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_08061d62
    adds r0, r2, #0
    adds r0, #0xb2
    ldrh r0, [r0]
    strh r0, [r2, #0x1e]
    b lbl_08061d62
lbl_08061ca0:
    adds r1, r2, #0
    adds r1, #0xb6
    ldrb r3, [r1]
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r0, #0
    ble lbl_08061cb2
    subs r0, r3, #1
    b lbl_08061d60
lbl_08061cb2:
    adds r0, r2, #0
    adds r0, #0xb5
    ldrb r0, [r0]
    strb r0, [r1]
    ldr r0, lbl_08061ce0 @ =0x030013b0
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0xaa
    ldrb r3, [r2]
    ldrh r4, [r0]
    adds r2, r3, #0
    adds r6, r0, #0
    cmp r4, r2
    beq lbl_08061cf6
    cmp r4, r2
    bhs lbl_08061ce4
    ldrh r0, [r6]
    adds r1, #0xb4
    ldrb r1, [r1]
    adds r0, r0, r1
    cmp r0, r3
    bgt lbl_08061cf0
    b lbl_08061cf4
    .align 2, 0
lbl_08061ce0: .4byte 0x030013b0
lbl_08061ce4:
    ldrh r0, [r6]
    adds r1, #0xb4
    ldrb r1, [r1]
    subs r0, r0, r1
    cmp r0, r3
    bge lbl_08061cf4
lbl_08061cf0:
    strh r3, [r6]
    b lbl_08061cf6
lbl_08061cf4:
    strh r0, [r6]
lbl_08061cf6:
    ldr r0, lbl_08061d1c @ =0x030013b2
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0xab
    ldrb r3, [r2]
    ldrh r4, [r0]
    adds r2, r3, #0
    adds r5, r0, #0
    cmp r4, r2
    beq lbl_08061d32
    cmp r4, r2
    bhs lbl_08061d20
    ldrh r0, [r5]
    adds r1, #0xb4
    ldrb r1, [r1]
    adds r0, r0, r1
    cmp r0, r3
    bgt lbl_08061d2c
    b lbl_08061d30
    .align 2, 0
lbl_08061d1c: .4byte 0x030013b2
lbl_08061d20:
    ldrh r0, [r5]
    adds r1, #0xb4
    ldrb r1, [r1]
    subs r0, r0, r1
    cmp r0, r3
    bge lbl_08061d30
lbl_08061d2c:
    strh r3, [r5]
    b lbl_08061d32
lbl_08061d30:
    strh r0, [r5]
lbl_08061d32:
    ldr r2, [r7]
    adds r1, r2, #0
    adds r1, #0xaa
    ldrh r0, [r6]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_08061d62
    adds r1, r2, #0
    adds r1, #0xab
    ldrh r0, [r5]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_08061d62
    adds r2, #0xa8
    ldrb r1, [r2]
    movs r0, #0xfb
    ands r0, r1
    strb r0, [r2]
    ldr r1, [r7]
    adds r1, #0xa8
    ldrb r2, [r1]
    movs r0, #8
    orrs r0, r2
lbl_08061d60:
    strb r0, [r1]
lbl_08061d62:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_08061d68
sub_08061d68: @ 0x08061d68
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r4, lbl_08061dc4 @ =0x08754bc4
    mov r8, r4
    ldr r5, [r4]
    adds r5, #0xa8
    ldrb r6, [r5]
    movs r4, #0xfd
    ands r4, r6
    strb r4, [r5]
    mov r4, r8
    ldr r5, [r4]
    adds r5, #0xa8
    ldrb r6, [r5]
    movs r4, #1
    orrs r4, r6
    strb r4, [r5]
    mov r5, r8
    ldr r4, [r5]
    adds r4, #0xa9
    strb r1, [r4]
    ldr r1, [r5]
    adds r1, #0xae
    strb r3, [r1]
    ldr r1, [r5]
    adds r1, #0xaf
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    strb r2, [r1]
    ldr r1, [r5]
    adds r1, #0xb0
    strb r2, [r1]
    ldr r2, [r5]
    adds r1, r2, #0
    adds r1, #0xac
    strh r0, [r1]
    strh r0, [r2, #0x1e]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061dc4: .4byte 0x08754bc4

    thumb_func_start sub_08061dc8
sub_08061dc8: @ 0x08061dc8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r4, [sp, #0x18]
    mov r8, r4
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    ldr r6, lbl_08061e34 @ =0x08754bc4
    ldr r4, [r6]
    adds r4, #0xa8
    ldrb r5, [r4]
    movs r0, #0xf7
    ands r0, r5
    strb r0, [r4]
    ldr r4, [r6]
    adds r4, #0xa8
    ldrb r5, [r4]
    movs r0, #4
    orrs r0, r5
    strb r0, [r4]
    ldr r0, [r6]
    adds r0, #0xaa
    strb r1, [r0]
    ldr r0, [r6]
    adds r0, #0xab
    strb r2, [r0]
    ldr r0, [r6]
    adds r0, #0xb4
    mov r1, r8
    strb r1, [r0]
    ldr r0, [r6]
    adds r0, #0xb5
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    strb r3, [r0]
    ldr r0, [r6]
    adds r0, #0xb6
    strb r3, [r0]
    ldr r2, [r6]
    adds r0, r2, #0
    adds r0, #0xb2
    strh r7, [r0]
    subs r0, #0xa
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_08061e2a
    strh r7, [r2, #0x1e]
lbl_08061e2a:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061e34: .4byte 0x08754bc4

    thumb_func_start sub_08061e38
sub_08061e38: @ 0x08061e38
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    ldr r0, lbl_08061ef0 @ =0x030013ae
    movs r2, #0
    strh r2, [r0]
    ldr r1, lbl_08061ef4 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08061ef8 @ =0x030013b2
    strh r2, [r0]
    ldr r1, lbl_08061efc @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0xa8
    movs r3, #0
    strb r2, [r0]
    ldr r0, [r1]
    strh r3, [r0, #0x1e]
    movs r2, #0
    adds r5, r1, #0
    ldr r0, lbl_08061f00 @ =0x03000c04
    mov r8, r0
    ldr r1, lbl_08061f04 @ =0x03000c06
    mov sb, r1
    mov ip, r5
    ldr r3, lbl_08061f08 @ =0x0840d058
lbl_08061e70:
    mov r4, ip
    ldr r0, [r4]
    lsls r1, r2, #5
    adds r0, r0, r1
    adds r0, #0xf0
    adds r1, r3, #0
    ldm r1!, {r4, r6, r7}
    stm r0!, {r4, r6, r7}
    ldm r1!, {r4, r6, r7}
    stm r0!, {r4, r6, r7}
    ldm r1!, {r6, r7}
    stm r0!, {r6, r7}
    adds r2, #1
    cmp r2, #0x1d
    ble lbl_08061e70
    movs r0, #0
    mov r1, r8
    strh r0, [r1]
    movs r4, #0x80
    lsls r4, r4, #1
    adds r0, r4, #0
    mov r6, sb
    strh r0, [r6]
    ldr r2, [r5]
    adds r2, #8
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #4
    bl BitFill
    ldr r2, [r5]
    adds r2, #0xc0
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x30
    bl BitFill
    ldr r2, [r5]
    adds r2, #0x38
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x60
    bl BitFill
    ldr r2, [r5]
    adds r2, #0xc
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x10
    bl BitFill
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061ef0: .4byte 0x030013ae
lbl_08061ef4: .4byte 0x030013b0
lbl_08061ef8: .4byte 0x030013b2
lbl_08061efc: .4byte 0x08754bc4
lbl_08061f00: .4byte 0x03000c04
lbl_08061f04: .4byte 0x03000c06
lbl_08061f08: .4byte 0x0840d058

    thumb_func_start sub_08061f0c
sub_08061f0c: @ 0x08061f0c
    ldr r0, lbl_08061f20 @ =0x08754bc4
    ldr r2, [r0]
    movs r0, #0
    strh r0, [r2, #0x1c]
    ldr r1, lbl_08061f24 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    movs r0, #0xff
    strh r0, [r2, #0x1e]
    bx lr
    .align 2, 0
lbl_08061f20: .4byte 0x08754bc4
lbl_08061f24: .4byte 0x030013ae

    thumb_func_start sub_08061f28
sub_08061f28: @ 0x08061f28
    ldr r0, lbl_08061f3c @ =0x08754bc4
    ldr r2, [r0]
    movs r0, #0
    strh r0, [r2, #0x1c]
    ldr r1, lbl_08061f40 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    movs r0, #0xbf
    strh r0, [r2, #0x1e]
    bx lr
    .align 2, 0
lbl_08061f3c: .4byte 0x08754bc4
lbl_08061f40: .4byte 0x030013ae

    thumb_func_start sub_08061f44
sub_08061f44: @ 0x08061f44
    push {lr}
    bl sub_08061f60
    bl sub_080621d0
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_08061f58
    movs r0, #0
    b lbl_08061f5a
lbl_08061f58:
    movs r0, #1
lbl_08061f5a:
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_08061f60
sub_08061f60: @ 0x08061f60
    push {r4, lr}
    sub sp, #4
    ldr r4, lbl_08061f98 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xbc
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08061f90
    ldr r0, lbl_08061f9c @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r1, r1, r3
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r4]
    adds r0, #0xbc
    movs r1, #0
    strb r1, [r0]
lbl_08061f90:
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08061f98: .4byte 0x08754bc4
lbl_08061f9c: .4byte 0x08754bb4

    thumb_func_start sub_08061fa0
sub_08061fa0: @ 0x08061fa0
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r7, #0
    ldr r1, lbl_08061fe8 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0xbb
    strb r7, [r0]
    ldr r0, [r1]
    adds r0, #0xbc
    strb r7, [r0]
    ldr r0, [r1]
    adds r0, #0xb8
    strh r7, [r0]
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r0, lbl_08061fec @ =0x08754bb4
    ldr r2, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    subs r0, r4, #1
    cmp r0, #9
    bls lbl_08061fde
    b lbl_080621c4
lbl_08061fde:
    lsls r0, r0, #2
    ldr r1, lbl_08061ff0 @ =lbl_08061ff4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08061fe8: .4byte 0x08754bc4
lbl_08061fec: .4byte 0x08754bb4
lbl_08061ff0: .4byte lbl_08061ff4
lbl_08061ff4: @ jump table
    .4byte lbl_0806201c @ case 0
    .4byte lbl_08062068 @ case 1
    .4byte lbl_080620b8 @ case 2
    .4byte lbl_080621c4 @ case 3
    .4byte lbl_08062108 @ case 4
    .4byte lbl_0806210e @ case 5
    .4byte lbl_08062134 @ case 6
    .4byte lbl_08062154 @ case 7
    .4byte lbl_0806217c @ case 8
    .4byte lbl_0806219c @ case 9
lbl_0806201c:
    movs r6, #0xa0
    lsls r6, r6, #0x13
    movs r4, #0x80
    lsls r4, r4, #3
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r6, #0
    adds r3, r4, #0
    bl BitFill
    ldr r0, lbl_08062060 @ =0x08754bb4
    ldr r2, [r0]
    adds r2, r2, r4
    str r5, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r4, #0
    bl DMATransfer
    ldr r2, lbl_08062064 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xba
    movs r3, #0
    strb r3, [r0]
    ldr r0, [r2]
    adds r0, #0xbd
    movs r1, #2
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xbe
    strb r3, [r0]
    b lbl_0806216e
    .align 2, 0
lbl_08062060: .4byte 0x08754bb4
lbl_08062064: .4byte 0x08754bc4
lbl_08062068:
    movs r6, #0xa0
    lsls r6, r6, #0x13
    movs r4, #0x80
    lsls r4, r4, #3
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r6, #0
    adds r3, r4, #0
    bl BitFill
    ldr r0, lbl_080620b0 @ =0x08754bb4
    ldr r2, [r0]
    adds r2, r2, r4
    str r5, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r4, #0
    bl DMATransfer
    ldr r2, lbl_080620b4 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xba
    movs r3, #0
    strb r3, [r0]
    ldr r0, [r2]
    adds r0, #0xbd
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xbe
    movs r1, #4
    strb r1, [r0]
    b lbl_0806216e
    .align 2, 0
lbl_080620b0: .4byte 0x08754bb4
lbl_080620b4: .4byte 0x08754bc4
lbl_080620b8:
    movs r6, #0xa0
    lsls r6, r6, #0x13
    movs r4, #0x80
    lsls r4, r4, #3
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r6, #0
    adds r3, r4, #0
    bl BitFill
    ldr r0, lbl_08062100 @ =0x08754bb4
    ldr r2, [r0]
    adds r2, r2, r4
    str r5, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r4, #0
    bl DMATransfer
    ldr r2, lbl_08062104 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xba
    movs r3, #0
    strb r3, [r0]
    ldr r0, [r2]
    adds r0, #0xbd
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xbe
    movs r1, #8
    strb r1, [r0]
    b lbl_0806216e
    .align 2, 0
lbl_08062100: .4byte 0x08754bb4
lbl_08062104: .4byte 0x08754bc4
lbl_08062108:
    movs r0, #0x14
    bl FadeMusic
lbl_0806210e:
    ldr r1, lbl_08062130 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0xba
    movs r3, #0
    movs r2, #2
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0xbd
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0xbe
    strb r3, [r0]
    ldr r0, [r1]
    adds r0, #0xbf
    strb r2, [r0]
    b lbl_080621c6
    .align 2, 0
lbl_08062130: .4byte 0x08754bc4
lbl_08062134:
    ldr r2, lbl_08062150 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xba
    movs r3, #2
    strb r3, [r0]
    ldr r0, [r2]
    adds r0, #0xbd
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xbe
    movs r1, #4
    strb r1, [r0]
    b lbl_0806216e
    .align 2, 0
lbl_08062150: .4byte 0x08754bc4
lbl_08062154:
    ldr r2, lbl_08062178 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xba
    movs r4, #0
    movs r3, #2
    strb r3, [r0]
    ldr r0, [r2]
    adds r0, #0xbd
    movs r1, #8
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xbe
    strb r4, [r0]
lbl_0806216e:
    ldr r0, [r2]
    adds r0, #0xbf
    strb r3, [r0]
    b lbl_080621c6
    .align 2, 0
lbl_08062178: .4byte 0x08754bc4
lbl_0806217c:
    ldr r1, lbl_08062198 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0xba
    movs r3, #0
    movs r2, #2
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0xbd
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0xbe
    strb r3, [r0]
    ldr r0, [r1]
    b lbl_080621b8
    .align 2, 0
lbl_08062198: .4byte 0x08754bc4
lbl_0806219c:
    ldr r2, lbl_080621c0 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xba
    movs r1, #2
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xbd
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xbe
    movs r1, #4
    strb r1, [r0]
    ldr r0, [r2]
lbl_080621b8:
    adds r0, #0xbf
    movs r1, #3
    strb r1, [r0]
    b lbl_080621c6
    .align 2, 0
lbl_080621c0: .4byte 0x08754bc4
lbl_080621c4:
    movs r7, #1
lbl_080621c6:
    adds r0, r7, #0
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_080621d0
sub_080621d0: @ 0x080621d0
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #0xc
    movs r0, #0
    mov r8, r0
    ldr r7, lbl_08062204 @ =0x08754bc4
    ldr r2, [r7]
    adds r3, r2, #0
    adds r3, #0xb8
    ldrh r0, [r3]
    adds r0, #1
    movs r1, #0
    strh r0, [r3]
    adds r0, r2, #0
    adds r0, #0xba
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_080621f8
    b lbl_080623e4
lbl_080621f8:
    cmp r0, #1
    bgt lbl_08062208
    cmp r0, #0
    beq lbl_08062214
    b lbl_080623fe
    .align 2, 0
lbl_08062204: .4byte 0x08754bc4
lbl_08062208:
    cmp r0, #2
    beq lbl_080622dc
    cmp r0, #3
    bne lbl_08062212
    b lbl_080623e4
lbl_08062212:
    b lbl_080623fe
lbl_08062214:
    adds r0, r2, #0
    adds r0, #0xbc
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08062220
    b lbl_080623fe
lbl_08062220:
    movs r1, #0
    ldrsh r0, [r3, r1]
    adds r1, r2, #0
    adds r1, #0xbe
    ldrb r1, [r1]
    cmp r0, r1
    bge lbl_08062230
    b lbl_080623fe
lbl_08062230:
    adds r1, r2, #0
    adds r1, #0xbb
    ldrb r0, [r1]
    cmp r0, #0x1f
    bhi lbl_080622b0
    ldr r4, lbl_080622a8 @ =0x08754bb4
    ldr r0, [r4]
    str r0, [sp, #4]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r0, r0, r3
    str r0, [sp, #8]
    adds r0, r2, #0
    adds r0, #0xbf
    ldrb r0, [r0]
    ldrb r1, [r1]
    add r6, sp, #8
    ldr r5, lbl_080622ac @ =0x0000ffff
    str r5, [sp]
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r4]
    movs r2, #0x80
    lsls r2, r2, #2
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r3, #0xc0
    lsls r3, r3, #3
    adds r0, r0, r3
    str r0, [sp, #8]
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0xbf
    ldrb r0, [r0]
    adds r1, #0xbb
    ldrb r1, [r1]
    str r5, [sp]
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r7]
    adds r0, #0xbc
    movs r1, #1
    strb r1, [r0]
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0xbb
    ldrb r0, [r2]
    cmp r0, #0x1f
    beq lbl_08062366
    ldrb r0, [r2]
    adds r1, #0xbd
    ldrb r1, [r1]
    adds r0, r0, r1
    cmp r0, #0x1f
    bgt lbl_08062380
    b lbl_08062368
    .align 2, 0
lbl_080622a8: .4byte 0x08754bb4
lbl_080622ac: .4byte 0x0000ffff
lbl_080622b0:
    ldr r0, lbl_080622d8 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r2, r1, r3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r7]
    adds r0, #0xbc
    movs r1, #1
    strb r1, [r0]
    ldr r1, [r7]
    adds r1, #0xba
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_080623fe
    .align 2, 0
lbl_080622d8: .4byte 0x08754bb4
lbl_080622dc:
    adds r0, r2, #0
    adds r0, #0xbc
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_080622e8
    b lbl_080623fe
lbl_080622e8:
    movs r1, #0
    ldrsh r0, [r3, r1]
    adds r1, r2, #0
    adds r1, #0xbe
    ldrb r1, [r1]
    cmp r0, r1
    bge lbl_080622f8
    b lbl_080623fe
lbl_080622f8:
    mov r0, r8
    strh r0, [r3]
    adds r1, r2, #0
    adds r1, #0xbb
    ldrb r0, [r1]
    cmp r0, #0x1f
    bhi lbl_08062384
    ldr r4, lbl_0806236c @ =0x08754bb4
    ldr r0, [r4]
    str r0, [sp, #4]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r0, r0, r3
    str r0, [sp, #8]
    adds r0, r2, #0
    adds r0, #0xbf
    ldrb r0, [r0]
    ldrb r1, [r1]
    add r6, sp, #8
    ldr r5, lbl_08062370 @ =0x0000ffff
    str r5, [sp]
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r4]
    movs r2, #0x80
    lsls r2, r2, #2
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r3, #0xc0
    lsls r3, r3, #3
    adds r0, r0, r3
    str r0, [sp, #8]
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0xbf
    ldrb r0, [r0]
    adds r1, #0xbb
    ldrb r1, [r1]
    str r5, [sp]
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r7]
    adds r0, #0xbc
    movs r1, #1
    strb r1, [r0]
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0xbb
    ldrb r0, [r2]
    cmp r0, #0x1f
    bne lbl_08062374
lbl_08062366:
    adds r0, #1
lbl_08062368:
    strb r0, [r2]
    b lbl_080623fe
    .align 2, 0
lbl_0806236c: .4byte 0x08754bb4
lbl_08062370: .4byte 0x0000ffff
lbl_08062374:
    ldrb r0, [r2]
    adds r1, #0xbd
    ldrb r1, [r1]
    adds r0, r0, r1
    cmp r0, #0x1f
    ble lbl_08062368
lbl_08062380:
    movs r0, #0x1f
    b lbl_08062368
lbl_08062384:
    adds r0, r2, #0
    adds r0, #0xbf
    ldrb r0, [r0]
    cmp r0, #3
    bne lbl_080623b0
    ldr r1, lbl_080623a8 @ =0x00007fff
    ldr r0, lbl_080623ac @ =0x08754bb4
    ldr r2, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r2, r2, r3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl BitFill
    b lbl_080623c6
    .align 2, 0
lbl_080623a8: .4byte 0x00007fff
lbl_080623ac: .4byte 0x08754bb4
lbl_080623b0:
    ldr r0, lbl_080623dc @ =0x08754bb4
    ldr r2, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r2, r2, r3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
lbl_080623c6:
    ldr r2, lbl_080623e0 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xbc
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xba
    movs r1, #3
    strb r1, [r0]
    b lbl_080623fe
    .align 2, 0
lbl_080623dc: .4byte 0x08754bb4
lbl_080623e0: .4byte 0x08754bc4
lbl_080623e4:
    adds r0, r2, #0
    adds r0, #0xbc
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080623fe
    adds r0, r2, #0
    adds r0, #0xbb
    strb r1, [r0]
    ldr r0, [r7]
    adds r0, #0xba
    strb r1, [r0]
    movs r0, #1
    mov r8, r0
lbl_080623fe:
    mov r0, r8
    add sp, #0xc
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start kraid_rising_rising
kraid_rising_rising: @ 0x0806240c
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    ldr r0, lbl_0806242c @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #4]
    cmp r0, #5
    bls lbl_08062422
    b lbl_080626ae
lbl_08062422:
    lsls r0, r0, #2
    ldr r1, lbl_08062430 @ =lbl_08062434
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806242c: .4byte 0x08754bc4
lbl_08062430: .4byte lbl_08062434
lbl_08062434: @ jump table
    .4byte lbl_0806244c @ case 0
    .4byte lbl_0806255c @ case 1
    .4byte lbl_08062628 @ case 2
    .4byte lbl_08062640 @ case 3
    .4byte lbl_0806267c @ case 4
    .4byte lbl_08062698 @ case 5
lbl_0806244c:
    ldr r1, lbl_0806252c @ =0x040000d4
    ldr r0, lbl_08062530 @ =0x0836c0f8
    str r0, [r1]
    movs r2, #0xa0
    lsls r2, r2, #0x13
    str r2, [r1, #4]
    ldr r0, lbl_08062534 @ =0x80000070
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r0, #0
    strh r0, [r2]
    ldr r0, lbl_08062538 @ =0x0836fdd8
    ldr r4, lbl_0806253c @ =0x0836bea4
    ldrb r1, [r4, #0x10]
    lsls r1, r1, #0xe
    movs r5, #0xc0
    lsls r5, r5, #0x13
    adds r1, r1, r5
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08062540 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xa0
    lsls r0, r0, #6
    adds r1, r1, r0
    ldrb r2, [r4, #0x11]
    lsls r2, r2, #0xb
    adds r2, r2, r5
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r4, #0x10]
    ldr r1, [r4, #0x14]
    bl sub_0806141c
    bl sub_08061e38
    movs r4, #0
    ldr r1, lbl_08062544 @ =0x08754bc4
    mov r8, r1
    ldr r3, lbl_08062548 @ =0x0875fe5c
    movs r6, #0xc0
    movs r7, #0x82
    lsls r7, r7, #1
    adds r5, r3, #2
lbl_080624ae:
    mov r2, r8
    ldr r1, [r2]
    adds r1, r1, r6
    ldrh r0, [r3]
    adds r2, r1, #0
    adds r2, #0xf2
    strh r0, [r2]
    ldrh r2, [r5]
    adds r0, r1, #0
    adds r0, #0xf0
    strh r2, [r0]
    ldrh r0, [r3, #6]
    adds r1, r1, r7
    strh r0, [r1]
    adds r3, #8
    adds r6, #0x20
    adds r5, #8
    adds r4, #1
    cmp r4, #0xa
    bls lbl_080624ae
    movs r4, #0
    ldr r7, lbl_0806254c @ =0x03000c77
    mov r8, r7
    ldr r0, lbl_08062550 @ =0x0000ffe0
    mov sb, r0
    ldr r6, lbl_08062554 @ =0x0808c99c
    ldr r3, lbl_08062558 @ =0x0875feb4
    ldr r5, lbl_08062544 @ =0x08754bc4
lbl_080624e6:
    ldr r1, [r5]
    lsls r0, r4, #5
    adds r2, r1, r0
    ldrh r0, [r3]
    adds r1, r2, #0
    adds r1, #0xf2
    strh r0, [r1]
    adds r0, r2, #0
    adds r0, #0xf0
    mov r1, sb
    strh r1, [r0]
    mov r7, r8
    ldrb r0, [r7]
    adds r0, r0, r4
    adds r0, r0, r6
    ldrb r1, [r0]
    movs r0, #0x7f
    ands r0, r1
    movs r7, #0x82
    lsls r7, r7, #1
    adds r1, r2, r7
    strh r0, [r1]
    adds r3, #2
    adds r4, #1
    cmp r4, #5
    bls lbl_080624e6
    ldr r3, lbl_08062544 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1, #4]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #4]
    ldr r0, [r3]
    b lbl_080626ac
    .align 2, 0
lbl_0806252c: .4byte 0x040000d4
lbl_08062530: .4byte 0x0836c0f8
lbl_08062534: .4byte 0x80000070
lbl_08062538: .4byte 0x0836fdd8
lbl_0806253c: .4byte 0x0836bea4
lbl_08062540: .4byte 0x08754bb4
lbl_08062544: .4byte 0x08754bc4
lbl_08062548: .4byte 0x0875fe5c
lbl_0806254c: .4byte 0x03000c77
lbl_08062550: .4byte 0x0000ffe0
lbl_08062554: .4byte 0x0808c99c
lbl_08062558: .4byte 0x0875feb4
lbl_0806255c:
    ldr r0, lbl_08062608 @ =0x083716fc
    ldr r6, lbl_0806260c @ =0x0836bea4
    ldrb r1, [r6, #0x18]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08062610 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xc0
    lsls r0, r0, #6
    adds r1, r1, r0
    ldrb r2, [r6, #0x19]
    lsls r2, r2, #0xb
    adds r2, r2, r4
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r6, #0x18]
    ldr r1, [r6, #0x1c]
    bl sub_0806141c
    ldr r0, lbl_08062614 @ =0x0836bec4
    ldr r0, [r0]
    ldrh r4, [r6, #0x14]
    ldrh r1, [r6, #0x1c]
    orrs r4, r1
    adds r1, r4, #0
    bl sub_08061b98
    ldr r5, lbl_08062618 @ =0x08754bc4
    ldr r2, [r5]
    movs r1, #0
    mov sb, r1
    mov r7, sb
    strh r7, [r2, #0x1e]
    ldr r0, lbl_0806261c @ =0x00000312
    adds r1, r2, r0
    movs r0, #0xf0
    lsls r0, r0, #1
    strh r0, [r1]
    movs r1, #0xc4
    lsls r1, r1, #2
    mov r8, r1
    adds r1, r2, r1
    adds r0, #0xa0
    strh r0, [r1]
    ldr r7, lbl_08062620 @ =0x0000031b
    adds r2, r2, r7
    movs r0, #3
    ldrb r1, [r6, #0x12]
    ands r1, r0
    ldrb r3, [r2]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r3
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r5]
    add r0, r8
    movs r1, #1
    bl update_cutscene_oam_data_id
    ldr r1, [r5]
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    orrs r4, r0
    strh r4, [r1, #0x1c]
    ldr r0, lbl_08062624 @ =0x0000022d
    bl SoundPlay
    ldr r1, [r5]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    ldr r0, [r5]
    mov r7, sb
    strh r7, [r0, #2]
    b lbl_080626ae
    .align 2, 0
lbl_08062608: .4byte 0x083716fc
lbl_0806260c: .4byte 0x0836bea4
lbl_08062610: .4byte 0x08754bb4
lbl_08062614: .4byte 0x0836bec4
lbl_08062618: .4byte 0x08754bc4
lbl_0806261c: .4byte 0x00000312
lbl_08062620: .4byte 0x0000031b
lbl_08062624: .4byte 0x0000022d
lbl_08062628:
    ldr r0, lbl_0806263c @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #2]
    cmp r0, #0
    beq lbl_080626ae
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_080626ae
    .align 2, 0
lbl_0806263c: .4byte 0x08754bc4
lbl_08062640:
    ldr r0, lbl_08062670 @ =0x0836bea4
    ldrh r4, [r0, #0x14]
    adds r0, r4, #0
    bl sub_08061944
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0
    bne lbl_080626ae
    ldr r0, lbl_08062674 @ =0x0836bec8
    ldr r1, [r0, #4]
    ldr r0, [r0]
    adds r2, r4, #0
    bl sub_08061618
    ldr r2, lbl_08062678 @ =0x08754bc4
    ldr r1, [r2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    ldr r0, [r2]
    strh r5, [r0, #2]
    b lbl_080626ae
    .align 2, 0
lbl_08062670: .4byte 0x0836bea4
lbl_08062674: .4byte 0x0836bec8
lbl_08062678: .4byte 0x08754bc4
lbl_0806267c:
    ldr r3, lbl_08062694 @ =0x08754bc4
    ldr r2, [r3]
    ldrh r0, [r2, #2]
    cmp r0, #0x78
    bls lbl_080626ae
    ldrb r0, [r2, #4]
    adds r0, #1
    movs r1, #0
    strb r0, [r2, #4]
    ldr r0, [r3]
    strh r1, [r0, #2]
    b lbl_080626ae
    .align 2, 0
lbl_08062694: .4byte 0x08754bc4
lbl_08062698:
    bl sub_08061f0c
    ldr r3, lbl_080626f4 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
lbl_080626ac:
    strh r2, [r0, #2]
lbl_080626ae:
    movs r4, #0
    ldr r6, lbl_080626f4 @ =0x08754bc4
    movs r5, #0xd8
    lsls r5, r5, #1
lbl_080626b6:
    ldr r0, [r6]
    adds r0, r0, r5
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    bl sub_080626f8
    adds r5, #0x20
    adds r4, #1
    cmp r4, #0xa
    bls lbl_080626b6
    movs r4, #0
    ldr r6, lbl_080626f4 @ =0x08754bc4
    movs r5, #0xf0
lbl_080626d0:
    ldr r0, [r6]
    adds r0, r0, r5
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    bl sub_0806274c
    adds r5, #0x20
    adds r4, #1
    cmp r4, #5
    bls lbl_080626d0
    movs r0, #0
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080626f4: .4byte 0x08754bc4

    thumb_func_start sub_080626f8
sub_080626f8: @ 0x080626f8
    push {r4, lr}
    adds r3, r0, #0
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldrb r2, [r3, #0xb]
    movs r1, #0xc0
    ands r1, r2
    cmp r1, #0
    bne lbl_0806273a
    ldrh r1, [r3, #0x14]
    cmp r1, #0
    beq lbl_08062716
    subs r1, #1
    strh r1, [r3, #0x14]
    b lbl_0806273a
lbl_08062716:
    ldr r1, lbl_08062740 @ =0x0808c99c
    ldr r0, lbl_08062744 @ =0x03000c77
    ldrb r0, [r0]
    adds r0, r0, r4
    adds r0, r0, r1
    ldrb r1, [r0]
    movs r0, #0xf
    ands r0, r1
    adds r0, #1
    strh r0, [r3, #0x14]
    ldr r0, lbl_08062748 @ =0x0875fe5c
    lsls r1, r4, #3
    adds r0, #4
    adds r1, r1, r0
    ldrb r1, [r1]
    adds r0, r3, #0
    bl update_cutscene_oam_data_id
lbl_0806273a:
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062740: .4byte 0x0808c99c
lbl_08062744: .4byte 0x03000c77
lbl_08062748: .4byte 0x0875fe5c

    thumb_func_start sub_0806274c
sub_0806274c: @ 0x0806274c
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0
    lsls r1, r1, #0x18
    lsrs r6, r1, #0x18
    adds r4, r6, #0
    ldrh r1, [r5, #0x14]
    cmp r1, #0
    beq lbl_08062760
    subs r1, #1
    b lbl_080627f6
lbl_08062760:
    ldrb r3, [r5, #0xb]
    movs r7, #0xc0
    ands r7, r3
    cmp r7, #0
    bne lbl_080627bc
    ldr r0, lbl_080627ac @ =0x0875feb4
    lsls r2, r6, #1
    adds r2, r2, r0
    ldr r3, lbl_080627b0 @ =0x0808c99c
    ldr r4, lbl_080627b4 @ =0x03000c77
    ldrb r0, [r4]
    adds r0, r0, r6
    movs r1, #0xff
    ands r0, r1
    mvns r0, r0
    adds r0, r0, r3
    ldrb r1, [r0]
    movs r0, #0x3f
    ands r0, r1
    ldrh r2, [r2]
    adds r0, r0, r2
    strh r0, [r5, #2]
    ldr r0, lbl_080627b8 @ =0x0000ffe0
    strh r0, [r5]
    ldrb r1, [r4]
    adds r1, r1, r6
    movs r0, #1
    ands r0, r6
    adds r0, #3
    ands r1, r0
    subs r1, #2
    strh r1, [r5, #0x10]
    strh r7, [r5, #0x18]
    adds r0, r5, #0
    movs r1, #2
    bl update_cutscene_oam_data_id
    b lbl_080627f8
    .align 2, 0
lbl_080627ac: .4byte 0x0875feb4
lbl_080627b0: .4byte 0x0808c99c
lbl_080627b4: .4byte 0x03000c77
lbl_080627b8: .4byte 0x0000ffe0
lbl_080627bc:
    ldrh r2, [r5, #0x10]
    movs r6, #0x10
    ldrsh r1, [r5, r6]
    cmp r1, #0x1f
    bgt lbl_080627ca
    adds r1, r2, #1
    strh r1, [r5, #0x10]
lbl_080627ca:
    ldrh r1, [r5, #0x10]
    ldrh r2, [r5]
    adds r1, r1, r2
    strh r1, [r5]
    lsls r1, r1, #0x10
    ldr r2, lbl_08062800 @ =0x02df0000
    cmp r1, r2
    ble lbl_080627f8
    movs r1, #0x3f
    ands r1, r3
    strb r1, [r5, #0xb]
    ldr r3, lbl_08062804 @ =0x0808c99c
    ldr r1, lbl_08062808 @ =0x03000c77
    ldrb r1, [r1]
    adds r1, r1, r4
    movs r2, #0xff
    ands r1, r2
    adds r1, r1, r3
    ldrb r2, [r1]
    movs r1, #0xf
    ands r1, r2
    adds r1, #1
lbl_080627f6:
    strh r1, [r5, #0x14]
lbl_080627f8:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062800: .4byte 0x02df0000
lbl_08062804: .4byte 0x0808c99c
lbl_08062808: .4byte 0x03000c77

    thumb_func_start kraid_rising_opening_eyes
kraid_rising_opening_eyes: @ 0x0806280c
    push {r4, r5, lr}
    sub sp, #4
    ldr r1, lbl_08062828 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r5, r1, #0
    cmp r0, #5
    bls lbl_0806281e
    b lbl_08062986
lbl_0806281e:
    lsls r0, r0, #2
    ldr r1, lbl_0806282c @ =lbl_08062830
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08062828: .4byte 0x08754bc4
lbl_0806282c: .4byte lbl_08062830
lbl_08062830: @ jump table
    .4byte lbl_08062848 @ case 0
    .4byte lbl_0806286c @ case 1
    .4byte lbl_080628c0 @ case 2
    .4byte lbl_0806290c @ case 3
    .4byte lbl_08062960 @ case 4
    .4byte lbl_08062970 @ case 5
lbl_08062848:
    ldr r1, [r5]
    ldrh r0, [r1, #2]
    cmp r0, #8
    bhi lbl_08062852
    b lbl_08062986
lbl_08062852:
    ldrh r0, [r1, #0x1e]
    movs r1, #0
    movs r2, #0
    movs r3, #0x10
    bl sub_08061d68
    ldr r1, [r5]
    ldrb r0, [r1, #4]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #4]
    ldr r0, [r5]
    b lbl_08062984
lbl_0806286c:
    ldr r0, [r5]
    ldrh r0, [r0, #2]
    cmp r0, #0x1e
    bhi lbl_08062876
    b lbl_08062986
lbl_08062876:
    movs r0, #0x8b
    lsls r0, r0, #2
    bl SoundPlay
    ldr r0, lbl_080628b8 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0x80
    lsls r0, r0, #5
    adds r1, r1, r0
    ldr r4, lbl_080628bc @ =0x0836bea4
    ldrb r2, [r4, #9]
    lsls r2, r2, #0xb
    movs r0, #0xc0
    lsls r0, r0, #0x13
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r4, #8]
    ldr r1, [r4, #0xc]
    bl sub_0806141c
    ldr r1, [r5]
    ldrb r0, [r1, #4]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #4]
    ldr r0, [r5]
    b lbl_08062984
    .align 2, 0
lbl_080628b8: .4byte 0x08754bb4
lbl_080628bc: .4byte 0x0836bea4
lbl_080628c0:
    ldr r0, [r5]
    ldrh r0, [r0, #2]
    cmp r0, #6
    bls lbl_08062986
    ldr r0, lbl_08062904 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xc0
    lsls r0, r0, #5
    adds r1, r1, r0
    ldr r4, lbl_08062908 @ =0x0836bea4
    ldrb r2, [r4, #1]
    lsls r2, r2, #0xb
    movs r0, #0xc0
    lsls r0, r0, #0x13
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r4]
    ldr r1, [r4, #4]
    bl sub_0806141c
    ldr r1, [r5]
    ldrb r0, [r1, #4]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #4]
    ldr r0, [r5]
    b lbl_08062984
    .align 2, 0
lbl_08062904: .4byte 0x08754bb4
lbl_08062908: .4byte 0x0836bea4
lbl_0806290c:
    ldr r0, [r5]
    ldrh r0, [r0, #2]
    cmp r0, #6
    bls lbl_08062986
    movs r0, #0x34
    movs r1, #0
    bl PlayMusic
    ldr r0, lbl_08062958 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0x80
    lsls r0, r0, #6
    adds r1, r1, r0
    ldr r4, lbl_0806295c @ =0x0836bea4
    ldrb r2, [r4, #9]
    lsls r2, r2, #0xb
    movs r0, #0xc0
    lsls r0, r0, #0x13
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r4, #8]
    ldr r1, [r4, #0xc]
    bl sub_0806141c
    ldr r1, [r5]
    ldrb r0, [r1, #4]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #4]
    ldr r0, [r5]
    b lbl_08062984
    .align 2, 0
lbl_08062958: .4byte 0x08754bb4
lbl_0806295c: .4byte 0x0836bea4
lbl_08062960:
    ldr r1, [r5]
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_08062986
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08062986
lbl_08062970:
    bl sub_08061f0c
    ldr r3, lbl_08062990 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
lbl_08062984:
    strh r2, [r0, #2]
lbl_08062986:
    movs r0, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062990: .4byte 0x08754bc4

    thumb_func_start kraid_rising_init
kraid_rising_init: @ 0x08062994
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #4
    bl sub_08061f0c
    ldr r1, lbl_080629e8 @ =0x0836bff8
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    adds r2, r4, #0
    movs r3, #0xa0
    bl DMATransfer
    movs r0, #0
    strh r0, [r4]
    ldr r0, lbl_080629ec @ =0x0836c1d8
    ldr r1, lbl_080629f0 @ =0x0836bea4
    ldrb r1, [r1]
    lsls r1, r1, #0xe
    movs r2, #0xc0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080629f4 @ =0x03001530
    ldrb r1, [r0, #0xf]
    adds r0, r5, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08062a00
    ldr r1, lbl_080629f8 @ =0x0836c0d8
    ldr r2, lbl_080629fc @ =0x05000200
    str r5, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    b lbl_08062a0e
    .align 2, 0
lbl_080629e8: .4byte 0x0836bff8
lbl_080629ec: .4byte 0x0836c1d8
lbl_080629f0: .4byte 0x0836bea4
lbl_080629f4: .4byte 0x03001530
lbl_080629f8: .4byte 0x0836c0d8
lbl_080629fc: .4byte 0x05000200
lbl_08062a00:
    ldr r1, lbl_08062ae4 @ =0x0836c098
    ldr r2, lbl_08062ae8 @ =0x05000200
    str r5, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
lbl_08062a0e:
    ldr r1, lbl_08062aec @ =0x0836c0b8
    ldr r2, lbl_08062af0 @ =0x05000220
    movs r0, #0x10
    mov r8, r0
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    ldr r0, lbl_08062af4 @ =0x0836f214
    ldr r1, lbl_08062af8 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08062afc @ =0x08373178
    ldr r4, lbl_08062b00 @ =0x08754bb4
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #5
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08062b04 @ =0x08373738
    ldr r1, [r4]
    movs r2, #0xc0
    lsls r2, r2, #5
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08062b08 @ =0x08373cf8
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #6
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08062b0c @ =0x083742b8
    ldr r1, [r4]
    movs r2, #0xa0
    lsls r2, r2, #6
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08062b10 @ =0x08374754
    ldr r1, [r4]
    movs r2, #0xc0
    lsls r2, r2, #6
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08062b14 @ =0x08372bb8
    ldr r5, lbl_08062b18 @ =0x0836bea4
    ldrb r1, [r5, #1]
    lsls r1, r1, #0xb
    movs r2, #0xc0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, [r5]
    ldr r1, [r5, #4]
    bl sub_0806141c
    ldrh r6, [r5, #4]
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    adds r1, r6, #0
    bl sub_080614d4
    bl sub_08061e38
    ldr r0, lbl_08062b1c @ =0x030013ae
    mov r1, r8
    strh r1, [r0]
    ldr r4, lbl_08062b20 @ =0x08754bc4
    ldr r1, [r4]
    movs r2, #0
    mov r8, r2
    movs r0, #0
    mov sb, r0
    movs r0, #0xff
    strh r0, [r1, #0x1e]
    ldrh r1, [r5, #0x14]
    movs r2, #0xfc
    lsls r2, r2, #3
    movs r0, #2
    bl sub_080614d4
    ldr r1, [r4]
    strh r6, [r1, #0x1c]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r4]
    mov r1, r8
    strb r1, [r0, #4]
    mov r2, sb
    strh r2, [r0, #2]
    movs r0, #0
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062ae4: .4byte 0x0836c098
lbl_08062ae8: .4byte 0x05000200
lbl_08062aec: .4byte 0x0836c0b8
lbl_08062af0: .4byte 0x05000220
lbl_08062af4: .4byte 0x0836f214
lbl_08062af8: .4byte 0x06010000
lbl_08062afc: .4byte 0x08373178
lbl_08062b00: .4byte 0x08754bb4
lbl_08062b04: .4byte 0x08373738
lbl_08062b08: .4byte 0x08373cf8
lbl_08062b0c: .4byte 0x083742b8
lbl_08062b10: .4byte 0x08374754
lbl_08062b14: .4byte 0x08372bb8
lbl_08062b18: .4byte 0x0836bea4
lbl_08062b1c: .4byte 0x030013ae
lbl_08062b20: .4byte 0x08754bc4

    thumb_func_start kraid_rising_subroutine
kraid_rising_subroutine: @ 0x08062b24
    push {r4, lr}
    ldr r1, lbl_08062b50 @ =0x0875fec0
    ldr r0, lbl_08062b54 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_08062b58
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062b50: .4byte 0x0875fec0
lbl_08062b54: .4byte 0x08754bc4

    thumb_func_start sub_08062b58
sub_08062b58: @ 0x08062b58
    push {lr}
    ldr r1, lbl_08062b80 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_08062b84 @ =0x0875fec0
    ldr r0, lbl_08062b88 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_08062b8c @ =0x0836bed0
    bl sub_08069dc8
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_08062b80: .4byte 0x03001382
lbl_08062b84: .4byte 0x0875fec0
lbl_08062b88: .4byte 0x08754bc4
lbl_08062b8c: .4byte 0x0836bed0

    thumb_func_start story_text_cutscenes_init
story_text_cutscenes_init: @ 0x08062b90
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    ldr r2, lbl_08062c58 @ =0x03000c0c
    movs r3, #0x10
    bl BitFill
    ldr r1, lbl_08062c5c @ =0x0836bdac
    ldr r0, lbl_08062c60 @ =0x0300007d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #4
    adds r0, r0, r1
    ldrb r0, [r0, #2]
    subs r0, #1
    movs r5, #0
    ldr r1, lbl_08062c58 @ =0x03000c0c
    strb r0, [r1, #0xa]
    bl sub_08061f0c
    ldr r1, lbl_08062c64 @ =0x08375738
    ldr r2, lbl_08062c68 @ =0x050001e0
    movs r7, #0x10
    str r7, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    movs r0, #0xa0
    lsls r0, r0, #0x13
    strh r5, [r0]
    ldr r0, lbl_08062c6c @ =0x08375758
    ldr r6, lbl_08062c70 @ =0x08374d1c
    ldrb r1, [r6, #1]
    lsls r1, r1, #0xb
    movs r2, #0xc0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldrb r2, [r6]
    lsls r2, r2, #0xe
    ldr r0, lbl_08062c74 @ =0x06003000
    adds r2, r2, r0
    movs r3, #0xa0
    lsls r3, r3, #7
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r0, [r6]
    ldr r1, [r6, #4]
    bl sub_0806141c
    ldr r0, lbl_08062c78 @ =0x030013ae
    strh r7, [r0]
    ldr r3, lbl_08062c7c @ =0x030013b0
    strh r7, [r3]
    ldr r2, lbl_08062c80 @ =0x030013b2
    strh r5, [r2]
    ldr r1, lbl_08062c58 @ =0x03000c0c
    ldrb r0, [r1, #0xa]
    cmp r0, #2
    bgt lbl_08062c38
    cmp r0, #0
    blt lbl_08062c38
    ldr r0, lbl_08062c84 @ =0x08754bc4
    ldr r1, [r0]
    strh r5, [r1, #0x1c]
    ldr r0, lbl_08062c88 @ =0x00002041
    strh r0, [r1, #0x1e]
    strh r5, [r3]
    strh r7, [r2]
    ldrh r1, [r6, #4]
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    bl sub_080614d4
lbl_08062c38:
    ldr r3, lbl_08062c84 @ =0x08754bc4
    ldr r1, [r3]
    movs r2, #0
    movs r0, #0
    strh r0, [r1, #2]
    strb r2, [r1, #4]
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062c58: .4byte 0x03000c0c
lbl_08062c5c: .4byte 0x0836bdac
lbl_08062c60: .4byte 0x0300007d
lbl_08062c64: .4byte 0x08375738
lbl_08062c68: .4byte 0x050001e0
lbl_08062c6c: .4byte 0x08375758
lbl_08062c70: .4byte 0x08374d1c
lbl_08062c74: .4byte 0x06003000
lbl_08062c78: .4byte 0x030013ae
lbl_08062c7c: .4byte 0x030013b0
lbl_08062c80: .4byte 0x030013b2
lbl_08062c84: .4byte 0x08754bc4
lbl_08062c88: .4byte 0x00002041

    thumb_func_start sub_08062c8c
sub_08062c8c: @ 0x08062c8c
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r0, lbl_08062cb0 @ =0x08374d1c
    ldrb r0, [r0]
    lsls r0, r0, #0xe
    ldr r1, lbl_08062cb4 @ =0x06003000
    adds r7, r0, r1
    ldr r1, lbl_08062cb8 @ =0x08754bc4
    ldr r3, [r1]
    ldrb r2, [r3, #4]
    cmp r2, #1
    beq lbl_08062cd2
    cmp r2, #1
    bgt lbl_08062cbc
    cmp r2, #0
    beq lbl_08062cc2
    b lbl_08062da2
    .align 2, 0
lbl_08062cb0: .4byte 0x08374d1c
lbl_08062cb4: .4byte 0x06003000
lbl_08062cb8: .4byte 0x08754bc4
lbl_08062cbc:
    cmp r2, #2
    beq lbl_08062d24
    b lbl_08062da2
lbl_08062cc2:
    ldr r0, lbl_08062d08 @ =0x03000c0c
    strb r2, [r0, #0xb]
    strb r2, [r0, #7]
    ldrb r1, [r3]
    strb r1, [r0, #0xc]
    ldrb r0, [r3, #4]
    adds r0, #1
    strb r0, [r3, #4]
lbl_08062cd2:
    ldr r1, lbl_08062d08 @ =0x03000c0c
    movs r0, #0
    strh r0, [r1, #2]
    strh r0, [r1, #4]
    ldrb r0, [r1, #7]
    cmp r0, #9
    bls lbl_08062ce4
    movs r0, #0
    strb r0, [r1, #7]
lbl_08062ce4:
    ldrb r2, [r1, #7]
    lsls r2, r2, #0xb
    adds r2, r7, r2
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r0, lbl_08062d0c @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08062da2
    .align 2, 0
lbl_08062d08: .4byte 0x03000c0c
lbl_08062d0c: .4byte 0x08754bc4
lbl_08062d10:
    ldr r3, lbl_08062d20 @ =0x08754bc4
    ldr r1, [r3]
    movs r2, #0
    movs r0, #0
    strh r0, [r1, #2]
    strb r2, [r1, #4]
    ldr r1, [r3]
    b lbl_08062d80
    .align 2, 0
lbl_08062d20: .4byte 0x08754bc4
lbl_08062d24:
    movs r5, #8
    ldr r4, lbl_08062d60 @ =0x03000c0c
    adds r6, r1, #0
lbl_08062d2a:
    ldr r1, lbl_08062d64 @ =0x0875fee0
    ldr r0, lbl_08062d68 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r1, [r4, #0xa]
    ldr r0, [r0]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldr r1, [r1]
    ldrb r2, [r4, #7]
    lsls r2, r2, #0xb
    adds r2, r7, r2
    adds r0, r4, #0
    bl process_current_message
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_08062d74
    cmp r0, #2
    bgt lbl_08062d6c
    cmp r0, #1
    beq lbl_08062d8c
    b lbl_08062d96
    .align 2, 0
lbl_08062d60: .4byte 0x03000c0c
lbl_08062d64: .4byte 0x0875fee0
lbl_08062d68: .4byte 0x03000020
lbl_08062d6c:
    cmp r0, #3
    beq lbl_08062d88
    cmp r0, #4
    bne lbl_08062d96
lbl_08062d74:
    ldr r1, [r6]
    movs r2, #0
    movs r0, #0
    strh r0, [r1, #2]
    strb r2, [r1, #4]
    ldr r1, [r6]
lbl_08062d80:
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08062da2
lbl_08062d88:
    movs r0, #1
    strb r0, [r4, #0xb]
lbl_08062d8c:
    ldr r1, [r6]
    ldrb r0, [r1, #4]
    subs r0, #1
    strb r0, [r1, #4]
    b lbl_08062da2
lbl_08062d96:
    ldrb r0, [r4, #7]
    cmp r0, #9
    bhi lbl_08062d10
    subs r5, #1
    cmp r5, #0
    bne lbl_08062d2a
lbl_08062da2:
    movs r0, #0
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_08062dac
sub_08062dac: @ 0x08062dac
    push {lr}
    movs r3, #0x80
    lsls r3, r3, #4
    ldr r0, lbl_08062df8 @ =0x03000c0c
    ldrb r2, [r0, #7]
    movs r0, #0xa
    subs r0, r0, r2
    lsrs r1, r0, #0x1f
    adds r0, r0, r1
    asrs r0, r0, #1
    lsls r0, r0, #6
    subs r3, r3, r0
    movs r0, #1
    ands r2, r0
    cmp r2, #0
    beq lbl_08062dce
    subs r3, #0x20
lbl_08062dce:
    ldr r0, lbl_08062dfc @ =0x08374d1c
    ldrh r1, [r0, #4]
    lsls r2, r3, #0x10
    lsrs r2, r2, #0x10
    movs r0, #2
    bl sub_080614d4
    ldr r3, lbl_08062e00 @ =0x08754bc4
    ldr r1, [r3]
    movs r2, #0
    movs r0, #0
    strh r0, [r1, #2]
    strb r2, [r1, #4]
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062df8: .4byte 0x03000c0c
lbl_08062dfc: .4byte 0x08374d1c
lbl_08062e00: .4byte 0x08754bc4

    thumb_func_start sub_08062e04
sub_08062e04: @ 0x08062e04
    push {r4, lr}
    sub sp, #4
    ldr r4, lbl_08062e18 @ =0x08754bc4
    ldr r2, [r4]
    ldrb r0, [r2, #4]
    cmp r0, #0
    beq lbl_08062e1c
    cmp r0, #1
    beq lbl_08062e60
    b lbl_08062e7e
    .align 2, 0
lbl_08062e18: .4byte 0x08754bc4
lbl_08062e1c:
    ldr r1, lbl_08062e54 @ =0x08374d1c
    ldrh r0, [r2, #0x1c]
    ldrh r1, [r1, #4]
    orrs r0, r1
    strh r0, [r2, #0x1c]
    ldrh r0, [r2, #0x1e]
    movs r1, #1
    str r1, [sp]
    movs r1, #0x10
    movs r2, #0
    movs r3, #4
    bl sub_08061dc8
    ldr r0, lbl_08062e58 @ =0x0300007d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_08062e48
    ldr r0, lbl_08062e5c @ =0x00000233
    bl SoundPlay
lbl_08062e48:
    ldr r1, [r4]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08062e7e
    .align 2, 0
lbl_08062e54: .4byte 0x08374d1c
lbl_08062e58: .4byte 0x0300007d
lbl_08062e5c: .4byte 0x00000233
lbl_08062e60:
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08062e7e
    movs r1, #0
    movs r0, #0
    strh r0, [r2, #2]
    strb r1, [r2, #4]
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_08062e7e:
    movs r0, #0
    add sp, #4
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start sub_08062e88
sub_08062e88: @ 0x08062e88
    push {r4, lr}
    sub sp, #4
    ldr r0, lbl_08062ea0 @ =0x08754bc4
    ldr r3, [r0]
    ldrb r2, [r3, #4]
    adds r4, r0, #0
    cmp r2, #0
    beq lbl_08062ea4
    cmp r2, #1
    beq lbl_08062ebe
    b lbl_08062ef8
    .align 2, 0
lbl_08062ea0: .4byte 0x08754bc4
lbl_08062ea4:
    ldrh r0, [r3, #0x1e]
    movs r1, #1
    str r1, [sp]
    movs r1, #0
    movs r2, #0x10
    movs r3, #4
    bl sub_08061dc8
    ldr r1, [r4]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08062ef8
lbl_08062ebe:
    adds r0, r3, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08062ef8
    ldr r0, lbl_08062ed8 @ =0x03000c0c
    ldrb r0, [r0, #0xe]
    cmp r0, #0
    beq lbl_08062edc
    movs r0, #0
    b lbl_08062ee4
    .align 2, 0
lbl_08062ed8: .4byte 0x03000c0c
lbl_08062edc:
    ldr r0, lbl_08062f04 @ =0x08374d1c
    ldrh r1, [r0, #4]
    ldrh r0, [r3, #0x1c]
    bics r0, r1
lbl_08062ee4:
    strh r0, [r3, #0x1c]
    ldr r1, [r4]
    movs r2, #0
    movs r0, #0
    strh r0, [r1, #2]
    strb r2, [r1, #4]
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_08062ef8:
    movs r0, #0
    add sp, #4
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062f04: .4byte 0x08374d1c

    thumb_func_start sub_08062f08
sub_08062f08: @ 0x08062f08
    push {lr}
    ldr r3, lbl_08062f20 @ =0x08754bc4
    ldr r2, [r3]
    ldrb r0, [r2, #4]
    cmp r0, #1
    beq lbl_08062f44
    cmp r0, #1
    bgt lbl_08062f24
    cmp r0, #0
    beq lbl_08062f2a
    b lbl_08062f60
    .align 2, 0
lbl_08062f20: .4byte 0x08754bc4
lbl_08062f24:
    cmp r0, #2
    beq lbl_08062f44
    b lbl_08062f60
lbl_08062f2a:
    ldrh r0, [r2, #2]
    cmp r0, #0x78
    bls lbl_08062f60
    ldr r0, lbl_08062f40 @ =0x03000c0c
    ldrb r0, [r0, #0xb]
    movs r1, #1
    cmp r0, #0
    beq lbl_08062f3c
    movs r1, #2
lbl_08062f3c:
    strb r1, [r2, #4]
    b lbl_08062f60
    .align 2, 0
lbl_08062f40: .4byte 0x03000c0c
lbl_08062f44:
    ldr r0, lbl_08062f68 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    beq lbl_08062f60
    movs r1, #0
    movs r0, #0
    strh r0, [r2, #2]
    strb r1, [r2, #4]
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_08062f60:
    movs r0, #0
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062f68: .4byte 0x03001380

    thumb_func_start sub_08062f6c
sub_08062f6c: @ 0x08062f6c
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r6, lbl_08062f7c @ =0x03000c0c
    ldrb r5, [r6, #0xe]
    cmp r5, #0
    beq lbl_08062f80
    movs r0, #1
    b lbl_08062fc2
    .align 2, 0
lbl_08062f7c: .4byte 0x03000c0c
lbl_08062f80:
    ldr r0, lbl_08062fcc @ =0x08374d1c
    ldrb r2, [r0]
    lsls r2, r2, #0xe
    ldr r0, lbl_08062fd0 @ =0x06003000
    adds r2, r2, r0
    ldr r4, lbl_08062fd4 @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0, #4]
    lsls r0, r0, #0xc
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #5
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r1, [r4]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    ldr r1, [r4]
    ldrb r0, [r1, #4]
    cmp r0, #4
    bls lbl_08062fc0
    movs r0, #0
    strh r5, [r1, #2]
    strb r0, [r1, #4]
    ldr r1, [r4]
    ldrb r0, [r6, #0xc]
    strb r0, [r1]
lbl_08062fc0:
    movs r0, #0
lbl_08062fc2:
    add sp, #4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08062fcc: .4byte 0x08374d1c
lbl_08062fd0: .4byte 0x06003000
lbl_08062fd4: .4byte 0x08754bc4

    thumb_func_start story_text_cutscenes_subroutine
story_text_cutscenes_subroutine: @ 0x08062fd8
    push {r4, lr}
    ldr r1, lbl_08063000 @ =0x0875fefc
    ldr r0, lbl_08063004 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #0
    bl sub_080619c4
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08063000: .4byte 0x0875fefc
lbl_08063004: .4byte 0x08754bc4

    thumb_func_start mother_brain_close_up_looking_at_samus
mother_brain_close_up_looking_at_samus: @ 0x08063008
    push {r4, r5, lr}
    sub sp, #4
    ldr r0, lbl_08063024 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #4]
    cmp r0, #5
    bls lbl_08063018
    b lbl_08063222
lbl_08063018:
    lsls r0, r0, #2
    ldr r1, lbl_08063028 @ =lbl_0806302c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08063024: .4byte 0x08754bc4
lbl_08063028: .4byte lbl_0806302c
lbl_0806302c: @ jump table
    .4byte lbl_08063044 @ case 0
    .4byte lbl_0806312c @ case 1
    .4byte lbl_08063184 @ case 2
    .4byte lbl_080631ac @ case 3
    .4byte lbl_080631e8 @ case 4
    .4byte lbl_0806320c @ case 5
lbl_08063044:
    ldr r1, lbl_08063078 @ =0x08376144
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    adds r2, r4, #0
    movs r3, #0xa0
    bl DMATransfer
    movs r0, #0
    strh r0, [r4]
    ldr r0, lbl_0806307c @ =0x03001530
    ldrb r1, [r0, #0xf]
    adds r0, r5, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08063088
    ldr r1, lbl_08063080 @ =0x08376284
    ldr r2, lbl_08063084 @ =0x050000a0
    str r5, [sp]
    movs r0, #3
    movs r3, #0xa0
    bl DMATransfer
    b lbl_08063096
    .align 2, 0
lbl_08063078: .4byte 0x08376144
lbl_0806307c: .4byte 0x03001530
lbl_08063080: .4byte 0x08376284
lbl_08063084: .4byte 0x050000a0
lbl_08063088:
    ldr r1, lbl_08063100 @ =0x083761e4
    ldr r2, lbl_08063104 @ =0x050000a0
    str r5, [sp]
    movs r0, #3
    movs r3, #0xa0
    bl DMATransfer
lbl_08063096:
    ldr r0, lbl_08063108 @ =0x0837b404
    ldr r5, lbl_0806310c @ =0x08375d20
    adds r1, r5, #0
    adds r1, #0x20
    ldrb r1, [r1]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063110 @ =0x08381e70
    ldrb r1, [r5, #0x19]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063114 @ =0x08382434
    adds r1, r5, #0
    adds r1, #0x21
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r1, lbl_08063118 @ =0x08376364
    ldr r2, lbl_0806311c @ =0x05000200
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    ldr r0, lbl_08063120 @ =0x0837f498
    ldr r1, lbl_08063124 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, [r5, #0x20]
    ldr r1, [r5, #0x24]
    bl sub_0806141c
    ldr r0, [r5, #0x18]
    ldr r1, [r5, #0x1c]
    bl sub_0806141c
    bl sub_08061e38
    movs r0, #1
    bl sub_080636a8
    ldr r0, lbl_08063128 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_080631d2
    .align 2, 0
lbl_08063100: .4byte 0x083761e4
lbl_08063104: .4byte 0x050000a0
lbl_08063108: .4byte 0x0837b404
lbl_0806310c: .4byte 0x08375d20
lbl_08063110: .4byte 0x08381e70
lbl_08063114: .4byte 0x08382434
lbl_08063118: .4byte 0x08376364
lbl_0806311c: .4byte 0x05000200
lbl_08063120: .4byte 0x0837f498
lbl_08063124: .4byte 0x06010000
lbl_08063128: .4byte 0x08754bc4
lbl_0806312c:
    ldr r0, lbl_08063174 @ =0x08378e2c
    ldr r5, lbl_08063178 @ =0x08375d20
    ldrb r1, [r5, #0x18]
    lsls r1, r1, #0xe
    movs r2, #0xc0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    movs r0, #0xfd
    lsls r0, r0, #6
    movs r1, #1
    str r1, [sp]
    movs r1, #0xc
    movs r2, #0xc
    movs r3, #8
    bl sub_08061dc8
    ldr r0, lbl_0806317c @ =0x08375d48
    ldr r0, [r0]
    ldrh r4, [r5, #0x24]
    adds r1, r4, #0
    bl sub_08061b98
    ldr r0, lbl_08063180 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r5, #0x1c]
    movs r3, #0x80
    lsls r3, r3, #5
    adds r1, r3, #0
    orrs r0, r1
    orrs r4, r0
    movs r0, #0
    strh r4, [r2, #0x1c]
    b lbl_080631f8
    .align 2, 0
lbl_08063174: .4byte 0x08378e2c
lbl_08063178: .4byte 0x08375d20
lbl_0806317c: .4byte 0x08375d48
lbl_08063180: .4byte 0x08754bc4
lbl_08063184:
    ldr r3, lbl_080631a8 @ =0x08754bc4
    ldr r2, [r3]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08063222
    adds r1, r2, #0
    adds r1, #0xfd
    movs r2, #0
    movs r0, #1
    strb r0, [r1]
    ldr r1, [r3]
    strh r2, [r1, #2]
    b lbl_080631d6
    .align 2, 0
lbl_080631a8: .4byte 0x08754bc4
lbl_080631ac:
    ldr r4, lbl_080631e0 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_080631e4 @ =0x0875ff34
    ldrh r0, [r0, #2]
    ldrh r1, [r1]
    cmp r0, r1
    bls lbl_08063222
    movs r0, #0x8c
    lsls r0, r0, #2
    bl SoundPlay
    ldr r0, [r4]
    movs r1, #0x88
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #6
    bl update_cutscene_oam_data_id
    ldr r1, [r4]
lbl_080631d2:
    movs r0, #0
    strh r0, [r1, #2]
lbl_080631d6:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08063222
    .align 2, 0
lbl_080631e0: .4byte 0x08754bc4
lbl_080631e4: .4byte 0x0875ff34
lbl_080631e8:
    ldr r0, lbl_08063204 @ =0x08754bc4
    ldr r2, [r0]
    ldr r1, lbl_08063208 @ =0x0875ff34
    ldrh r0, [r2, #2]
    ldrh r1, [r1, #2]
    cmp r0, r1
    bls lbl_08063222
    movs r0, #0
lbl_080631f8:
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08063222
    .align 2, 0
lbl_08063204: .4byte 0x08754bc4
lbl_08063208: .4byte 0x0875ff34
lbl_0806320c:
    bl sub_08061f0c
    ldr r3, lbl_08063238 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08063222:
    ldr r0, lbl_08063238 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xf0
    bl sub_0806323c
    movs r0, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08063238: .4byte 0x08754bc4

    thumb_func_start sub_0806323c
sub_0806323c: @ 0x0806323c
    push {r4, lr}
    adds r4, r0, #0
    ldrb r1, [r4, #0xd]
    adds r0, r1, #0
    cmp r0, #0
    beq lbl_0806327e
    cmp r0, #1
    bne lbl_08063254
    movs r0, #0x3c
    strh r0, [r4, #0x14]
    adds r0, r1, #1
    b lbl_0806327c
lbl_08063254:
    ldrh r0, [r4, #0x14]
    cmp r0, #0
    beq lbl_08063260
    subs r0, #1
    strh r0, [r4, #0x14]
    b lbl_0806327e
lbl_08063260:
    movs r0, #0x5a
    strh r0, [r4, #0x14]
    adds r0, r4, #0
    movs r1, #4
    bl update_cutscene_oam_data_id
    ldrb r0, [r4, #0xd]
    adds r0, #1
    strb r0, [r4, #0xd]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #6
    bls lbl_0806327e
    movs r0, #0
lbl_0806327c:
    strb r0, [r4, #0xd]
lbl_0806327e:
    pop {r4}
    pop {r0}
    bx r0

    thumb_func_start mother_brain_close_up_eye_opening
mother_brain_close_up_eye_opening: @ 0x08063284
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r0, lbl_080632a0 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #4]
    cmp r0, #6
    bls lbl_08063294
    b lbl_08063472
lbl_08063294:
    lsls r0, r0, #2
    ldr r1, lbl_080632a4 @ =lbl_080632a8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080632a0: .4byte 0x08754bc4
lbl_080632a4: .4byte lbl_080632a8
lbl_080632a8: @ jump table
    .4byte lbl_080632c4 @ case 0
    .4byte lbl_080633a0 @ case 1
    .4byte lbl_080633c0 @ case 2
    .4byte lbl_080633e0 @ case 3
    .4byte lbl_0806341c @ case 4
    .4byte lbl_08063438 @ case 5
    .4byte lbl_0806345c @ case 6
lbl_080632c4:
    ldr r1, lbl_0806336c @ =0x08376084
    movs r5, #0xa0
    lsls r5, r5, #0x13
    movs r6, #0x10
    str r6, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0xc0
    bl DMATransfer
    movs r4, #0
    strh r4, [r5]
    ldr r0, lbl_08063370 @ =0x083763a4
    ldr r5, lbl_08063374 @ =0x08375d20
    ldrb r1, [r5, #0x10]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063378 @ =0x083818ac
    ldrb r1, [r5, #0x11]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806337c @ =0x083829f4
    ldrb r1, [r5, #9]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r1, lbl_08063380 @ =0x08376324
    ldr r2, lbl_08063384 @ =0x05000200
    str r6, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    ldr r0, lbl_08063388 @ =0x0837e2e0
    ldr r1, lbl_0806338c @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, [r5, #0x10]
    ldr r1, [r5, #0x14]
    bl sub_0806141c
    ldr r0, [r5, #8]
    ldr r1, [r5, #0xc]
    bl sub_0806141c
    bl sub_08061e38
    movs r0, #0
    bl sub_080636a8
    ldrh r4, [r5, #0x14]
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    adds r1, r4, #0
    bl sub_080614d4
    ldr r1, lbl_08063390 @ =0x030013b0
    movs r0, #6
    strh r0, [r1]
    ldr r1, lbl_08063394 @ =0x030013b2
    movs r0, #0xc
    strh r0, [r1]
    ldr r0, lbl_08063398 @ =0x08754bc4
    ldr r2, [r0]
    movs r3, #0
    ldr r0, lbl_0806339c @ =0x00003844
    strh r0, [r2, #0x1e]
    ldrh r0, [r5, #0xc]
    movs r5, #0x80
    lsls r5, r5, #5
    adds r1, r5, #0
    orrs r0, r1
    orrs r4, r0
    strh r4, [r2, #0x1c]
    strh r3, [r2, #2]
    b lbl_0806344a
    .align 2, 0
lbl_0806336c: .4byte 0x08376084
lbl_08063370: .4byte 0x083763a4
lbl_08063374: .4byte 0x08375d20
lbl_08063378: .4byte 0x083818ac
lbl_0806337c: .4byte 0x083829f4
lbl_08063380: .4byte 0x08376324
lbl_08063384: .4byte 0x05000200
lbl_08063388: .4byte 0x0837e2e0
lbl_0806338c: .4byte 0x06010000
lbl_08063390: .4byte 0x030013b0
lbl_08063394: .4byte 0x030013b2
lbl_08063398: .4byte 0x08754bc4
lbl_0806339c: .4byte 0x00003844
lbl_080633a0:
    ldr r4, lbl_080633b8 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_080633bc @ =0x0875ff38
    ldrh r0, [r0, #2]
    ldrh r1, [r1]
    cmp r0, r1
    bls lbl_08063472
    movs r0, #0
    bl sub_0806380c
    b lbl_08063402
    .align 2, 0
lbl_080633b8: .4byte 0x08754bc4
lbl_080633bc: .4byte 0x0875ff38
lbl_080633c0:
    ldr r4, lbl_080633d8 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_080633dc @ =0x0875ff38
    ldrh r0, [r0, #2]
    ldrh r1, [r1, #2]
    cmp r0, r1
    bls lbl_08063472
    movs r0, #1
    bl sub_0806380c
    b lbl_08063402
    .align 2, 0
lbl_080633d8: .4byte 0x08754bc4
lbl_080633dc: .4byte 0x0875ff38
lbl_080633e0:
    ldr r4, lbl_08063410 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_08063414 @ =0x0875ff38
    ldrh r0, [r0, #2]
    ldrh r1, [r1, #4]
    cmp r0, r1
    bls lbl_08063472
    ldr r0, lbl_08063418 @ =0x0000022f
    bl SoundPlay
    ldr r0, [r4]
    movs r1, #0xe8
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #3
    bl update_cutscene_oam_data_id
lbl_08063402:
    ldr r1, [r4]
    movs r0, #0
    strh r0, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08063472
    .align 2, 0
lbl_08063410: .4byte 0x08754bc4
lbl_08063414: .4byte 0x0875ff38
lbl_08063418: .4byte 0x0000022f
lbl_0806341c:
    ldr r0, lbl_08063430 @ =0x08754bc4
    ldr r2, [r0]
    ldr r5, lbl_08063434 @ =0x000001db
    adds r0, r2, r5
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08063472
    b lbl_08063446
    .align 2, 0
lbl_08063430: .4byte 0x08754bc4
lbl_08063434: .4byte 0x000001db
lbl_08063438:
    ldr r0, lbl_08063454 @ =0x08754bc4
    ldr r2, [r0]
    ldr r1, lbl_08063458 @ =0x0875ff38
    ldrh r0, [r2, #2]
    ldrh r1, [r1, #6]
    cmp r0, r1
    bls lbl_08063472
lbl_08063446:
    movs r0, #0
    strh r0, [r2, #2]
lbl_0806344a:
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08063472
    .align 2, 0
lbl_08063454: .4byte 0x08754bc4
lbl_08063458: .4byte 0x0875ff38
lbl_0806345c:
    bl sub_08061f0c
    ldr r3, lbl_080634b4 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08063472:
    movs r4, #0
    movs r5, #0xf0
lbl_08063476:
    ldr r0, lbl_080634b4 @ =0x08754bc4
    ldr r1, [r0]
    lsls r0, r4, #5
    adds r0, r1, r0
    adds r0, #0xfa
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806348c
    adds r0, r1, r5
    bl sub_080637b0
lbl_0806348c:
    adds r5, #0x20
    adds r4, #1
    cmp r4, #5
    ble lbl_08063476
    ldr r0, lbl_080634b8 @ =0x03000c77
    ldrb r1, [r0]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_080634aa
    ldr r0, lbl_080634bc @ =0x030013b2
    ldrh r1, [r0]
    movs r2, #1
    eors r1, r2
    strh r1, [r0]
lbl_080634aa:
    movs r0, #0
    add sp, #4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080634b4: .4byte 0x08754bc4
lbl_080634b8: .4byte 0x03000c77
lbl_080634bc: .4byte 0x030013b2

    thumb_func_start mother_brain_close_up_tank_view
mother_brain_close_up_tank_view: @ 0x080634c0
    push {r4, lr}
    ldr r1, lbl_080634d8 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r4, r1, #0
    cmp r0, #4
    bhi lbl_08063576
    lsls r0, r0, #2
    ldr r1, lbl_080634dc @ =lbl_080634e0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080634d8: .4byte 0x08754bc4
lbl_080634dc: .4byte lbl_080634e0
lbl_080634e0: @ jump table
    .4byte lbl_080634f4 @ case 0
    .4byte lbl_08063518 @ case 1
    .4byte lbl_08063530 @ case 2
    .4byte lbl_0806354c @ case 3
    .4byte lbl_08063560 @ case 4
lbl_080634f4:
    ldr r0, lbl_08063510 @ =0x0000022e
    bl SoundPlay
    ldr r4, lbl_08063514 @ =0x08754bc4
    ldr r0, [r4]
    ldrh r0, [r0, #0x1e]
    movs r1, #0xa
    movs r2, #0
    movs r3, #8
    bl sub_08061d68
    ldr r1, [r4]
    b lbl_08063554
    .align 2, 0
lbl_08063510: .4byte 0x0000022e
lbl_08063514: .4byte 0x08754bc4
lbl_08063518:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x1e
    bls lbl_08063576
    ldrh r0, [r1, #0x1e]
    movs r1, #0
    movs r2, #2
    movs r3, #1
    bl sub_08061d68
    ldr r1, [r4]
    b lbl_08063554
lbl_08063530:
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08063576
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08063576
lbl_0806354c:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_08063576
lbl_08063554:
    movs r0, #0
    strh r0, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08063576
lbl_08063560:
    bl sub_08061f0c
    ldr r3, lbl_08063580 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08063576:
    movs r0, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08063580: .4byte 0x08754bc4

    thumb_func_start mother_brain_close_up_init
mother_brain_close_up_init: @ 0x08063584
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #4
    bl sub_08061f0c
    ldr r1, lbl_08063624 @ =0x08386e60
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r3, #0x80
    lsls r3, r3, #1
    movs r0, #0x10
    mov r8, r0
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    movs r1, #0
    mov sb, r1
    strh r1, [r4]
    ldr r0, lbl_08063628 @ =0x08382b00
    ldr r4, lbl_0806362c @ =0x08375d20
    ldrb r1, [r4]
    lsls r1, r1, #0xe
    movs r5, #0xc0
    lsls r5, r5, #0x13
    adds r1, r1, r5
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063630 @ =0x083868a0
    ldrb r1, [r4, #1]
    lsls r1, r1, #0xb
    adds r1, r1, r5
    bl CallLZ77UncompVRAM
    ldr r0, [r4]
    ldr r1, [r4, #4]
    bl sub_0806141c
    bl sub_08061e38
    ldr r5, lbl_08063634 @ =0x08754bc4
    ldr r1, [r5]
    movs r6, #0
    movs r0, #0xff
    strh r0, [r1, #0x1e]
    ldr r0, lbl_08063638 @ =0x030013ae
    mov r1, r8
    strh r1, [r0]
    ldrh r4, [r4, #4]
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    adds r1, r4, #0
    bl sub_080614d4
    movs r0, #0x48
    movs r1, #0
    bl PlayMusic
    ldr r1, [r5]
    strh r4, [r1, #0x1c]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r5]
    strh r6, [r0, #2]
    mov r1, sb
    strb r1, [r0, #4]
    movs r0, #0
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08063624: .4byte 0x08386e60
lbl_08063628: .4byte 0x08382b00
lbl_0806362c: .4byte 0x08375d20
lbl_08063630: .4byte 0x083868a0
lbl_08063634: .4byte 0x08754bc4
lbl_08063638: .4byte 0x030013ae

    thumb_func_start mother_brain_close_up_subroutine
mother_brain_close_up_subroutine: @ 0x0806363c
    push {r4, lr}
    ldr r1, lbl_08063668 @ =0x0875ff40
    ldr r0, lbl_0806366c @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_08063670
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08063668: .4byte 0x0875ff40
lbl_0806366c: .4byte 0x08754bc4

    thumb_func_start sub_08063670
sub_08063670: @ 0x08063670
    push {lr}
    ldr r1, lbl_08063698 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_0806369c @ =0x0875ff40
    ldr r0, lbl_080636a0 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_080636a4 @ =0x08375d4c
    bl sub_08069dc8
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_08063698: .4byte 0x03001382
lbl_0806369c: .4byte 0x0875ff40
lbl_080636a0: .4byte 0x08754bc4
lbl_080636a4: .4byte 0x08375d4c

    thumb_func_start sub_080636a8
sub_080636a8: @ 0x080636a8
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    lsls r0, r0, #0x18
    ldr r1, lbl_08063704 @ =0x08754bc4
    mov ip, r1
    ldr r2, [r1]
    mov sb, r2
    mov r7, sb
    adds r7, #0xf0
    cmp r0, #0
    bne lbl_0806370c
    movs r2, #0xe8
    lsls r2, r2, #1
    add r2, sb
    movs r5, #0
    movs r0, #0xf0
    lsls r0, r0, #1
    strh r0, [r2, #2]
    subs r0, #0x80
    strh r0, [r2]
    ldr r0, lbl_08063708 @ =0x08375d20
    movs r4, #3
    ldrb r0, [r0, #0x12]
    ands r0, r4
    ldrb r3, [r2, #0xb]
    movs r1, #4
    rsbs r1, r1, #0
    ands r1, r3
    orrs r1, r0
    ldrb r3, [r2, #0xc]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r3
    orrs r0, r4
    strb r0, [r2, #0xc]
    strb r5, [r2, #0xa]
    movs r0, #0x3f
    ands r1, r0
    movs r0, #0x40
    orrs r1, r0
    strb r1, [r2, #0xb]
    b lbl_08063796
    .align 2, 0
lbl_08063704: .4byte 0x08754bc4
lbl_08063708: .4byte 0x08375d20
lbl_0806370c:
    movs r0, #0xf0
    lsls r0, r0, #1
    strh r0, [r7, #2]
    movs r1, #0xa2
    lsls r1, r1, #1
    mov sl, r1
    mov r2, sl
    strh r2, [r7]
    ldr r0, lbl_080637a8 @ =0x08375d20
    adds r0, #0x22
    movs r1, #3
    ldrb r3, [r0]
    ands r3, r1
    ldrb r0, [r7, #0xb]
    movs r4, #4
    rsbs r4, r4, #0
    adds r1, r4, #0
    ands r1, r0
    orrs r1, r3
    ldrb r2, [r7, #0xc]
    movs r6, #0x10
    rsbs r6, r6, #0
    adds r0, r6, #0
    ands r0, r2
    movs r2, #1
    orrs r0, r2
    strb r0, [r7, #0xc]
    movs r5, #0xd
    rsbs r5, r5, #0
    ands r1, r5
    movs r0, #4
    mov r8, r0
    mov r2, r8
    orrs r1, r2
    strb r1, [r7, #0xb]
    mov r1, ip
    ldr r0, [r1]
    movs r2, #0x88
    lsls r2, r2, #1
    adds r0, r0, r2
    movs r1, #5
    str r3, [sp]
    bl update_cutscene_oam_data_id
    movs r0, #0xf0
    lsls r0, r0, #1
    strh r0, [r7, #0x22]
    mov r1, sl
    strh r1, [r7, #0x20]
    ldr r2, lbl_080637ac @ =0x0000011b
    add r2, sb
    ldrb r0, [r2]
    ands r4, r0
    ldr r3, [sp]
    orrs r4, r3
    strb r4, [r2]
    movs r1, #0x8e
    lsls r1, r1, #1
    add r1, sb
    ldrb r0, [r1]
    ands r6, r0
    movs r0, #1
    orrs r6, r0
    strb r6, [r1]
    ldrb r0, [r2]
    ands r5, r0
    mov r1, r8
    orrs r5, r1
    strb r5, [r2]
lbl_08063796:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080637a8: .4byte 0x08375d20
lbl_080637ac: .4byte 0x0000011b

    thumb_func_start sub_080637b0
sub_080637b0: @ 0x080637b0
    push {lr}
    adds r2, r0, #0
    ldrh r0, [r2]
    subs r0, #4
    strh r0, [r2]
    movs r1, #0
    ldrsh r0, [r2, r1]
    movs r1, #0x80
    lsls r1, r1, #4
    adds r0, r0, r1
    ldr r1, lbl_080637d8 @ =0x03000c02
    ldrh r1, [r1]
    subs r1, r0, r1
    movs r0, #0x90
    rsbs r0, r0, #0
    cmp r1, r0
    bge lbl_080637dc
    ldrb r1, [r2, #0xb]
    movs r0, #0x3f
    b lbl_08063802
    .align 2, 0
lbl_080637d8: .4byte 0x03000c02
lbl_080637dc:
    movs r0, #0xc0
    lsls r0, r0, #2
    cmp r1, r0
    ble lbl_080637f4
    ldrb r1, [r2, #0xb]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    bne lbl_08063806
    movs r0, #0x20
    orrs r0, r1
    b lbl_08063804
lbl_080637f4:
    ldrb r1, [r2, #0xb]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08063806
    movs r0, #0x21
    rsbs r0, r0, #0
lbl_08063802:
    ands r0, r1
lbl_08063804:
    strb r0, [r2, #0xb]
lbl_08063806:
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0806380c
sub_0806380c: @ 0x0806380c
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    movs r2, #0
    ldr r7, lbl_0806386c @ =0x08754bc4
    ldr r6, lbl_08063870 @ =0x0875ff68
    lsrs r1, r0, #0x16
    adds r0, r6, #2
    adds r0, r0, r1
    mov ip, r0
lbl_0806381e:
    ldr r5, [r7]
    lsls r4, r2, #5
    adds r3, r5, r4
    adds r0, r3, #0
    adds r0, #0xfb
    ldrb r0, [r0]
    lsrs r0, r0, #6
    cmp r0, #0
    bne lbl_08063874
    adds r0, r1, r6
    ldrh r0, [r0]
    adds r2, r3, #0
    adds r2, #0xf2
    strh r0, [r2]
    mov r0, ip
    ldrh r1, [r0]
    adds r0, r3, #0
    adds r0, #0xf0
    strh r1, [r0]
    adds r0, r4, #0
    adds r0, #0xf0
    adds r0, r5, r0
    movs r1, #1
    bl update_cutscene_oam_data_id
    ldr r2, [r7]
    adds r2, r2, r4
    adds r2, #0xfc
    ldrb r1, [r2]
    movs r3, #0x10
    rsbs r3, r3, #0
    adds r0, r3, #0
    ands r1, r0
    movs r0, #3
    orrs r1, r0
    strb r1, [r2]
    movs r0, #0
    b lbl_0806387c
    .align 2, 0
lbl_0806386c: .4byte 0x08754bc4
lbl_08063870: .4byte 0x0875ff68
lbl_08063874:
    adds r2, #1
    cmp r2, #5
    ble lbl_0806381e
    movs r0, #1
lbl_0806387c:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start ridley_in_space_ship_leaving
ridley_in_space_ship_leaving: @ 0x08063884
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r1, lbl_080638a8 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r4, r1, #0
    cmp r0, #6
    bls lbl_0806389e
    b lbl_08063ae2
lbl_0806389e:
    lsls r0, r0, #2
    ldr r1, lbl_080638ac @ =lbl_080638b0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080638a8: .4byte 0x08754bc4
lbl_080638ac: .4byte lbl_080638b0
lbl_080638b0: @ jump table
    .4byte lbl_080638cc @ case 0
    .4byte lbl_08063a38 @ case 1
    .4byte lbl_08063a60 @ case 2
    .4byte lbl_08063a74 @ case 3
    .4byte lbl_08063a90 @ case 4
    .4byte lbl_08063ab8 @ case 5
    .4byte lbl_08063acc @ case 6
lbl_080638cc:
    ldr r1, lbl_080639e8 @ =0x0839dcd0
    movs r5, #0xa0
    lsls r5, r5, #0x13
    movs r6, #0x10
    str r6, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0xa0
    bl DMATransfer
    movs r4, #0
    strh r4, [r5]
    ldr r0, lbl_080639ec @ =0x083981ec
    ldr r5, lbl_080639f0 @ =0x08386f70
    ldrb r1, [r5]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080639f4 @ =0x0839fc2c
    ldrb r1, [r5, #1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r1, lbl_080639f8 @ =0x0839dc70
    ldr r2, lbl_080639fc @ =0x05000200
    str r6, [sp]
    movs r0, #3
    movs r3, #0x60
    bl DMATransfer
    ldr r0, lbl_08063a00 @ =0x08396a88
    ldr r1, lbl_08063a04 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, [r5]
    ldr r1, [r5, #4]
    bl sub_0806141c
    bl sub_08061e38
    ldr r4, lbl_08063a08 @ =0x08754bc4
    ldr r2, [r4]
    ldr r1, lbl_08063a0c @ =0x0875ff70
    ldrh r0, [r1]
    movs r6, #0x99
    lsls r6, r6, #1
    adds r3, r2, r6
    strh r0, [r3]
    ldrh r1, [r1, #2]
    movs r3, #0x98
    lsls r3, r3, #1
    adds r0, r2, r3
    strh r1, [r0]
    movs r0, #0x9e
    lsls r0, r0, #1
    adds r2, r2, r0
    ldrb r0, [r2]
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r4]
    adds r0, r0, r3
    movs r1, #4
    bl update_cutscene_oam_data_id
    ldr r2, [r4]
    ldrh r0, [r5, #4]
    movs r3, #0x80
    lsls r3, r3, #5
    adds r1, r3, #0
    orrs r0, r1
    strh r0, [r2, #0x1c]
    movs r6, #3
    movs r0, #0
    mov sl, r0
    ldr r1, lbl_08063a10 @ =0x0808c99c
    mov r8, r1
    ldr r7, lbl_08063a14 @ =0x03000c77
    movs r4, #0xa8
    lsls r4, r4, #1
    movs r2, #0xff
    mov sb, r2
lbl_08063978:
    ldr r3, lbl_08063a08 @ =0x08754bc4
    ldr r0, [r3]
    lsls r1, r6, #5
    adds r0, r0, r1
    adds r0, #0xfd
    mov r2, sl
    strb r2, [r0]
    ldr r5, [r3]
    adds r3, r5, r1
    ldrb r0, [r7]
    ands r0, r6
    add r0, r8
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r1, r3, #0
    adds r1, #0xf2
    strh r0, [r1]
    ldrb r0, [r7]
    adds r0, r0, r6
    mov r1, sb
    ands r0, r1
    add r0, r8
    ldrb r1, [r0]
    lsls r2, r1, #2
    adds r0, r3, #0
    adds r0, #0xf0
    strh r2, [r0]
    adds r1, r2, #0
    ldr r2, lbl_08063a18 @ =0x0000027f
    cmp r1, r2
    bgt lbl_08063a24
    movs r1, #0x82
    lsls r1, r1, #1
    adds r0, r3, r1
    mov r2, sl
    strh r2, [r0]
    ldrb r0, [r7]
    muls r0, r6, r0
    mov r1, sb
    ands r0, r1
    add r0, r8
    ldrb r1, [r0]
    movs r2, #0x81
    lsls r2, r2, #1
    adds r0, r3, r2
    strh r1, [r0]
    movs r0, #1
    ands r1, r0
    cmp r1, #0
    beq lbl_08063a1c
    adds r0, r5, r4
    movs r1, #9
    bl update_cutscene_oam_data_id
    b lbl_08063a24
    .align 2, 0
lbl_080639e8: .4byte 0x0839dcd0
lbl_080639ec: .4byte 0x083981ec
lbl_080639f0: .4byte 0x08386f70
lbl_080639f4: .4byte 0x0839fc2c
lbl_080639f8: .4byte 0x0839dc70
lbl_080639fc: .4byte 0x05000200
lbl_08063a00: .4byte 0x08396a88
lbl_08063a04: .4byte 0x06010000
lbl_08063a08: .4byte 0x08754bc4
lbl_08063a0c: .4byte 0x0875ff70
lbl_08063a10: .4byte 0x0808c99c
lbl_08063a14: .4byte 0x03000c77
lbl_08063a18: .4byte 0x0000027f
lbl_08063a1c:
    adds r0, r5, r4
    movs r1, #0xa
    bl update_cutscene_oam_data_id
lbl_08063a24:
    adds r4, #0x20
    adds r6, #1
    cmp r6, #0xc
    ble lbl_08063978
    ldr r0, lbl_08063a34 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08063ac0
    .align 2, 0
lbl_08063a34: .4byte 0x08754bc4
lbl_08063a38:
    ldr r0, [r4]
    ldrh r0, [r0, #2]
    cmp r0, #0x3c
    bls lbl_08063ae2
    ldr r0, lbl_08063a58 @ =0x0000028e
    bl SoundPlay
    ldr r0, [r4]
    ldr r3, lbl_08063a5c @ =0x0000013d
    adds r1, r0, r3
    movs r2, #0
    movs r0, #3
    strb r0, [r1]
    ldr r1, [r4]
    strh r2, [r1, #2]
    b lbl_08063ac4
    .align 2, 0
lbl_08063a58: .4byte 0x0000028e
lbl_08063a5c: .4byte 0x0000013d
lbl_08063a60:
    ldr r1, [r4]
    ldr r6, lbl_08063a70 @ =0x0000013d
    adds r0, r1, r6
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08063ae2
    b lbl_08063ac2
    .align 2, 0
lbl_08063a70: .4byte 0x0000013d
lbl_08063a74:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x78
    bls lbl_08063ae2
    ldr r0, lbl_08063a8c @ =0x0000013d
    adds r1, r1, r0
    movs r2, #0
    movs r0, #0xc
    strb r0, [r1]
    ldr r1, [r4]
    strh r2, [r1, #2]
    b lbl_08063ac4
    .align 2, 0
lbl_08063a8c: .4byte 0x0000013d
lbl_08063a90:
    ldr r2, [r4]
    ldr r1, lbl_08063ab0 @ =0x0000013d
    adds r0, r2, r1
    ldrb r3, [r0]
    cmp r3, #0
    bne lbl_08063ae2
    ldrh r0, [r2, #0x1c]
    ldr r1, lbl_08063ab4 @ =0x0000e0ff
    ands r1, r0
    strh r1, [r2, #0x1c]
    strh r3, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08063ae2
    .align 2, 0
lbl_08063ab0: .4byte 0x0000013d
lbl_08063ab4: .4byte 0x0000e0ff
lbl_08063ab8:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x78
    bls lbl_08063ae2
lbl_08063ac0:
    movs r0, #0
lbl_08063ac2:
    strh r0, [r1, #2]
lbl_08063ac4:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08063ae2
lbl_08063acc:
    bl sub_08061f0c
    ldr r3, lbl_08063b14 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08063ae2:
    bl sub_0806469c
    ldr r0, lbl_08063b18 @ =0x08386f70
    ldrh r0, [r0, #4]
    bl sub_08061578
    ldrh r1, [r0]
    adds r1, #2
    strh r1, [r0]
    ldr r0, lbl_08063b14 @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0x98
    lsls r2, r2, #1
    adds r0, r0, r2
    bl sub_08063b1c
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08063b14: .4byte 0x08754bc4
lbl_08063b18: .4byte 0x08386f70

    thumb_func_start sub_08063b1c
sub_08063b1c: @ 0x08063b1c
    push {lr}
    adds r2, r0, #0
    ldrb r1, [r2, #0xd]
    movs r3, #3
    ands r3, r1
    cmp r3, #0
    beq lbl_08063b98
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08063b46
    ldrh r0, [r2, #2]
    adds r0, #8
    strh r0, [r2, #2]
    lsls r0, r0, #0x10
    movs r1, #0x9c
    lsls r1, r1, #0x13
    cmp r0, r1
    ble lbl_08063b46
    movs r0, #0
    strb r0, [r2, #0xd]
lbl_08063b46:
    ldrb r1, [r2, #0xd]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08063b6c
    ldrh r0, [r2, #0x18]
    adds r0, #1
    strh r0, [r2, #0x18]
    ldr r1, lbl_08063b8c @ =0x0000fffd
    strh r1, [r2, #0x10]
    ldrh r0, [r2]
    adds r0, r0, r1
    strh r0, [r2]
    lsls r0, r0, #0x10
    ldr r1, lbl_08063b90 @ =0xff900000
    cmp r0, r1
    bge lbl_08063b6c
    movs r0, #0
    strb r0, [r2, #0xd]
lbl_08063b6c:
    ldrb r0, [r2, #0xd]
    cmp r0, #0
    bne lbl_08063bd2
    movs r0, #5
    strb r0, [r2, #0xa]
    ldr r1, lbl_08063b94 @ =0x03000c06
    movs r3, #0x80
    lsls r3, r3, #1
    adds r0, r3, #0
    strh r0, [r1]
    movs r0, #0x98
    lsls r0, r0, #3
    strh r0, [r2, #2]
    movs r0, #0x78
    strh r0, [r2]
    b lbl_08063bd2
    .align 2, 0
lbl_08063b8c: .4byte 0x0000fffd
lbl_08063b90: .4byte 0xff900000
lbl_08063b94: .4byte 0x03000c06
lbl_08063b98:
    movs r0, #0xc
    ands r0, r1
    cmp r0, #0
    beq lbl_08063bd2
    movs r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_08063bae
    ldrh r0, [r2, #2]
    subs r0, #0x10
    strh r0, [r2, #2]
lbl_08063bae:
    strh r3, [r2, #0x10]
    ldr r1, lbl_08063bd8 @ =0x03000c06
    ldrh r0, [r1]
    ldr r3, lbl_08063bdc @ =0x000001ff
    cmp r0, r3
    bhi lbl_08063bc6
    adds r0, #8
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r3
    bls lbl_08063bd2
lbl_08063bc6:
    movs r3, #0x80
    lsls r3, r3, #2
    adds r0, r3, #0
    strh r0, [r1]
    movs r0, #0
    strb r0, [r2, #0xd]
lbl_08063bd2:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08063bd8: .4byte 0x03000c06
lbl_08063bdc: .4byte 0x000001ff

    thumb_func_start ridley_in_space_ridley_suspicious
ridley_in_space_ridley_suspicious: @ 0x08063be0
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #4
    ldr r1, lbl_08063c04 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r4, r1, #0
    cmp r0, #5
    bls lbl_08063bf8
    b lbl_08063d7c
lbl_08063bf8:
    lsls r0, r0, #2
    ldr r1, lbl_08063c08 @ =lbl_08063c0c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08063c04: .4byte 0x08754bc4
lbl_08063c08: .4byte lbl_08063c0c
lbl_08063c0c: @ jump table
    .4byte lbl_08063c24 @ case 0
    .4byte lbl_08063d52 @ case 1
    .4byte lbl_08063d20 @ case 2
    .4byte lbl_08063d36 @ case 3
    .4byte lbl_08063d52 @ case 4
    .4byte lbl_08063d66 @ case 5
lbl_08063c24:
    ldr r1, lbl_08063cf4 @ =0x0839da90
    movs r5, #0xa0
    lsls r5, r5, #0x13
    movs r3, #0xf0
    lsls r3, r3, #1
    movs r0, #0x10
    mov sb, r0
    str r0, [sp]
    movs r0, #3
    adds r2, r5, #0
    bl DMATransfer
    movs r4, #0
    strh r4, [r5]
    ldr r0, lbl_08063cf8 @ =0x0839285c
    ldr r5, lbl_08063cfc @ =0x08386f70
    ldrb r1, [r5, #0x18]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063d00 @ =0x083909b8
    adds r1, r5, #0
    adds r1, #0x20
    ldrb r1, [r1]
    lsls r1, r1, #0xe
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063d04 @ =0x0839ed30
    adds r1, r5, #0
    adds r1, #0x21
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063d08 @ =0x0839f1ac
    adds r1, r5, #0
    adds r1, #0x29
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063d0c @ =0x0839f628
    ldrb r1, [r5, #0x19]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, [r5, #0x18]
    ldr r1, [r5, #0x1c]
    bl sub_0806141c
    ldr r0, [r5, #0x20]
    ldr r1, [r5, #0x24]
    bl sub_0806141c
    ldr r0, [r5, #0x28]
    ldr r1, [r5, #0x2c]
    bl sub_0806141c
    ldrh r6, [r5, #0x1c]
    movs r4, #0x80
    lsls r4, r4, #4
    movs r0, #3
    adds r1, r6, #0
    adds r2, r4, #0
    bl sub_080614d4
    ldrh r3, [r5, #0x24]
    mov r8, r3
    movs r0, #3
    mov r1, r8
    adds r2, r4, #0
    bl sub_080614d4
    ldrh r5, [r5, #0x2c]
    movs r0, #3
    adds r1, r5, #0
    adds r2, r4, #0
    bl sub_080614d4
    bl sub_08061e38
    ldr r0, lbl_08063d10 @ =0x08754bc4
    ldr r1, [r0]
    movs r2, #0
    ldr r0, lbl_08063d14 @ =0x00002c42
    strh r0, [r1, #0x1e]
    ldr r0, lbl_08063d18 @ =0x030013b2
    mov r3, sb
    strh r3, [r0]
    ldr r0, lbl_08063d1c @ =0x030013b0
    strh r2, [r0]
    mov r0, r8
    orrs r6, r0
    orrs r5, r6
    strh r5, [r1, #0x1c]
    strh r2, [r1, #2]
    b lbl_08063d5e
    .align 2, 0
lbl_08063cf4: .4byte 0x0839da90
lbl_08063cf8: .4byte 0x0839285c
lbl_08063cfc: .4byte 0x08386f70
lbl_08063d00: .4byte 0x083909b8
lbl_08063d04: .4byte 0x0839ed30
lbl_08063d08: .4byte 0x0839f1ac
lbl_08063d0c: .4byte 0x0839f628
lbl_08063d10: .4byte 0x08754bc4
lbl_08063d14: .4byte 0x00002c42
lbl_08063d18: .4byte 0x030013b2
lbl_08063d1c: .4byte 0x030013b0
lbl_08063d20:
    ldr r0, [r4]
    ldrh r0, [r0, #0x1e]
    movs r1, #2
    str r1, [sp]
    movs r1, #0x10
    movs r2, #0
    movs r3, #2
    bl sub_08061dc8
    ldr r1, [r4]
    b lbl_08063d5a
lbl_08063d36:
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08063d7c
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08063d7c
lbl_08063d52:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_08063d7c
lbl_08063d5a:
    movs r0, #0
    strh r0, [r1, #2]
lbl_08063d5e:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08063d7c
lbl_08063d66:
    bl sub_08061f0c
    ldr r3, lbl_08063d8c @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08063d7c:
    movs r0, #0
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08063d8c: .4byte 0x08754bc4

    thumb_func_start ridley_in_space_red_alert
ridley_in_space_red_alert: @ 0x08063d90
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    ldr r0, lbl_08063db0 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #4]
    cmp r0, #5
    bls lbl_08063da4
    b lbl_08063f36
lbl_08063da4:
    lsls r0, r0, #2
    ldr r1, lbl_08063db4 @ =lbl_08063db8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08063db0: .4byte 0x08754bc4
lbl_08063db4: .4byte lbl_08063db8
lbl_08063db8: @ jump table
    .4byte lbl_08063dd0 @ case 0
    .4byte lbl_08063e90 @ case 1
    .4byte lbl_08063eac @ case 2
    .4byte lbl_08063ee4 @ case 3
    .4byte lbl_08063f04 @ case 4
    .4byte lbl_08063f20 @ case 5
lbl_08063dd0:
    ldr r1, lbl_08063e74 @ =0x0839d910
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    movs r3, #0xc0
    bl DMATransfer
    movs r0, #0
    strh r0, [r4]
    ldr r0, lbl_08063e78 @ =0x0839e474
    ldr r4, lbl_08063e7c @ =0x08386f70
    ldrb r1, [r4, #9]
    lsls r1, r1, #0xb
    movs r5, #0xc0
    lsls r5, r5, #0x13
    adds r1, r1, r5
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063e80 @ =0x0838c51c
    ldrb r1, [r4, #8]
    lsls r1, r1, #0xe
    adds r1, r1, r5
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063e84 @ =0x083888fc
    ldrb r1, [r4, #0x10]
    lsls r1, r1, #0xe
    adds r1, r1, r5
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08063e88 @ =0x0839dd70
    ldrb r1, [r4, #0x11]
    lsls r1, r1, #0xb
    adds r1, r1, r5
    bl CallLZ77UncompVRAM
    ldr r0, [r4, #8]
    ldr r1, [r4, #0xc]
    bl sub_0806141c
    ldr r0, [r4, #0x10]
    ldr r1, [r4, #0x14]
    bl sub_0806141c
    ldrh r5, [r4, #0xc]
    movs r0, #0x80
    lsls r0, r0, #4
    mov r8, r0
    movs r0, #1
    adds r1, r5, #0
    mov r2, r8
    bl sub_080614d4
    movs r6, #0xa8
    lsls r6, r6, #4
    movs r0, #2
    adds r1, r5, #0
    adds r2, r6, #0
    bl sub_080614d4
    ldrh r4, [r4, #0x14]
    movs r0, #1
    adds r1, r4, #0
    mov r2, r8
    bl sub_080614d4
    movs r0, #2
    adds r1, r4, #0
    adds r2, r6, #0
    bl sub_080614d4
    bl sub_08061e38
    ldr r0, lbl_08063e8c @ =0x08754bc4
    ldr r1, [r0]
    orrs r5, r4
    movs r0, #0
    strh r5, [r1, #0x1c]
    b lbl_08063f10
    .align 2, 0
lbl_08063e74: .4byte 0x0839d910
lbl_08063e78: .4byte 0x0839e474
lbl_08063e7c: .4byte 0x08386f70
lbl_08063e80: .4byte 0x0838c51c
lbl_08063e84: .4byte 0x083888fc
lbl_08063e88: .4byte 0x0839dd70
lbl_08063e8c: .4byte 0x08754bc4
lbl_08063e90:
    ldr r0, lbl_08063ea4 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #2]
    cmp r0, #0x28
    bls lbl_08063f36
    ldr r0, lbl_08063ea8 @ =0x08386fa0
    ldr r0, [r0]
    str r0, [r1, #0xc]
    b lbl_08063f0e
    .align 2, 0
lbl_08063ea4: .4byte 0x08754bc4
lbl_08063ea8: .4byte 0x08386fa0
lbl_08063eac:
    ldr r7, lbl_08063ed8 @ =0x08754bc4
    ldr r0, [r7]
    ldrh r0, [r0, #2]
    cmp r0, #0x3c
    bls lbl_08063f36
    ldr r0, lbl_08063edc @ =0x08386f60
    ldr r4, [r0]
    ldr r5, [r0, #4]
    ldr r6, lbl_08063ee0 @ =0x08386f70
    ldrh r2, [r6, #0xc]
    adds r1, r5, #0
    adds r0, r4, #0
    bl sub_08061618
    ldrh r2, [r6, #0x14]
    adds r1, r5, #0
    adds r0, r4, #0
    bl sub_08061618
    ldr r1, [r7]
    b lbl_08063f0e
    .align 2, 0
lbl_08063ed8: .4byte 0x08754bc4
lbl_08063edc: .4byte 0x08386f60
lbl_08063ee0: .4byte 0x08386f70
lbl_08063ee4:
    ldr r0, lbl_08063efc @ =0x08386f70
    ldrh r0, [r0, #0xc]
    bl sub_08061944
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    cmp r2, #0
    bne lbl_08063f36
    ldr r0, lbl_08063f00 @ =0x08754bc4
    ldr r1, [r0]
    strh r2, [r1, #2]
    b lbl_08063f12
    .align 2, 0
lbl_08063efc: .4byte 0x08386f70
lbl_08063f00: .4byte 0x08754bc4
lbl_08063f04:
    ldr r0, lbl_08063f1c @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_08063f36
lbl_08063f0e:
    movs r0, #0
lbl_08063f10:
    strh r0, [r1, #2]
lbl_08063f12:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08063f36
    .align 2, 0
lbl_08063f1c: .4byte 0x08754bc4
lbl_08063f20:
    bl sub_08061f0c
    ldr r3, lbl_08063f50 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08063f36:
    ldr r0, lbl_08063f50 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xc
    bl sub_08063f54
    movs r0, #0
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08063f50: .4byte 0x08754bc4

    thumb_func_start sub_08063f54
sub_08063f54: @ 0x08063f54
    push {lr}
    sub sp, #4
    adds r2, r0, #0
    ldrb r1, [r2]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08063fa2
    ldrb r0, [r2, #1]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08063f72
    subs r0, #1
    strb r0, [r2, #1]
    b lbl_08063fa2
lbl_08063f72:
    ldrb r0, [r2, #3]
    strb r0, [r2, #1]
    ldrb r0, [r2, #2]
    adds r0, #1
    strb r0, [r2, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #9
    bls lbl_08063f86
    strb r1, [r2, #2]
lbl_08063f86:
    ldr r1, lbl_08063fa8 @ =0x08386fa4
    ldrb r0, [r2, #2]
    adds r0, r0, r1
    ldrb r1, [r0]
    lsls r1, r1, #5
    ldr r0, lbl_08063fac @ =0x0839d9d0
    adds r1, r1, r0
    ldr r2, lbl_08063fb0 @ =0x050000a0
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
lbl_08063fa2:
    add sp, #4
    pop {r0}
    bx r0
    .align 2, 0
lbl_08063fa8: .4byte 0x08386fa4
lbl_08063fac: .4byte 0x0839d9d0
lbl_08063fb0: .4byte 0x050000a0

    thumb_func_start ridley_in_space_view_of_ship
ridley_in_space_view_of_ship: @ 0x08063fb4
    push {r4, r5, lr}
    sub sp, #4
    ldr r0, lbl_08063fd0 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #4]
    cmp r0, #6
    bls lbl_08063fc4
    b lbl_08064112
lbl_08063fc4:
    lsls r0, r0, #2
    ldr r1, lbl_08063fd4 @ =lbl_08063fd8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08063fd0: .4byte 0x08754bc4
lbl_08063fd4: .4byte lbl_08063fd8
lbl_08063fd8: @ jump table
    .4byte lbl_08063ff4 @ case 0
    .4byte lbl_08064008 @ case 1
    .4byte lbl_08064028 @ case 2
    .4byte lbl_0806404c @ case 3
    .4byte lbl_08064074 @ case 4
    .4byte lbl_080640d4 @ case 5
    .4byte lbl_080640f4 @ case 6
lbl_08063ff4:
    ldr r0, lbl_08064004 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #2]
    cmp r0, #0x1e
    bhi lbl_08064000
    b lbl_08064112
lbl_08064000:
    b lbl_08064016
    .align 2, 0
lbl_08064004: .4byte 0x08754bc4
lbl_08064008:
    bl sub_08061f44
    cmp r0, #0
    bne lbl_08064012
    b lbl_08064112
lbl_08064012:
    ldr r0, lbl_08064024 @ =0x08754bc4
    ldr r1, [r0]
lbl_08064016:
    movs r0, #0
    strh r0, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08064112
    .align 2, 0
lbl_08064024: .4byte 0x08754bc4
lbl_08064028:
    ldr r3, lbl_08064048 @ =0x08754bc4
    ldr r1, [r3]
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_08064112
    adds r1, #0xfd
    movs r2, #0
    movs r0, #3
    strb r0, [r1]
    ldr r1, [r3]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    ldr r0, [r3]
    b lbl_08064110
    .align 2, 0
lbl_08064048: .4byte 0x08754bc4
lbl_0806404c:
    ldr r3, lbl_0806406c @ =0x08754bc4
    ldr r1, [r3]
    ldrh r0, [r1, #2]
    cmp r0, #8
    bls lbl_08064112
    ldr r0, lbl_08064070 @ =0x0000011d
    adds r1, r1, r0
    movs r2, #0
    movs r0, #3
    strb r0, [r1]
    ldr r1, [r3]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    ldr r0, [r3]
    b lbl_08064110
    .align 2, 0
lbl_0806406c: .4byte 0x08754bc4
lbl_08064070: .4byte 0x0000011d
lbl_08064074:
    ldr r4, lbl_080640c8 @ =0x08754bc4
    ldr r3, [r4]
    ldrh r0, [r3, #2]
    cmp r0, #0x78
    bls lbl_08064112
    adds r3, #0xfb
    ldrb r2, [r3]
    movs r1, #0xd
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r2
    movs r2, #4
    orrs r0, r2
    strb r0, [r3]
    ldr r0, [r4]
    ldr r5, lbl_080640cc @ =0x0000011b
    adds r3, r0, r5
    ldrb r0, [r3]
    ands r1, r0
    orrs r1, r2
    strb r1, [r3]
    movs r0, #0xe1
    lsls r0, r0, #6
    movs r1, #1
    str r1, [sp]
    movs r1, #0xe
    movs r2, #0
    movs r3, #0x20
    bl sub_08061dc8
    ldr r0, [r4]
    ldr r2, lbl_080640d0 @ =0x0000013d
    adds r1, r0, r2
    movs r2, #0
    movs r0, #3
    strb r0, [r1]
    ldr r1, [r4]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    ldr r0, [r4]
    b lbl_08064110
    .align 2, 0
lbl_080640c8: .4byte 0x08754bc4
lbl_080640cc: .4byte 0x0000011b
lbl_080640d0: .4byte 0x0000013d
lbl_080640d4:
    ldr r3, lbl_080640ec @ =0x08754bc4
    ldr r1, [r3]
    ldr r5, lbl_080640f0 @ =0x0000013d
    adds r0, r1, r5
    ldrb r2, [r0]
    cmp r2, #0
    bne lbl_08064112
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    ldr r0, [r3]
    b lbl_08064110
    .align 2, 0
lbl_080640ec: .4byte 0x08754bc4
lbl_080640f0: .4byte 0x0000013d
lbl_080640f4:
    ldr r4, lbl_0806415c @ =0x08754bc4
    ldr r0, [r4]
    ldrh r0, [r0, #2]
    cmp r0, #0x5a
    bls lbl_08064112
    bl sub_08061f0c
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r4]
    strb r2, [r0, #4]
lbl_08064110:
    strh r2, [r0, #2]
lbl_08064112:
    ldr r4, lbl_0806415c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xf0
    bl sub_0806424c
    ldr r0, [r4]
    movs r1, #0x88
    lsls r1, r1, #1
    adds r0, r0, r1
    bl sub_080641cc
    ldr r0, [r4]
    movs r2, #0x98
    lsls r2, r2, #1
    adds r0, r0, r2
    bl sub_08064168
    bl sub_08064498
    ldr r0, lbl_08064160 @ =0x03000c77
    ldrb r1, [r0]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08064152
    ldr r0, lbl_08064164 @ =0x08386f70
    ldrh r0, [r0, #4]
    bl sub_080615c8
    ldrh r1, [r0]
    subs r1, #1
    strh r1, [r0]
lbl_08064152:
    movs r0, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806415c: .4byte 0x08754bc4
lbl_08064160: .4byte 0x03000c77
lbl_08064164: .4byte 0x08386f70

    thumb_func_start sub_08064168
sub_08064168: @ 0x08064168
    push {lr}
    adds r3, r0, #0
    ldrb r1, [r3, #0xd]
    movs r2, #2
    adds r0, r2, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0806419c
    movs r1, #0
    ldrsh r0, [r3, r1]
    ldrh r1, [r3]
    cmp r0, #0x7f
    bgt lbl_08064186
    strh r2, [r3, #0x10]
    b lbl_0806418a
lbl_08064186:
    movs r0, #1
    strh r0, [r3, #0x10]
lbl_0806418a:
    ldrh r0, [r3, #0x10]
    adds r0, r1, r0
    strh r0, [r3]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0xdf
    ble lbl_0806419c
    movs r0, #0
    strb r0, [r3, #0xd]
lbl_0806419c:
    ldrh r0, [r3, #0x18]
    adds r1, r0, #1
    strh r1, [r3, #0x18]
    movs r0, #0x1f
    ands r0, r1
    cmp r0, #0
    bne lbl_080641c2
    ldr r2, lbl_080641c8 @ =0x0875ff80
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x15
    movs r1, #7
    ands r0, r1
    adds r0, r0, r2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r1, [r3]
    adds r0, r0, r1
    strh r0, [r3]
lbl_080641c2:
    pop {r0}
    bx r0
    .align 2, 0
lbl_080641c8: .4byte 0x0875ff80

    thumb_func_start sub_080641cc
sub_080641cc: @ 0x080641cc
    push {r4, lr}
    adds r3, r0, #0
    ldrb r1, [r3, #0xd]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080641f6
    ldr r0, lbl_08064244 @ =0x0000fffe
    strh r0, [r3, #0xe]
    ldrh r1, [r3, #2]
    adds r1, r1, r0
    strh r1, [r3, #2]
    lsls r1, r1, #0x10
    movs r0, #0xb4
    lsls r0, r0, #0x12
    cmp r1, r0
    bgt lbl_080641f6
    movs r0, #0
    strb r0, [r3, #0xd]
    movs r0, #0
    strh r0, [r3, #0x18]
lbl_080641f6:
    ldrb r1, [r3, #0xd]
    movs r0, #2
    ands r0, r1
    ldrh r2, [r3, #0x18]
    cmp r0, #0
    beq lbl_0806421a
    movs r0, #1
    ands r0, r2
    movs r1, #0
    cmp r0, #0
    beq lbl_08064212
    movs r0, #1
    rsbs r0, r0, #0
    adds r1, r0, #0
lbl_08064212:
    strh r1, [r3, #0x10]
    ldrh r4, [r3]
    adds r0, r1, r4
    strh r0, [r3]
lbl_0806421a:
    adds r1, r2, #1
    strh r1, [r3, #0x18]
    movs r0, #0xf
    ands r0, r1
    cmp r0, #0
    bne lbl_0806423e
    ldr r2, lbl_08064248 @ =0x0875ff80
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x14
    movs r1, #7
    ands r0, r1
    adds r0, r0, r2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r1, [r3]
    adds r0, r0, r1
    strh r0, [r3]
lbl_0806423e:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08064244: .4byte 0x0000fffe
lbl_08064248: .4byte 0x0875ff80

    thumb_func_start sub_0806424c
sub_0806424c: @ 0x0806424c
    push {lr}
    adds r3, r0, #0
    ldrb r1, [r3, #0xd]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08064270
    movs r0, #2
    strh r0, [r3, #0xe]
    ldrh r0, [r3, #2]
    adds r0, #2
    strh r0, [r3, #2]
    lsls r0, r0, #0x10
    ldr r1, lbl_080642b0 @ =0x010f0000
    cmp r0, r1
    ble lbl_08064270
    movs r0, #0
    strb r0, [r3, #0xd]
lbl_08064270:
    ldrb r1, [r3, #0xd]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08064284
    ldr r1, lbl_080642b4 @ =0x0000ffff
    strh r1, [r3, #0x10]
    ldrh r0, [r3]
    adds r0, r0, r1
    strh r0, [r3]
lbl_08064284:
    ldrh r0, [r3, #0x18]
    adds r1, r0, #1
    strh r1, [r3, #0x18]
    movs r0, #0xf
    ands r0, r1
    cmp r0, #0
    bne lbl_080642aa
    ldr r2, lbl_080642b8 @ =0x0875ff80
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x14
    movs r1, #7
    ands r0, r1
    adds r0, r0, r2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r1, [r3]
    adds r0, r0, r1
    strh r0, [r3]
lbl_080642aa:
    pop {r0}
    bx r0
    .align 2, 0
lbl_080642b0: .4byte 0x010f0000
lbl_080642b4: .4byte 0x0000ffff
lbl_080642b8: .4byte 0x0875ff80

    thumb_func_start ridley_in_space_cutscene_init
ridley_in_space_cutscene_init: @ 0x080642bc
    push {r4, r5, r6, lr}
    mov r6, sl
    mov r5, sb
    mov r4, r8
    push {r4, r5, r6}
    sub sp, #4
    bl sub_08061f0c
    ldr r1, lbl_080643e8 @ =0x0839dcd0
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r6, #0x10
    str r6, [sp]
    movs r0, #3
    adds r2, r4, #0
    movs r3, #0xa0
    bl DMATransfer
    movs r0, #0
    mov sb, r0
    strh r0, [r4]
    ldr r0, lbl_080643ec @ =0x083981ec
    ldr r5, lbl_080643f0 @ =0x08386f70
    ldrb r1, [r5]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080643f4 @ =0x0839fc2c
    ldrb r1, [r5, #1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r1, lbl_080643f8 @ =0x0839d8b0
    ldr r2, lbl_080643fc @ =0x05000200
    str r6, [sp]
    movs r0, #3
    movs r3, #0x60
    bl DMATransfer
    ldr r0, lbl_08064400 @ =0x08387088
    ldr r1, lbl_08064404 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, [r5]
    ldr r1, [r5, #4]
    bl sub_0806141c
    ldrh r5, [r5, #4]
    mov r8, r5
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    mov r1, r8
    bl sub_080614d4
    bl sub_08061e38
    ldr r0, lbl_08064408 @ =0x030013ae
    mov r1, sb
    strh r1, [r0]
    ldr r5, lbl_0806440c @ =0x08754bc4
    ldr r2, [r5]
    mov ip, r2
    movs r3, #0
    mov sl, r3
    mov r4, sl
    strh r4, [r2, #0x1e]
    ldr r2, lbl_08064410 @ =0x0875ff74
    ldrh r0, [r2]
    mov r1, ip
    adds r1, #0xf2
    strh r0, [r1]
    ldrh r1, [r2, #2]
    mov r0, ip
    adds r0, #0xf0
    strh r1, [r0]
    ldrh r1, [r2, #4]
    movs r3, #0x89
    lsls r3, r3, #1
    add r3, ip
    strh r1, [r3]
    ldrh r3, [r2, #6]
    movs r6, #0x88
    lsls r6, r6, #1
    mov r4, ip
    adds r1, r4, r6
    strh r3, [r1]
    ldrh r1, [r2, #8]
    movs r3, #0x99
    lsls r3, r3, #1
    add r3, ip
    strh r1, [r3]
    ldrh r2, [r2, #0xa]
    movs r4, #0x98
    lsls r4, r4, #1
    mov r3, ip
    adds r1, r3, r4
    strh r2, [r1]
    movs r1, #1
    bl update_cutscene_oam_data_id
    ldr r0, [r5]
    adds r0, r0, r6
    movs r1, #2
    bl update_cutscene_oam_data_id
    ldr r0, [r5]
    adds r0, r0, r4
    movs r1, #3
    bl update_cutscene_oam_data_id
    movs r0, #0x10
    movs r1, #0
    bl PlayMusic
    ldr r0, lbl_08064414 @ =0x0000028d
    bl SoundPlay
    movs r0, #2
    bl sub_08061fa0
    ldr r1, [r5]
    movs r4, #0x80
    lsls r4, r4, #5
    adds r0, r4, #0
    mov r2, r8
    orrs r2, r0
    strh r2, [r1, #0x1c]
    mov r3, sl
    strh r3, [r1, #2]
    mov r4, sb
    strb r4, [r1, #4]
    ldr r1, [r5]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080643e8: .4byte 0x0839dcd0
lbl_080643ec: .4byte 0x083981ec
lbl_080643f0: .4byte 0x08386f70
lbl_080643f4: .4byte 0x0839fc2c
lbl_080643f8: .4byte 0x0839d8b0
lbl_080643fc: .4byte 0x05000200
lbl_08064400: .4byte 0x08387088
lbl_08064404: .4byte 0x06010000
lbl_08064408: .4byte 0x030013ae
lbl_0806440c: .4byte 0x08754bc4
lbl_08064410: .4byte 0x0875ff74
lbl_08064414: .4byte 0x0000028d

    thumb_func_start ridley_in_space_subroutine
ridley_in_space_subroutine: @ 0x08064418
    push {r4, lr}
    ldr r1, lbl_08064444 @ =0x0875ff88
    ldr r0, lbl_08064448 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_0806444c
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08064444: .4byte 0x0875ff88
lbl_08064448: .4byte 0x08754bc4

    thumb_func_start sub_0806444c
sub_0806444c: @ 0x0806444c
    push {lr}
    ldr r1, lbl_08064480 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_08064484 @ =0x0875ff88
    ldr r0, lbl_08064488 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_0806448c @ =0x08387030
    bl sub_08069dc8
    bl ResetFreeOAM
    ldr r0, lbl_08064490 @ =0x03000c04
    ldrh r0, [r0]
    ldr r1, lbl_08064494 @ =0x03000c06
    ldrh r1, [r1]
    movs r2, #0
    bl sub_0807ff58
    pop {r0}
    bx r0
    .align 2, 0
lbl_08064480: .4byte 0x03001382
lbl_08064484: .4byte 0x0875ff88
lbl_08064488: .4byte 0x08754bc4
lbl_0806448c: .4byte 0x08387030
lbl_08064490: .4byte 0x03000c04
lbl_08064494: .4byte 0x03000c06

    thumb_func_start sub_08064498
sub_08064498: @ 0x08064498
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r2, lbl_08064568 @ =0x08754bc4
    ldr r0, [r2]
    ldrh r1, [r0, #2]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0806457a
    movs r6, #3
    mov r8, r2
    ldr r0, lbl_0806456c @ =0x0808c99c
    mov sl, r0
    movs r1, #0xff
    mov sb, r1
lbl_080644bc:
    mov r3, r8
    ldr r0, [r3]
    lsls r7, r6, #5
    adds r1, r0, r7
    adds r0, r1, #0
    adds r0, #0xfb
    ldrb r0, [r0]
    lsrs r5, r0, #6
    cmp r5, #0
    bne lbl_08064574
    adds r0, r1, #0
    adds r0, #0xfd
    strb r5, [r0]
    ldr r3, [r2]
    adds r0, r3, r7
    mov ip, r0
    ldr r0, lbl_08064570 @ =0x03000c77
    ldrb r0, [r0]
    adds r0, r0, r6
    mov r1, sb
    ands r0, r1
    add r0, sl
    ldrb r1, [r0]
    movs r0, #0x53
    ands r0, r1
    lsls r0, r0, #2
    mov r4, ip
    adds r4, #0xf2
    strh r0, [r4]
    movs r2, #0x82
    lsls r2, r2, #1
    add r2, ip
    ldrh r0, [r2]
    adds r0, r0, r6
    mov r1, sb
    ands r0, r1
    add r0, sl
    ldrb r1, [r0]
    movs r0, #0x53
    ands r0, r1
    lsls r0, r0, #2
    mov r1, ip
    adds r1, #0xf0
    strh r0, [r1]
    strh r5, [r2]
    ldrb r1, [r3, #6]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806452c
    ldrh r1, [r4]
    movs r2, #0xf0
    lsls r2, r2, #2
    adds r0, r2, #0
    subs r0, r0, r1
    strh r0, [r4]
lbl_0806452c:
    mov r3, r8
    ldr r2, [r3]
    ldrb r1, [r2, #6]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0806454a
    adds r0, r2, r7
    adds r0, #0xf0
    ldrh r2, [r0]
    movs r3, #0xa0
    lsls r3, r3, #2
    adds r1, r3, #0
    subs r1, r1, r2
    strh r1, [r0]
lbl_0806454a:
    adds r1, r7, #0
    adds r1, #0xf0
    mov r2, r8
    ldr r0, [r2]
    adds r0, r0, r1
    movs r1, #6
    bl update_cutscene_oam_data_id
    mov r3, r8
    ldr r1, [r3]
    ldrb r0, [r1, #6]
    adds r0, #1
    strb r0, [r1, #6]
    b lbl_0806457a
    .align 2, 0
lbl_08064568: .4byte 0x08754bc4
lbl_0806456c: .4byte 0x0808c99c
lbl_08064570: .4byte 0x03000c77
lbl_08064574:
    adds r6, #1
    cmp r6, #0x1c
    ble lbl_080644bc
lbl_0806457a:
    movs r6, #3
    ldr r7, lbl_080645d8 @ =0x08754bc4
    movs r5, #0xa8
    lsls r5, r5, #1
lbl_08064582:
    ldr r1, [r7]
    lsls r4, r6, #5
    adds r0, r1, r4
    adds r0, #0xfb
    ldrb r0, [r0]
    lsrs r0, r0, #6
    cmp r0, #0
    beq lbl_080645c0
    adds r0, r1, r5
    bl sub_080645dc
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_080645aa
    ldr r0, [r7]
    adds r0, r0, r5
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl update_cutscene_oam_data_id
lbl_080645aa:
    ldr r1, [r7]
    adds r0, r1, r4
    adds r0, #0xfb
    ldrb r0, [r0]
    lsrs r0, r0, #6
    cmp r0, #0
    bne lbl_080645c0
    adds r0, r1, r5
    movs r1, #0
    bl update_cutscene_oam_data_id
lbl_080645c0:
    adds r5, #0x20
    adds r6, #1
    cmp r6, #0x1c
    ble lbl_08064582
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080645d8: .4byte 0x08754bc4

    thumb_func_start sub_080645dc
sub_080645dc: @ 0x080645dc
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0
    movs r7, #0
    ldrh r1, [r5, #0x14]
    strh r1, [r5, #0x12]
    ldrb r0, [r5, #0xd]
    cmp r0, #0
    bne lbl_0806461e
    movs r1, #2
    ldrsh r0, [r5, r1]
    subs r0, #0x78
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    adds r1, r1, r0
    lsls r1, r1, #4
    strh r1, [r5, #0xe]
    movs r0, #0
    ldrsh r2, [r5, r0]
    subs r2, #0x50
    lsls r0, r2, #1
    adds r0, r0, r2
    lsls r0, r0, #3
    adds r0, r0, r2
    lsls r0, r0, #4
    strh r0, [r5, #0x10]
    orrs r1, r0
    lsls r1, r1, #0x10
    cmp r1, #0
    beq lbl_08064684
    movs r0, #1
    strb r0, [r5, #0xd]
    b lbl_0806468c
lbl_0806461e:
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x63
    bgt lbl_08064684
    cmp r0, #0x19
    beq lbl_08064632
    cmp r0, #0x32
    beq lbl_08064632
    cmp r0, #0x46
    bne lbl_08064634
lbl_08064632:
    movs r7, #8
lbl_08064634:
    movs r1, #0x12
    ldrsh r4, [r5, r1]
    rsbs r4, r4, #0
    adds r4, #0x64
    movs r1, #0xe
    ldrsh r0, [r5, r1]
    adds r1, r4, #0
    bl __divsi3
    adds r6, r0, #0
    movs r1, #0xf0
    lsls r1, r1, #1
    adds r0, r6, r1
    strh r0, [r5, #2]
    movs r1, #0x10
    ldrsh r0, [r5, r1]
    adds r1, r4, #0
    bl __divsi3
    movs r1, #0xa0
    lsls r1, r1, #1
    adds r2, r0, r1
    strh r2, [r5]
    adds r1, #0xc0
    adds r0, r6, r1
    lsls r0, r0, #0x10
    movs r1, #0x80
    lsls r1, r1, #0x13
    cmp r0, r1
    bhi lbl_08064684
    lsls r0, r2, #0x10
    asrs r1, r0, #0x10
    movs r0, #0xa8
    lsls r0, r0, #2
    cmp r1, r0
    bgt lbl_08064684
    movs r0, #0x20
    rsbs r0, r0, #0
    cmp r1, r0
    bge lbl_0806468c
lbl_08064684:
    ldrb r1, [r5, #0xb]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r5, #0xb]
lbl_0806468c:
    ldrh r0, [r5, #0x14]
    adds r0, #1
    strh r0, [r5, #0x14]
    adds r0, r7, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0806469c
sub_0806469c: @ 0x0806469c
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    ldr r2, lbl_08064734 @ =0x08754bc4
    ldr r0, [r2]
    ldrh r1, [r0, #2]
    movs r0, #1
    ands r0, r1
    adds r3, r2, #0
    cmp r0, #0
    bne lbl_0806474a
    movs r5, #3
    movs r6, #0
lbl_080646b8:
    ldr r0, [r3]
    lsls r4, r5, #5
    adds r1, r0, r4
    adds r0, r1, #0
    adds r0, #0xfb
    ldrb r0, [r0]
    lsrs r2, r0, #6
    cmp r2, #0
    bne lbl_08064744
    adds r0, r1, #0
    adds r0, #0xfd
    strb r2, [r0]
    ldr r3, [r3]
    mov r8, r3
    mov r0, r8
    adds r0, r0, r4
    mov ip, r0
    mov r1, ip
    adds r1, #0xf2
    ldr r0, lbl_08064738 @ =0x0000ffa8
    strh r0, [r1]
    ldr r0, lbl_0806473c @ =0x0808c99c
    mov sb, r0
    ldr r7, lbl_08064740 @ =0x03000c77
    ldrb r0, [r7]
    adds r0, r0, r5
    movs r6, #0xff
    ands r0, r6
    add r0, sb
    ldrb r3, [r0]
    cmp r3, #0x9f
    bgt lbl_0806474a
    lsls r1, r3, #2
    mov r0, ip
    adds r0, #0xf0
    strh r1, [r0]
    movs r0, #0x82
    lsls r0, r0, #1
    add r0, ip
    strh r2, [r0]
    ldrb r0, [r7]
    muls r0, r5, r0
    ands r0, r6
    add r0, sb
    ldrb r1, [r0]
    movs r0, #0x81
    lsls r0, r0, #1
    add r0, ip
    strh r1, [r0]
    movs r0, #1
    ands r1, r0
    movs r3, #0xa
    cmp r1, #0
    beq lbl_08064726
    movs r3, #9
lbl_08064726:
    adds r0, r4, #0
    adds r0, #0xf0
    add r0, r8
    adds r1, r3, #0
    bl update_cutscene_oam_data_id
    b lbl_0806474a
    .align 2, 0
lbl_08064734: .4byte 0x08754bc4
lbl_08064738: .4byte 0x0000ffa8
lbl_0806473c: .4byte 0x0808c99c
lbl_08064740: .4byte 0x03000c77
lbl_08064744:
    adds r5, #1
    cmp r5, #0xe
    ble lbl_080646b8
lbl_0806474a:
    movs r5, #3
    ldr r7, lbl_08064794 @ =0x08754bc4
    movs r6, #0xa8
    lsls r6, r6, #1
lbl_08064752:
    ldr r1, [r7]
    lsls r4, r5, #5
    adds r0, r1, r4
    adds r0, #0xfb
    ldrb r0, [r0]
    lsrs r0, r0, #6
    cmp r0, #0
    beq lbl_0806477e
    adds r0, r1, r6
    bl sub_08064798
    ldr r1, [r7]
    adds r0, r1, r4
    adds r0, #0xfb
    ldrb r0, [r0]
    lsrs r0, r0, #6
    cmp r0, #0
    bne lbl_0806477e
    adds r0, r1, r6
    movs r1, #0
    bl update_cutscene_oam_data_id
lbl_0806477e:
    adds r6, #0x20
    adds r5, #1
    cmp r5, #0xe
    ble lbl_08064752
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08064794: .4byte 0x08754bc4

    thumb_func_start sub_08064798
sub_08064798: @ 0x08064798
    push {lr}
    adds r3, r0, #0
    ldrb r1, [r3, #0xd]
    cmp r1, #0
    bne lbl_080647b2
    ldrh r1, [r3, #0x12]
    movs r2, #7
    ands r2, r1
    adds r2, #2
    strh r2, [r3, #0xe]
    movs r1, #1
    strb r1, [r3, #0xd]
    b lbl_080647cc
lbl_080647b2:
    ldrh r1, [r3, #0xe]
    ldrh r2, [r3, #2]
    adds r1, r1, r2
    strh r1, [r3, #2]
    lsls r1, r1, #0x10
    movs r2, #0xf8
    lsls r2, r2, #0x12
    cmp r1, r2
    ble lbl_080647cc
    ldrb r2, [r3, #0xb]
    movs r1, #0x3f
    ands r1, r2
    strb r1, [r3, #0xb]
lbl_080647cc:
    pop {r1}
    bx r1

    thumb_func_start ridley_landing_ridley_flying
ridley_landing_ridley_flying: @ 0x080647d0
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r7, lbl_080647e8 @ =0x08754bc4
    ldr r1, [r7]
    ldrb r6, [r1, #4]
    cmp r6, #1
    beq lbl_080648cc
    cmp r6, #1
    bgt lbl_080647ec
    cmp r6, #0
    beq lbl_080647fa
    b lbl_0806492a
    .align 2, 0
lbl_080647e8: .4byte 0x08754bc4
lbl_080647ec:
    cmp r6, #2
    bne lbl_080647f2
    b lbl_080648f8
lbl_080647f2:
    cmp r6, #3
    bne lbl_080647f8
    b lbl_08064910
lbl_080647f8:
    b lbl_0806492a
lbl_080647fa:
    ldr r1, lbl_080648ac @ =0x083a0d74
    movs r5, #0xa0
    lsls r5, r5, #0x13
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0xa0
    bl DMATransfer
    ldr r1, lbl_080648b0 @ =0x083a0d34
    ldr r2, lbl_080648b4 @ =0x05000200
    str r4, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    strh r6, [r5]
    ldr r0, lbl_080648b8 @ =0x083b107c
    ldr r5, lbl_080648bc @ =0x083a0530
    adds r1, r5, #0
    adds r1, #0x20
    ldrb r1, [r1]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080648c0 @ =0x083ae4ec
    ldr r1, lbl_080648c4 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080648c8 @ =0x083b5738
    adds r1, r5, #0
    adds r1, #0x21
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, [r5, #0x20]
    ldr r1, [r5, #0x24]
    bl sub_0806141c
    ldrh r4, [r5, #0x24]
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    adds r1, r4, #0
    bl sub_080614d4
    bl sub_08061e38
    ldr r2, [r7]
    movs r0, #0x89
    lsls r0, r0, #1
    adds r1, r2, r0
    movs r0, #0x90
    lsls r0, r0, #3
    strh r0, [r1]
    movs r1, #0x88
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r1, #0x70
    strh r1, [r0]
    movs r1, #8
    bl update_cutscene_oam_data_id
    ldr r0, [r7]
    adds r2, r0, #0
    adds r2, #0xf2
    movs r1, #0xb0
    lsls r1, r1, #2
    strh r1, [r2]
    adds r0, #0xf0
    subs r1, #0xc0
    strh r1, [r0]
    movs r1, #9
    bl update_cutscene_oam_data_id
    ldr r1, [r7]
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    orrs r4, r0
    strh r4, [r1, #0x1c]
    strh r6, [r1, #2]
    b lbl_08064904
    .align 2, 0
lbl_080648ac: .4byte 0x083a0d74
lbl_080648b0: .4byte 0x083a0d34
lbl_080648b4: .4byte 0x05000200
lbl_080648b8: .4byte 0x083b107c
lbl_080648bc: .4byte 0x083a0530
lbl_080648c0: .4byte 0x083ae4ec
lbl_080648c4: .4byte 0x06010000
lbl_080648c8: .4byte 0x083b5738
lbl_080648cc:
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_0806492a
    ldr r0, lbl_080648f0 @ =0x00000292
    bl SoundPlay
    ldr r0, [r7]
    ldr r1, lbl_080648f4 @ =0x0000011d
    adds r3, r0, r1
    ldrb r1, [r3]
    movs r0, #3
    movs r2, #0
    orrs r0, r1
    strb r0, [r3]
    ldr r1, [r7]
    strh r2, [r1, #2]
    b lbl_08064904
    .align 2, 0
lbl_080648f0: .4byte 0x00000292
lbl_080648f4: .4byte 0x0000011d
lbl_080648f8:
    ldr r2, lbl_0806490c @ =0x0000011d
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806492a
    strh r0, [r1, #2]
lbl_08064904:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_0806492a
    .align 2, 0
lbl_0806490c: .4byte 0x0000011d
lbl_08064910:
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_0806492a
    bl sub_08061f0c
    ldr r1, [r7]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r7]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_0806492a:
    ldr r0, lbl_08064944 @ =0x08754bc4
    ldr r0, [r0]
    movs r1, #0x88
    lsls r1, r1, #1
    adds r0, r0, r1
    bl sub_08064948
    movs r0, #0
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08064944: .4byte 0x08754bc4

    thumb_func_start sub_08064948
sub_08064948: @ 0x08064948
    push {r4, lr}
    adds r4, r0, #0
    ldrb r1, [r4, #0xd]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08064984
    ldrh r0, [r4, #0x16]
    adds r0, #1
    strh r0, [r4, #0x16]
    ldr r1, lbl_080649a8 @ =0x0000ffdc
    strh r1, [r4, #0xe]
    ldrh r0, [r4, #2]
    adds r0, r0, r1
    strh r0, [r4, #2]
    lsls r0, r0, #0x10
    ldr r1, lbl_080649ac @ =0xff010000
    cmp r0, r1
    bge lbl_08064972
    movs r0, #0
    strb r0, [r4, #0xd]
lbl_08064972:
    ldrh r0, [r4, #0x16]
    cmp r0, #8
    bne lbl_08064984
    ldr r0, lbl_080649b0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xf0
    movs r1, #0xa
    bl update_cutscene_oam_data_id
lbl_08064984:
    ldrb r1, [r4, #0xd]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_080649a2
    ldrh r0, [r4, #0x18]
    adds r0, #1
    strh r0, [r4, #0x18]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x11
    rsbs r0, r0, #0
    strh r0, [r4, #0x10]
    ldrh r1, [r4]
    adds r1, r1, r0
    strh r1, [r4]
lbl_080649a2:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080649a8: .4byte 0x0000ffdc
lbl_080649ac: .4byte 0xff010000
lbl_080649b0: .4byte 0x08754bc4

    thumb_func_start ridley_landing_ship_landing
ridley_landing_ship_landing: @ 0x080649b4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r1, lbl_080649d8 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r4, r1, #0
    cmp r0, #5
    bls lbl_080649ce
    b lbl_08064e4e
lbl_080649ce:
    lsls r0, r0, #2
    ldr r1, lbl_080649dc @ =lbl_080649e0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080649d8: .4byte 0x08754bc4
lbl_080649dc: .4byte lbl_080649e0
lbl_080649e0: @ jump table
    .4byte lbl_080649f8 @ case 0
    .4byte lbl_08064ba8 @ case 1
    .4byte lbl_08064c2c @ case 2
    .4byte lbl_08064d04 @ case 3
    .4byte lbl_08064d34 @ case 4
    .4byte lbl_08064e30 @ case 5
lbl_080649f8:
    ldr r1, lbl_08064be0 @ =0x083a0af4
    movs r5, #0xa0
    lsls r5, r5, #0x13
    movs r3, #0xd0
    lsls r3, r3, #1
    movs r0, #0x10
    mov sl, r0
    str r0, [sp]
    movs r0, #3
    adds r2, r5, #0
    bl DMATransfer
    ldr r1, lbl_08064be4 @ =0x083a0c94
    ldr r2, lbl_08064be8 @ =0x05000200
    mov r3, sl
    str r3, [sp]
    movs r0, #3
    movs r3, #0xa0
    bl DMATransfer
    movs r4, #0
    strh r4, [r5]
    ldr r0, lbl_08064bec @ =0x083a4878
    ldr r4, lbl_08064bf0 @ =0x083a0530
    ldrb r1, [r4, #8]
    lsls r1, r1, #0xe
    movs r6, #0xc0
    lsls r6, r6, #0x13
    adds r1, r1, r6
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08064bf4 @ =0x083a97a4
    ldrb r1, [r4, #0x18]
    lsls r1, r1, #0xe
    adds r1, r1, r6
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08064bf8 @ =0x083a9f18
    ldrb r1, [r4, #0x10]
    lsls r1, r1, #0xe
    ldr r5, lbl_08064bfc @ =0x06004c00
    adds r1, r1, r5
    bl CallLZ77UncompVRAM
    ldr r5, lbl_08064c00 @ =0x06010000
    movs r0, #0x80
    lsls r0, r0, #4
    mov r8, r0
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r5, #0
    mov r3, r8
    bl BitFill
    ldr r0, lbl_08064c04 @ =0x083ab6c0
    adds r1, r5, #0
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08064c08 @ =0x083b4768
    ldrb r1, [r4, #9]
    lsls r1, r1, #0xb
    adds r1, r1, r6
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08064c0c @ =0x083b5168
    ldrb r1, [r4, #0x11]
    lsls r1, r1, #0xb
    adds r1, r1, r6
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08064c10 @ =0x083b557c
    ldrb r1, [r4, #0x19]
    lsls r1, r1, #0xb
    adds r1, r1, r6
    bl CallLZ77UncompVRAM
    ldr r0, [r4, #8]
    ldr r1, [r4, #0xc]
    bl sub_0806141c
    ldr r0, [r4, #0x10]
    ldr r1, [r4, #0x14]
    bl sub_0806141c
    ldr r0, [r4, #0x18]
    ldr r1, [r4, #0x1c]
    bl sub_0806141c
    ldrh r1, [r4, #0xc]
    mov sb, r1
    movs r0, #3
    mov r2, r8
    bl sub_080614d4
    ldrh r1, [r4, #0x14]
    movs r0, #3
    mov r2, r8
    bl sub_080614d4
    ldrh r1, [r4, #0x1c]
    movs r0, #3
    mov r2, r8
    bl sub_080614d4
    bl sub_08061e38
    ldr r5, lbl_08064c14 @ =0x08754bc4
    ldr r1, [r5]
    movs r7, #0
    movs r0, #0xff
    strh r0, [r1, #0x1e]
    ldr r0, lbl_08064c18 @ =0x030013ae
    mov r2, sl
    strh r2, [r0]
    movs r3, #0xd9
    lsls r3, r3, #1
    adds r2, r1, r3
    movs r0, #0xf0
    lsls r0, r0, #1
    strh r0, [r2]
    subs r0, #0x30
    mov sl, r0
    adds r2, r1, r0
    movs r0, #0xfe
    lsls r0, r0, #8
    strh r0, [r2]
    movs r2, #0xde
    lsls r2, r2, #1
    adds r1, r1, r2
    ldrb r2, [r1]
    movs r4, #0x10
    rsbs r4, r4, #0
    adds r0, r4, #0
    ands r0, r2
    movs r3, #3
    mov r8, r3
    mov r2, r8
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r5]
    ldr r3, lbl_08064c1c @ =0x000001bb
    adds r2, r0, r3
    ldrb r1, [r2]
    movs r3, #4
    rsbs r3, r3, #0
    adds r0, r3, #0
    ands r0, r1
    movs r6, #1
    orrs r0, r6
    strb r0, [r2]
    ldr r1, [r5]
    movs r0, #0xee
    lsls r0, r0, #1
    adds r1, r1, r0
    ldrb r2, [r1]
    adds r0, r4, #0
    ands r0, r2
    mov r2, r8
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r5]
    ldr r1, lbl_08064c20 @ =0x000001db
    adds r2, r0, r1
    ldrb r1, [r2]
    adds r0, r3, #0
    ands r0, r1
    orrs r0, r6
    strb r0, [r2]
    ldr r0, [r5]
    movs r2, #0xfe
    lsls r2, r2, #1
    adds r0, r0, r2
    ldrb r1, [r0]
    ands r4, r1
    mov r1, r8
    orrs r4, r1
    strb r4, [r0]
    ldr r0, [r5]
    subs r2, #1
    adds r1, r0, r2
    ldrb r0, [r1]
    ands r3, r0
    orrs r3, r6
    strb r3, [r1]
    ldr r0, [r5]
    add r0, sl
    movs r1, #2
    bl update_cutscene_oam_data_id
    ldr r0, [r5]
    movs r3, #0xe8
    lsls r3, r3, #1
    adds r0, r0, r3
    movs r1, #3
    bl update_cutscene_oam_data_id
    ldr r0, [r5]
    movs r1, #0xf8
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #4
    bl update_cutscene_oam_data_id
    ldr r1, [r5]
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    mov r3, sb
    orrs r3, r0
    strh r3, [r1, #0x1c]
    strh r7, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
lbl_08064ba8:
    movs r0, #0xa4
    lsls r0, r0, #2
    bl SoundPlay
    ldr r4, lbl_08064c14 @ =0x08754bc4
    ldr r0, [r4]
    ldrh r0, [r0, #0x1e]
    movs r1, #0
    movs r2, #4
    movs r3, #1
    bl sub_08061d68
    ldr r0, lbl_08064c24 @ =0x083a0558
    ldr r1, [r0, #4]
    ldr r0, [r0]
    ldr r2, lbl_08064bf0 @ =0x083a0530
    ldrh r2, [r2, #0xc]
    bl sub_08061618
    ldr r0, [r4]
    ldr r5, lbl_08064c28 @ =0x000001bd
    adds r1, r0, r5
    movs r2, #0
    movs r0, #1
    strb r0, [r1]
    ldr r1, [r4]
    strh r2, [r1, #2]
    b lbl_08064d1e
    .align 2, 0
lbl_08064be0: .4byte 0x083a0af4
lbl_08064be4: .4byte 0x083a0c94
lbl_08064be8: .4byte 0x05000200
lbl_08064bec: .4byte 0x083a4878
lbl_08064bf0: .4byte 0x083a0530
lbl_08064bf4: .4byte 0x083a97a4
lbl_08064bf8: .4byte 0x083a9f18
lbl_08064bfc: .4byte 0x06004c00
lbl_08064c00: .4byte 0x06010000
lbl_08064c04: .4byte 0x083ab6c0
lbl_08064c08: .4byte 0x083b4768
lbl_08064c0c: .4byte 0x083b5168
lbl_08064c10: .4byte 0x083b557c
lbl_08064c14: .4byte 0x08754bc4
lbl_08064c18: .4byte 0x030013ae
lbl_08064c1c: .4byte 0x000001bb
lbl_08064c20: .4byte 0x000001db
lbl_08064c24: .4byte 0x083a0558
lbl_08064c28: .4byte 0x000001bd
lbl_08064c2c:
    ldr r0, lbl_08064ce8 @ =0x083a0530
    mov r8, r0
    ldrh r0, [r0, #0xc]
    bl sub_080615c8
    ldrh r6, [r0]
    ldr r0, lbl_08064cec @ =0x08754bc4
    ldr r0, [r0]
    mov sl, r0
    ldrh r1, [r0, #0x1c]
    mov sb, r1
    mov r2, r8
    ldrh r7, [r2, #0x14]
    mov r0, sb
    ands r0, r7
    cmp r0, #0
    bne lbl_08064c9c
    adds r0, r6, #0
    bl __floatsidf
    adds r5, r1, #0
    adds r4, r0, #0
    ldr r3, lbl_08064cf0 @ =0x083a0558
    movs r1, #0xa
    ldrsh r0, [r3, r1]
    bl __floatsidf
    ldr r2, lbl_08064cf4 @ =0x3ff80000
    ldr r3, lbl_08064cf8 @ =0x00000000
    bl __divdf3
    adds r3, r1, #0
    adds r2, r0, #0
    ldr r0, lbl_08064cfc @ =0x40a64000
    ldr r1, lbl_08064d00 @ =0x00000000
    bl __subdf3
    adds r3, r1, #0
    adds r2, r0, #0
    adds r1, r5, #0
    adds r0, r4, #0
    bl __gedf2
    cmp r0, #0
    blt lbl_08064c9c
    mov r0, sb
    orrs r0, r7
    mov r2, sl
    strh r0, [r2, #0x1c]
    ldr r3, lbl_08064cf0 @ =0x083a0558
    ldr r0, [r3, #8]
    ldr r1, [r3, #0xc]
    mov r5, r8
    ldrh r2, [r5, #0x14]
    bl sub_08061618
lbl_08064c9c:
    ldr r0, lbl_08064cec @ =0x08754bc4
    mov sb, r0
    ldr r4, [r0]
    ldr r1, lbl_08064ce8 @ =0x083a0530
    mov r8, r1
    ldrh r3, [r4, #0x1c]
    ldrh r2, [r1, #0x1c]
    adds r5, r3, #0
    ands r5, r2
    cmp r5, #0
    beq lbl_08064cb4
    b lbl_08064e4e
lbl_08064cb4:
    ldr r7, lbl_08064cf0 @ =0x083a0558
    movs r1, #0x12
    ldrsh r0, [r7, r1]
    lsrs r1, r0, #0x1f
    adds r0, r0, r1
    asrs r0, r0, #1
    movs r1, #0xb2
    lsls r1, r1, #4
    subs r1, r1, r0
    cmp r6, r1
    bge lbl_08064ccc
    b lbl_08064e4e
lbl_08064ccc:
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r4, #0x1c]
    ldr r0, [r7, #0x10]
    ldr r1, [r7, #0x14]
    mov r3, r8
    ldrh r2, [r3, #0x1c]
    bl sub_08061618
    mov r0, sb
    ldr r1, [r0]
    strh r5, [r1, #2]
    b lbl_08064d1e
    .align 2, 0
lbl_08064ce8: .4byte 0x083a0530
lbl_08064cec: .4byte 0x08754bc4
lbl_08064cf0: .4byte 0x083a0558
lbl_08064cf4: .4byte 0x3ff80000
lbl_08064cf8: .4byte 0x00000000
lbl_08064cfc: .4byte 0x40a64000
lbl_08064d00: .4byte 0x00000000
lbl_08064d04:
    ldr r5, lbl_08064d28 @ =0x08754bc4
    ldr r0, [r5]
    ldr r1, lbl_08064d2c @ =0x000001bd
    adds r0, r0, r1
    ldrb r4, [r0]
    cmp r4, #0
    beq lbl_08064d14
    b lbl_08064e4e
lbl_08064d14:
    ldr r0, lbl_08064d30 @ =0x00000291
    bl SoundPlay
    ldr r1, [r5]
    strh r4, [r1, #2]
lbl_08064d1e:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08064e4e
    .align 2, 0
lbl_08064d28: .4byte 0x08754bc4
lbl_08064d2c: .4byte 0x000001bd
lbl_08064d30: .4byte 0x00000291
lbl_08064d34:
    ldr r0, [r4]
    ldrh r0, [r0, #2]
    subs r0, #4
    cmp r0, #0x14
    bhi lbl_08064dea
    lsls r0, r0, #2
    ldr r1, lbl_08064d48 @ =lbl_08064d4c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08064d48: .4byte lbl_08064d4c
lbl_08064d4c: @ jump table
    .4byte lbl_08064dbe @ case 0
    .4byte lbl_08064dea @ case 1
    .4byte lbl_08064dea @ case 2
    .4byte lbl_08064dea @ case 3
    .4byte lbl_08064da0 @ case 4
    .4byte lbl_08064dea @ case 5
    .4byte lbl_08064dea @ case 6
    .4byte lbl_08064dea @ case 7
    .4byte lbl_08064dbe @ case 8
    .4byte lbl_08064dea @ case 9
    .4byte lbl_08064dea @ case 10
    .4byte lbl_08064dea @ case 11
    .4byte lbl_08064da6 @ case 12
    .4byte lbl_08064dea @ case 13
    .4byte lbl_08064dea @ case 14
    .4byte lbl_08064dea @ case 15
    .4byte lbl_08064dbe @ case 16
    .4byte lbl_08064dea @ case 17
    .4byte lbl_08064dea @ case 18
    .4byte lbl_08064dea @ case 19
    .4byte lbl_08064dc2 @ case 20
lbl_08064da0:
    movs r6, #0xc
    rsbs r6, r6, #0
    b lbl_08064df0
lbl_08064da6:
    ldr r0, [r4]
    adds r0, #0xfa
    movs r1, #5
    strb r1, [r0]
    ldr r1, [r4]
    adds r1, #0xfa
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r6, #8
    rsbs r6, r6, #0
    b lbl_08064df0
lbl_08064dbe:
    movs r6, #8
    b lbl_08064df0
lbl_08064dc2:
    ldr r1, [r4]
    movs r2, #0x8d
    lsls r2, r2, #1
    adds r1, r1, r2
    movs r3, #0
    movs r0, #5
    strb r0, [r1]
    ldr r1, [r4]
    adds r1, r1, r2
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r6, #4
    rsbs r6, r6, #0
    ldr r1, [r4]
    strh r3, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08064dec
lbl_08064dea:
    movs r6, #0
lbl_08064dec:
    cmp r6, #0
    beq lbl_08064e4e
lbl_08064df0:
    ldr r1, lbl_08064e20 @ =0x03000c02
    lsrs r0, r6, #0x1f
    adds r0, r6, r0
    asrs r0, r0, #1
    ldrh r2, [r1]
    adds r0, r0, r2
    strh r0, [r1]
    ldr r1, lbl_08064e24 @ =0x03000bfa
    ldrh r0, [r1]
    adds r0, r0, r6
    strh r0, [r1]
    ldr r1, lbl_08064e28 @ =0x03000bf6
    ldrh r0, [r1]
    adds r0, r0, r6
    strh r0, [r1]
    ldr r0, lbl_08064e2c @ =0x08754bc4
    ldr r1, [r0]
    movs r3, #0xd8
    lsls r3, r3, #1
    adds r1, r1, r3
    ldrh r0, [r1]
    subs r0, r0, r6
    strh r0, [r1]
    b lbl_08064e4e
    .align 2, 0
lbl_08064e20: .4byte 0x03000c02
lbl_08064e24: .4byte 0x03000bfa
lbl_08064e28: .4byte 0x03000bf6
lbl_08064e2c: .4byte 0x08754bc4
lbl_08064e30:
    ldr r4, lbl_08064f3c @ =0x08754bc4
    ldr r0, [r4]
    ldrh r0, [r0, #2]
    cmp r0, #0x3c
    bls lbl_08064e4e
    bl sub_08061f0c
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r4]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08064e4e:
    ldr r5, lbl_08064f3c @ =0x08754bc4
    mov r8, r5
    ldr r0, [r5]
    movs r4, #0xd8
    lsls r4, r4, #1
    adds r0, r0, r4
    bl sub_08064f5c
    ldr r3, [r5]
    movs r0, #0xd9
    lsls r0, r0, #1
    adds r2, r3, r0
    ldrh r0, [r2]
    movs r5, #0xe9
    lsls r5, r5, #1
    adds r1, r3, r5
    strh r0, [r1]
    adds r4, r3, r4
    ldrh r1, [r4]
    movs r0, #0xe8
    lsls r0, r0, #1
    mov sb, r0
    adds r0, r3, r0
    strh r1, [r0]
    ldrh r0, [r2]
    movs r2, #0xf9
    lsls r2, r2, #1
    adds r1, r3, r2
    strh r0, [r1]
    ldrh r1, [r4]
    adds r5, #0x1e
    mov sl, r5
    adds r0, r3, r5
    strh r1, [r0]
    ldr r5, lbl_08064f40 @ =0x03000c02
    ldrh r1, [r5]
    movs r2, #0
    ldrsh r0, [r4, r2]
    subs r6, r1, r0
    ldr r0, lbl_08064f44 @ =0xfffff6e0
    adds r1, r6, r0
    movs r0, #0xf8
    lsls r0, r0, #2
    movs r6, #0
    cmp r1, r0
    bls lbl_08064eac
    movs r6, #1
lbl_08064eac:
    ldr r1, lbl_08064f48 @ =0x000001bb
    adds r3, r3, r1
    movs r4, #1
    ands r6, r4
    lsls r2, r6, #5
    ldrb r1, [r3]
    movs r7, #0x21
    rsbs r7, r7, #0
    adds r0, r7, #0
    ands r0, r1
    orrs r0, r2
    strb r0, [r3]
    ldrh r1, [r5]
    mov r3, r8
    ldr r2, [r3]
    mov r3, sb
    adds r0, r2, r3
    movs r3, #0
    ldrsh r0, [r0, r3]
    subs r6, r1, r0
    ldr r0, lbl_08064f4c @ =0xfffff800
    adds r1, r6, r0
    movs r0, #0x88
    lsls r0, r0, #3
    movs r6, #0
    cmp r1, r0
    bls lbl_08064ee4
    movs r6, #1
lbl_08064ee4:
    ldr r1, lbl_08064f50 @ =0x000001db
    adds r3, r2, r1
    ands r6, r4
    lsls r2, r6, #5
    ldrb r1, [r3]
    adds r0, r7, #0
    ands r0, r1
    orrs r0, r2
    strb r0, [r3]
    ldrh r1, [r5]
    mov r3, r8
    ldr r2, [r3]
    mov r5, sl
    adds r0, r2, r5
    movs r3, #0
    ldrsh r0, [r0, r3]
    subs r6, r1, r0
    ldr r5, lbl_08064f54 @ =0xfffff850
    adds r1, r6, r5
    movs r0, #0xd8
    lsls r0, r0, #2
    movs r6, #0
    cmp r1, r0
    bls lbl_08064f16
    movs r6, #1
lbl_08064f16:
    ldr r0, lbl_08064f58 @ =0x000001fb
    adds r3, r2, r0
    ands r6, r4
    lsls r2, r6, #5
    ldrb r1, [r3]
    adds r0, r7, #0
    ands r0, r1
    orrs r0, r2
    strb r0, [r3]
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08064f3c: .4byte 0x08754bc4
lbl_08064f40: .4byte 0x03000c02
lbl_08064f44: .4byte 0xfffff6e0
lbl_08064f48: .4byte 0x000001bb
lbl_08064f4c: .4byte 0xfffff800
lbl_08064f50: .4byte 0x000001db
lbl_08064f54: .4byte 0xfffff850
lbl_08064f58: .4byte 0x000001fb

    thumb_func_start sub_08064f5c
sub_08064f5c: @ 0x08064f5c
    push {r4, r5, lr}
    adds r3, r0, #0
    ldrb r1, [r3, #0xd]
    cmp r1, #0
    beq lbl_08064fda
    movs r1, #0
    ldrsh r2, [r3, r1]
    movs r1, #0x58
    subs r2, r1, r2
    cmp r2, #0x10
    bgt lbl_08064f76
    cmp r2, #0
    beq lbl_08064f7c
lbl_08064f76:
    ldrh r1, [r3]
    adds r1, #1
    strh r1, [r3]
lbl_08064f7c:
    cmp r2, #0x88
    bne lbl_08064fa4
    ldr r4, lbl_08064fa0 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xf0
    movs r1, #5
    bl update_cutscene_oam_data_id
    ldr r2, [r4]
    adds r3, r2, #0
    adds r3, #0xf2
    movs r1, #0xd8
    lsls r1, r1, #1
    strh r1, [r3]
    adds r2, #0xf0
    adds r1, #0x90
    strh r1, [r2]
    b lbl_08064fda
    .align 2, 0
lbl_08064fa0: .4byte 0x08754bc4
lbl_08064fa4:
    cmp r2, #0x78
    bne lbl_08064fd4
    ldr r4, lbl_08064fd0 @ =0x08754bc4
    ldr r0, [r4]
    movs r5, #0x88
    lsls r5, r5, #1
    adds r0, r0, r5
    movs r1, #5
    bl update_cutscene_oam_data_id
    ldr r2, [r4]
    movs r1, #0x89
    lsls r1, r1, #1
    adds r3, r2, r1
    movs r1, #0x90
    lsls r1, r1, #2
    strh r1, [r3]
    adds r2, r2, r5
    adds r1, #0x10
    strh r1, [r2]
    b lbl_08064fda
    .align 2, 0
lbl_08064fd0: .4byte 0x08754bc4
lbl_08064fd4:
    cmp r2, #0
    bne lbl_08064fda
    strb r2, [r3, #0xd]
lbl_08064fda:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start ridley_landing_ship_in_space
ridley_landing_ship_in_space: @ 0x08064fe0
    push {r4, r5, lr}
    ldr r5, lbl_08064ff8 @ =0x08754bc4
    ldr r2, [r5]
    ldrb r4, [r2, #4]
    cmp r4, #1
    beq lbl_0806501e
    cmp r4, #1
    bgt lbl_08064ffc
    cmp r4, #0
    beq lbl_08065006
    b lbl_08065072
    .align 2, 0
lbl_08064ff8: .4byte 0x08754bc4
lbl_08064ffc:
    cmp r4, #2
    beq lbl_08065038
    cmp r4, #3
    beq lbl_0806505e
    b lbl_08065072
lbl_08065006:
    ldrh r0, [r2, #0x1e]
    movs r1, #0
    movs r2, #2
    movs r3, #1
    bl sub_08061d68
    ldr r1, [r5]
    strh r4, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08065072
lbl_0806501e:
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08065072
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08065072
lbl_08065038:
    ldrh r0, [r2, #2]
    cmp r0, #0xb4
    bls lbl_08065048
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
lbl_08065048:
    ldr r1, [r5]
    ldrh r0, [r1, #2]
    cmp r0, #0x6e
    bne lbl_08065072
    ldrh r0, [r1, #0x1e]
    movs r1, #0x10
    movs r2, #4
    movs r3, #1
    bl sub_08061d68
    b lbl_08065072
lbl_0806505e:
    bl sub_08061f0c
    ldr r1, [r5]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r5]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08065072:
    ldr r5, lbl_080650ac @ =0x08754bc4
    ldr r0, [r5]
    ldrb r0, [r0, #4]
    cmp r0, #2
    bhi lbl_080650dc
    ldr r4, lbl_080650b0 @ =0x03000c77
    ldrb r1, [r4]
    movs r0, #7
    ands r0, r1
    cmp r0, #6
    bne lbl_08065096
    ldr r0, lbl_080650b4 @ =0x083a0530
    ldrh r0, [r0, #4]
    bl sub_08061578
    ldrh r1, [r0]
    adds r1, #1
    strh r1, [r0]
lbl_08065096:
    ldrb r1, [r4]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080650b8
    ldr r1, [r5]
    adds r1, #0xf2
    ldrh r0, [r1]
    adds r0, #1
    b lbl_080650da
    .align 2, 0
lbl_080650ac: .4byte 0x08754bc4
lbl_080650b0: .4byte 0x03000c77
lbl_080650b4: .4byte 0x083a0530
lbl_080650b8:
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    bne lbl_080650ca
    ldr r1, [r5]
    adds r1, #0xf0
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
lbl_080650ca:
    ldrb r1, [r4]
    movs r0, #0xf
    ands r0, r1
    cmp r0, #0
    bne lbl_080650dc
    ldr r1, lbl_080650e4 @ =0x03000c06
    ldrh r0, [r1]
    subs r0, #8
lbl_080650da:
    strh r0, [r1]
lbl_080650dc:
    movs r0, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080650e4: .4byte 0x03000c06

    thumb_func_start ridley_landing_init
ridley_landing_init: @ 0x080650e8
    push {r4, r5, r6, lr}
    mov r6, sl
    mov r5, sb
    mov r4, r8
    push {r4, r5, r6}
    sub sp, #4
    bl sub_08061f0c
    ldr r1, lbl_0806521c @ =0x083a09d4
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r3, #0x90
    lsls r3, r3, #1
    movs r0, #0x10
    mov sb, r0
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    ldr r2, lbl_08065220 @ =0x05000200
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl DMATransfer
    movs r1, #0
    mov sl, r1
    strh r1, [r4]
    ldr r0, lbl_08065224 @ =0x083a0e14
    ldr r6, lbl_08065228 @ =0x083a0530
    ldrb r1, [r6]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806522c @ =0x083b3ee4
    ldrb r1, [r6, #1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065230 @ =0x083a3f90
    ldr r1, lbl_08065234 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065238 @ =0x083a4028
    ldr r1, lbl_0806523c @ =0x06010400
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065240 @ =0x083a4114
    ldr r1, lbl_08065244 @ =0x06010800
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065248 @ =0x083a4218
    ldr r1, lbl_0806524c @ =0x06010c00
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065250 @ =0x083a4378
    ldr r1, lbl_08065254 @ =0x06011000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065258 @ =0x083a44e0
    ldr r1, lbl_0806525c @ =0x06011400
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065260 @ =0x083a4664
    ldr r1, lbl_08065264 @ =0x06011800
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065268 @ =0x083a4790
    ldr r1, lbl_0806526c @ =0x06011c00
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065270 @ =0x083a4830
    ldr r1, lbl_08065274 @ =0x06012000
    bl CallLZ77UncompVRAM
    ldr r0, [r6]
    ldr r1, [r6, #4]
    bl sub_0806141c
    bl sub_08061e38
    ldr r5, lbl_08065278 @ =0x08754bc4
    ldr r1, [r5]
    movs r2, #0
    mov r8, r2
    movs r0, #0xff
    strh r0, [r1, #0x1e]
    ldr r0, lbl_0806527c @ =0x030013ae
    mov r1, sb
    strh r1, [r0]
    ldrh r4, [r6, #4]
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    adds r1, r4, #0
    bl sub_080614d4
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0xf2
    mov r1, r8
    strh r1, [r0]
    adds r1, r2, #0
    adds r1, #0xf0
    movs r0, #0xc0
    strh r0, [r1]
    adds r2, #0xfc
    ldrb r0, [r2]
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r5]
    adds r0, #0xf0
    movs r1, #1
    bl update_cutscene_oam_data_id
    movs r0, #0x11
    movs r1, #0
    bl PlayMusic
    ldr r0, lbl_08065280 @ =0x0000028f
    bl SoundPlay
    ldr r1, [r5]
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    orrs r4, r0
    strh r4, [r1, #0x1c]
    mov r0, r8
    strh r0, [r1, #2]
    mov r2, sl
    strb r2, [r1, #4]
    ldr r1, [r5]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806521c: .4byte 0x083a09d4
lbl_08065220: .4byte 0x05000200
lbl_08065224: .4byte 0x083a0e14
lbl_08065228: .4byte 0x083a0530
lbl_0806522c: .4byte 0x083b3ee4
lbl_08065230: .4byte 0x083a3f90
lbl_08065234: .4byte 0x06010000
lbl_08065238: .4byte 0x083a4028
lbl_0806523c: .4byte 0x06010400
lbl_08065240: .4byte 0x083a4114
lbl_08065244: .4byte 0x06010800
lbl_08065248: .4byte 0x083a4218
lbl_0806524c: .4byte 0x06010c00
lbl_08065250: .4byte 0x083a4378
lbl_08065254: .4byte 0x06011000
lbl_08065258: .4byte 0x083a44e0
lbl_0806525c: .4byte 0x06011400
lbl_08065260: .4byte 0x083a4664
lbl_08065264: .4byte 0x06011800
lbl_08065268: .4byte 0x083a4790
lbl_0806526c: .4byte 0x06011c00
lbl_08065270: .4byte 0x083a4830
lbl_08065274: .4byte 0x06012000
lbl_08065278: .4byte 0x08754bc4
lbl_0806527c: .4byte 0x030013ae
lbl_08065280: .4byte 0x0000028f

    thumb_func_start ridley_landing_subroutine
ridley_landing_subroutine: @ 0x08065284
    push {r4, lr}
    ldr r1, lbl_080652b0 @ =0x0875ffb8
    ldr r0, lbl_080652b4 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_080652b8
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080652b0: .4byte 0x0875ffb8
lbl_080652b4: .4byte 0x08754bc4

    thumb_func_start sub_080652b8
sub_080652b8: @ 0x080652b8
    push {lr}
    ldr r1, lbl_080652ec @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_080652f0 @ =0x0875ffb8
    ldr r0, lbl_080652f4 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_080652f8 @ =0x083a05b0
    bl sub_08069dc8
    bl ResetFreeOAM
    ldr r0, lbl_080652fc @ =0x03000c04
    ldrh r0, [r0]
    ldr r1, lbl_08065300 @ =0x03000c06
    ldrh r1, [r1]
    movs r2, #0
    bl sub_0807ff58
    pop {r0}
    bx r0
    .align 2, 0
lbl_080652ec: .4byte 0x03001382
lbl_080652f0: .4byte 0x0875ffb8
lbl_080652f4: .4byte 0x08754bc4
lbl_080652f8: .4byte 0x083a05b0
lbl_080652fc: .4byte 0x03000c04
lbl_08065300: .4byte 0x03000c06

    thumb_func_start ridley_spawn_ridley_flying_in
ridley_spawn_ridley_flying_in: @ 0x08065304
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    ldr r0, lbl_08065324 @ =0x08754bc4
    mov r8, r0
    ldr r2, [r0]
    ldrb r7, [r2, #4]
    cmp r7, #1
    bne lbl_0806531a
    b lbl_0806543c
lbl_0806531a:
    cmp r7, #1
    bgt lbl_08065328
    cmp r7, #0
    beq lbl_08065336
    b lbl_08065482
    .align 2, 0
lbl_08065324: .4byte 0x08754bc4
lbl_08065328:
    cmp r7, #2
    bne lbl_0806532e
    b lbl_08065456
lbl_0806532e:
    cmp r7, #3
    bne lbl_08065334
    b lbl_0806546a
lbl_08065334:
    b lbl_08065482
lbl_08065336:
    ldr r1, lbl_08065414 @ =0x083b6074
    ldr r2, lbl_08065418 @ =0x05000200
    movs r6, #0x10
    str r6, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    ldr r0, lbl_0806541c @ =0x083be0d8
    ldr r1, lbl_08065420 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065424 @ =0x083b6094
    ldr r5, lbl_08065428 @ =0x083b5cf8
    ldrb r1, [r5, #0x18]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806542c @ =0x083bfad4
    ldrb r1, [r5, #0x19]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r1, lbl_08065430 @ =0x083b5ed4
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r3, #0xd0
    lsls r3, r3, #1
    str r6, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    strh r7, [r4]
    ldr r0, [r5, #0x18]
    ldr r1, [r5, #0x1c]
    bl sub_0806141c
    ldrh r4, [r5, #0x1c]
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    adds r1, r4, #0
    bl sub_080614d4
    bl sub_08061e38
    mov r1, r8
    ldr r3, [r1]
    ldr r1, lbl_08065434 @ =0x0875ffe0
    ldrh r0, [r1, #4]
    adds r2, r3, #0
    adds r2, #0xf2
    strh r0, [r2]
    ldrh r1, [r1, #6]
    adds r0, r3, #0
    adds r0, #0xf0
    strh r1, [r0]
    adds r2, #0xa
    ldrb r0, [r2]
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r2]
    mov r2, r8
    ldr r1, [r2]
    adds r1, #0xfb
    ldrb r2, [r1]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    mov r0, r8
    ldr r1, [r0]
    adds r1, #0xfb
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    mov r2, r8
    ldr r1, [r2]
    adds r1, #0xfb
    ldrb r2, [r1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, lbl_08065438 @ =0x03000c06
    movs r2, #0x90
    lsls r2, r2, #1
    adds r0, r2, #0
    strh r0, [r1]
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0xf0
    movs r1, #2
    bl update_cutscene_oam_data_id
    mov r2, r8
    ldr r1, [r2]
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    orrs r4, r0
    strh r4, [r1, #0x1c]
    strh r7, [r1, #2]
    b lbl_0806544e
    .align 2, 0
lbl_08065414: .4byte 0x083b6074
lbl_08065418: .4byte 0x05000200
lbl_0806541c: .4byte 0x083be0d8
lbl_08065420: .4byte 0x06010000
lbl_08065424: .4byte 0x083b6094
lbl_08065428: .4byte 0x083b5cf8
lbl_0806542c: .4byte 0x083bfad4
lbl_08065430: .4byte 0x083b5ed4
lbl_08065434: .4byte 0x0875ffe0
lbl_08065438: .4byte 0x03000c06
lbl_0806543c:
    adds r2, #0xfd
    ldrb r1, [r2]
    movs r0, #3
    movs r3, #0
    orrs r0, r1
    strb r0, [r2]
    mov r0, r8
    ldr r1, [r0]
    strh r3, [r1, #2]
lbl_0806544e:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08065482
lbl_08065456:
    adds r0, r2, #0
    adds r0, #0xfd
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08065482
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08065482
lbl_0806546a:
    bl sub_08061f0c
    mov r2, r8
    ldr r1, [r2]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    mov r1, r8
    ldr r0, [r1]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08065482:
    ldr r0, lbl_0806549c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xf0
    bl sub_080654a0
    movs r0, #0
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806549c: .4byte 0x08754bc4

    thumb_func_start sub_080654a0
sub_080654a0: @ 0x080654a0
    push {r4, lr}
    adds r4, r0, #0
    ldrb r1, [r4, #0xd]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080654fe
    ldrh r0, [r4, #0x16]
    adds r0, #2
    strh r0, [r4, #0x16]
    ldr r2, lbl_080654dc @ =0x03000c06
    ldrh r1, [r2]
    adds r1, #4
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x13
    adds r1, r1, r0
    strh r1, [r2]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldr r0, lbl_080654e0 @ =0x000001f7
    cmp r1, r0
    bls lbl_080654e4
    movs r1, #0xfc
    lsls r1, r1, #1
    adds r0, r1, #0
    strh r0, [r2]
    movs r0, #0
    strb r0, [r4, #0xd]
    b lbl_080654fe
    .align 2, 0
lbl_080654dc: .4byte 0x03000c06
lbl_080654e0: .4byte 0x000001f7
lbl_080654e4:
    ldrb r0, [r4, #0xa]
    cmp r0, #3
    beq lbl_080654fe
    ldr r0, lbl_0806553c @ =0x0000016f
    cmp r1, r0
    bls lbl_080654fe
    adds r0, #0xdd
    bl SoundPlay
    adds r0, r4, #0
    movs r1, #3
    bl update_cutscene_oam_data_id
lbl_080654fe:
    ldrb r2, [r4, #0xd]
    movs r0, #2
    ands r0, r2
    cmp r0, #0
    beq lbl_08065534
    ldrh r0, [r4, #0x18]
    adds r0, #1
    strh r0, [r4, #0x18]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x12
    movs r1, #4
    subs r1, r1, r0
    strh r1, [r4, #0x10]
    cmp r1, #0
    bge lbl_08065526
    movs r0, #0
    strh r0, [r4, #0x10]
    movs r0, #1
    ands r0, r2
    strb r0, [r4, #0xd]
lbl_08065526:
    movs r0, #0x10
    ldrsh r1, [r4, r0]
    lsls r1, r1, #2
    strh r1, [r4, #0x10]
    ldrh r0, [r4]
    adds r0, r0, r1
    strh r0, [r4]
lbl_08065534:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806553c: .4byte 0x0000016f

    thumb_func_start ridley_spawn_helmet_reflection
ridley_spawn_helmet_reflection: @ 0x08065540
    push {r4, r5, r6, lr}
    ldr r6, lbl_08065558 @ =0x08754bc4
    ldr r2, [r6]
    ldrb r5, [r2, #4]
    cmp r5, #1
    beq lbl_08065600
    cmp r5, #1
    bgt lbl_0806555c
    cmp r5, #0
    beq lbl_08065562
    b lbl_08065664
    .align 2, 0
lbl_08065558: .4byte 0x08754bc4
lbl_0806555c:
    cmp r5, #2
    beq lbl_08065650
    b lbl_08065664
lbl_08065562:
    bl sub_08061e38
    ldr r1, lbl_080655ec @ =0x030013b0
    movs r0, #0xa
    strh r0, [r1]
    ldr r1, lbl_080655f0 @ =0x030013b2
    movs r0, #6
    strh r0, [r1]
    ldr r3, [r6]
    movs r0, #0xfd
    lsls r0, r0, #6
    strh r0, [r3, #0x1e]
    ldr r1, lbl_080655f4 @ =0x0875ffe0
    ldrh r0, [r1]
    adds r2, r3, #0
    adds r2, #0xf2
    strh r0, [r2]
    ldrh r1, [r1, #2]
    adds r0, r3, #0
    adds r0, #0xf0
    strh r1, [r0]
    ldr r4, lbl_080655f8 @ =0x083b5cf8
    adds r3, #0xfb
    movs r0, #3
    ldrb r1, [r4, #0x12]
    ands r1, r0
    ldrb r2, [r3]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    ldr r1, [r6]
    adds r1, #0xfc
    ldrb r0, [r1]
    movs r2, #0x10
    orrs r0, r2
    strb r0, [r1]
    ldr r2, [r6]
    adds r2, #0xfb
    ldrb r1, [r2]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r2]
    ldr r1, lbl_080655fc @ =0x03000c06
    movs r0, #0x40
    strh r0, [r1]
    ldr r0, [r6]
    adds r0, #0xf0
    movs r1, #1
    bl update_cutscene_oam_data_id
    ldr r2, [r6]
    ldrh r0, [r4, #0xc]
    ldrh r1, [r4, #0x14]
    orrs r0, r1
    movs r3, #0x80
    lsls r3, r3, #5
    adds r1, r3, #0
    orrs r0, r1
    strh r0, [r2, #0x1c]
    strh r5, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08065664
    .align 2, 0
lbl_080655ec: .4byte 0x030013b0
lbl_080655f0: .4byte 0x030013b2
lbl_080655f4: .4byte 0x0875ffe0
lbl_080655f8: .4byte 0x083b5cf8
lbl_080655fc: .4byte 0x03000c06
lbl_08065600:
    ldr r3, lbl_08065648 @ =0x03000c06
    ldrh r0, [r3]
    adds r0, #0x10
    strh r0, [r3]
    lsls r0, r0, #0x10
    ldr r1, lbl_0806564c @ =0x01ff0000
    cmp r0, r1
    bls lbl_08065622
    movs r1, #0x80
    lsls r1, r1, #2
    adds r0, r1, #0
    strh r0, [r3]
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
lbl_08065622:
    ldr r3, [r6]
    ldrh r0, [r3, #2]
    lsrs r0, r0, #2
    movs r1, #8
    subs r2, r1, r0
    cmp r2, #0
    ble lbl_0806563a
    adds r1, r3, #0
    adds r1, #0xf0
    ldrh r0, [r1]
    adds r0, r0, r2
    strh r0, [r1]
lbl_0806563a:
    ldr r1, [r6]
    adds r1, #0xf2
    ldrh r0, [r1]
    subs r0, #4
    strh r0, [r1]
    b lbl_08065664
    .align 2, 0
lbl_08065648: .4byte 0x03000c06
lbl_0806564c: .4byte 0x01ff0000
lbl_08065650:
    bl sub_08061f0c
    ldr r1, [r6]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r6]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08065664:
    movs r0, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start ridley_spawn_samus_looking_up
ridley_spawn_samus_looking_up: @ 0x0806566c
    push {lr}
    ldr r3, lbl_08065684 @ =0x08754bc4
    ldr r2, [r3]
    ldrb r1, [r2, #4]
    cmp r1, #1
    beq lbl_0806569c
    cmp r1, #1
    bgt lbl_08065688
    cmp r1, #0
    beq lbl_08065692
    b lbl_080656e0
    .align 2, 0
lbl_08065684: .4byte 0x08754bc4
lbl_08065688:
    cmp r1, #2
    beq lbl_080656c0
    cmp r1, #3
    beq lbl_080656d2
    b lbl_080656e0
lbl_08065692:
    ldrh r0, [r2, #2]
    cmp r0, #0x1e
    bls lbl_080656e0
    strh r1, [r2, #2]
    b lbl_080656ca
lbl_0806569c:
    ldr r3, lbl_080656b8 @ =0x03000c06
    ldrh r0, [r3]
    adds r0, #0x20
    strh r0, [r3]
    lsls r0, r0, #0x10
    ldr r1, lbl_080656bc @ =0x01ff0000
    cmp r0, r1
    bls lbl_080656e0
    movs r1, #0x80
    lsls r1, r1, #2
    adds r0, r1, #0
    strh r0, [r3]
    b lbl_080656c6
    .align 2, 0
lbl_080656b8: .4byte 0x03000c06
lbl_080656bc: .4byte 0x01ff0000
lbl_080656c0:
    ldrh r0, [r2, #2]
    cmp r0, #0x28
    bls lbl_080656e0
lbl_080656c6:
    movs r0, #0
    strh r0, [r2, #2]
lbl_080656ca:
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_080656e0
lbl_080656d2:
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #0
    strb r0, [r2]
    ldr r0, [r3]
    strb r1, [r0, #4]
    strh r1, [r0, #2]
lbl_080656e0:
    movs r0, #0
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start ridley_spawn_cutscene_init
ridley_spawn_cutscene_init: @ 0x080656e8
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    bl sub_08061f0c
    ldr r0, lbl_08065714 @ =0x03001530
    ldrb r1, [r0, #0xf]
    movs r3, #0x10
    adds r0, r3, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08065720
    ldr r1, lbl_08065718 @ =0x083b5e74
    ldr r2, lbl_0806571c @ =0x05000200
    str r3, [sp]
    movs r0, #3
    movs r3, #0x60
    bl DMATransfer
    b lbl_0806572e
    .align 2, 0
lbl_08065714: .4byte 0x03001530
lbl_08065718: .4byte 0x083b5e74
lbl_0806571c: .4byte 0x05000200
lbl_08065720:
    ldr r1, lbl_0806586c @ =0x083b5e14
    ldr r2, lbl_08065870 @ =0x05000200
    str r3, [sp]
    movs r0, #3
    movs r3, #0x60
    bl DMATransfer
lbl_0806572e:
    ldr r1, lbl_08065874 @ =0x083b5ed4
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r3, #0xd0
    lsls r3, r3, #1
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    movs r0, #0
    mov sb, r0
    strh r0, [r4]
    ldr r0, lbl_08065878 @ =0x083b8ccc
    ldr r1, lbl_0806587c @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065880 @ =0x083b6094
    ldr r5, lbl_08065884 @ =0x083b5cf8
    ldrb r1, [r5]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065888 @ =0x083bfad4
    ldrb r1, [r5, #1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806588c @ =0x083baf68
    ldrb r1, [r5, #8]
    lsls r1, r1, #0xe
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065890 @ =0x083c0094
    ldrb r1, [r5, #9]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065894 @ =0x083c0654
    ldrb r1, [r5, #0x11]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, [r5, #8]
    ldr r1, [r5, #0xc]
    bl sub_0806141c
    ldr r0, [r5, #0x10]
    ldr r1, [r5, #0x14]
    bl sub_0806141c
    ldr r0, [r5]
    ldr r1, [r5, #4]
    bl sub_0806141c
    ldrh r1, [r5, #0xc]
    movs r4, #0x80
    lsls r4, r4, #4
    movs r0, #3
    adds r2, r4, #0
    bl sub_080614d4
    ldrh r1, [r5, #0x14]
    movs r0, #3
    adds r2, r4, #0
    bl sub_080614d4
    ldrh r6, [r5, #4]
    movs r0, #3
    adds r1, r6, #0
    adds r2, r4, #0
    bl sub_080614d4
    bl sub_08061e38
    ldr r4, lbl_08065898 @ =0x08754bc4
    ldr r2, [r4]
    ldr r1, lbl_0806589c @ =0x0875ffe0
    ldrh r0, [r1, #8]
    adds r3, r2, #0
    adds r3, #0xf2
    movs r7, #0
    mov r8, r7
    strh r0, [r3]
    ldrh r1, [r1, #0xa]
    adds r0, r2, #0
    adds r0, #0xf0
    strh r1, [r0]
    adds r3, #9
    movs r0, #3
    ldrb r1, [r5, #2]
    ands r1, r0
    ldrb r2, [r3]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    ldr r1, [r4]
    adds r1, #0xfc
    ldrb r0, [r1]
    movs r2, #0x10
    orrs r0, r2
    strb r0, [r1]
    ldr r2, [r4]
    adds r2, #0xfb
    ldrb r1, [r2]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r2]
    ldr r1, lbl_080658a0 @ =0x03000c06
    movs r2, #0x80
    lsls r2, r2, #1
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, [r4]
    adds r0, #0xf0
    movs r1, #4
    bl update_cutscene_oam_data_id
    ldr r1, [r4]
    movs r7, #0x80
    lsls r7, r7, #5
    adds r0, r7, #0
    orrs r6, r0
    strh r6, [r1, #0x1c]
    movs r0, #0x35
    movs r1, #0
    bl PlayMusic
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r4]
    mov r1, r8
    strh r1, [r0, #2]
    mov r2, sb
    strb r2, [r0, #4]
    movs r0, #0
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806586c: .4byte 0x083b5e14
lbl_08065870: .4byte 0x05000200
lbl_08065874: .4byte 0x083b5ed4
lbl_08065878: .4byte 0x083b8ccc
lbl_0806587c: .4byte 0x06010000
lbl_08065880: .4byte 0x083b6094
lbl_08065884: .4byte 0x083b5cf8
lbl_08065888: .4byte 0x083bfad4
lbl_0806588c: .4byte 0x083baf68
lbl_08065890: .4byte 0x083c0094
lbl_08065894: .4byte 0x083c0654
lbl_08065898: .4byte 0x08754bc4
lbl_0806589c: .4byte 0x0875ffe0
lbl_080658a0: .4byte 0x03000c06

    thumb_func_start ridley_spawn_subroutine
ridley_spawn_subroutine: @ 0x080658a4
    push {r4, lr}
    ldr r1, lbl_080658d0 @ =0x0875ffec
    ldr r0, lbl_080658d4 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_080658d8
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080658d0: .4byte 0x0875ffec
lbl_080658d4: .4byte 0x08754bc4

    thumb_func_start sub_080658d8
sub_080658d8: @ 0x080658d8
    push {lr}
    ldr r1, lbl_0806590c @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_08065910 @ =0x0875ffec
    ldr r0, lbl_08065914 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_08065918 @ =0x083b5d48
    bl sub_08069dc8
    bl ResetFreeOAM
    ldr r0, lbl_0806591c @ =0x03000c04
    ldrh r0, [r0]
    ldr r1, lbl_08065920 @ =0x03000c06
    ldrh r1, [r1]
    movs r2, #0
    bl sub_0807ff58
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806590c: .4byte 0x03001382
lbl_08065910: .4byte 0x0875ffec
lbl_08065914: .4byte 0x08754bc4
lbl_08065918: .4byte 0x083b5d48
lbl_0806591c: .4byte 0x03000c04
lbl_08065920: .4byte 0x03000c06

    thumb_func_start mecha_ridley_sees_samus_eye_opes
mecha_ridley_sees_samus_eye_opes: @ 0x08065924
    push {r4, lr}
    ldr r1, lbl_0806593c @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r4, r1, #0
    cmp r0, #6
    bhi lbl_08065a16
    lsls r0, r0, #2
    ldr r1, lbl_08065940 @ =lbl_08065944
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806593c: .4byte 0x08754bc4
lbl_08065940: .4byte lbl_08065944
lbl_08065944: @ jump table
    .4byte lbl_08065960 @ case 0
    .4byte lbl_08065974 @ case 1
    .4byte lbl_08065994 @ case 2
    .4byte lbl_080659a8 @ case 3
    .4byte lbl_080659ca @ case 4
    .4byte lbl_080659ec @ case 5
    .4byte lbl_08065a00 @ case 6
lbl_08065960:
    bl sub_08061f44
    cmp r0, #0
    beq lbl_08065a16
    ldr r0, lbl_08065970 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_080659f4
    .align 2, 0
lbl_08065970: .4byte 0x08754bc4
lbl_08065974:
    ldr r0, [r4]
    ldrh r0, [r0, #2]
    cmp r0, #0x1e
    bls lbl_08065a16
    ldr r0, lbl_08065990 @ =0x00000293
    bl SoundPlay
    ldr r0, [r4]
    adds r0, #0xf0
    movs r1, #2
    bl update_cutscene_oam_data_id
    ldr r1, [r4]
    b lbl_080659f4
    .align 2, 0
lbl_08065990: .4byte 0x00000293
lbl_08065994:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0xfb
    ldrb r0, [r0]
    movs r2, #0xc0
    ands r2, r0
    cmp r2, #0
    bne lbl_08065a16
    strh r2, [r1, #2]
    b lbl_080659f8
lbl_080659a8:
    ldr r0, [r4]
    ldrh r0, [r0, #2]
    cmp r0, #4
    bls lbl_08065a16
    movs r0, #0xa5
    lsls r0, r0, #2
    bl SoundPlay
    ldr r0, [r4]
    movs r1, #0x88
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #4
    bl update_cutscene_oam_data_id
    ldr r1, [r4]
    b lbl_080659f4
lbl_080659ca:
    ldr r2, [r4]
    ldr r1, lbl_080659e8 @ =0x0000011b
    adds r0, r2, r1
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08065a16
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08065a16
    .align 2, 0
lbl_080659e8: .4byte 0x0000011b
lbl_080659ec:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_08065a16
lbl_080659f4:
    movs r0, #0
    strh r0, [r1, #2]
lbl_080659f8:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08065a16
lbl_08065a00:
    bl sub_08061f0c
    ldr r3, lbl_08065a20 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08065a16:
    movs r0, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08065a20: .4byte 0x08754bc4

    thumb_func_start mecha_ridley_sees_samus_init
mecha_ridley_sees_samus_init: @ 0x08065a24
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    bl sub_08061f0c
    ldr r1, lbl_08065b48 @ =0x083c5cf0
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r7, #0xa0
    lsls r7, r7, #1
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    adds r3, r7, #0
    bl DMATransfer
    ldr r2, lbl_08065b4c @ =0x05000200
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl DMATransfer
    movs r0, #0
    strh r0, [r4]
    ldr r0, lbl_08065b50 @ =0x083c0dfc
    ldr r5, lbl_08065b54 @ =0x083c0948
    ldrb r1, [r5]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065b58 @ =0x083c5e30
    ldrb r1, [r5, #1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08065b5c @ =0x083c3334
    ldr r1, lbl_08065b60 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, [r5]
    ldr r1, [r5, #4]
    bl sub_0806141c
    ldrh r2, [r5, #4]
    mov r8, r2
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    mov r1, r8
    bl sub_080614d4
    bl sub_08061e38
    ldr r6, lbl_08065b64 @ =0x08754bc4
    ldr r1, [r6]
    adds r0, r1, #0
    adds r0, #0xf2
    movs r2, #0xf0
    lsls r2, r2, #1
    mov sb, r2
    mov r2, sb
    strh r2, [r0]
    subs r0, #2
    strh r7, [r0]
    ldrb r5, [r5, #2]
    adds r3, r1, #0
    adds r3, #0xfb
    movs r0, #3
    mov sl, r0
    adds r1, r5, #0
    mov r2, sl
    ands r1, r2
    ldrb r2, [r3]
    movs r4, #4
    rsbs r4, r4, #0
    adds r0, r4, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    ldr r0, [r6]
    adds r0, #0xf0
    movs r1, #1
    bl update_cutscene_oam_data_id
    ldr r1, [r6]
    movs r2, #0x89
    lsls r2, r2, #1
    adds r0, r1, r2
    mov r2, sb
    strh r2, [r0]
    movs r2, #0x88
    lsls r2, r2, #1
    adds r0, r1, r2
    strh r7, [r0]
    adds r5, #1
    ldr r0, lbl_08065b68 @ =0x0000011b
    adds r1, r1, r0
    mov r0, sl
    ands r5, r0
    ldrb r0, [r1]
    ands r4, r0
    orrs r4, r5
    strb r4, [r1]
    ldr r0, [r6]
    adds r0, r0, r2
    movs r1, #3
    bl update_cutscene_oam_data_id
    movs r0, #2
    bl sub_08061fa0
    ldr r1, [r6]
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    mov r2, r8
    orrs r2, r0
    strh r2, [r1, #0x1c]
    movs r0, #0
    strh r0, [r1, #2]
    movs r2, #0
    strb r2, [r1, #4]
    ldr r1, [r6]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08065b48: .4byte 0x083c5cf0
lbl_08065b4c: .4byte 0x05000200
lbl_08065b50: .4byte 0x083c0dfc
lbl_08065b54: .4byte 0x083c0948
lbl_08065b58: .4byte 0x083c5e30
lbl_08065b5c: .4byte 0x083c3334
lbl_08065b60: .4byte 0x06010000
lbl_08065b64: .4byte 0x08754bc4
lbl_08065b68: .4byte 0x0000011b

    thumb_func_start mecha_ridley_sees_samus_subroutine
mecha_ridley_sees_samus_subroutine: @ 0x08065b6c
    push {r4, lr}
    ldr r1, lbl_08065b98 @ =0x08760014
    ldr r0, lbl_08065b9c @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_08065ba0
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08065b98: .4byte 0x08760014
lbl_08065b9c: .4byte 0x08754bc4

    thumb_func_start sub_08065ba0
sub_08065ba0: @ 0x08065ba0
    push {lr}
    ldr r1, lbl_08065bc8 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_08065bcc @ =0x08760014
    ldr r0, lbl_08065bd0 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_08065bd4 @ =0x083c0950
    bl sub_08069dc8
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_08065bc8: .4byte 0x03001382
lbl_08065bcc: .4byte 0x08760014
lbl_08065bd0: .4byte 0x08754bc4
lbl_08065bd4: .4byte 0x083c0950

    thumb_func_start getting_fully_powered_suit_anim
getting_fully_powered_suit_anim: @ 0x08065bd8
    push {r4, r5, r6, lr}
    ldr r0, lbl_08065bf0 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #4]
    cmp r0, #6
    bls lbl_08065be6
    b lbl_08065d2a
lbl_08065be6:
    lsls r0, r0, #2
    ldr r1, lbl_08065bf4 @ =lbl_08065bf8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08065bf0: .4byte 0x08754bc4
lbl_08065bf4: .4byte lbl_08065bf8
lbl_08065bf8: @ jump table
    .4byte lbl_08065c14 @ case 0
    .4byte lbl_08065c2c @ case 1
    .4byte lbl_08065c50 @ case 2
    .4byte lbl_08065c78 @ case 3
    .4byte lbl_08065ca4 @ case 4
    .4byte lbl_08065cf8 @ case 5
    .4byte lbl_08065d14 @ case 6
lbl_08065c14:
    ldr r4, lbl_08065c28 @ =0x08754bc4
    ldr r0, [r4]
    ldrh r0, [r0, #0x1e]
    movs r1, #0xc
    movs r2, #8
    movs r3, #1
    bl sub_08061d68
    ldr r1, [r4]
    b lbl_08065d02
    .align 2, 0
lbl_08065c28: .4byte 0x08754bc4
lbl_08065c2c:
    ldr r1, lbl_08065c48 @ =0x08754bc4
    ldr r2, [r1]
    ldrh r0, [r2, #2]
    cmp r0, #0x14
    bhi lbl_08065c38
    b lbl_08065d2a
lbl_08065c38:
    ldr r0, lbl_08065c4c @ =0x000001bd
    adds r3, r2, r0
    movs r2, #0
    movs r0, #2
    strb r0, [r3]
    ldr r1, [r1]
    strh r2, [r1, #2]
    b lbl_08065d06
    .align 2, 0
lbl_08065c48: .4byte 0x08754bc4
lbl_08065c4c: .4byte 0x000001bd
lbl_08065c50:
    ldr r0, lbl_08065c74 @ =0x08754bc4
    ldr r2, [r0]
    movs r1, #0xd8
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r3, #0
    ldrsh r1, [r0, r3]
    movs r0, #0x88
    lsls r0, r0, #3
    cmp r1, r0
    bgt lbl_08065d2a
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08065d2a
    .align 2, 0
lbl_08065c74: .4byte 0x08754bc4
lbl_08065c78:
    ldr r0, lbl_08065c94 @ =0x083c63f0
    ldrh r0, [r0, #4]
    bl sub_080615c8
    adds r1, r0, #0
    ldrh r0, [r1]
    subs r0, #4
    movs r2, #0x80
    lsls r2, r2, #4
    cmp r0, r2
    ble lbl_08065c98
    strh r0, [r1]
    b lbl_08065d2a
    .align 2, 0
lbl_08065c94: .4byte 0x083c63f0
lbl_08065c98:
    strh r2, [r1]
    ldr r0, lbl_08065ca0 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08065d02
    .align 2, 0
lbl_08065ca0: .4byte 0x08754bc4
lbl_08065ca4:
    ldr r5, lbl_08065cec @ =0x08754bc4
    ldr r2, [r5]
    movs r1, #0xd8
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r3, #0
    ldrsh r1, [r0, r3]
    ldr r0, lbl_08065cf0 @ =0x000001ff
    cmp r1, r0
    bgt lbl_08065d2a
    ldrh r0, [r2, #0x1c]
    movs r3, #0x80
    lsls r3, r3, #7
    adds r1, r3, #0
    eors r0, r1
    movs r4, #0
    strh r0, [r2, #0x1c]
    ldrh r1, [r2, #0x1e]
    movs r0, #0x3f
    orrs r0, r1
    movs r1, #0x10
    movs r2, #8
    movs r3, #1
    bl sub_08061d68
    ldr r0, [r5]
    ldr r1, lbl_08065cf4 @ =0x000001bd
    adds r2, r0, r1
    ldrb r1, [r2]
    movs r0, #4
    orrs r0, r1
    strb r0, [r2]
    ldr r1, [r5]
    strh r4, [r1, #2]
    b lbl_08065d06
    .align 2, 0
lbl_08065cec: .4byte 0x08754bc4
lbl_08065cf0: .4byte 0x000001ff
lbl_08065cf4: .4byte 0x000001bd
lbl_08065cf8:
    ldr r0, lbl_08065d10 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_08065d2a
lbl_08065d02:
    movs r0, #0
    strh r0, [r1, #2]
lbl_08065d06:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08065d2a
    .align 2, 0
lbl_08065d10: .4byte 0x08754bc4
lbl_08065d14:
    bl sub_08061f28
    ldr r3, lbl_08065d98 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08065d2a:
    ldr r5, lbl_08065d98 @ =0x08754bc4
    ldr r0, [r5]
    adds r0, #0xc
    bl sub_08065ddc
    ldr r4, lbl_08065d9c @ =0x083c63f0
    ldrh r0, [r4, #0xc]
    bl sub_080615c8
    adds r6, r0, #0
    ldrh r0, [r4, #4]
    bl sub_080615c8
    ldrh r0, [r0]
    strh r0, [r6]
    ldr r0, [r5]
    movs r3, #0xd8
    lsls r3, r3, #1
    adds r0, r0, r3
    bl sub_08065e3c
    movs r4, #0
    movs r6, #0xf0
lbl_08065d58:
    ldr r0, [r5]
    adds r0, r0, r6
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    bl sub_08065eac
    adds r6, #0x20
    adds r4, #1
    cmp r4, #5
    ble lbl_08065d58
    ldr r0, lbl_08065d9c @ =0x083c63f0
    ldrh r0, [r0, #4]
    bl sub_080615c8
    ldrh r0, [r0]
    ldr r1, lbl_08065da0 @ =0xfffff800
    adds r4, r0, r1
    ldr r0, lbl_08065d98 @ =0x08754bc4
    ldr r0, [r0]
    movs r3, #0xd8
    lsls r3, r3, #1
    adds r0, r0, r3
    movs r1, #0
    ldrsh r0, [r0, r1]
    subs r0, r0, r4
    asrs r0, r0, #2
    adds r4, r0, #0
    adds r4, #8
    cmp r4, #0
    bge lbl_08065da4
    movs r4, #0
    b lbl_08065daa
    .align 2, 0
lbl_08065d98: .4byte 0x08754bc4
lbl_08065d9c: .4byte 0x083c63f0
lbl_08065da0: .4byte 0xfffff800
lbl_08065da4:
    cmp r4, #0xa0
    ble lbl_08065daa
    movs r4, #0xa0
lbl_08065daa:
    ldr r0, lbl_08065dd4 @ =0x04000046
    strh r4, [r0]
    movs r4, #7
    ldr r6, lbl_08065dd8 @ =0x08754bc4
    movs r5, #0xe8
    lsls r5, r5, #1
lbl_08065db6:
    ldr r0, [r6]
    adds r0, r0, r5
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    bl sub_08065f70
    adds r5, #0x20
    adds r4, #1
    cmp r4, #0xb
    ble lbl_08065db6
    movs r0, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08065dd4: .4byte 0x04000046
lbl_08065dd8: .4byte 0x08754bc4

    thumb_func_start sub_08065ddc
sub_08065ddc: @ 0x08065ddc
    push {lr}
    sub sp, #4
    adds r2, r0, #0
    ldrb r1, [r2]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08065e2a
    ldrb r0, [r2, #1]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08065dfa
    subs r0, #1
    strb r0, [r2, #1]
    b lbl_08065e2a
lbl_08065dfa:
    ldrb r0, [r2, #3]
    strb r0, [r2, #1]
    ldrb r0, [r2, #2]
    adds r0, #1
    strb r0, [r2, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #6
    bls lbl_08065e0e
    strb r1, [r2, #2]
lbl_08065e0e:
    ldr r1, lbl_08065e30 @ =0x083c640c
    ldrb r0, [r2, #2]
    adds r0, r0, r1
    ldrb r1, [r0]
    lsls r1, r1, #5
    ldr r0, lbl_08065e34 @ =0x083ce38c
    adds r1, r1, r0
    ldr r2, lbl_08065e38 @ =0x05000340
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
lbl_08065e2a:
    add sp, #4
    pop {r0}
    bx r0
    .align 2, 0
lbl_08065e30: .4byte 0x083c640c
lbl_08065e34: .4byte 0x083ce38c
lbl_08065e38: .4byte 0x05000340

    thumb_func_start sub_08065e3c
sub_08065e3c: @ 0x08065e3c
    push {lr}
    adds r2, r0, #0
    ldrb r1, [r2, #0xd]
    movs r0, #4
    ands r0, r1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0
    beq lbl_08065e68
    ldrh r0, [r2, #0x18]
    adds r0, #1
    strh r0, [r2, #0x18]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x12
    ldr r3, lbl_08065e64 @ =0x0000fffc
    adds r1, r3, #0
    subs r1, r1, r0
    strh r1, [r2, #0x10]
    b lbl_08065e6e
    .align 2, 0
lbl_08065e64: .4byte 0x0000fffc
lbl_08065e68:
    ldr r0, lbl_08065ea0 @ =0x0000fffc
    strh r0, [r2, #0x10]
    strh r1, [r2, #0x18]
lbl_08065e6e:
    ldrb r1, [r2, #0xd]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08065e8c
    ldrh r0, [r2, #0x10]
    ldrh r1, [r2]
    adds r0, r0, r1
    strh r0, [r2]
    lsls r0, r0, #0x10
    ldr r1, lbl_08065ea4 @ =0xff410000
    cmp r0, r1
    bge lbl_08065e8c
    movs r0, #0
    strb r0, [r2, #0xd]
lbl_08065e8c:
    ldr r0, lbl_08065ea8 @ =0x08754bc4
    ldr r0, [r0]
    ldrh r1, [r2]
    movs r2, #0xa4
    lsls r2, r2, #2
    adds r0, r0, r2
    strh r1, [r0]
    pop {r0}
    bx r0
    .align 2, 0
lbl_08065ea0: .4byte 0x0000fffc
lbl_08065ea4: .4byte 0xff410000
lbl_08065ea8: .4byte 0x08754bc4

    thumb_func_start sub_08065eac
sub_08065eac: @ 0x08065eac
    push {r4, r5, lr}
    adds r4, r0, #0
    lsls r1, r1, #0x18
    lsrs r5, r1, #0x18
    ldrb r2, [r4, #0xd]
    cmp r2, #0
    bne lbl_08065edc
    ldr r2, lbl_08065ed4 @ =0x0808c99c
    ldr r0, lbl_08065ed8 @ =0x03000c77
    ldrb r0, [r0]
    adds r0, r0, r5
    movs r1, #0xff
    ands r0, r1
    adds r0, r0, r2
    ldrb r1, [r0]
    movs r0, #0x1f
    ands r0, r1
    strh r0, [r4, #0x14]
    movs r0, #1
    b lbl_08065f1a
    .align 2, 0
lbl_08065ed4: .4byte 0x0808c99c
lbl_08065ed8: .4byte 0x03000c77
lbl_08065edc:
    cmp r2, #1
    bne lbl_08065f20
    ldrh r0, [r4, #0x14]
    cmp r0, #0
    beq lbl_08065eee
    subs r0, #1
    strh r0, [r4, #0x14]
    ldrb r2, [r4, #0xb]
    b lbl_08065f2e
lbl_08065eee:
    ldr r1, lbl_08065f08 @ =0x0808c99c
    ldr r0, lbl_08065f0c @ =0x03000c77
    ldrb r0, [r0]
    adds r0, r0, r1
    ldrb r0, [r0]
    ands r2, r0
    cmp r2, #0
    beq lbl_08065f10
    adds r0, r4, #0
    movs r1, #3
    bl update_cutscene_oam_data_id
    b lbl_08065f18
    .align 2, 0
lbl_08065f08: .4byte 0x0808c99c
lbl_08065f0c: .4byte 0x03000c77
lbl_08065f10:
    adds r0, r4, #0
    movs r1, #2
    bl update_cutscene_oam_data_id
lbl_08065f18:
    movs r0, #2
lbl_08065f1a:
    strb r0, [r4, #0xd]
    ldrb r2, [r4, #0xb]
    b lbl_08065f2e
lbl_08065f20:
    ldrb r0, [r4, #0xb]
    movs r1, #0xc0
    ands r1, r0
    adds r2, r0, #0
    cmp r1, #0
    bne lbl_08065f36
    strb r1, [r4, #0xd]
lbl_08065f2e:
    movs r0, #0xc0
    ands r0, r2
    cmp r0, #0
    beq lbl_08065f62
lbl_08065f36:
    ldr r0, lbl_08065f68 @ =0x08754bc4
    ldr r0, [r0]
    mov ip, r0
    movs r3, #0xd9
    lsls r3, r3, #1
    add r3, ip
    ldr r1, lbl_08065f6c @ =0x083c6414
    lsls r2, r5, #2
    adds r0, r2, r1
    ldrh r0, [r0]
    ldrh r3, [r3]
    adds r0, r0, r3
    strh r0, [r4, #2]
    movs r3, #0xd8
    lsls r3, r3, #1
    add r3, ip
    adds r1, #2
    adds r2, r2, r1
    ldrh r0, [r2]
    ldrh r3, [r3]
    adds r0, r0, r3
    strh r0, [r4]
lbl_08065f62:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08065f68: .4byte 0x08754bc4
lbl_08065f6c: .4byte 0x083c6414

    thumb_func_start sub_08065f70
sub_08065f70: @ 0x08065f70
    push {r4, r5, lr}
    adds r3, r0, #0
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    adds r2, r4, #0
    ldrb r1, [r3, #0xd]
    movs r5, #2
    adds r0, r5, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08065fd4
    ldrh r0, [r3, #0x18]
    adds r0, #1
    strh r0, [r3, #0x18]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x14
    ldrh r1, [r3, #0x10]
    adds r0, r0, r1
    strh r0, [r3, #0x10]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x20
    ble lbl_08065fa2
    movs r0, #0x20
    strh r0, [r3, #0x10]
lbl_08065fa2:
    ldrh r0, [r3]
    ldrh r1, [r3, #0x10]
    subs r0, r0, r1
    strh r0, [r3]
    lsls r0, r0, #0x10
    ldr r1, lbl_08065fc8 @ =0xff210000
    cmp r0, r1
    bge lbl_08066018
    movs r0, #0
    strb r0, [r3, #0xd]
    ldr r1, lbl_08065fcc @ =0x083ca1e4
    ldr r0, lbl_08065fd0 @ =0x03000c77
    ldrb r0, [r0]
    adds r0, r0, r4
    adds r0, r0, r1
    ldrb r1, [r0]
    movs r0, #0x3f
    ands r0, r1
    b lbl_08066016
    .align 2, 0
lbl_08065fc8: .4byte 0xff210000
lbl_08065fcc: .4byte 0x083ca1e4
lbl_08065fd0: .4byte 0x03000c77
lbl_08065fd4:
    ldrh r0, [r3, #0x14]
    adds r4, r0, #0
    cmp r4, #0
    bne lbl_08066014
    strb r5, [r3, #0xd]
    strh r4, [r3, #0x10]
    ldr r0, lbl_08066008 @ =0x083c642c
    subs r1, r2, #7
    lsls r1, r1, #1
    adds r1, r1, r0
    ldr r2, lbl_0806600c @ =0x0808c99c
    ldr r0, lbl_08066010 @ =0x03000c77
    ldrb r0, [r0]
    adds r0, r0, r2
    ldrb r2, [r0]
    movs r0, #0x3f
    ands r0, r2
    ldrh r1, [r1]
    adds r0, r0, r1
    strh r0, [r3, #2]
    movs r0, #0xb0
    lsls r0, r0, #2
    strh r0, [r3]
    strh r4, [r3, #0x18]
    b lbl_08066018
    .align 2, 0
lbl_08066008: .4byte 0x083c642c
lbl_0806600c: .4byte 0x0808c99c
lbl_08066010: .4byte 0x03000c77
lbl_08066014:
    subs r0, #1
lbl_08066016:
    strh r0, [r3, #0x14]
lbl_08066018:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start getting_fully_powered_suit_init
getting_fully_powered_suit_init: @ 0x08066020
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    bl sub_08061f0c
    ldr r1, lbl_08066300 @ =0x083c66a0
    movs r3, #0xb0
    lsls r3, r3, #1
    movs r0, #0x10
    mov r8, r0
    str r0, [sp]
    movs r0, #3
    movs r2, #0xa0
    lsls r2, r2, #0x13
    bl DMATransfer
    ldr r2, lbl_08066304 @ =0x05000200
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0xa0
    lsls r1, r1, #0x13
    bl DMATransfer
    movs r6, #0
    movs r1, #0xa0
    lsls r1, r1, #0x13
    strh r6, [r1]
    ldr r0, lbl_08066308 @ =0x083c6900
    ldr r7, lbl_0806630c @ =0x083c63f0
    ldrb r1, [r7]
    lsls r1, r1, #0xe
    movs r2, #0xc0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066310 @ =0x083c9bd8
    ldrb r1, [r7, #1]
    lsls r1, r1, #0xb
    movs r3, #0xc0
    lsls r3, r3, #0x13
    adds r1, r1, r3
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066314 @ =0x083ca1e4
    ldrb r1, [r7, #8]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066318 @ =0x083cd814
    ldrb r1, [r7, #9]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806631c @ =0x083c91c0
    ldr r1, lbl_08066320 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, [r7]
    ldr r1, [r7, #4]
    bl sub_0806141c
    ldr r0, [r7, #8]
    ldr r1, [r7, #0xc]
    bl sub_0806141c
    bl sub_08061e38
    ldr r6, lbl_08066324 @ =0x08754bc4
    ldr r1, [r6]
    movs r2, #0
    ldr r0, lbl_08066328 @ =0x00003b84
    strh r0, [r1, #0x1e]
    ldr r0, lbl_0806632c @ =0x030013ae
    strh r2, [r0]
    ldr r0, lbl_08066330 @ =0x030013b0
    strh r2, [r0]
    ldr r0, lbl_08066334 @ =0x030013b2
    mov r5, r8
    strh r5, [r0]
    ldrh r0, [r7, #4]
    mov sb, r0
    movs r1, #0x80
    lsls r1, r1, #4
    mov sl, r1
    movs r0, #1
    mov r1, sb
    mov r2, sl
    bl sub_080614d4
    ldrh r2, [r7, #0xc]
    mov r8, r2
    movs r0, #1
    mov r1, r8
    mov r2, sl
    bl sub_080614d4
    movs r0, #2
    mov r1, sb
    movs r2, #0xa8
    lsls r2, r2, #4
    bl sub_080614d4
    movs r0, #2
    mov r1, r8
    movs r2, #0xa8
    lsls r2, r2, #4
    bl sub_080614d4
    ldr r2, [r6]
    movs r3, #0xd9
    lsls r3, r3, #1
    adds r1, r2, r3
    movs r0, #0xf8
    lsls r0, r0, #1
    strh r0, [r1]
    movs r4, #0xd8
    lsls r4, r4, #1
    mov r8, r4
    adds r1, r2, r4
    movs r0, #0xb0
    lsls r0, r0, #3
    strh r0, [r1]
    ldrb r5, [r7, #2]
    str r5, [sp, #8]
    adds r3, #9
    adds r2, r2, r3
    adds r4, r5, #0
    movs r7, #3
    ands r4, r7
    ldrb r1, [r2]
    movs r0, #4
    rsbs r0, r0, #0
    mov sb, r0
    ands r0, r1
    orrs r0, r4
    strb r0, [r2]
    ldr r1, [r6]
    adds r1, r1, r3
    ldrb r2, [r1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r2, [r6]
    movs r1, #0xde
    lsls r1, r1, #1
    adds r2, r2, r1
    ldrb r1, [r2]
    movs r3, #0x10
    rsbs r3, r3, #0
    mov sl, r3
    mov r0, sl
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r6]
    add r0, r8
    movs r1, #4
    bl update_cutscene_oam_data_id
    ldr r0, [r6]
    movs r3, #0xa4
    lsls r3, r3, #2
    adds r1, r0, r3
    add r0, r8
    ldm r0!, {r2, r5, r7}
    stm r1!, {r2, r5, r7}
    ldm r0!, {r2, r5, r7}
    stm r1!, {r2, r5, r7}
    ldm r0!, {r5, r7}
    stm r1!, {r5, r7}
    ldr r1, [r6]
    ldr r0, [sp, #8]
    adds r0, #1
    ldr r2, lbl_08066338 @ =0x0000029b
    adds r1, r1, r2
    movs r5, #3
    ands r0, r5
    str r0, [sp, #4]
    ldrb r2, [r1]
    mov r0, sb
    ands r0, r2
    ldr r7, [sp, #4]
    orrs r0, r7
    strb r0, [r1]
    ldr r0, [r6]
    adds r0, r0, r3
    movs r1, #5
    bl update_cutscene_oam_data_id
    movs r7, #0
    adds r5, r4, #0
    mov r8, sb
    mov r4, sl
lbl_080661bc:
    ldr r1, [r6]
    lsls r3, r7, #5
    adds r1, r1, r3
    adds r1, #0xfb
    ldrb r2, [r1]
    mov r0, r8
    ands r0, r2
    orrs r0, r5
    strb r0, [r1]
    ldr r2, [r6]
    adds r2, r2, r3
    adds r2, #0xfc
    ldrb r1, [r2]
    adds r0, r4, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    adds r7, #1
    cmp r7, #5
    ble lbl_080661bc
    ldr r0, lbl_08066324 @ =0x08754bc4
    mov r8, r0
    ldr r2, [r0]
    ldr r6, lbl_0806633c @ =0x083c642c
    ldrh r0, [r6]
    movs r3, #0xe9
    lsls r3, r3, #1
    adds r1, r2, r3
    strh r0, [r1]
    movs r4, #0xe8
    lsls r4, r4, #1
    mov sb, r4
    adds r1, r2, r4
    movs r0, #0xb0
    lsls r0, r0, #2
    strh r0, [r1]
    ldr r1, lbl_0806630c @ =0x083c63f0
    ldr r5, lbl_08066340 @ =0x000001db
    adds r3, r2, r5
    movs r0, #3
    ldrb r1, [r1, #2]
    ands r1, r0
    ldrb r2, [r3]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    mov r1, r8
    ldr r0, [r1]
    lsls r2, r7, #5
    adds r2, r0, r2
    ldr r3, lbl_08066344 @ =0x0808c99c
    ldr r1, lbl_08066348 @ =0x03000c77
    ldrb r1, [r1]
    adds r1, r1, r3
    ldrb r3, [r1]
    movs r1, #0x3f
    ands r1, r3
    movs r3, #0x82
    lsls r3, r3, #1
    adds r2, r2, r3
    strh r1, [r2]
    add r0, sb
    movs r1, #1
    bl update_cutscene_oam_data_id
    movs r7, #8
    mov r4, r8
    ldr r5, lbl_08066314 @ =0x083ca1e4
    mov sb, r5
    adds r6, #2
    mov sl, r6
lbl_08066250:
    ldr r1, [r4]
    lsls r2, r7, #5
    adds r0, r1, r2
    adds r0, #0xf0
    movs r6, #0xe8
    lsls r6, r6, #1
    adds r1, r1, r6
    ldm r1!, {r3, r5, r6}
    stm r0!, {r3, r5, r6}
    ldm r1!, {r3, r5, r6}
    stm r0!, {r3, r5, r6}
    ldm r1!, {r3, r5}
    stm r0!, {r3, r5}
    ldr r0, [r4]
    adds r2, r0, r2
    mov r6, sl
    ldrh r0, [r6]
    adds r1, r2, #0
    adds r1, #0xf2
    strh r0, [r1]
    ldr r0, lbl_08066348 @ =0x03000c77
    ldrb r0, [r0]
    adds r0, r0, r7
    add r0, sb
    ldrb r1, [r0]
    movs r5, #0x3f
    adds r0, r5, #0
    ands r0, r1
    movs r3, #0x82
    lsls r3, r3, #1
    adds r1, r2, r3
    strh r0, [r1]
    movs r6, #2
    add sl, r6
    adds r7, #1
    cmp r7, #0xb
    ble lbl_08066250
    movs r7, #0
    mov r0, r8
    ldr r3, [r0]
    ldr r0, lbl_0806634c @ =0x083c6408
    ldr r0, [r0]
    str r0, [r3, #0xc]
    ldr r2, lbl_0806630c @ =0x083c63f0
    ldrh r0, [r2, #4]
    movs r4, #0xa0
    lsls r4, r4, #7
    adds r1, r4, #0
    orrs r0, r1
    ldrh r1, [r2, #0xc]
    orrs r0, r1
    movs r6, #0
    strh r0, [r3, #0x1c]
    ldr r0, lbl_08066350 @ =0x0400004a
    strb r5, [r0]
    ldr r1, lbl_08066354 @ =0x04000049
    movs r0, #0x1f
    strb r0, [r1]
    subs r1, #7
    movs r0, #0xf0
    strh r0, [r1]
    adds r1, #4
    movs r0, #0xa0
    strh r0, [r1]
    ldr r0, lbl_08066358 @ =0x03000bf0
    strb r6, [r0]
    movs r0, #0x13
    movs r1, #0
    bl PlayMusic
    mov r5, r8
    ldr r0, [r5]
    strh r7, [r0, #2]
    strb r6, [r0, #4]
    ldr r1, [r5]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08066300: .4byte 0x083c66a0
lbl_08066304: .4byte 0x05000200
lbl_08066308: .4byte 0x083c6900
lbl_0806630c: .4byte 0x083c63f0
lbl_08066310: .4byte 0x083c9bd8
lbl_08066314: .4byte 0x083ca1e4
lbl_08066318: .4byte 0x083cd814
lbl_0806631c: .4byte 0x083c91c0
lbl_08066320: .4byte 0x06010000
lbl_08066324: .4byte 0x08754bc4
lbl_08066328: .4byte 0x00003b84
lbl_0806632c: .4byte 0x030013ae
lbl_08066330: .4byte 0x030013b0
lbl_08066334: .4byte 0x030013b2
lbl_08066338: .4byte 0x0000029b
lbl_0806633c: .4byte 0x083c642c
lbl_08066340: .4byte 0x000001db
lbl_08066344: .4byte 0x0808c99c
lbl_08066348: .4byte 0x03000c77
lbl_0806634c: .4byte 0x083c6408
lbl_08066350: .4byte 0x0400004a
lbl_08066354: .4byte 0x04000049
lbl_08066358: .4byte 0x03000bf0

    thumb_func_start getting_fully_powered_suit_subroutine
getting_fully_powered_suit_subroutine: @ 0x0806635c
    push {r4, lr}
    ldr r1, lbl_08066388 @ =0x0876002c
    ldr r0, lbl_0806638c @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_08066390
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08066388: .4byte 0x0876002c
lbl_0806638c: .4byte 0x08754bc4

    thumb_func_start sub_08066390
sub_08066390: @ 0x08066390
    push {lr}
    ldr r1, lbl_080663b8 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_080663bc @ =0x0876002c
    ldr r0, lbl_080663c0 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_080663c4 @ =0x083c6438
    bl sub_08069dc8
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_080663b8: .4byte 0x03001382
lbl_080663bc: .4byte 0x0876002c
lbl_080663c0: .4byte 0x08754bc4
lbl_080663c4: .4byte 0x083c6438

    thumb_func_start before_charlie_samus_close_up
before_charlie_samus_close_up: @ 0x080663c8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    ldr r1, lbl_080663e8 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r6, r1, #0
    cmp r0, #8
    bls lbl_080663de
    b lbl_08066626
lbl_080663de:
    lsls r0, r0, #2
    ldr r1, lbl_080663ec @ =lbl_080663f0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080663e8: .4byte 0x08754bc4
lbl_080663ec: .4byte lbl_080663f0
lbl_080663f0: @ jump table
    .4byte lbl_08066414 @ case 0
    .4byte lbl_0806652c @ case 1
    .4byte lbl_08066550 @ case 2
    .4byte lbl_08066594 @ case 3
    .4byte lbl_080665b4 @ case 4
    .4byte lbl_080665e0 @ case 5
    .4byte lbl_080665ea @ case 6
    .4byte lbl_080665fc @ case 7
    .4byte lbl_08066610 @ case 8
lbl_08066414:
    ldr r1, lbl_08066508 @ =0x083ce6f4
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    movs r0, #0
    strh r0, [r4]
    ldr r0, lbl_0806650c @ =0x083e22e4
    ldr r7, lbl_08066510 @ =0x083ce46c
    adds r1, r7, #0
    adds r1, #0x28
    ldrb r1, [r1]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066514 @ =0x083e5170
    adds r1, r7, #0
    adds r1, #0x30
    ldrb r1, [r1]
    lsls r1, r1, #0xe
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066518 @ =0x083ec218
    adds r1, r7, #0
    adds r1, #0x29
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806651c @ =0x083ec7d8
    adds r1, r7, #0
    adds r1, #0x41
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066520 @ =0x083ecbc4
    adds r1, r7, #0
    adds r1, #0x39
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066524 @ =0x083ecf64
    adds r1, r7, #0
    adds r1, #0x31
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, [r7, #0x28]
    ldr r1, [r7, #0x2c]
    bl sub_0806141c
    ldr r0, [r7, #0x40]
    ldr r1, [r7, #0x44]
    bl sub_0806141c
    ldr r0, [r7, #0x38]
    ldr r1, [r7, #0x3c]
    bl sub_0806141c
    ldr r0, [r7, #0x30]
    ldr r1, [r7, #0x34]
    bl sub_0806141c
    ldrh r6, [r7, #0x2c]
    movs r5, #0x80
    lsls r5, r5, #4
    movs r0, #3
    adds r1, r6, #0
    adds r2, r5, #0
    bl sub_080614d4
    adds r0, r7, #0
    adds r0, #0x44
    ldrh r0, [r0]
    mov r8, r0
    movs r0, #3
    mov r1, r8
    adds r2, r5, #0
    bl sub_080614d4
    ldrh r1, [r7, #0x3c]
    movs r0, #3
    adds r2, r5, #0
    bl sub_080614d4
    ldrh r4, [r7, #0x34]
    movs r0, #3
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_080614d4
    bl sub_08061e38
    movs r0, #0xa
    bl sub_08061fa0
    ldr r0, lbl_08066528 @ =0x08754bc4
    ldr r1, [r0]
    mov r0, r8
    orrs r6, r0
    orrs r4, r6
    movs r0, #0
    strh r4, [r1, #0x1c]
    b lbl_08066606
    .align 2, 0
lbl_08066508: .4byte 0x083ce6f4
lbl_0806650c: .4byte 0x083e22e4
lbl_08066510: .4byte 0x083ce46c
lbl_08066514: .4byte 0x083e5170
lbl_08066518: .4byte 0x083ec218
lbl_0806651c: .4byte 0x083ec7d8
lbl_08066520: .4byte 0x083ecbc4
lbl_08066524: .4byte 0x083ecf64
lbl_08066528: .4byte 0x08754bc4
lbl_0806652c:
    ldr r0, [r6]
    ldrh r0, [r0, #2]
    cmp r0, #0xb4
    bhi lbl_08066536
    b lbl_08066626
lbl_08066536:
    ldr r0, lbl_0806654c @ =0x00003f41
    movs r1, #1
    str r1, [sp]
    movs r1, #0
    movs r2, #0x10
    movs r3, #0x10
    bl sub_08061dc8
    ldr r1, [r6]
    b lbl_08066604
    .align 2, 0
lbl_0806654c: .4byte 0x00003f41
lbl_08066550:
    ldr r2, [r6]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08066626
    ldr r4, lbl_0806658c @ =0x083ce46c
    ldrh r0, [r2, #0x1c]
    ldrh r1, [r4, #0x2c]
    eors r0, r1
    movs r5, #0
    strh r0, [r2, #0x1c]
    ldr r0, lbl_08066590 @ =0x00003f42
    movs r1, #0x10
    str r1, [sp]
    movs r1, #0
    movs r2, #0x10
    movs r3, #1
    bl sub_08061dc8
    ldr r2, [r6]
    ldrh r0, [r2, #0x1c]
    ldrh r1, [r4, #0x3c]
    orrs r0, r1
    strh r0, [r2, #0x1c]
    strh r5, [r2, #2]
    b lbl_080665d4
    .align 2, 0
lbl_0806658c: .4byte 0x083ce46c
lbl_08066590: .4byte 0x00003f42
lbl_08066594:
    ldr r0, [r6]
    ldrh r0, [r0, #2]
    cmp r0, #0x64
    bls lbl_08066626
    ldr r0, lbl_080665b0 @ =0x00003f42
    movs r1, #4
    str r1, [sp]
    movs r1, #0x10
    movs r2, #0
    movs r3, #1
    bl sub_08061dc8
    ldr r1, [r6]
    b lbl_08066604
    .align 2, 0
lbl_080665b0: .4byte 0x00003f42
lbl_080665b4:
    ldr r2, [r6]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08066626
    ldr r0, lbl_080665dc @ =0x083ce46c
    adds r0, #0x44
    ldrh r1, [r2, #0x1c]
    ldrh r0, [r0]
    eors r1, r0
    movs r0, #0
    strh r1, [r2, #0x1c]
    strh r0, [r2, #2]
lbl_080665d4:
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08066626
    .align 2, 0
lbl_080665dc: .4byte 0x083ce46c
lbl_080665e0:
    ldr r1, [r6]
    ldrh r0, [r1, #2]
    cmp r0, #0x8c
    bls lbl_08066626
    b lbl_08066604
lbl_080665ea:
    bl sub_08061f44
    cmp r0, #0
    beq lbl_08066626
    ldr r0, lbl_080665f8 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08066604
    .align 2, 0
lbl_080665f8: .4byte 0x08754bc4
lbl_080665fc:
    ldr r1, [r6]
    ldrh r0, [r1, #2]
    cmp r0, #0x46
    bls lbl_08066626
lbl_08066604:
    movs r0, #0
lbl_08066606:
    strh r0, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08066626
lbl_08066610:
    bl sub_08061f28
    ldr r3, lbl_08066634 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08066626:
    movs r0, #0
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08066634: .4byte 0x08754bc4

    thumb_func_start before_charlie_wall_and_grey_voice
before_charlie_wall_and_grey_voice: @ 0x08066638
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r1, lbl_0806665c @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r2, r1, #0
    cmp r0, #5
    bls lbl_08066652
    b lbl_080668c6
lbl_08066652:
    lsls r0, r0, #2
    ldr r1, lbl_08066660 @ =lbl_08066664
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806665c: .4byte 0x08754bc4
lbl_08066660: .4byte lbl_08066664
lbl_08066664: @ jump table
    .4byte lbl_0806667c @ case 0
    .4byte lbl_080667e4 @ case 1
    .4byte lbl_08066804 @ case 2
    .4byte lbl_08066858 @ case 3
    .4byte lbl_08066894 @ case 4
    .4byte lbl_080668b0 @ case 5
lbl_0806667c:
    ldr r5, lbl_080667b0 @ =0x083ce5f4
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r6, #0x80
    lsls r6, r6, #1
    movs r0, #0x10
    mov sl, r0
    str r0, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r2, r4, #0
    adds r3, r6, #0
    bl DMATransfer
    movs r1, #0
    strh r1, [r4]
    ldr r4, lbl_080667b4 @ =0x08754bb4
    ldr r1, [r4]
    movs r2, #0xe0
    lsls r2, r2, #6
    adds r1, r1, r2
    adds r0, r5, #0
    movs r2, #0
    bl sub_0805b624
    ldr r2, [r4]
    mov r0, sl
    str r0, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    ldr r0, lbl_080667b8 @ =0x083d6684
    ldr r7, lbl_080667bc @ =0x083ce46c
    ldrb r1, [r7, #0x10]
    lsls r1, r1, #0xe
    movs r2, #0xc0
    lsls r2, r2, #0x13
    mov r8, r2
    add r1, r8
    bl CallLZ77UncompVRAM
    ldrb r5, [r7, #0x11]
    lsls r5, r5, #0xb
    add r5, r8
    movs r0, #0x80
    lsls r0, r0, #4
    mov sb, r0
    movs r6, #0x20
    str r6, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r5, #0
    mov r3, sb
    bl BitFill
    ldrb r4, [r7, #0x19]
    lsls r4, r4, #0xb
    add r4, r8
    str r6, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r4, #0
    mov r3, sb
    bl BitFill
    ldr r0, lbl_080667c0 @ =0x083eaf88
    adds r1, r5, #0
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080667c4 @ =0x083eb824
    adds r1, r4, #0
    bl CallLZ77UncompVRAM
    ldr r0, [r7, #0x10]
    ldr r1, [r7, #0x14]
    bl sub_0806141c
    ldr r0, [r7, #0x18]
    ldr r1, [r7, #0x1c]
    bl sub_0806141c
    ldrh r6, [r7, #0x14]
    movs r0, #3
    adds r1, r6, #0
    mov r2, sb
    bl sub_080614d4
    ldrh r1, [r7, #0x1c]
    movs r0, #3
    mov r2, sb
    bl sub_080614d4
    ldr r0, lbl_080667c8 @ =0x083de73c
    adds r1, r7, #0
    adds r1, #0x20
    ldrb r1, [r1]
    lsls r1, r1, #0xe
    add r1, r8
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080667cc @ =0x083ebb08
    adds r1, r7, #0
    adds r1, #0x21
    ldrb r1, [r1]
    lsls r1, r1, #0xb
    add r1, r8
    bl CallLZ77UncompVRAM
    ldr r0, [r7, #0x20]
    ldr r1, [r7, #0x24]
    bl sub_0806141c
    ldrh r4, [r7, #0x24]
    movs r2, #0x94
    lsls r2, r2, #4
    movs r0, #1
    adds r1, r4, #0
    bl sub_080614d4
    movs r0, #2
    adds r1, r4, #0
    mov r2, sb
    bl sub_080614d4
    bl sub_08061e38
    ldr r0, lbl_080667d0 @ =0x030013b0
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_080667d4 @ =0x030013b2
    mov r2, sl
    strh r2, [r0]
    ldr r5, lbl_080667d8 @ =0x08754bc4
    ldr r2, [r5]
    movs r0, #0
    mov r8, r0
    ldr r0, lbl_080667dc @ =0x00000c42
    strh r0, [r2, #0x1e]
    ldr r1, lbl_080667e0 @ =0x08760044
    adds r2, #0xcc
    mov r0, sl
    str r0, [sp]
    movs r0, #3
    movs r3, #0xc
    bl DMATransfer
    ldr r1, [r5]
    orrs r6, r4
    strh r6, [r1, #0x1c]
    mov r2, r8
    strh r2, [r1, #2]
    b lbl_080668a2
    .align 2, 0
lbl_080667b0: .4byte 0x083ce5f4
lbl_080667b4: .4byte 0x08754bb4
lbl_080667b8: .4byte 0x083d6684
lbl_080667bc: .4byte 0x083ce46c
lbl_080667c0: .4byte 0x083eaf88
lbl_080667c4: .4byte 0x083eb824
lbl_080667c8: .4byte 0x083de73c
lbl_080667cc: .4byte 0x083ebb08
lbl_080667d0: .4byte 0x030013b0
lbl_080667d4: .4byte 0x030013b2
lbl_080667d8: .4byte 0x08754bc4
lbl_080667dc: .4byte 0x00000c42
lbl_080667e0: .4byte 0x08760044
lbl_080667e4:
    ldr r4, lbl_08066800 @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #2]
    cmp r0, #0x78
    bls lbl_080668c6
    adds r2, #0xc0
    ldrb r1, [r2]
    movs r0, #1
    movs r3, #0
    orrs r0, r1
    strb r0, [r2]
    ldr r1, [r4]
    strh r3, [r1, #2]
    b lbl_080668a2
    .align 2, 0
lbl_08066800: .4byte 0x08754bc4
lbl_08066804:
    ldr r1, [r2]
    ldrh r0, [r1, #2]
    cmp r0, #0xc8
    bne lbl_0806681a
    adds r1, #0xcc
    ldrb r2, [r1]
    cmp r2, #0
    bne lbl_0806681a
    movs r0, #1
    orrs r0, r2
    strb r0, [r1]
lbl_0806681a:
    ldr r5, lbl_08066854 @ =0x08754bc4
    ldr r2, [r5]
    ldrh r1, [r2, #2]
    movs r0, #0x8c
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_080668c6
    adds r0, r2, #0
    adds r0, #0xd8
    ldrb r4, [r0]
    cmp r4, #0
    bne lbl_080668c6
    ldrh r0, [r2, #0x1e]
    movs r1, #1
    str r1, [sp]
    movs r1, #0x10
    movs r2, #0
    movs r3, #0x10
    bl sub_08061dc8
    ldr r1, [r5]
    adds r1, #0xd8
    ldrb r2, [r1]
    movs r0, #1
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r5]
    strh r4, [r1, #2]
    b lbl_080668a2
    .align 2, 0
lbl_08066854: .4byte 0x08754bc4
lbl_08066858:
    ldr r0, lbl_08066890 @ =0x08754bc4
    ldr r2, [r0]
    adds r0, r2, #0
    adds r0, #0xc0
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080668c6
    adds r0, r2, #0
    adds r0, #0xcc
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080668c6
    adds r0, r2, #0
    adds r0, #0xd8
    ldrb r3, [r0]
    cmp r3, #0
    bne lbl_080668c6
    subs r0, #0x30
    ldrb r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_080668c6
    strh r3, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_080668c6
    .align 2, 0
lbl_08066890: .4byte 0x08754bc4
lbl_08066894:
    ldr r0, lbl_080668ac @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #2]
    cmp r0, #0x3c
    bls lbl_080668c6
    movs r0, #0
    strh r0, [r1, #2]
lbl_080668a2:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_080668c6
    .align 2, 0
lbl_080668ac: .4byte 0x08754bc4
lbl_080668b0:
    bl sub_08061f28
    ldr r3, lbl_08066908 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_080668c6:
    ldr r4, lbl_08066908 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xc0
    bl sub_08066910
    ldr r0, [r4]
    adds r0, #0xcc
    bl sub_08066988
    ldr r0, [r4]
    adds r0, #0xd8
    bl sub_080669f4
    ldr r4, lbl_0806690c @ =0x083ce46c
    ldrh r0, [r4, #0x1c]
    bl sub_080615c8
    adds r5, r0, #0
    ldrh r0, [r4, #0x14]
    bl sub_080615c8
    ldrh r0, [r0]
    strh r0, [r5]
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08066908: .4byte 0x08754bc4
lbl_0806690c: .4byte 0x083ce46c

    thumb_func_start sub_08066910
sub_08066910: @ 0x08066910
    push {r4, r5, r6, lr}
    adds r4, r0, #0
    ldrb r1, [r4]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08066972
    ldr r5, lbl_08066978 @ =0x083ce46c
    ldrh r0, [r5, #0x14]
    bl sub_080615c8
    adds r2, r0, #0
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    lsls r0, r0, #0x10
    ldr r1, lbl_0806697c @ =0x0a7f0000
    cmp r0, r1
    bls lbl_08066942
    movs r1, #0xa8
    lsls r1, r1, #4
    adds r0, r1, #0
    strh r0, [r2]
    movs r0, #0
    strb r0, [r4]
lbl_08066942:
    ldr r6, lbl_08066980 @ =0x08754bc4
    ldr r0, [r6]
    ldrh r0, [r0, #0x1c]
    ldrh r4, [r5, #0x1c]
    ands r0, r4
    cmp r0, #0
    bne lbl_08066972
    ldrh r1, [r2]
    movs r0, #0x98
    lsls r0, r0, #4
    cmp r1, r0
    bne lbl_08066972
    ldr r0, lbl_08066984 @ =0x083dcb3c
    ldrb r1, [r5, #0x18]
    lsls r1, r1, #0xe
    movs r2, #0xc0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r1, [r6]
    ldrh r0, [r1, #0x1c]
    orrs r0, r4
    strh r0, [r1, #0x1c]
lbl_08066972:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08066978: .4byte 0x083ce46c
lbl_0806697c: .4byte 0x0a7f0000
lbl_08066980: .4byte 0x08754bc4
lbl_08066984: .4byte 0x083dcb3c

    thumb_func_start sub_08066988
sub_08066988: @ 0x08066988
    push {r4, r5, r6, lr}
    sub sp, #4
    adds r6, r0, #0
    ldrb r1, [r6]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080669e6
    ldrh r0, [r6, #4]
    cmp r0, #0
    beq lbl_080669a4
    subs r0, #1
    strh r0, [r6, #4]
    b lbl_080669e6
lbl_080669a4:
    ldrb r0, [r6, #2]
    strh r0, [r6, #4]
    ldrb r0, [r6, #1]
    adds r0, #1
    strb r0, [r6, #1]
    ldr r5, lbl_080669f0 @ =0x08754bb4
    ldr r0, [r5]
    movs r2, #0xe0
    lsls r2, r2, #6
    adds r1, r0, r2
    movs r4, #0x80
    lsls r4, r4, #3
    adds r2, r0, r4
    ldrb r3, [r6, #1]
    bl sub_0805b68c
    ldr r1, [r5]
    adds r1, r1, r4
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    movs r0, #1
    ldrsb r0, [r6, r0]
    cmp r0, #0x20
    bne lbl_080669e6
    movs r0, #0
    strb r0, [r6]
lbl_080669e6:
    add sp, #4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080669f0: .4byte 0x08754bb4

    thumb_func_start sub_080669f4
sub_080669f4: @ 0x080669f4
    push {r4, lr}
    adds r4, r0, #0
    ldrb r1, [r4]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08066a24
    ldr r0, lbl_08066a2c @ =0x083ce46c
    ldrh r0, [r0, #0x24]
    bl sub_08061578
    adds r1, r0, #0
    ldrh r0, [r1]
    subs r0, #2
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r2, #0x80
    lsls r2, r2, #4
    cmp r0, r2
    bhi lbl_08066a24
    strh r2, [r1]
    movs r0, #0
    strb r0, [r4]
lbl_08066a24:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08066a2c: .4byte 0x083ce46c

    thumb_func_start before_charlie_chozo_wall_sides
before_charlie_chozo_wall_sides: @ 0x08066a30
    push {r4, r5, lr}
    ldr r5, lbl_08066a48 @ =0x08754bc4
    ldr r3, [r5]
    ldrb r4, [r3, #4]
    cmp r4, #1
    beq lbl_08066a70
    cmp r4, #1
    bgt lbl_08066a4c
    cmp r4, #0
    beq lbl_08066a52
    b lbl_08066a96
    .align 2, 0
lbl_08066a48: .4byte 0x08754bc4
lbl_08066a4c:
    cmp r4, #2
    beq lbl_08066a82
    b lbl_08066a96
lbl_08066a52:
    ldrh r0, [r3, #2]
    cmp r0, #0x8c
    bls lbl_08066a96
    ldr r2, lbl_08066a6c @ =0x083ce46c
    ldrh r0, [r3, #0x1c]
    ldrh r1, [r2, #4]
    eors r0, r1
    strh r0, [r3, #0x1c]
    ldrh r1, [r2, #0xc]
    orrs r0, r1
    strh r0, [r3, #0x1c]
    strh r4, [r3, #2]
    b lbl_08066a7a
    .align 2, 0
lbl_08066a6c: .4byte 0x083ce46c
lbl_08066a70:
    ldrh r0, [r3, #2]
    cmp r0, #0x8c
    bls lbl_08066a96
    movs r0, #0
    strh r0, [r3, #2]
lbl_08066a7a:
    ldrb r0, [r3, #4]
    adds r0, #1
    strb r0, [r3, #4]
    b lbl_08066a96
lbl_08066a82:
    bl sub_08061f0c
    ldr r1, [r5]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r5]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08066a96:
    movs r0, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start before_charlie_init
before_charlie_init: @ 0x08066aa0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    bl sub_08061f0c
    ldr r1, lbl_08066bac @ =0x083ce4b4
    movs r4, #0xa0
    lsls r4, r4, #0x13
    movs r3, #0xa0
    lsls r3, r3, #1
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl DMATransfer
    ldr r2, lbl_08066bb0 @ =0x05000200
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x20
    mov sl, r0
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    movs r1, #0
    strh r1, [r4]
    ldr r0, lbl_08066bb4 @ =0x083ce8f4
    ldr r6, lbl_08066bb8 @ =0x083ce46c
    ldrb r1, [r6]
    lsls r1, r1, #0xe
    movs r2, #0xc0
    lsls r2, r2, #0x13
    mov r8, r2
    add r1, r8
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066bbc @ =0x083d2838
    ldrb r1, [r6, #8]
    lsls r1, r1, #0xe
    add r1, r8
    bl CallLZ77UncompVRAM
    ldrb r5, [r6, #1]
    lsls r5, r5, #0xb
    ldr r7, lbl_08066bc0 @ =0x06000800
    adds r2, r5, r7
    movs r0, #0x80
    lsls r0, r0, #4
    mov sb, r0
    mov r1, sl
    str r1, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, sb
    bl BitFill
    ldrb r4, [r6, #9]
    lsls r4, r4, #0xb
    mov r0, r8
    adds r2, r4, r0
    mov r1, sl
    str r1, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, sb
    bl BitFill
    ldr r0, lbl_08066bc4 @ =0x083ea404
    add r5, r8
    adds r1, r5, #0
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066bc8 @ =0x083ea9c4
    adds r4, r4, r7
    adds r1, r4, #0
    bl CallLZ77UncompVRAM
    ldr r0, [r6]
    ldr r1, [r6, #4]
    bl sub_0806141c
    ldr r0, [r6, #8]
    ldr r1, [r6, #0xc]
    bl sub_0806141c
    bl sub_08061e38
    ldrh r5, [r6, #4]
    movs r0, #3
    adds r1, r5, #0
    mov r2, sb
    bl sub_080614d4
    ldrh r4, [r6, #0xc]
    movs r0, #2
    adds r1, r4, #0
    mov r2, sb
    bl sub_080614d4
    movs r2, #0xc0
    lsls r2, r2, #4
    movs r0, #1
    adds r1, r4, #0
    bl sub_080614d4
    movs r0, #0x12
    movs r1, #0
    bl PlayMusic
    ldr r2, lbl_08066bcc @ =0x08754bc4
    ldr r0, [r2]
    movs r1, #0
    strh r5, [r0, #0x1c]
    strh r1, [r0, #2]
    strb r1, [r0, #4]
    ldr r1, [r2]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08066bac: .4byte 0x083ce4b4
lbl_08066bb0: .4byte 0x05000200
lbl_08066bb4: .4byte 0x083ce8f4
lbl_08066bb8: .4byte 0x083ce46c
lbl_08066bbc: .4byte 0x083d2838
lbl_08066bc0: .4byte 0x06000800
lbl_08066bc4: .4byte 0x083ea404
lbl_08066bc8: .4byte 0x083ea9c4
lbl_08066bcc: .4byte 0x08754bc4

    thumb_func_start before_charlie_subroutine
before_charlie_subroutine: @ 0x08066bd0
    push {r4, lr}
    ldr r1, lbl_08066bf8 @ =0x08760050
    ldr r0, lbl_08066bfc @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08066bf8: .4byte 0x08760050
lbl_08066bfc: .4byte 0x08754bc4

    thumb_func_start statue_opening_opening
statue_opening_opening: @ 0x08066c00
    push {r4, r5, r6, lr}
    ldr r1, lbl_08066c1c @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #4]
    adds r4, r1, #0
    cmp r0, #6
    bls lbl_08066c10
    b lbl_08066d2a
lbl_08066c10:
    lsls r0, r0, #2
    ldr r1, lbl_08066c20 @ =lbl_08066c24
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08066c1c: .4byte 0x08754bc4
lbl_08066c20: .4byte lbl_08066c24
lbl_08066c24: @ jump table
    .4byte lbl_08066c40 @ case 0
    .4byte lbl_08066c58 @ case 1
    .4byte lbl_08066c62 @ case 2
    .4byte lbl_08066c94 @ case 3
    .4byte lbl_08066cb0 @ case 4
    .4byte lbl_08066d00 @ case 5
    .4byte lbl_08066d14 @ case 6
lbl_08066c40:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x14
    bls lbl_08066d2a
    ldrh r0, [r1, #0x1e]
    movs r1, #0
    movs r2, #8
    movs r3, #1
    bl sub_08061d68
    ldr r1, [r4]
    b lbl_08066d08
lbl_08066c58:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x1e
    bls lbl_08066d2a
    b lbl_08066d08
lbl_08066c62:
    ldr r0, lbl_08066c8c @ =0x083ed498
    ldrh r0, [r0, #4]
    bl sub_080615c8
    adds r1, r0, #0
    ldrh r0, [r1]
    movs r2, #0x80
    lsls r2, r2, #4
    cmp r0, r2
    bls lbl_08066c82
    subs r0, #2
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r2
    bhi lbl_08066d2a
lbl_08066c82:
    strh r2, [r1]
    ldr r0, lbl_08066c90 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08066d08
    .align 2, 0
lbl_08066c8c: .4byte 0x083ed498
lbl_08066c90: .4byte 0x08754bc4
lbl_08066c94:
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08066d2a
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_08066d2a
lbl_08066cb0:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0x1e
    bls lbl_08066d2a
    ldr r0, lbl_08066ccc @ =0x03000054
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08066cd0
    adds r0, r1, #0
    adds r0, #0xf0
    movs r1, #2
    bl update_cutscene_oam_data_id
    b lbl_08066ce0
    .align 2, 0
lbl_08066ccc: .4byte 0x03000054
lbl_08066cd0:
    cmp r0, #3
    bne lbl_08066ce0
    movs r2, #0x88
    lsls r2, r2, #1
    adds r0, r1, r2
    movs r1, #6
    bl update_cutscene_oam_data_id
lbl_08066ce0:
    ldr r0, lbl_08066cf8 @ =0x00000231
    bl SoundPlay
    ldr r3, lbl_08066cfc @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1, #4]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #4]
    ldr r0, [r3]
    b lbl_08066d28
    .align 2, 0
lbl_08066cf8: .4byte 0x00000231
lbl_08066cfc: .4byte 0x08754bc4
lbl_08066d00:
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #0xb4
    bls lbl_08066d2a
lbl_08066d08:
    movs r0, #0
    strh r0, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08066d2a
lbl_08066d14:
    bl sub_08061f0c
    ldr r3, lbl_08066d5c @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
lbl_08066d28:
    strh r2, [r0, #2]
lbl_08066d2a:
    ldr r4, lbl_08066d60 @ =0x083ed498
    ldrh r0, [r4, #0xc]
    bl sub_080615c8
    adds r5, r0, #0
    ldrh r6, [r4, #4]
    adds r0, r6, #0
    bl sub_080615c8
    ldrh r0, [r0]
    strh r0, [r5]
    ldrh r0, [r4, #0x14]
    bl sub_080615c8
    adds r4, r0, #0
    adds r0, r6, #0
    bl sub_080615c8
    ldrh r0, [r0]
    lsrs r0, r0, #1
    strh r0, [r4]
    movs r0, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08066d5c: .4byte 0x08754bc4
lbl_08066d60: .4byte 0x083ed498

    thumb_func_start statue_opening_init
statue_opening_init: @ 0x08066d64
    push {r4, r5, r6, lr}
    mov r6, sl
    mov r5, sb
    mov r4, r8
    push {r4, r5, r6}
    sub sp, #4
    bl sub_08061f0c
    ldr r1, lbl_08066f28 @ =0x08316854
    ldr r2, lbl_08066f2c @ =0x05000300
    movs r5, #0x80
    lsls r5, r5, #1
    movs r0, #0x10
    mov r8, r0
    str r0, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_08066f30 @ =0x083ed4fc
    movs r4, #0xa0
    lsls r4, r4, #0x13
    mov r2, r8
    str r2, [sp]
    movs r0, #3
    adds r2, r4, #0
    adds r3, r5, #0
    bl DMATransfer
    movs r0, #0
    strh r0, [r4]
    ldr r0, lbl_08066f34 @ =0x083ed5fc
    ldr r5, lbl_08066f38 @ =0x083ed498
    ldrb r1, [r5]
    lsls r1, r1, #0xe
    ldr r2, lbl_08066f3c @ =0x06001800
    adds r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066f40 @ =0x085fe4c8
    ldrb r2, [r0, #2]
    lsls r2, r2, #8
    ldrb r1, [r0, #1]
    orrs r2, r1
    ldr r1, lbl_08066f44 @ =0x0600fde0
    subs r1, r1, r2
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066f48 @ =0x083efad0
    ldrb r1, [r5, #1]
    lsls r1, r1, #0xb
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066f4c @ =0x083effc8
    ldrb r1, [r5, #9]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066f50 @ =0x0861ac50
    ldrb r1, [r5, #0x11]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08066f54 @ =0x08314304
    ldr r1, lbl_08066f58 @ =0x06014000
    bl CallLZ77UncompVRAM
    ldr r2, lbl_08066f5c @ =0x06000800
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x20
    bl BitFill
    ldr r0, [r5]
    ldr r1, [r5, #4]
    bl sub_0806141c
    ldr r0, [r5, #8]
    ldr r1, [r5, #0xc]
    bl sub_0806141c
    ldr r0, [r5, #0x10]
    ldr r1, [r5, #0x14]
    bl sub_0806141c
    bl sub_08061e38
    ldr r6, lbl_08066f60 @ =0x08754bc4
    ldr r1, [r6]
    movs r0, #0xff
    strh r0, [r1, #0x1e]
    ldr r0, lbl_08066f64 @ =0x030013ae
    mov r4, r8
    strh r4, [r0]
    ldrh r0, [r5, #4]
    mov sb, r0
    movs r4, #0x84
    lsls r4, r4, #4
    movs r0, #1
    mov r1, sb
    adds r2, r4, #0
    bl sub_080614d4
    ldrh r1, [r5, #0xc]
    mov r8, r1
    movs r0, #1
    adds r2, r4, #0
    bl sub_080614d4
    movs r4, #0x98
    lsls r4, r4, #4
    movs r0, #2
    mov r1, sb
    adds r2, r4, #0
    bl sub_080614d4
    movs r0, #2
    mov r1, r8
    adds r2, r4, #0
    bl sub_080614d4
    ldrh r4, [r5, #0x14]
    movs r2, #0x84
    lsls r2, r2, #3
    movs r0, #1
    adds r1, r4, #0
    bl sub_080614d4
    movs r2, #0x80
    lsls r2, r2, #3
    movs r0, #2
    adds r1, r4, #0
    bl sub_080614d4
    ldr r1, [r6]
    adds r0, r1, #0
    adds r0, #0xf2
    movs r2, #0x80
    lsls r2, r2, #2
    mov ip, r2
    mov r4, ip
    strh r4, [r0]
    subs r0, #2
    subs r2, #0x40
    mov sl, r2
    mov r4, sl
    strh r4, [r0]
    adds r2, r1, #0
    adds r2, #0xfb
    ldrb r1, [r2]
    movs r5, #4
    rsbs r5, r5, #0
    adds r0, r5, #0
    ands r0, r1
    strb r0, [r2]
    ldr r1, [r6]
    adds r1, #0xfc
    ldrb r2, [r1]
    movs r3, #0x10
    rsbs r3, r3, #0
    adds r0, r3, #0
    ands r0, r2
    movs r2, #1
    mov sb, r2
    mov r4, sb
    orrs r0, r4
    strb r0, [r1]
    ldr r1, [r6]
    adds r1, #0xfb
    ldrb r4, [r1]
    movs r2, #0x3f
    adds r0, r2, #0
    ands r0, r4
    movs r4, #0x40
    mov r8, r4
    mov r4, r8
    orrs r0, r4
    strb r0, [r1]
    ldr r1, [r6]
    movs r4, #0x89
    lsls r4, r4, #1
    adds r0, r1, r4
    mov r4, ip
    strh r4, [r0]
    movs r4, #0x88
    lsls r4, r4, #1
    adds r0, r1, r4
    mov r4, sl
    strh r4, [r0]
    ldr r4, lbl_08066f68 @ =0x0000011b
    adds r1, r1, r4
    ldrb r0, [r1]
    ands r5, r0
    strb r5, [r1]
    ldr r0, [r6]
    movs r1, #0x8e
    lsls r1, r1, #1
    adds r0, r0, r1
    ldrb r1, [r0]
    ands r3, r1
    mov r1, sb
    orrs r3, r1
    strb r3, [r0]
    ldr r0, [r6]
    adds r0, r0, r4
    ldrb r1, [r0]
    ands r2, r1
    mov r4, r8
    orrs r2, r4
    strb r2, [r0]
    movs r0, #3
    movs r1, #0x35
    bl EventFunction
    cmp r0, #0
    beq lbl_08066f6c
    movs r1, #4
    b lbl_08066f86
    .align 2, 0
lbl_08066f28: .4byte 0x08316854
lbl_08066f2c: .4byte 0x05000300
lbl_08066f30: .4byte 0x083ed4fc
lbl_08066f34: .4byte 0x083ed5fc
lbl_08066f38: .4byte 0x083ed498
lbl_08066f3c: .4byte 0x06001800
lbl_08066f40: .4byte 0x085fe4c8
lbl_08066f44: .4byte 0x0600fde0
lbl_08066f48: .4byte 0x083efad0
lbl_08066f4c: .4byte 0x083effc8
lbl_08066f50: .4byte 0x0861ac50
lbl_08066f54: .4byte 0x08314304
lbl_08066f58: .4byte 0x06014000
lbl_08066f5c: .4byte 0x06000800
lbl_08066f60: .4byte 0x08754bc4
lbl_08066f64: .4byte 0x030013ae
lbl_08066f68: .4byte 0x0000011b
lbl_08066f6c:
    movs r0, #3
    movs r1, #0x1e
    bl EventFunction
    movs r1, #1
    cmp r0, #0
    beq lbl_08066f7c
    movs r1, #3
lbl_08066f7c:
    ldr r0, lbl_08066fa0 @ =0x03000054
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08066f86
    movs r1, #1
lbl_08066f86:
    ldr r0, lbl_08066fa4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xfa
    strb r1, [r0]
    movs r0, #3
    movs r1, #0x36
    bl EventFunction
    cmp r0, #0
    beq lbl_08066fa8
    movs r1, #8
    b lbl_08066fc2
    .align 2, 0
lbl_08066fa0: .4byte 0x03000054
lbl_08066fa4: .4byte 0x08754bc4
lbl_08066fa8:
    movs r0, #3
    movs r1, #0x25
    bl EventFunction
    movs r1, #5
    cmp r0, #0
    beq lbl_08066fb8
    movs r1, #7
lbl_08066fb8:
    ldr r0, lbl_08067008 @ =0x03000054
    ldrb r0, [r0]
    cmp r0, #3
    bne lbl_08066fc2
    movs r1, #5
lbl_08066fc2:
    ldr r4, lbl_0806700c @ =0x08754bc4
    ldr r0, [r4]
    movs r6, #0x8d
    lsls r6, r6, #1
    adds r0, r0, r6
    movs r5, #0
    strb r1, [r0]
    ldr r3, [r4]
    ldr r2, lbl_08067010 @ =0x083ed498
    ldrh r0, [r2, #4]
    movs r6, #0x80
    lsls r6, r6, #5
    adds r1, r6, #0
    orrs r0, r1
    ldrh r1, [r2, #0xc]
    orrs r0, r1
    ldrh r1, [r2, #0x14]
    orrs r0, r1
    movs r1, #0
    strh r0, [r3, #0x1c]
    ldrb r0, [r3]
    adds r0, #1
    strb r0, [r3]
    ldr r0, [r4]
    strh r5, [r0, #2]
    strb r1, [r0, #4]
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08067008: .4byte 0x03000054
lbl_0806700c: .4byte 0x08754bc4
lbl_08067010: .4byte 0x083ed498

    thumb_func_start statue_opening_subroutine
statue_opening_subroutine: @ 0x08067014
    push {r4, lr}
    ldr r1, lbl_08067040 @ =0x08760078
    ldr r0, lbl_08067044 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_08067048
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08067040: .4byte 0x08760078
lbl_08067044: .4byte 0x08754bc4

    thumb_func_start sub_08067048
sub_08067048: @ 0x08067048
    push {lr}
    ldr r1, lbl_08067070 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_08067074 @ =0x08760078
    ldr r0, lbl_08067078 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_0806707c @ =0x083ed4b4
    bl sub_08069dc8
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_08067070: .4byte 0x03001382
lbl_08067074: .4byte 0x08760078
lbl_08067078: .4byte 0x08754bc4
lbl_0806707c: .4byte 0x083ed4b4

    thumb_func_start enter_tourian_anim
enter_tourian_anim: @ 0x08067080
    push {r4, r5, r6, lr}
    ldr r0, lbl_08067098 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #4]
    cmp r0, #9
    bls lbl_0806708e
    b lbl_080672fe
lbl_0806708e:
    lsls r0, r0, #2
    ldr r1, lbl_0806709c @ =lbl_080670a0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08067098: .4byte 0x08754bc4
lbl_0806709c: .4byte lbl_080670a0
lbl_080670a0: @ jump table
    .4byte lbl_080670c8 @ case 0
    .4byte lbl_080670e0 @ case 1
    .4byte lbl_08067106 @ case 2
    .4byte lbl_0806712c @ case 3
    .4byte lbl_080671b8 @ case 4
    .4byte lbl_080671e0 @ case 5
    .4byte lbl_08067220 @ case 6
    .4byte lbl_0806723c @ case 7
    .4byte lbl_080672cc @ case 8
    .4byte lbl_080672e8 @ case 9
lbl_080670c8:
    bl sub_08061f44
    cmp r0, #0
    bne lbl_080670d2
    b lbl_080672fe
lbl_080670d2:
    ldr r0, lbl_080670dc @ =0x00000295
    bl SoundPlay
    b lbl_080672d4
    .align 2, 0
lbl_080670dc: .4byte 0x00000295
lbl_080670e0:
    ldr r5, lbl_080670fc @ =0x08754bc4
    ldr r1, [r5]
    ldrb r4, [r1, #0xa]
    cmp r4, #0
    bne lbl_08067100
    ldrh r0, [r1, #0x1e]
    movs r1, #0
    movs r2, #8
    movs r3, #1
    bl sub_08061d68
    ldr r1, [r5]
    strh r4, [r1, #2]
    b lbl_080672dc
    .align 2, 0
lbl_080670fc: .4byte 0x08754bc4
lbl_08067100:
    movs r0, #0
    strh r0, [r1, #2]
    b lbl_080672fe
lbl_08067106:
    ldr r0, lbl_08067128 @ =0x08754bc4
    ldr r2, [r0]
    adds r0, r2, #0
    adds r0, #0xa8
    ldrb r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    bne lbl_0806711a
    b lbl_080672fe
lbl_0806711a:
    movs r0, #0
    strh r0, [r2, #2]
    ldrb r0, [r2, #4]
    adds r0, #1
    strb r0, [r2, #4]
    b lbl_080672fe
    .align 2, 0
lbl_08067128: .4byte 0x08754bc4
lbl_0806712c:
    ldr r4, lbl_0806714c @ =0x08754bc4
    ldr r1, [r4]
    ldrh r0, [r1, #2]
    cmp r0, #8
    bne lbl_08067158
    ldr r0, lbl_08067150 @ =0x0000011d
    adds r2, r1, r0
    ldrb r0, [r2]
    movs r1, #2
    orrs r1, r0
    strb r1, [r2]
    ldr r0, lbl_08067154 @ =0x00000296
    bl SoundPlay
    b lbl_080672fe
    .align 2, 0
lbl_0806714c: .4byte 0x08754bc4
lbl_08067150: .4byte 0x0000011d
lbl_08067154: .4byte 0x00000296
lbl_08067158:
    cmp r0, #0x5a
    bne lbl_08067170
    ldr r0, lbl_0806716c @ =0x0000015d
    adds r2, r1, r0
    ldrb r1, [r2]
    movs r0, #2
    orrs r0, r1
    strb r0, [r2]
    b lbl_080672fe
    .align 2, 0
lbl_0806716c: .4byte 0x0000015d
lbl_08067170:
    cmp r0, #0x64
    bne lbl_08067198
    ldr r0, lbl_08067190 @ =0x0000019d
    adds r1, r1, r0
    ldrb r0, [r1]
    movs r2, #2
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r4]
    ldr r1, lbl_08067194 @ =0x000001fd
    adds r0, r0, r1
    ldrb r1, [r0]
    orrs r2, r1
    strb r2, [r0]
    b lbl_080672fe
    .align 2, 0
lbl_08067190: .4byte 0x0000019d
lbl_08067194: .4byte 0x000001fd
lbl_08067198:
    cmp r0, #0x77
    bhi lbl_0806719e
    b lbl_080672fe
lbl_0806719e:
    ldr r0, lbl_080671b4 @ =0x000001dd
    adds r3, r1, r0
    ldrb r1, [r3]
    movs r0, #2
    movs r2, #0
    orrs r0, r1
    strb r0, [r3]
    ldr r1, [r4]
    strh r2, [r1, #2]
    b lbl_080672dc
    .align 2, 0
lbl_080671b4: .4byte 0x000001dd
lbl_080671b8:
    ldr r3, lbl_080671dc @ =0x08754bc4
    ldr r2, [r3]
    ldrh r1, [r2, #2]
    movs r0, #0x96
    lsls r0, r0, #1
    cmp r1, r0
    bhi lbl_080671c8
    b lbl_080672fe
lbl_080671c8:
    subs r0, #0x12
    adds r1, r2, r0
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r1, [r3]
    strh r2, [r1, #2]
    b lbl_080672dc
    .align 2, 0
lbl_080671dc: .4byte 0x08754bc4
lbl_080671e0:
    ldr r4, lbl_08067214 @ =0x08754bc4
    ldr r2, [r4]
    ldr r1, lbl_08067218 @ =0x0000011b
    adds r0, r2, r1
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    bne lbl_080671fe
    ldrh r1, [r2, #2]
    movs r0, #0x96
    lsls r0, r0, #1
    cmp r1, r0
    bhi lbl_080671fe
    b lbl_080672fe
lbl_080671fe:
    ldr r0, lbl_0806721c @ =0x0000011d
    adds r3, r2, r0
    ldrb r1, [r3]
    movs r0, #0xfb
    ands r0, r1
    movs r2, #0
    strb r0, [r3]
    ldr r1, [r4]
    strh r2, [r1, #2]
    b lbl_080672dc
    .align 2, 0
lbl_08067214: .4byte 0x08754bc4
lbl_08067218: .4byte 0x0000011b
lbl_0806721c: .4byte 0x0000011d
lbl_08067220:
    ldr r4, lbl_08067234 @ =0x08754bc4
    ldr r0, [r4]
    ldrh r0, [r0, #2]
    cmp r0, #0x3c
    bls lbl_080672fe
    ldr r0, lbl_08067238 @ =0x00000297
    bl SoundPlay
    ldr r1, [r4]
    b lbl_080672d8
    .align 2, 0
lbl_08067234: .4byte 0x08754bc4
lbl_08067238: .4byte 0x00000297
lbl_0806723c:
    ldr r4, lbl_080672a4 @ =0x03000c06
    ldrh r0, [r4]
    adds r0, #8
    strh r0, [r4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r1, #0x80
    lsls r1, r1, #2
    cmp r0, r1
    bls lbl_08067266
    strh r1, [r4]
    movs r0, #8
    bl sub_08061fa0
    ldr r0, lbl_080672a8 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #2]
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
lbl_08067266:
    ldr r3, lbl_080672a8 @ =0x08754bc4
    ldr r1, [r3]
    ldr r2, lbl_080672ac @ =0x00000119
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #6
    beq lbl_08067290
    movs r0, #0x8d
    lsls r0, r0, #1
    adds r1, r1, r0
    movs r0, #5
    strb r0, [r1]
    ldrh r1, [r4]
    movs r0, #0xd0
    lsls r0, r0, #1
    cmp r1, r0
    bls lbl_08067290
    ldr r0, [r3]
    adds r0, r0, r2
    movs r1, #6
    strb r1, [r0]
lbl_08067290:
    ldr r0, lbl_080672a4 @ =0x03000c06
    ldrh r1, [r0]
    lsls r2, r1, #0x10
    movs r0, #0xd8
    lsls r0, r0, #1
    cmp r1, r0
    bls lbl_080672b0
    movs r4, #6
    rsbs r4, r4, #0
    b lbl_080672b6
    .align 2, 0
lbl_080672a4: .4byte 0x03000c06
lbl_080672a8: .4byte 0x08754bc4
lbl_080672ac: .4byte 0x00000119
lbl_080672b0:
    lsrs r1, r2, #0x16
    movs r0, #0x10
    subs r4, r0, r1
lbl_080672b6:
    ldr r0, lbl_080672c8 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0x88
    lsls r0, r0, #1
    adds r1, r1, r0
    ldrh r0, [r1]
    adds r0, r0, r4
    strh r0, [r1]
    b lbl_080672fe
    .align 2, 0
lbl_080672c8: .4byte 0x08754bc4
lbl_080672cc:
    bl sub_08061f44
    cmp r0, #0
    beq lbl_080672fe
lbl_080672d4:
    ldr r0, lbl_080672e4 @ =0x08754bc4
    ldr r1, [r0]
lbl_080672d8:
    movs r0, #0
    strh r0, [r1, #2]
lbl_080672dc:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_080672fe
    .align 2, 0
lbl_080672e4: .4byte 0x08754bc4
lbl_080672e8:
    bl sub_08061f0c
    ldr r3, lbl_0806733c @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_080672fe:
    bl sub_08067390
    movs r4, #1
    ldr r6, lbl_0806733c @ =0x08754bc4
    movs r5, #0x88
    lsls r5, r5, #1
lbl_0806730a:
    ldr r0, [r6]
    adds r0, r0, r5
    subs r1, r4, #1
    lsrs r2, r1, #0x1f
    adds r1, r1, r2
    asrs r1, r1, #1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_080673e0
    adds r5, #0x40
    adds r4, #2
    cmp r4, #7
    ble lbl_0806730a
    movs r3, #0
    movs r4, #1
    ldr r2, lbl_0806733c @ =0x08754bc4
    ldr r0, [r2]
    ldr r1, lbl_08067340 @ =0x0000011d
    adds r0, r0, r1
    ldrb r1, [r0]
    adds r0, r4, #0
    ands r0, r1
    adds r5, r2, #0
    b lbl_08067358
    .align 2, 0
lbl_0806733c: .4byte 0x08754bc4
lbl_08067340: .4byte 0x0000011d
lbl_08067344:
    adds r4, #2
    cmp r4, #7
    bgt lbl_0806735e
    ldr r0, [r5]
    lsls r1, r4, #5
    adds r0, r0, r1
    adds r0, #0xfd
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
lbl_08067358:
    cmp r0, #0
    beq lbl_08067344
    movs r3, #1
lbl_0806735e:
    ldr r0, [r5]
    adds r0, #0xc
    adds r4, r3, #0
    adds r1, r4, #0
    bl sub_08067758
    ldr r0, [r5]
    ldr r1, lbl_0806738c @ =0x000001fd
    adds r0, r0, r1
    ldrb r1, [r0]
    orrs r4, r1
    strb r4, [r0]
    ldr r0, [r5]
    movs r1, #0xf8
    lsls r1, r1, #1
    adds r0, r0, r1
    bl sub_080677e4
    movs r0, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806738c: .4byte 0x000001fd

    thumb_func_start sub_08067390
sub_08067390: @ 0x08067390
    push {r4, lr}
    ldr r4, lbl_080673d8 @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0, #0xa]
    cmp r0, #0
    beq lbl_080673d2
    ldr r0, lbl_080673dc @ =0x083f0390
    ldrh r0, [r0, #0xc]
    bl sub_08061578
    adds r1, r0, #0
    ldrh r0, [r1]
    movs r2, #0xac
    lsls r2, r2, #3
    cmp r0, r2
    bls lbl_080673bc
    subs r0, #2
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r2
    bhi lbl_080673c2
lbl_080673bc:
    ldr r1, [r4]
    movs r0, #0
    strb r0, [r1, #0xa]
lbl_080673c2:
    ldr r0, lbl_080673dc @ =0x083f0390
    ldrh r0, [r0, #4]
    bl sub_08061578
    adds r1, r0, #0
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_080673d2:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080673d8: .4byte 0x08754bc4
lbl_080673dc: .4byte 0x083f0390

    thumb_func_start sub_080673e0
sub_080673e0: @ 0x080673e0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    adds r4, r0, #0
    lsls r1, r1, #0x18
    lsrs r7, r1, #0x18
    subs r0, #0x20
    str r0, [sp, #4]
    ldrb r1, [r4, #0xd]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0806741c
    adds r0, r4, #0
    movs r1, #3
    bl update_cutscene_oam_data_id
    ldrb r1, [r4, #0xd]
    movs r0, #0xfe
    ands r0, r1
    movs r2, #0
    movs r1, #2
    eors r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r4, #0xd]
    strh r2, [r4, #0x14]
lbl_0806741c:
    ldrb r1, [r4, #0xd]
    movs r5, #1
    adds r0, r5, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_0806742a
    b lbl_0806751c
lbl_0806742a:
    ldrh r1, [r4, #0x14]
    ldr r0, lbl_08067444 @ =0x0000ffff
    cmp r1, r0
    beq lbl_08067436
    adds r0, r1, #1
    strh r0, [r4, #0x14]
lbl_08067436:
    ldrh r0, [r4, #0x16]
    adds r2, r0, #0
    cmp r2, #0
    beq lbl_08067448
    subs r0, #1
    b lbl_0806749c
    .align 2, 0
lbl_08067444: .4byte 0x0000ffff
lbl_08067448:
    ldrh r1, [r4, #0xe]
    movs r3, #0xe
    ldrsh r0, [r4, r3]
    cmp r0, #0
    beq lbl_08067464
    ldrh r0, [r4, #2]
    subs r0, r0, r1
    strh r0, [r4, #2]
    strh r2, [r4, #0xe]
    ldr r2, lbl_08067460 @ =0x0808c99c
    ldrh r6, [r4, #0x14]
    b lbl_0806748c
    .align 2, 0
lbl_08067460: .4byte 0x0808c99c
lbl_08067464:
    ldr r2, lbl_080674ac @ =0x0808c99c
    ldrh r3, [r4, #0x14]
    adds r0, r3, r7
    movs r1, #0xff
    ands r0, r1
    adds r0, r0, r2
    ldrb r1, [r0]
    adds r0, r5, #0
    ands r0, r1
    movs r1, #4
    adds r6, r3, #0
    cmp r0, #0
    beq lbl_08067484
    movs r5, #4
    rsbs r5, r5, #0
    adds r1, r5, #0
lbl_08067484:
    strh r1, [r4, #0xe]
    ldrh r3, [r4, #2]
    adds r0, r1, r3
    strh r0, [r4, #2]
lbl_0806748c:
    subs r0, r6, r7
    movs r1, #0xff
    ands r0, r1
    adds r0, r0, r2
    ldrb r1, [r0]
    movs r0, #0x1f
    ands r0, r1
    adds r0, #8
lbl_0806749c:
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    adds r2, r0, #0
    cmp r2, #0
    beq lbl_080674b0
    subs r0, #1
    strh r0, [r4, #0x18]
    b lbl_080676f4
    .align 2, 0
lbl_080674ac: .4byte 0x0808c99c
lbl_080674b0:
    ldrh r1, [r4, #0x10]
    movs r5, #0x10
    ldrsh r0, [r4, r5]
    cmp r0, #0
    beq lbl_080674cc
    ldrh r0, [r4]
    subs r0, r0, r1
    strh r0, [r4]
    strh r2, [r4, #0x10]
    ldr r2, lbl_080674c8 @ =0x0808c99c
    ldrh r6, [r4, #0x14]
    b lbl_080674f4
    .align 2, 0
lbl_080674c8: .4byte 0x0808c99c
lbl_080674cc:
    ldr r2, lbl_08067518 @ =0x0808c99c
    ldrh r3, [r4, #0x14]
    adds r0, r3, r7
    movs r1, #0xff
    ands r0, r1
    adds r0, r0, r2
    ldrb r1, [r0]
    movs r0, #2
    ands r0, r1
    movs r1, #4
    adds r6, r3, #0
    cmp r0, #0
    beq lbl_080674ec
    movs r0, #4
    rsbs r0, r0, #0
    adds r1, r0, #0
lbl_080674ec:
    strh r1, [r4, #0x10]
    ldrh r3, [r4]
    adds r0, r1, r3
    strh r0, [r4]
lbl_080674f4:
    subs r0, r6, r7
    movs r1, #0xff
    ands r0, r1
    adds r0, r0, r2
    ldrb r0, [r0]
    movs r1, #0x3f
    ands r1, r0
    adds r0, r1, #0
    adds r0, #8
    strh r0, [r4, #0x18]
    ldrh r5, [r4, #0x16]
    cmp r0, r5
    beq lbl_08067510
    b lbl_080676f4
lbl_08067510:
    adds r0, #0x10
    strh r0, [r4, #0x18]
    b lbl_080676f4
    .align 2, 0
lbl_08067518: .4byte 0x0808c99c
lbl_0806751c:
    movs r0, #4
    ands r0, r1
    cmp r0, #0
    bne lbl_08067526
    b lbl_080676f4
lbl_08067526:
    ldrh r1, [r4, #0x14]
    ldr r0, lbl_08067550 @ =0x0000ffff
    cmp r1, r0
    beq lbl_08067532
    adds r0, r1, #1
    strh r0, [r4, #0x14]
lbl_08067532:
    movs r6, #0x3c
    str r6, [sp]
    cmp r7, #0
    bne lbl_0806753e
    movs r0, #0xb4
    str r0, [sp]
lbl_0806753e:
    ldrh r6, [r4, #0x14]
    ldr r1, [sp]
    cmp r6, r1
    bge lbl_08067554
    movs r2, #1
    mov sl, r2
    movs r3, #2
    str r3, [sp]
    b lbl_0806755c
    .align 2, 0
lbl_08067550: .4byte 0x0000ffff
lbl_08067554:
    movs r5, #2
    mov sl, r5
    movs r0, #1
    str r0, [sp]
lbl_0806755c:
    ldrh r0, [r4, #0x16]
    adds r0, #1
    strh r0, [r4, #0x16]
    ldrh r2, [r4, #0xe]
    mov r1, sp
    strh r2, [r1, #8]
    movs r3, #0xe
    ldrsh r0, [r4, r3]
    cmp r0, #0
    bne lbl_080675d4
    ldr r2, lbl_080675c4 @ =0x087600b4
    lsls r3, r7, #2
    adds r0, r3, r2
    ldrh r1, [r0]
    ldrh r0, [r4, #2]
    subs r1, r1, r0
    mov ip, r1
    mov r5, ip
    strh r5, [r4, #0xe]
    ldr r0, lbl_080675c8 @ =0x0808c99c
    mov sl, r0
    adds r0, r6, #0
    muls r0, r7, r0
    movs r1, #0xff
    mov r8, r1
    ands r0, r1
    add r0, sl
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    movs r5, #1
    rsbs r5, r5, #0
    mov sb, r3
    cmp r0, #0
    beq lbl_080675a4
    movs r5, #1
lbl_080675a4:
    adds r0, r6, r7
    mov r2, r8
    ands r0, r2
    add r0, sl
    ldrb r1, [r0]
    movs r0, #3
    ands r0, r1
    muls r5, r0, r5
    mov r3, ip
    lsls r0, r3, #0x10
    cmp r0, #0
    ble lbl_080675cc
    lsls r0, r5, #2
    adds r0, #0x20
    strh r0, [r4, #0xe]
    b lbl_0806765a
    .align 2, 0
lbl_080675c4: .4byte 0x087600b4
lbl_080675c8: .4byte 0x0808c99c
lbl_080675cc:
    lsls r0, r5, #2
    subs r0, #0x20
    strh r0, [r4, #0xe]
    b lbl_0806765a
lbl_080675d4:
    cmp r0, #0
    ble lbl_08067618
    ldr r1, lbl_08067614 @ =0x087600b4
    lsls r2, r7, #2
    adds r0, r2, r1
    movs r3, #0
    ldrsh r5, [r0, r3]
    mov ip, r5
    movs r5, #2
    ldrsh r0, [r4, r5]
    ldrh r3, [r4, #2]
    mov r8, r3
    mov sb, r2
    cmp ip, r0
    bgt lbl_080675fa
    mov r5, sp
    ldrh r0, [r5, #8]
    subs r0, #2
    strh r0, [r4, #0xe]
lbl_080675fa:
    movs r1, #0xe
    ldrsh r0, [r4, r1]
    movs r1, #0xc
    bl __divsi3
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    adds r5, r0, #1
    cmp r5, sl
    ble lbl_08067654
    mov r5, sl
    b lbl_08067654
    .align 2, 0
lbl_08067614: .4byte 0x087600b4
lbl_08067618:
    ldr r1, lbl_080676b4 @ =0x087600b4
    lsls r2, r7, #2
    adds r0, r2, r1
    movs r5, #0
    ldrsh r3, [r0, r5]
    mov ip, r3
    movs r3, #2
    ldrsh r0, [r4, r3]
    ldrh r5, [r4, #2]
    mov r8, r5
    mov sb, r2
    cmp ip, r0
    blt lbl_0806763a
    mov r1, sp
    ldrh r0, [r1, #8]
    adds r0, #2
    strh r0, [r4, #0xe]
lbl_0806763a:
    movs r2, #0xe
    ldrsh r0, [r4, r2]
    movs r1, #0xc
    bl __divsi3
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    subs r5, r0, #1
    mov r3, sl
    rsbs r0, r3, #0
    cmp r5, r0
    bge lbl_08067654
    adds r5, r0, #0
lbl_08067654:
    mov r1, r8
    adds r0, r1, r5
    strh r0, [r4, #2]
lbl_0806765a:
    ldrh r0, [r4, #0x18]
    adds r1, r0, #1
    strh r1, [r4, #0x18]
    ldrh r3, [r4, #0x10]
    movs r5, #0x10
    ldrsh r2, [r4, r5]
    cmp r2, #0
    bne lbl_080676c8
    ldr r3, lbl_080676b8 @ =0x0808c99c
    ldrb r0, [r4, #8]
    ldrb r1, [r4, #9]
    adds r0, r0, r1
    movs r2, #0xff
    ands r0, r2
    adds r0, r0, r3
    ldrb r1, [r0]
    movs r0, #2
    ands r0, r1
    movs r5, #1
    rsbs r5, r5, #0
    cmp r0, #0
    beq lbl_08067688
    movs r5, #1
lbl_08067688:
    adds r0, r6, r7
    ands r0, r2
    adds r0, r0, r3
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    muls r5, r0, r5
    ldr r0, lbl_080676b4 @ =0x087600b4
    adds r0, #2
    add r0, sb
    ldrh r2, [r0]
    movs r6, #0
    ldrsh r1, [r0, r6]
    ldrh r3, [r4]
    movs r6, #0
    ldrsh r0, [r4, r6]
    cmp r1, r0
    bge lbl_080676bc
    adds r0, r5, #4
    lsls r0, r0, #2
    subs r0, r2, r0
    b lbl_080676c2
    .align 2, 0
lbl_080676b4: .4byte 0x087600b4
lbl_080676b8: .4byte 0x0808c99c
lbl_080676bc:
    adds r0, r5, #4
    lsls r0, r0, #2
    adds r0, r2, r0
lbl_080676c2:
    subs r0, r0, r3
    strh r0, [r4, #0x10]
    b lbl_080676f4
lbl_080676c8:
    movs r0, #1
    ands r1, r0
    cmp r1, #0
    beq lbl_080676f4
    cmp r2, #0
    ble lbl_080676d8
    subs r0, r3, #1
    b lbl_080676da
lbl_080676d8:
    adds r0, r3, #1
lbl_080676da:
    strh r0, [r4, #0x10]
    movs r0, #0
    ldrsh r1, [r4, r0]
    movs r2, #0x10
    ldrsh r0, [r4, r2]
    cmp r0, #0
    bgt lbl_080676ee
    ldr r3, [sp]
    subs r0, r1, r3
    b lbl_080676f2
lbl_080676ee:
    ldr r5, [sp]
    adds r0, r1, r5
lbl_080676f2:
    strh r0, [r4]
lbl_080676f4:
    ldrh r0, [r4]
    ldr r6, [sp, #4]
    strh r0, [r6]
    ldrh r0, [r4, #2]
    strh r0, [r6, #2]
    ldr r0, lbl_0806774c @ =0x083f0390
    ldrh r0, [r0, #4]
    bl sub_08061578
    ldrh r1, [r0]
    movs r2, #2
    ldrsh r0, [r4, r2]
    subs r5, r1, r0
    ldr r3, lbl_08067750 @ =0x000007df
    adds r1, r5, r3
    ldr r0, lbl_08067754 @ =0x00000bde
    movs r5, #1
    cmp r1, r0
    bhi lbl_0806771c
    movs r5, #0
lbl_0806771c:
    movs r0, #1
    ands r5, r0
    lsls r3, r5, #5
    ldrb r2, [r4, #0xb]
    movs r1, #0x21
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r2
    orrs r0, r3
    strb r0, [r4, #0xb]
    ldr r5, [sp, #4]
    ldrb r0, [r5, #0xb]
    ands r1, r0
    orrs r1, r3
    strb r1, [r5, #0xb]
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806774c: .4byte 0x083f0390
lbl_08067750: .4byte 0x000007df
lbl_08067754: .4byte 0x00000bde

    thumb_func_start sub_08067758
sub_08067758: @ 0x08067758
    push {lr}
    sub sp, #4
    adds r2, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #1
    bne lbl_080677bc
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_0806777a
    movs r0, #0
    strb r1, [r2]
    strb r0, [r2, #1]
    strb r0, [r2, #2]
    movs r0, #0x20
    strb r0, [r2, #3]
    b lbl_080677d6
lbl_0806777a:
    ldrb r0, [r2, #1]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08067788
    subs r0, #1
    strb r0, [r2, #1]
    b lbl_080677d6
lbl_08067788:
    ldrb r0, [r2, #3]
    strb r0, [r2, #1]
    ldrb r0, [r2, #2]
    adds r0, #1
    strb r0, [r2, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #4
    bls lbl_0806779c
    strb r1, [r2, #2]
lbl_0806779c:
    ldrb r1, [r2, #2]
    lsls r1, r1, #5
    ldr r0, lbl_080677b4 @ =0x082ed988
    adds r1, r1, r0
    ldr r2, lbl_080677b8 @ =0x05000380
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    b lbl_080677d6
    .align 2, 0
lbl_080677b4: .4byte 0x082ed988
lbl_080677b8: .4byte 0x05000380
lbl_080677bc:
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_080677d6
    movs r0, #0
    strb r0, [r2]
    ldr r1, lbl_080677dc @ =0x082edb08
    ldr r2, lbl_080677e0 @ =0x05000380
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
lbl_080677d6:
    add sp, #4
    pop {r0}
    bx r0
    .align 2, 0
lbl_080677dc: .4byte 0x082edb08
lbl_080677e0: .4byte 0x05000380

    thumb_func_start sub_080677e4
sub_080677e4: @ 0x080677e4
    push {r4, r5, lr}
    adds r4, r0, #0
    ldrb r1, [r4, #0xd]
    movs r5, #1
    adds r0, r5, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_080678a0
    ldrh r0, [r4, #0x16]
    adds r2, r0, #0
    cmp r2, #0
    beq lbl_08067800
    subs r0, #1
    b lbl_0806784c
lbl_08067800:
    ldrh r1, [r4, #0xe]
    movs r3, #0xe
    ldrsh r0, [r4, r3]
    cmp r0, #0
    beq lbl_08067820
    ldrh r0, [r4, #2]
    subs r0, r0, r1
    strh r0, [r4, #2]
    strh r2, [r4, #0xe]
    ldr r2, lbl_08067818 @ =0x0808c99c
    ldr r3, lbl_0806781c @ =0x03000c77
    b lbl_08067842
    .align 2, 0
lbl_08067818: .4byte 0x0808c99c
lbl_0806781c: .4byte 0x03000c77
lbl_08067820:
    ldr r2, lbl_0806785c @ =0x0808c99c
    ldr r3, lbl_08067860 @ =0x03000c77
    ldrb r0, [r3]
    adds r0, r0, r2
    ldrb r1, [r0]
    adds r0, r5, #0
    ands r0, r1
    movs r1, #4
    cmp r0, #0
    beq lbl_0806783a
    movs r5, #4
    rsbs r5, r5, #0
    adds r1, r5, #0
lbl_0806783a:
    strh r1, [r4, #0xe]
    ldrh r5, [r4, #2]
    adds r0, r1, r5
    strh r0, [r4, #2]
lbl_08067842:
    ldrb r0, [r3]
    subs r0, #1
    adds r0, r0, r2
    ldrb r0, [r0]
    adds r0, #8
lbl_0806784c:
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    adds r2, r0, #0
    cmp r2, #0
    beq lbl_08067864
    subs r0, #1
    b lbl_0806789e
    .align 2, 0
lbl_0806785c: .4byte 0x0808c99c
lbl_08067860: .4byte 0x03000c77
lbl_08067864:
    ldrh r1, [r4, #0x10]
    movs r3, #0x10
    ldrsh r0, [r4, r3]
    cmp r0, #0
    beq lbl_08067878
    ldrh r0, [r4]
    subs r0, r0, r1
    strh r0, [r4]
    strh r2, [r4, #0x10]
    b lbl_08067882
lbl_08067878:
    ldr r1, lbl_08067928 @ =0x0000fffc
    strh r1, [r4, #0x10]
    ldrh r0, [r4]
    adds r0, r0, r1
    strh r0, [r4]
lbl_08067882:
    ldr r1, lbl_0806792c @ =0x0808c99c
    ldr r0, lbl_08067930 @ =0x03000c77
    ldrb r0, [r0]
    adds r0, r0, r1
    ldrb r0, [r0]
    movs r1, #0x7f
    ands r1, r0
    adds r0, r1, #0
    adds r0, #8
    strh r0, [r4, #0x18]
    ldrh r5, [r4, #0x16]
    cmp r0, r5
    bne lbl_080678a0
    adds r0, #0x10
lbl_0806789e:
    strh r0, [r4, #0x18]
lbl_080678a0:
    ldrb r1, [r4, #0xd]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_080678ea
    ldrh r0, [r4, #0x1a]
    adds r0, #1
    strh r0, [r4, #0x1a]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #4
    bls lbl_080678ea
    movs r0, #0
    strh r0, [r4, #0x1a]
    ldrh r3, [r4, #0x12]
    adds r3, #1
    strh r3, [r4, #0x12]
    ldr r0, lbl_08067934 @ =0x08754bb4
    ldr r1, [r0]
    movs r2, #0xa0
    lsls r2, r2, #2
    adds r0, r1, r2
    ldr r5, lbl_08067938 @ =0x00003aa0
    adds r1, r1, r5
    ldr r2, lbl_0806793c @ =0x05000280
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    bl sub_0805b764
    movs r1, #0x12
    ldrsh r0, [r4, r1]
    cmp r0, #0x1e
    ble lbl_080678ea
    ldrb r0, [r4, #0xd]
    movs r1, #2
    eors r0, r1
    strb r0, [r4, #0xd]
lbl_080678ea:
    ldrb r1, [r4, #0xd]
    movs r0, #0xfe
    ands r0, r1
    strb r0, [r4, #0xd]
    ldr r0, lbl_08067940 @ =0x083f0390
    ldrh r0, [r0, #4]
    bl sub_08061578
    ldrh r1, [r0]
    movs r2, #2
    ldrsh r0, [r4, r2]
    subs r2, r1, r0
    ldr r3, lbl_08067944 @ =0x000005df
    adds r1, r2, r3
    ldr r0, lbl_08067948 @ =0x000006de
    movs r2, #1
    cmp r1, r0
    bhi lbl_08067910
    movs r2, #0
lbl_08067910:
    movs r0, #1
    ands r2, r0
    lsls r2, r2, #5
    ldrb r1, [r4, #0xb]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r0, r1
    orrs r0, r2
    strb r0, [r4, #0xb]
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08067928: .4byte 0x0000fffc
lbl_0806792c: .4byte 0x0808c99c
lbl_08067930: .4byte 0x03000c77
lbl_08067934: .4byte 0x08754bb4
lbl_08067938: .4byte 0x00003aa0
lbl_0806793c: .4byte 0x05000280
lbl_08067940: .4byte 0x083f0390
lbl_08067944: .4byte 0x000005df
lbl_08067948: .4byte 0x000006de

    thumb_func_start enter_tourian_init
enter_tourian_init: @ 0x0806794c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    bl sub_08061f0c
    ldr r1, lbl_08067c94 @ =0x083f0410
    movs r5, #0xa0
    lsls r5, r5, #0x13
    movs r3, #0xa0
    lsls r3, r3, #1
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r2, r5, #0
    bl DMATransfer
    movs r0, #0
    strh r0, [r5]
    ldr r1, lbl_08067c98 @ =0x083f0550
    ldr r2, lbl_08067c9c @ =0x05000200
    str r4, [sp]
    movs r0, #3
    movs r3, #0xc0
    bl DMATransfer
    ldr r1, lbl_08067ca0 @ =0x082ed8e8
    ldr r2, lbl_08067ca4 @ =0x05000300
    str r4, [sp]
    movs r0, #3
    movs r3, #0xa0
    bl DMATransfer
    ldr r0, lbl_08067ca8 @ =0x083f5d74
    ldr r1, lbl_08067cac @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08067cb0 @ =0x083f5e50
    ldr r1, lbl_08067cb4 @ =0x06010400
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08067cb8 @ =0x083f5f84
    ldr r1, lbl_08067cbc @ =0x06010800
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08067cc0 @ =0x082ecc84
    ldr r1, lbl_08067cc4 @ =0x06014000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08067cc8 @ =0x083f0610
    ldr r6, lbl_08067ccc @ =0x083f0390
    ldrb r1, [r6]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08067cd0 @ =0x083f36a8
    ldrb r1, [r6, #8]
    lsls r1, r1, #0xe
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08067cd4 @ =0x083f6004
    ldrb r1, [r6, #1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08067cd8 @ =0x083f6608
    ldrb r1, [r6, #9]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, [r6]
    ldr r1, [r6, #4]
    bl sub_0806141c
    ldr r0, [r6, #8]
    ldr r1, [r6, #0xc]
    bl sub_0806141c
    bl sub_08061e38
    ldrh r0, [r6, #4]
    mov r8, r0
    movs r4, #0x80
    lsls r4, r4, #4
    movs r0, #2
    mov r1, r8
    adds r2, r4, #0
    bl sub_080614d4
    ldrh r5, [r6, #0xc]
    movs r0, #2
    adds r1, r5, #0
    adds r2, r4, #0
    bl sub_080614d4
    movs r2, #0x95
    lsls r2, r2, #4
    movs r0, #1
    mov r1, r8
    bl sub_080614d4
    movs r0, #1
    adds r1, r5, #0
    adds r2, r4, #0
    bl sub_080614d4
    ldr r2, lbl_08067cdc @ =0x08754bc4
    ldr r0, [r2]
    movs r3, #0x8d
    lsls r3, r3, #1
    adds r1, r0, r3
    movs r0, #6
    strb r0, [r1]
    ldr r1, [r2]
    ldr r4, lbl_08067ce0 @ =0x0000011b
    adds r1, r1, r4
    ldrb r3, [r1]
    movs r5, #0x3f
    mov r8, r5
    mov r0, r8
    ands r0, r3
    movs r7, #0x40
    orrs r0, r7
    strb r0, [r1]
    ldr r1, [r2]
    movs r0, #0x8e
    lsls r0, r0, #1
    mov ip, r0
    add r1, ip
    ldrb r3, [r1]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r3
    movs r3, #3
    mov sb, r3
    mov r5, sb
    orrs r0, r5
    strb r0, [r1]
    ldr r1, [r2]
    adds r1, r1, r4
    ldrb r6, [r6, #2]
    ands r6, r5
    ldrb r3, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r3
    orrs r0, r6
    strb r0, [r1]
    ldr r0, [r2]
    adds r7, #0xdd
    adds r0, r0, r7
    movs r1, #1
    mov sl, r1
    mov r3, sl
    strb r3, [r0]
    ldr r0, [r2]
    movs r3, #0x88
    lsls r3, r3, #1
    adds r4, #0x35
    adds r1, r0, r4
    adds r0, r0, r3
    ldm r0!, {r4, r5, r7}
    stm r1!, {r4, r5, r7}
    ldm r0!, {r4, r5, r7}
    stm r1!, {r4, r5, r7}
    ldm r0!, {r5, r7}
    stm r1!, {r5, r7}
    ldr r0, [r2]
    movs r4, #0xc8
    lsls r4, r4, #1
    adds r1, r0, r4
    adds r0, r0, r3
    ldm r0!, {r4, r5, r7}
    stm r1!, {r4, r5, r7}
    ldm r0!, {r4, r5, r7}
    stm r1!, {r4, r5, r7}
    ldm r0!, {r5, r7}
    stm r1!, {r5, r7}
    ldr r0, [r2]
    movs r4, #0xe8
    lsls r4, r4, #1
    adds r1, r0, r4
    adds r0, r0, r3
    ldm r0!, {r3, r5, r7}
    stm r1!, {r3, r5, r7}
    ldm r0!, {r4, r5, r7}
    stm r1!, {r4, r5, r7}
    ldm r0!, {r3, r4}
    stm r1!, {r3, r4}
    ldr r1, [r2]
    add r1, ip
    ldrb r0, [r1]
    movs r3, #0x10
    orrs r0, r3
    strb r0, [r1]
    ldr r0, [r2]
    ldr r5, lbl_08067ce4 @ =0x00000159
    adds r0, r0, r5
    movs r1, #2
    strb r1, [r0]
    ldr r0, [r2]
    ldr r7, lbl_08067ce8 @ =0x00000199
    adds r7, r7, r0
    movs r0, #4
    strb r0, [r7]
    ldr r0, [r2]
    ldr r4, lbl_08067cec @ =0x000001d9
    adds r4, r4, r0
    movs r0, #8
    strb r0, [r4]
    ldr r0, [r2]
    adds r0, #0xfa
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xfb
    ldrb r1, [r0]
    mov r5, r8
    ands r5, r1
    movs r7, #0x40
    orrs r5, r7
    strb r5, [r0]
    ldr r0, [r2]
    adds r0, #0xfc
    ldrb r1, [r0]
    movs r5, #0x10
    rsbs r5, r5, #0
    ands r5, r1
    mov r1, sb
    orrs r5, r1
    strb r5, [r0]
    ldr r0, [r2]
    adds r0, #0xfb
    ldrb r1, [r0]
    movs r4, #4
    rsbs r4, r4, #0
    ands r4, r1
    orrs r4, r6
    strb r4, [r0]
    ldr r0, [r2]
    movs r4, #0x98
    lsls r4, r4, #1
    adds r1, r0, r4
    adds r0, #0xf0
    ldm r0!, {r5, r6, r7}
    stm r1!, {r5, r6, r7}
    ldm r0!, {r4, r5, r6}
    stm r1!, {r4, r5, r6}
    ldm r0!, {r4, r7}
    stm r1!, {r4, r7}
    ldr r0, [r2]
    movs r5, #0xb8
    lsls r5, r5, #1
    adds r1, r0, r5
    adds r0, #0xf0
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    ldm r0!, {r5, r6, r7}
    stm r1!, {r5, r6, r7}
    ldm r0!, {r4, r5}
    stm r1!, {r4, r5}
    ldr r0, [r2]
    movs r6, #0xd8
    lsls r6, r6, #1
    adds r1, r0, r6
    adds r0, #0xf0
    ldm r0!, {r4, r5, r7}
    stm r1!, {r4, r5, r7}
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    ldm r0!, {r5, r6}
    stm r1!, {r5, r6}
    ldr r1, [r2]
    adds r1, #0xfc
    ldrb r0, [r1]
    orrs r0, r3
    strb r0, [r1]
    ldr r0, [r2]
    ldr r7, lbl_08067cf0 @ =0x00000139
    adds r0, r0, r7
    mov r1, sl
    strb r1, [r0]
    ldr r0, [r2]
    ldr r3, lbl_08067cf4 @ =0x00000179
    adds r0, r0, r3
    strb r1, [r0]
    movs r4, #0
    adds r6, r2, #0
    ldr r5, lbl_08067cf8 @ =0x08760090
    adds r7, r5, #2
    mov r8, r7
    adds r7, r6, #0
lbl_08067ba2:
    ldr r2, [r6]
    lsls r0, r4, #5
    adds r2, r2, r0
    asrs r1, r4, #1
    lsls r1, r1, #2
    adds r0, r1, r5
    ldrh r0, [r0]
    adds r3, r2, #0
    adds r3, #0xf2
    strh r0, [r3]
    add r1, r8
    ldrh r0, [r1]
    adds r2, #0xf0
    strh r0, [r2]
    adds r4, #1
    cmp r4, #7
    ble lbl_08067ba2
    ldr r0, [r7]
    movs r4, #0xf8
    lsls r4, r4, #1
    adds r0, r0, r4
    movs r1, #1
    bl update_cutscene_oam_data_id
    ldr r1, [r7]
    movs r0, #0xfe
    lsls r0, r0, #1
    adds r1, r1, r0
    ldrb r2, [r1]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    movs r2, #3
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r7]
    ldr r5, lbl_08067ccc @ =0x083f0390
    ldr r1, lbl_08067cfc @ =0x000001fb
    adds r3, r0, r1
    ldrb r1, [r5, #2]
    ands r1, r2
    ldrb r2, [r3]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    ldr r0, [r7]
    ldr r3, lbl_08067d00 @ =0x000001fd
    adds r0, r0, r3
    movs r6, #0
    mov r8, r6
    movs r3, #1
    strb r3, [r0]
    ldr r2, [r7]
    ldr r1, lbl_08067cf8 @ =0x08760090
    ldrh r0, [r1, #0x10]
    movs r6, #0xf9
    lsls r6, r6, #1
    adds r6, r6, r2
    mov sb, r6
    movs r6, #0
    mov sl, r6
    mov r6, sb
    strh r0, [r6]
    ldrh r0, [r1, #0x12]
    adds r4, r2, r4
    strh r0, [r4]
    movs r0, #0xd0
    strh r0, [r2, #0x1e]
    ldr r1, lbl_08067d04 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strb r3, [r2, #0xa]
    movs r0, #0x44
    movs r1, #0
    bl PlayMusic
    ldr r1, lbl_08067c9c @ =0x05000200
    ldr r0, lbl_08067d08 @ =0x08754bb4
    ldr r2, [r0]
    movs r0, #0xe8
    lsls r0, r0, #6
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    movs r0, #3
    bl sub_08061fa0
    ldr r2, [r7]
    ldrh r0, [r5, #4]
    movs r3, #0x80
    lsls r3, r3, #5
    adds r1, r3, #0
    orrs r0, r1
    ldrh r1, [r5, #0xc]
    orrs r0, r1
    strh r0, [r2, #0x1c]
    mov r4, r8
    strh r4, [r2, #2]
    mov r5, sl
    strb r5, [r2, #4]
    ldr r1, [r7]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08067c94: .4byte 0x083f0410
lbl_08067c98: .4byte 0x083f0550
lbl_08067c9c: .4byte 0x05000200
lbl_08067ca0: .4byte 0x082ed8e8
lbl_08067ca4: .4byte 0x05000300
lbl_08067ca8: .4byte 0x083f5d74
lbl_08067cac: .4byte 0x06010000
lbl_08067cb0: .4byte 0x083f5e50
lbl_08067cb4: .4byte 0x06010400
lbl_08067cb8: .4byte 0x083f5f84
lbl_08067cbc: .4byte 0x06010800
lbl_08067cc0: .4byte 0x082ecc84
lbl_08067cc4: .4byte 0x06014000
lbl_08067cc8: .4byte 0x083f0610
lbl_08067ccc: .4byte 0x083f0390
lbl_08067cd0: .4byte 0x083f36a8
lbl_08067cd4: .4byte 0x083f6004
lbl_08067cd8: .4byte 0x083f6608
lbl_08067cdc: .4byte 0x08754bc4
lbl_08067ce0: .4byte 0x0000011b
lbl_08067ce4: .4byte 0x00000159
lbl_08067ce8: .4byte 0x00000199
lbl_08067cec: .4byte 0x000001d9
lbl_08067cf0: .4byte 0x00000139
lbl_08067cf4: .4byte 0x00000179
lbl_08067cf8: .4byte 0x08760090
lbl_08067cfc: .4byte 0x000001fb
lbl_08067d00: .4byte 0x000001fd
lbl_08067d04: .4byte 0x030013ae
lbl_08067d08: .4byte 0x08754bb4

    thumb_func_start enter_tourian_subroutine
enter_tourian_subroutine: @ 0x08067d0c
    push {r4, lr}
    ldr r1, lbl_08067d38 @ =0x087600c4
    ldr r0, lbl_08067d3c @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_08067d40
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08067d38: .4byte 0x087600c4
lbl_08067d3c: .4byte 0x08754bc4

    thumb_func_start sub_08067d40
sub_08067d40: @ 0x08067d40
    push {lr}
    ldr r1, lbl_08067d74 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_08067d78 @ =0x087600c4
    ldr r0, lbl_08067d7c @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_08067d80 @ =0x083f03b0
    bl sub_08069dc8
    bl ResetFreeOAM
    ldr r0, lbl_08067d84 @ =0x03000c04
    ldrh r0, [r0]
    ldr r1, lbl_08067d88 @ =0x03000c06
    ldrh r1, [r1]
    movs r2, #0
    bl sub_0807ff58
    pop {r0}
    bx r0
    .align 2, 0
lbl_08067d74: .4byte 0x03001382
lbl_08067d78: .4byte 0x087600c4
lbl_08067d7c: .4byte 0x08754bc4
lbl_08067d80: .4byte 0x083f03b0
lbl_08067d84: .4byte 0x03000c04
lbl_08067d88: .4byte 0x03000c06

    thumb_func_start samus_in_blue_ship_powering_up
samus_in_blue_ship_powering_up: @ 0x08067d8c
    push {r4, lr}
    ldr r0, lbl_08067da4 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #4]
    cmp r0, #5
    bhi lbl_08067e66
    lsls r0, r0, #2
    ldr r1, lbl_08067da8 @ =lbl_08067dac
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08067da4: .4byte 0x08754bc4
lbl_08067da8: .4byte lbl_08067dac
lbl_08067dac: @ jump table
    .4byte lbl_08067dc4 @ case 0
    .4byte lbl_08067dd8 @ case 1
    .4byte lbl_08067df4 @ case 2
    .4byte lbl_08067e08 @ case 3
    .4byte lbl_08067e34 @ case 4
    .4byte lbl_08067e50 @ case 5
lbl_08067dc4:
    bl sub_08061f44
    cmp r0, #0
    beq lbl_08067e66
    ldr r0, lbl_08067dd4 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08067e3e
    .align 2, 0
lbl_08067dd4: .4byte 0x08754bc4
lbl_08067dd8:
    ldr r3, lbl_08067df0 @ =0x08754bc4
    ldr r1, [r3]
    ldrh r0, [r1, #2]
    cmp r0, #0x1e
    bls lbl_08067e66
    adds r1, #0xfd
    movs r2, #0
    movs r0, #1
    strb r0, [r1]
    ldr r1, [r3]
    strh r2, [r1, #2]
    b lbl_08067e42
    .align 2, 0
lbl_08067df0: .4byte 0x08754bc4
lbl_08067df4:
    ldr r0, lbl_08067e04 @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0xfd
    ldrb r0, [r0]
    cmp r0, #4
    bne lbl_08067e66
    b lbl_08067e3e
    .align 2, 0
lbl_08067e04: .4byte 0x08754bc4
lbl_08067e08:
    ldr r4, lbl_08067e30 @ =0x08754bc4
    ldr r0, [r4]
    ldrh r0, [r0, #2]
    cmp r0, #0x1e
    bls lbl_08067e66
    movs r0, #0x95
    lsls r0, r0, #2
    bl SoundPlay
    ldr r0, [r4]
    adds r0, #0xc0
    movs r2, #0
    movs r1, #1
    strb r1, [r0]
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0xc4
    strh r2, [r0]
    strh r2, [r1, #2]
    b lbl_08067e42
    .align 2, 0
lbl_08067e30: .4byte 0x08754bc4
lbl_08067e34:
    ldr r0, lbl_08067e4c @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #2]
    cmp r0, #0x5a
    bls lbl_08067e66
lbl_08067e3e:
    movs r0, #0
    strh r0, [r1, #2]
lbl_08067e42:
    ldrb r0, [r1, #4]
    adds r0, #1
    strb r0, [r1, #4]
    b lbl_08067e66
    .align 2, 0
lbl_08067e4c: .4byte 0x08754bc4
lbl_08067e50:
    bl sub_08061f0c
    ldr r3, lbl_08067e80 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    strb r2, [r0, #4]
    strh r2, [r0, #2]
lbl_08067e66:
    ldr r4, lbl_08067e80 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xc0
    bl sub_08067e84
    ldr r0, [r4]
    adds r0, #0xf0
    bl sub_08067ed0
    movs r0, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08067e80: .4byte 0x08754bc4

    thumb_func_start sub_08067e84
sub_08067e84: @ 0x08067e84
    push {lr}
    adds r2, r0, #0
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_08067ec6
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_08067ec6
    movs r0, #2
    ands r1, r0
    cmp r1, #0
    beq lbl_08067eb8
    ldr r0, lbl_08067eb4 @ =0x083f6c0c
    ldrh r0, [r0, #4]
    bl sub_08061578
    ldrh r1, [r0]
    adds r1, #4
    b lbl_08067ec4
    .align 2, 0
lbl_08067eb4: .4byte 0x083f6c0c
lbl_08067eb8:
    ldr r0, lbl_08067ecc @ =0x083f6c0c
    ldrh r0, [r0, #4]
    bl sub_08061578
    ldrh r1, [r0]
    subs r1, #4
lbl_08067ec4:
    strh r1, [r0]
lbl_08067ec6:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08067ecc: .4byte 0x083f6c0c

    thumb_func_start sub_08067ed0
sub_08067ed0: @ 0x08067ed0
    push {r4, lr}
    adds r4, r0, #0
    ldrb r0, [r4, #0xd]
    cmp r0, #4
    bhi lbl_08067f88
    lsls r0, r0, #2
    ldr r1, lbl_08067ee4 @ =lbl_08067ee8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08067ee4: .4byte lbl_08067ee8
lbl_08067ee8: @ jump table
    .4byte lbl_08067f88 @ case 0
    .4byte lbl_08067efc @ case 1
    .4byte lbl_08067f24 @ case 2
    .4byte lbl_08067f34 @ case 3
    .4byte lbl_08067f46 @ case 4
lbl_08067efc:
    adds r0, r4, #0
    movs r1, #2
    bl update_cutscene_oam_data_id
    ldr r0, lbl_08067f18 @ =0x00000253
    bl SoundPlay
    ldr r1, lbl_08067f1c @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r1, lbl_08067f20 @ =0x030013b2
    movs r0, #0
    strh r0, [r1]
    b lbl_08067f3e
    .align 2, 0
lbl_08067f18: .4byte 0x00000253
lbl_08067f1c: .4byte 0x030013b0
lbl_08067f20: .4byte 0x030013b2
lbl_08067f24:
    ldrb r1, [r4, #0xb]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08067f88
    movs r0, #0
    strh r0, [r4, #0x14]
    b lbl_08067f3e
lbl_08067f34:
    movs r1, #0
    strh r1, [r4, #0x1a]
    movs r0, #2
    strb r0, [r4, #0x1e]
    strh r1, [r4, #0x14]
lbl_08067f3e:
    ldrb r0, [r4, #0xd]
    adds r0, #1
    strb r0, [r4, #0xd]
    b lbl_08067f88
lbl_08067f46:
    ldrh r0, [r4, #0x1a]
    adds r1, r0, #0
    cmp r1, #0
    bne lbl_08067f84
    ldrb r0, [r4, #0x1e]
    strh r0, [r4, #0x1a]
    ldrh r0, [r4, #0x14]
    adds r0, #1
    strh r0, [r4, #0x14]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #3
    bls lbl_08067f62
    strh r1, [r4, #0x14]
lbl_08067f62:
    ldr r2, lbl_08067f78 @ =0x030013b0
    ldr r1, lbl_08067f7c @ =0x087600dc
    ldrh r0, [r4, #0x14]
    adds r0, r0, r1
    ldrb r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_08067f80 @ =0x030013b2
    movs r0, #0x10
    subs r0, r0, r1
    strh r0, [r2]
    b lbl_08067f88
    .align 2, 0
lbl_08067f78: .4byte 0x030013b0
lbl_08067f7c: .4byte 0x087600dc
lbl_08067f80: .4byte 0x030013b2
lbl_08067f84:
    subs r0, #1
    strh r0, [r4, #0x1a]
lbl_08067f88:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start samus_in_blue_ship_init
samus_in_blue_ship_init: @ 0x08067f90
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #4
    bl sub_08061f0c
    ldr r5, lbl_08068090 @ =0x083f7584
    ldr r2, lbl_08068094 @ =0x05000200
    movs r6, #0x90
    lsls r6, r6, #1
    movs r0, #0x10
    mov r8, r0
    str r0, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r3, r6, #0
    bl DMATransfer
    movs r4, #0xa0
    lsls r4, r4, #0x13
    mov r1, r8
    str r1, [sp]
    movs r0, #3
    adds r1, r5, #0
    adds r2, r4, #0
    adds r3, r6, #0
    bl DMATransfer
    movs r2, #0
    mov sb, r2
    strh r2, [r4]
    ldr r0, lbl_08068098 @ =0x083f76a4
    ldr r5, lbl_0806809c @ =0x083f6c0c
    ldrb r1, [r5]
    lsls r1, r1, #0xe
    movs r4, #0xc0
    lsls r4, r4, #0x13
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080680a0 @ =0x083fc930
    ldrb r1, [r5, #1]
    lsls r1, r1, #0xb
    adds r1, r1, r4
    bl CallLZ77UncompVRAM
    ldr r0, lbl_080680a4 @ =0x083faf88
    ldr r1, lbl_080680a8 @ =0x06010000
    bl CallLZ77UncompVRAM
    ldr r0, [r5]
    ldr r1, [r5, #4]
    bl sub_0806141c
    bl sub_08061e38
    ldr r4, lbl_080680ac @ =0x08754bc4
    ldr r1, [r4]
    movs r6, #0
    ldr r0, lbl_080680b0 @ =0x00003f50
    strh r0, [r1, #0x1e]
    ldr r0, lbl_080680b4 @ =0x030013b0
    mov r1, r8
    strh r1, [r0]
    ldr r0, lbl_080680b8 @ =0x030013b2
    strh r6, [r0]
    ldrh r5, [r5, #4]
    movs r2, #0x80
    lsls r2, r2, #4
    movs r0, #3
    adds r1, r5, #0
    bl sub_080614d4
    ldr r0, [r4]
    adds r0, #0xf0
    movs r1, #1
    bl update_cutscene_oam_data_id
    ldr r2, [r4]
    adds r1, r2, #0
    adds r1, #0xf2
    movs r0, #0x9e
    lsls r0, r0, #4
    strh r0, [r1]
    subs r1, #2
    subs r0, #0xa4
    strh r0, [r1]
    adds r2, #0xfb
    ldrb r1, [r2]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r2]
    ldr r2, [r4]
    adds r2, #0xfc
    ldrb r1, [r2]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #3
    orrs r0, r1
    strb r0, [r2]
    movs r0, #2
    bl sub_08061fa0
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    orrs r5, r0
    strh r5, [r1, #0x1c]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r4]
    strh r6, [r0, #2]
    mov r1, sb
    strb r1, [r0, #4]
    movs r0, #0
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08068090: .4byte 0x083f7584
lbl_08068094: .4byte 0x05000200
lbl_08068098: .4byte 0x083f76a4
lbl_0806809c: .4byte 0x083f6c0c
lbl_080680a0: .4byte 0x083fc930
lbl_080680a4: .4byte 0x083faf88
lbl_080680a8: .4byte 0x06010000
lbl_080680ac: .4byte 0x08754bc4
lbl_080680b0: .4byte 0x00003f50
lbl_080680b4: .4byte 0x030013b0
lbl_080680b8: .4byte 0x030013b2

    thumb_func_start samus_in_blue_ship_subroutine
samus_in_blue_ship_subroutine: @ 0x080680bc
    push {r4, lr}
    ldr r1, lbl_080680e8 @ =0x087600e0
    ldr r0, lbl_080680ec @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    movs r0, #1
    bl sub_080619c4
    bl sub_080680f0
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080680e8: .4byte 0x087600e0
lbl_080680ec: .4byte 0x08754bc4

    thumb_func_start sub_080680f0
sub_080680f0: @ 0x080680f0
    push {lr}
    ldr r1, lbl_08068118 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_0806811c @ =0x087600e0
    ldr r0, lbl_08068120 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    adds r1, #0xf0
    ldr r2, lbl_08068124 @ =0x083f6c18
    bl sub_08069dc8
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_08068118: .4byte 0x03001382
lbl_0806811c: .4byte 0x087600e0
lbl_08068120: .4byte 0x08754bc4
lbl_08068124: .4byte 0x083f6c18

    thumb_func_start sub_08068128
sub_08068128: @ 0x08068128
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    strb r1, [r0, #0xa]
    rsbs r2, r1, #0
    orrs r2, r1
    asrs r2, r2, #0x1f
    movs r3, #2
    ands r3, r2
    lsls r3, r3, #6
    ldrb r2, [r0, #0xb]
    movs r1, #0x3f
    ands r1, r2
    orrs r1, r3
    strb r1, [r0, #0xb]
    bx lr
    .align 2, 0

    thumb_func_start update_cutscene_oam_data_id
update_cutscene_oam_data_id: @ 0x08068148
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    strb r1, [r0, #0xa]
    rsbs r2, r1, #0
    orrs r2, r1
    asrs r2, r2, #0x1f
    movs r3, #2
    ands r3, r2
    lsls r3, r3, #6
    ldrb r2, [r0, #0xb]
    movs r1, #0x3f
    ands r1, r2
    orrs r1, r3
    strb r1, [r0, #0xb]
    bx lr
    .align 2, 0

    thumb_func_start sub_08068168
sub_08068168: @ 0x08068168
    push {r4, r5, r6, r7, lr}
    lsls r7, r0, #0x10
    lsrs r4, r7, #0x10
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    lsls r2, r2, #0x18
    asrs r2, r2, #0x18
    ldr r5, lbl_080681bc @ =0x08754bc4
    ldr r0, [r5]
    adds r3, r0, #0
    adds r3, #0x7c
    ldrb r0, [r3]
    adds r6, r0, #0
    cmp r6, #0
    bne lbl_080681c0
    cmp r1, #0
    beq lbl_080681c0
    adds r0, #1
    strb r0, [r3]
    ldr r0, [r5]
    adds r0, #0x7d
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x7f
    strb r2, [r0]
    ldr r0, [r5]
    movs r1, #0x1f
    ands r4, r1
    adds r0, #0x80
    strb r4, [r0]
    ldr r2, [r5]
    lsrs r0, r7, #0x18
    movs r1, #0x1f
    ands r0, r1
    adds r2, #0x81
    strb r0, [r2]
    ldr r0, [r5]
    adds r0, #0x7e
    strb r6, [r0]
    movs r0, #1
    b lbl_080681c2
    .align 2, 0
lbl_080681bc: .4byte 0x08754bc4
lbl_080681c0:
    movs r0, #0
lbl_080681c2:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_080681c8
sub_080681c8: @ 0x080681c8
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    movs r0, #0
    mov sb, r0
    ldr r0, lbl_0806823c @ =0x08754bc4
    ldr r2, [r0]
    adds r1, r2, #0
    adds r1, #0x7c
    ldrb r1, [r1]
    mov r8, r0
    cmp r1, #0
    beq lbl_080682dc
    adds r1, r2, #0
    adds r1, #0x7e
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    mov r1, r8
    ldr r0, [r1]
    adds r1, r0, #0
    adds r1, #0x7f
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r0, #0x7e
    ldrb r2, [r0]
    cmp r1, r2
    bgt lbl_080682dc
    mov r3, sb
    strb r3, [r0]
    ldr r0, lbl_08068240 @ =0x030013b0
    mov r1, r8
    ldr r2, [r1]
    adds r6, r2, #0
    adds r6, #0x80
    ldrb r3, [r6]
    ldrh r5, [r0]
    adds r4, r5, #0
    adds r1, r3, #0
    mov ip, r0
    cmp r4, r1
    beq lbl_08068264
    cmp r4, r1
    bls lbl_0806824a
    ldrh r4, [r0]
    subs r1, r4, r3
    adds r0, r2, #0
    adds r0, #0x7d
    ldrb r0, [r0]
    cmp r1, r0
    ble lbl_08068244
    subs r0, r4, r0
    mov r2, ip
    strh r0, [r2]
    b lbl_08068264
    .align 2, 0
lbl_0806823c: .4byte 0x08754bc4
lbl_08068240: .4byte 0x030013b0
lbl_08068244:
    mov r0, ip
    strh r3, [r0]
    b lbl_08068264
lbl_0806824a:
    adds r0, r2, #0
    adds r0, #0x7d
    ldrb r0, [r0]
    adds r0, r5, r0
    mov r1, ip
    strh r0, [r1]
    ldrb r1, [r6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r1
    bls lbl_08068264
    mov r2, ip
    strh r1, [r2]
lbl_08068264:
    ldr r0, lbl_08068294 @ =0x030013b2
    mov r3, r8
    ldr r2, [r3]
    adds r6, r2, #0
    adds r6, #0x81
    ldrb r3, [r6]
    ldrh r5, [r0]
    adds r4, r5, #0
    adds r1, r3, #0
    adds r7, r0, #0
    cmp r4, r1
    beq lbl_080682b2
    cmp r4, r1
    bls lbl_0806829c
    ldrh r4, [r7]
    subs r1, r4, r3
    adds r0, r2, #0
    adds r0, #0x7d
    ldrb r0, [r0]
    cmp r1, r0
    ble lbl_08068298
    subs r0, r4, r0
    strh r0, [r7]
    b lbl_080682b2
    .align 2, 0
lbl_08068294: .4byte 0x030013b2
lbl_08068298:
    strh r3, [r7]
    b lbl_080682b2
lbl_0806829c:
    adds r0, r2, #0
    adds r0, #0x7d
    ldrb r0, [r0]
    adds r0, r5, r0
    strh r0, [r7]
    ldrb r1, [r6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r1
    bls lbl_080682b2
    strh r1, [r7]
lbl_080682b2:
    mov r0, r8
    ldr r2, [r0]
    adds r1, r2, #0
    adds r1, #0x80
    mov r3, ip
    ldrh r0, [r3]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_080682dc
    adds r1, r2, #0
    adds r1, #0x81
    ldrh r0, [r7]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_080682dc
    adds r1, r2, #0
    adds r1, #0x7c
    movs r0, #0
    strb r0, [r1]
    movs r0, #1
    mov sb, r0
lbl_080682dc:
    mov r0, sb
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_080682ec
sub_080682ec: @ 0x080682ec
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #0xc
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    ldr r7, lbl_0806831c @ =0x08754bc4
    cmp r1, #0
    beq lbl_08068304
    ldr r0, [r7]
    adds r0, #0xbc
    strb r1, [r0]
lbl_08068304:
    ldr r0, [r7]
    adds r0, #0xbc
    ldrb r0, [r0]
    cmp r0, #5
    bls lbl_08068310
    b lbl_08068570
lbl_08068310:
    lsls r0, r0, #2
    ldr r1, lbl_08068320 @ =lbl_08068324
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806831c: .4byte 0x08754bc4
lbl_08068320: .4byte lbl_08068324
lbl_08068324: @ jump table
    .4byte lbl_08068570 @ case 0
    .4byte lbl_0806833c @ case 1
    .4byte lbl_08068358 @ case 2
    .4byte lbl_080683c0 @ case 3
    .4byte lbl_08068474 @ case 4
    .4byte lbl_080684b0 @ case 5
lbl_0806833c:
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0xbe
    ldrb r1, [r1]
    cmp r1, #0
    beq lbl_0806834a
    b lbl_0806857c
lbl_0806834a:
    adds r0, #0xbd
    strb r1, [r0]
    ldr r0, [r7]
    adds r0, #0xbc
    strb r1, [r0]
    movs r0, #1
    b lbl_080685a4
lbl_08068358:
    movs r6, #0xa0
    lsls r6, r6, #0x13
    ldr r0, lbl_080683b8 @ =0x08754bb4
    mov r8, r0
    ldr r2, [r0]
    movs r1, #0xd0
    lsls r1, r1, #7
    adds r2, r2, r1
    movs r5, #0x80
    lsls r5, r5, #3
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r6, #0
    adds r3, r5, #0
    bl BitFill
    mov r3, r8
    ldr r2, [r3]
    movs r0, #0xd8
    lsls r0, r0, #7
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    ldr r1, lbl_080683bc @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0xbd
    movs r2, #0
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0xbe
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0xbc
    movs r1, #3
    b lbl_0806856e
    .align 2, 0
lbl_080683b8: .4byte 0x08754bb4
lbl_080683bc: .4byte 0x08754bc4
lbl_080683c0:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0xbe
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_080683ce
    b lbl_0806857c
lbl_080683ce:
    adds r0, r1, #0
    adds r0, #0xbd
    ldrb r0, [r0]
    cmp r0, #0x1f
    bhi lbl_08068450
    ldr r5, lbl_08068448 @ =0x08754bb4
    ldr r0, [r5]
    movs r2, #0xd0
    lsls r2, r2, #7
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r3, #0xd8
    lsls r3, r3, #7
    adds r0, r0, r3
    str r0, [sp, #8]
    ldr r0, [r7]
    adds r0, #0xbd
    ldrb r1, [r0]
    add r6, sp, #8
    ldr r4, lbl_0806844c @ =0x0000ffff
    str r4, [sp]
    movs r0, #0
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r5]
    movs r2, #0xd4
    lsls r2, r2, #7
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r3, #0xdc
    lsls r3, r3, #7
    adds r0, r0, r3
    str r0, [sp, #8]
    ldr r0, [r7]
    adds r0, #0xbd
    ldrb r1, [r0]
    str r4, [sp]
    movs r0, #0
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r7]
    adds r0, #0xbe
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0xbd
    ldrb r0, [r1]
    cmp r0, #0x1f
    beq lbl_0806852c
    ldrb r0, [r1]
    adds r0, #2
    cmp r0, #0x1f
    ble lbl_08068444
    b lbl_08068544
lbl_08068444:
    b lbl_0806852e
    .align 2, 0
lbl_08068448: .4byte 0x08754bb4
lbl_0806844c: .4byte 0x0000ffff
lbl_08068450:
    ldr r0, lbl_08068470 @ =0x08754bb4
    ldr r2, [r0]
    movs r0, #0xd0
    lsls r0, r0, #7
    adds r1, r2, r0
    movs r3, #0xd8
    lsls r3, r3, #7
    adds r2, r2, r3
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    b lbl_08068562
    .align 2, 0
lbl_08068470: .4byte 0x08754bb4
lbl_08068474:
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r0, lbl_080684a8 @ =0x08754bb4
    ldr r2, [r0]
    movs r0, #0xd0
    lsls r0, r0, #7
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_080684ac @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0xbd
    movs r2, #0
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0xbe
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0xbc
    movs r1, #5
    b lbl_0806856e
    .align 2, 0
lbl_080684a8: .4byte 0x08754bb4
lbl_080684ac: .4byte 0x08754bc4
lbl_080684b0:
    mov r8, r7
    mov r2, r8
    ldr r1, [r2]
    adds r0, r1, #0
    adds r0, #0xbe
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806857c
    adds r2, r1, #0
    adds r2, #0xbd
    ldrb r0, [r2]
    cmp r0, #0x1f
    bhi lbl_08068548
    ldr r4, lbl_08068534 @ =0x08754bb4
    ldr r0, [r4]
    movs r3, #0xd0
    lsls r3, r3, #7
    adds r1, r0, r3
    str r1, [sp, #4]
    movs r1, #0xd8
    lsls r1, r1, #7
    adds r0, r0, r1
    str r0, [sp, #8]
    ldrb r1, [r2]
    add r6, sp, #8
    ldr r5, lbl_08068538 @ =0x0000ffff
    str r5, [sp]
    movs r0, #2
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r4]
    movs r2, #0xd4
    lsls r2, r2, #7
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r3, #0xdc
    lsls r3, r3, #7
    adds r0, r0, r3
    str r0, [sp, #8]
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0xbd
    ldrb r1, [r0]
    str r5, [sp]
    movs r0, #2
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    mov r2, r8
    ldr r0, [r2]
    adds r0, #0xbe
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xbd
    ldrb r0, [r1]
    cmp r0, #0x1f
    bne lbl_0806853c
lbl_0806852c:
    adds r0, #1
lbl_0806852e:
    strb r0, [r1]
    b lbl_08068570
    .align 2, 0
lbl_08068534: .4byte 0x08754bb4
lbl_08068538: .4byte 0x0000ffff
lbl_0806853c:
    ldrb r0, [r1]
    adds r0, #2
    cmp r0, #0x1f
    ble lbl_0806852e
lbl_08068544:
    movs r0, #0x1f
    b lbl_0806852e
lbl_08068548:
    ldr r0, lbl_080685b0 @ =0x08754bb4
    ldr r2, [r0]
    movs r3, #0xd8
    lsls r3, r3, #7
    adds r2, r2, r3
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
lbl_08068562:
    ldr r0, [r7]
    adds r0, #0xbe
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r7]
    adds r0, #0xbc
lbl_0806856e:
    strb r1, [r0]
lbl_08068570:
    ldr r0, lbl_080685b4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbe
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_080685a2
lbl_0806857c:
    ldr r0, lbl_080685b0 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xd8
    lsls r0, r0, #7
    adds r1, r1, r0
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, lbl_080685b4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbe
    movs r1, #0
    strb r1, [r0]
lbl_080685a2:
    movs r0, #0
lbl_080685a4:
    add sp, #0xc
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080685b0: .4byte 0x08754bb4
lbl_080685b4: .4byte 0x08754bc4

    thumb_func_start sub_080685b8
sub_080685b8: @ 0x080685b8
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    sub sp, #4
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_08068614
    movs r6, #0xa0
    lsls r6, r6, #0x13
    ldr r0, lbl_08068610 @ =0x08754bb4
    mov r8, r0
    ldr r2, [r0]
    movs r0, #0xd0
    lsls r0, r0, #7
    adds r2, r2, r0
    movs r5, #0x80
    lsls r5, r5, #3
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r6, #0
    adds r3, r5, #0
    bl BitFill
    mov r0, r8
    ldr r2, [r0]
    movs r0, #0xd8
    lsls r0, r0, #7
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    b lbl_08068630
    .align 2, 0
lbl_08068610: .4byte 0x08754bb4
lbl_08068614:
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r0, lbl_08068648 @ =0x08754bb4
    ldr r2, [r0]
    movs r0, #0xd0
    lsls r0, r0, #7
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_08068630:
    ldr r0, lbl_0806864c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbc
    movs r1, #0
    strb r1, [r0]
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08068648: .4byte 0x08754bb4
lbl_0806864c: .4byte 0x08754bc4

    thumb_func_start sub_08068650
sub_08068650: @ 0x08068650
    push {r4, lr}
    sub sp, #4
    ldr r4, lbl_0806868c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xbe
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08068684
    ldr r0, lbl_08068690 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xd8
    lsls r0, r0, #7
    adds r1, r1, r0
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r4]
    adds r0, #0xbe
    movs r1, #0
    strb r1, [r0]
lbl_08068684:
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806868c: .4byte 0x08754bc4
lbl_08068690: .4byte 0x08754bb4

    thumb_func_start sub_08068694
sub_08068694: @ 0x08068694
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r0, lbl_080687fc @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_080686a8
    b lbl_0806888e
lbl_080686a8:
    ldr r0, lbl_08068800 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r3, [r1, #4]
    movs r2, #1
    mov r8, r2
    adds r5, r0, #0
    cmp r3, #0
    beq lbl_080686cc
    movs r0, #0
    mov r8, r0
    cmp r3, #0xc
    bne lbl_080686c4
    movs r2, #2
    mov r8, r2
lbl_080686c4:
    mov r0, r8
    cmp r0, #0
    bne lbl_080686cc
    b lbl_0806880c
lbl_080686cc:
    ldr r2, [r5]
    movs r3, #0
    adds r1, r2, #0
    adds r1, #0x25
    adds r0, r2, #0
    adds r0, #0x28
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r1, r0
    ble lbl_080686ea
    movs r3, #1
lbl_080686ea:
    adds r0, r2, #0
    adds r0, #0x30
    strb r3, [r0]
    ldr r3, [r5]
    movs r4, #0
    adds r0, r3, #0
    adds r0, #0x29
    adds r2, r3, #0
    adds r2, #0x25
    movs r1, #0
    ldrsb r1, [r0, r1]
    movs r0, #0
    ldrsb r0, [r2, r0]
    cmp r1, r0
    ble lbl_0806870a
    movs r4, #1
lbl_0806870a:
    adds r0, r3, #0
    adds r0, #0x31
    strb r4, [r0]
    ldr r3, [r5]
    movs r4, #0
    adds r0, r3, #0
    adds r0, #0x24
    adds r2, r3, #0
    adds r2, #0x27
    movs r1, #0
    ldrsb r1, [r0, r1]
    movs r0, #0
    ldrsb r0, [r2, r0]
    cmp r1, r0
    ble lbl_0806872a
    movs r4, #1
lbl_0806872a:
    adds r0, r3, #0
    adds r0, #0x2f
    strb r4, [r0]
    ldr r2, [r5]
    movs r3, #0
    adds r1, r2, #0
    adds r1, #0x26
    adds r0, r2, #0
    adds r0, #0x24
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r1, r0
    ble lbl_0806874e
    movs r3, #1
lbl_0806874e:
    adds r0, r2, #0
    adds r0, #0x2e
    strb r3, [r0]
    ldr r1, [r5]
    ldr r2, lbl_08068804 @ =0x0840d0d0
    mov ip, r2
    ldrh r0, [r2]
    lsls r0, r0, #4
    adds r3, r1, r0
    movs r2, #0
    adds r1, #0x2e
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0806876c
    movs r2, #1
lbl_0806876c:
    ldr r6, lbl_08068808 @ =0x00000473
    adds r3, r3, r6
    movs r4, #1
    lsls r2, r2, #5
    ldrb r1, [r3]
    movs r7, #0x21
    rsbs r7, r7, #0
    adds r0, r7, #0
    ands r0, r1
    orrs r0, r2
    strb r0, [r3]
    ldr r1, [r5]
    mov r2, ip
    ldrh r0, [r2, #8]
    lsls r0, r0, #4
    adds r3, r1, r0
    movs r2, #0
    adds r1, #0x2f
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_08068798
    movs r2, #1
lbl_08068798:
    adds r3, r3, r6
    adds r1, r4, #0
    ands r1, r2
    lsls r1, r1, #5
    ldrb r2, [r3]
    adds r0, r7, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    ldr r1, [r5]
    mov r2, ip
    ldrh r0, [r2, #0x10]
    lsls r0, r0, #4
    adds r3, r1, r0
    movs r2, #0
    adds r1, #0x30
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_080687c0
    movs r2, #1
lbl_080687c0:
    adds r3, r3, r6
    adds r1, r4, #0
    ands r1, r2
    lsls r1, r1, #5
    ldrb r2, [r3]
    adds r0, r7, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    ldr r1, [r5]
    mov r2, ip
    ldrh r0, [r2, #0x18]
    lsls r0, r0, #4
    adds r3, r1, r0
    movs r2, #0
    adds r1, #0x31
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_080687e8
    movs r2, #1
lbl_080687e8:
    adds r3, r3, r6
    adds r1, r4, #0
    ands r1, r2
    lsls r1, r1, #5
    ldrb r2, [r3]
    adds r0, r7, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    b lbl_08068850
    .align 2, 0
lbl_080687fc: .4byte 0x03000bf0
lbl_08068800: .4byte 0x08754bc4
lbl_08068804: .4byte 0x0840d0d0
lbl_08068808: .4byte 0x00000473
lbl_0806880c:
    ldr r4, lbl_08068874 @ =0x0840d0d0
    ldrh r0, [r4]
    lsls r0, r0, #4
    adds r0, r1, r0
    ldr r3, lbl_08068878 @ =0x00000473
    adds r0, r0, r3
    ldrb r1, [r0]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0]
    ldr r1, [r5]
    ldrh r0, [r4, #8]
    lsls r0, r0, #4
    adds r1, r1, r0
    adds r1, r1, r3
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r5]
    ldrh r0, [r4, #0x10]
    lsls r0, r0, #4
    adds r1, r1, r0
    adds r1, r1, r3
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r5]
    ldrh r0, [r4, #0x18]
    lsls r0, r0, #4
    adds r1, r1, r0
    adds r1, r1, r3
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
lbl_08068850:
    mov r0, r8
    cmp r0, #1
    bne lbl_08068880
    ldr r2, [r5]
    ldrb r1, [r2, #0x11]
    rsbs r1, r1, #0
    ldr r0, lbl_0806887c @ =0x00000453
    adds r2, r2, r0
    lsrs r1, r1, #0x1f
    lsls r1, r1, #5
    ldrb r3, [r2]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r0, r3
    orrs r0, r1
    strb r0, [r2]
    b lbl_0806888e
    .align 2, 0
lbl_08068874: .4byte 0x0840d0d0
lbl_08068878: .4byte 0x00000473
lbl_0806887c: .4byte 0x00000453
lbl_08068880:
    ldr r0, [r5]
    ldr r1, lbl_08068898 @ =0x00000453
    adds r0, r0, r1
    ldrb r1, [r0]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0]
lbl_0806888e:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08068898: .4byte 0x00000453

    thumb_func_start sub_0806889c
sub_0806889c: @ 0x0806889c
    push {r4, r5, r6, lr}
    ldr r0, lbl_08068904 @ =0x08754bc4
    ldr r4, [r0]
    ldrb r1, [r4, #0x12]
    adds r6, r0, #0
    cmp r1, #6
    bhi lbl_0806894c
    ldr r5, lbl_08068908 @ =0x0840d200
    adds r0, r1, #0
    lsls r1, r0, #2
    adds r2, r1, r0
    adds r0, r2, r5
    ldrb r3, [r0]
    cmp r3, #0
    beq lbl_0806893a
    adds r0, r5, #2
    adds r0, r2, r0
    ldrb r1, [r0]
    lsls r1, r1, #5
    adds r0, r5, #4
    adds r0, r2, r0
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r1, r1, r0
    ldr r2, lbl_0806890c @ =0x0000040a
    adds r0, r4, r2
    strh r1, [r0]
    ldrb r1, [r4, #0x12]
    lsls r0, r1, #2
    adds r0, r0, r1
    adds r1, r5, #3
    adds r0, r0, r1
    ldrb r0, [r0]
    lsls r0, r0, #5
    subs r2, #2
    adds r1, r4, r2
    strh r0, [r1]
    adds r1, r3, #0
    movs r0, #3
    bl EventFunction
    cmp r0, #0
    beq lbl_08068924
    ldr r1, [r6]
    ldrb r0, [r1, #0x12]
    cmp r0, #5
    beq lbl_08068914
    ldr r0, lbl_08068910 @ =0x00000412
    adds r1, r1, r0
    movs r0, #3
    strb r0, [r1]
    b lbl_08068938
    .align 2, 0
lbl_08068904: .4byte 0x08754bc4
lbl_08068908: .4byte 0x0840d200
lbl_0806890c: .4byte 0x0000040a
lbl_08068910: .4byte 0x00000412
lbl_08068914:
    ldr r2, lbl_08068920 @ =0x00000412
    adds r1, r1, r2
    movs r0, #0
    strb r0, [r1]
    movs r3, #0
    b lbl_0806893a
    .align 2, 0
lbl_08068920: .4byte 0x00000412
lbl_08068924:
    ldr r2, [r6]
    ldrb r1, [r2, #0x12]
    lsls r0, r1, #2
    adds r0, r0, r1
    adds r1, r5, #1
    adds r0, r0, r1
    ldrb r0, [r0]
    ldr r1, lbl_08068954 @ =0x00000412
    adds r2, r2, r1
    strb r0, [r2]
lbl_08068938:
    movs r3, #2
lbl_0806893a:
    ldr r1, [r6]
    ldr r2, lbl_08068958 @ =0x00000413
    adds r1, r1, r2
    lsls r3, r3, #6
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    orrs r0, r3
    strb r0, [r1]
lbl_0806894c:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08068954: .4byte 0x00000412
lbl_08068958: .4byte 0x00000413

    thumb_func_start draw_pause_screen_info
draw_pause_screen_info: @ 0x0806895c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r3, #0
    ldr r0, lbl_08068998 @ =0x03000024
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0806897a
    movs r3, #1
lbl_0806897a:
    ldr r5, lbl_0806899c @ =0x08754bc4
    ldr r2, [r5]
    ldrh r1, [r2]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0806898a
    movs r3, #1
lbl_0806898a:
    cmp r3, #0
    beq lbl_080689a0
    adds r1, r2, #0
    adds r1, #0x34
    movs r0, #0
    strb r0, [r1]
    b lbl_08068a42
    .align 2, 0
lbl_08068998: .4byte 0x03000024
lbl_0806899c: .4byte 0x08754bc4
lbl_080689a0:
    cmp r4, #0
    bne lbl_08068a42
    bl count_tanks_in_area
    movs r0, #0
    movs r1, #0
    bl draw_in_game_time_and_tanks
    movs r0, #0
    movs r1, #1
    bl draw_in_game_time_and_tanks
    movs r6, #0
    ldr r0, lbl_08068a50 @ =0x08760190
    mov sl, r0
    ldr r2, lbl_08068a54 @ =0x00000113
    mov ip, r2
    movs r7, #3
    mov sb, r7
    mov r3, sl
    movs r4, #0
    movs r0, #4
    rsbs r0, r0, #0
    mov r8, r0
lbl_080689d0:
    ldr r1, [r5]
    ldrh r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    mov r0, sl
    adds r0, #2
    adds r0, r4, r0
    ldrh r0, [r0]
    movs r2, #0x89
    lsls r2, r2, #1
    adds r1, r1, r2
    strb r0, [r1]
    ldr r1, [r5]
    ldrh r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    add r1, ip
    ldrb r2, [r1]
    mov r0, r8
    ands r0, r2
    mov r7, sb
    orrs r0, r7
    strb r0, [r1]
    ldr r2, [r5]
    ldrh r1, [r3]
    lsls r1, r1, #4
    adds r1, r2, r1
    mov r0, sl
    adds r0, #4
    adds r0, r4, r0
    ldrh r0, [r0]
    movs r7, #0x85
    lsls r7, r7, #1
    adds r1, r1, r7
    strh r0, [r1]
    ldrh r0, [r3]
    lsls r0, r0, #4
    adds r0, r2, r0
    ldrh r1, [r3, #6]
    subs r7, #2
    adds r0, r0, r7
    strh r1, [r0]
    ldrh r0, [r3]
    lsls r0, r0, #4
    adds r2, r2, r0
    add r2, ip
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
    adds r3, #0xa
    adds r4, #0xa
    adds r6, #1
    cmp r6, #4
    bls lbl_080689d0
lbl_08068a42:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08068a50: .4byte 0x08760190
lbl_08068a54: .4byte 0x00000113

    thumb_func_start sub_08068a58
sub_08068a58: @ 0x08068a58
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    adds r3, r2, #0
    movs r4, #0
    ldr r0, lbl_08068a7c @ =0x03001530
    ldrb r1, [r0, #0x12]
    adds r5, r0, #0
    cmp r1, #2
    bne lbl_08068a94
    cmp r2, #1
    beq lbl_08068a80
    cmp r2, #1
    bgt lbl_08068aea
    cmp r2, #0
    beq lbl_08068ae8
    b lbl_08068aea
    .align 2, 0
lbl_08068a7c: .4byte 0x03001530
lbl_08068a80:
    ldr r0, lbl_08068a90 @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0xa1
    lsls r2, r2, #1
    adds r1, r0, r2
    movs r0, #0x29
    strb r0, [r1]
    b lbl_08068ae8
    .align 2, 0
lbl_08068a90: .4byte 0x08754bc4
lbl_08068a94:
    cmp r3, #6
    bhi lbl_08068aea
    lsls r0, r3, #2
    ldr r1, lbl_08068aa4 @ =lbl_08068aa8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08068aa4: .4byte lbl_08068aa8
lbl_08068aa8: @ jump table
    .4byte lbl_08068ae8 @ case 0
    .4byte lbl_08068ae8 @ case 1
    .4byte lbl_08068ac4 @ case 2
    .4byte lbl_08068ace @ case 3
    .4byte lbl_08068ae8 @ case 4
    .4byte lbl_08068adc @ case 5
    .4byte lbl_08068aea @ case 6
lbl_08068ac4:
    ldrh r1, [r5, #2]
    ldrb r0, [r5, #4]
    cmn r1, r0
    beq lbl_08068aea
    b lbl_08068ae8
lbl_08068ace:
    ldr r0, lbl_08068ad8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xd1
    b lbl_08068ae2
    .align 2, 0
lbl_08068ad8: .4byte 0x08754bc4
lbl_08068adc:
    ldr r0, lbl_08068af4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xcb
lbl_08068ae2:
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08068aea
lbl_08068ae8:
    movs r4, #2
lbl_08068aea:
    adds r0, r4, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08068af4: .4byte 0x08754bc4

    thumb_func_start sub_08068af8
sub_08068af8: @ 0x08068af8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    movs r0, #0
    mov r8, r0
    ldr r1, lbl_08068b24 @ =0x08754bc4
    ldr r0, [r1]
    movs r2, #0x94
    lsls r2, r2, #1
    adds r4, r0, r2
    movs r6, #7
    adds r5, r1, #0
    cmp r3, #5
    bls lbl_08068b1a
    b lbl_08068d94
lbl_08068b1a:
    lsls r0, r3, #2
    ldr r1, lbl_08068b28 @ =lbl_08068b2c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08068b24: .4byte 0x08754bc4
lbl_08068b28: .4byte lbl_08068b2c
lbl_08068b2c: @ jump table
    .4byte lbl_08068b44 @ case 0
    .4byte lbl_08068b9c @ case 1
    .4byte lbl_08068c20 @ case 2
    .4byte lbl_08068c74 @ case 3
    .4byte lbl_08068cc4 @ case 4
    .4byte lbl_08068d06 @ case 5
lbl_08068b44:
    movs r5, #0
    cmp r5, r6
    bge lbl_08068b8e
lbl_08068b4a:
    ldr r0, lbl_08068b98 @ =0x0840d10c
    lsls r1, r5, #4
    adds r1, r1, r0
    ldrb r0, [r1]
    strb r0, [r4, #0xa]
    ldrh r0, [r1, #2]
    strh r0, [r4, #2]
    ldrh r0, [r1, #4]
    strh r0, [r4]
    movs r0, #3
    ldrb r2, [r1, #8]
    ands r2, r0
    lsls r2, r2, #2
    ldrb r0, [r4, #0xb]
    movs r3, #0xd
    rsbs r3, r3, #0
    adds r1, r3, #0
    ands r0, r1
    orrs r0, r2
    strb r0, [r4, #0xb]
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    bl sub_08068a58
    lsls r0, r0, #6
    ldrb r2, [r4, #0xb]
    movs r1, #0x3f
    ands r1, r2
    orrs r1, r0
    strb r1, [r4, #0xb]
    adds r5, #1
    adds r4, #0x10
    cmp r5, r6
    blt lbl_08068b4a
lbl_08068b8e:
    movs r0, #0
    bl sub_08068dbc
    b lbl_08068d94
    .align 2, 0
lbl_08068b98: .4byte 0x0840d10c
lbl_08068b9c:
    movs r5, #0
    cmp r5, r6
    bge lbl_08068bea
lbl_08068ba2:
    ldr r0, lbl_08068c14 @ =0x0840d10c
    lsls r1, r5, #4
    adds r1, r1, r0
    ldrb r0, [r1]
    strb r0, [r4, #0xa]
    ldrh r0, [r1, #6]
    ldrh r2, [r1, #2]
    adds r0, r0, r2
    strh r0, [r4, #2]
    ldrh r0, [r1, #4]
    strh r0, [r4]
    movs r0, #3
    ldrb r2, [r1, #8]
    ands r2, r0
    lsls r2, r2, #2
    ldrb r0, [r4, #0xb]
    movs r3, #0xd
    rsbs r3, r3, #0
    adds r1, r3, #0
    ands r0, r1
    orrs r0, r2
    strb r0, [r4, #0xb]
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    bl sub_08068a58
    lsls r0, r0, #6
    ldrb r2, [r4, #0xb]
    movs r1, #0x3f
    ands r1, r2
    orrs r1, r0
    strb r1, [r4, #0xb]
    adds r5, #1
    adds r4, #0x10
    cmp r5, r6
    blt lbl_08068ba2
lbl_08068bea:
    movs r0, #1
    bl sub_08068dbc
    ldr r0, lbl_08068c18 @ =0x08754bc4
    ldr r1, [r0]
    adds r3, r1, #0
    adds r3, #0x5c
    ldrh r2, [r3]
    movs r4, #0x80
    lsls r4, r4, #8
    adds r0, r4, #0
    orrs r0, r2
    strh r0, [r3]
    ldr r0, lbl_08068c1c @ =0x00000403
    adds r1, r1, r0
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    b lbl_08068d94
    .align 2, 0
lbl_08068c14: .4byte 0x0840d10c
lbl_08068c18: .4byte 0x08754bc4
lbl_08068c1c: .4byte 0x00000403
lbl_08068c20:
    movs r1, #1
    mov r8, r1
    movs r5, #0
    subs r7, r6, #1
    cmp r5, r7
    blt lbl_08068c2e
    b lbl_08068d94
lbl_08068c2e:
    ldr r6, lbl_08068c70 @ =0x0840d10c
lbl_08068c30:
    ldrb r1, [r4, #0xb]
    movs r0, #0xc0
    ands r0, r1
    cmp r0, #0
    beq lbl_08068c62
    ldrh r2, [r4, #2]
    movs r3, #2
    ldrsh r0, [r4, r3]
    ldrh r1, [r6, #2]
    mov ip, r1
    movs r3, #2
    ldrsh r1, [r6, r3]
    cmp r0, r1
    beq lbl_08068c62
    movs r0, #0
    mov r8, r0
    adds r0, r2, #0
    subs r0, #0x40
    strh r0, [r4, #2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, r1
    bge lbl_08068c62
    mov r1, ip
    strh r1, [r4, #2]
lbl_08068c62:
    adds r6, #0x10
    adds r5, #1
    adds r4, #0x10
    cmp r5, r7
    blt lbl_08068c30
    b lbl_08068d94
    .align 2, 0
lbl_08068c70: .4byte 0x0840d10c
lbl_08068c74:
    ldrb r1, [r4, #0xb]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r4, #0xb]
    adds r4, #0x10
    movs r5, #1
    subs r7, r6, #1
    cmp r5, r7
    blt lbl_08068c88
    b lbl_08068d94
lbl_08068c88:
    ldr r0, lbl_08068cc0 @ =0x0840d10c
    adds r2, r0, #0
    adds r2, #0x1a
    movs r3, #0xc0
lbl_08068c90:
    ldrb r1, [r4, #0xb]
    adds r0, r3, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08068cb2
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x80
    orrs r0, r1
    strb r0, [r4, #0xb]
    ldrb r0, [r4, #0xa]
    adds r0, #1
    strb r0, [r4, #0xa]
    ldrh r0, [r2]
    strh r0, [r4, #2]
    ldrh r0, [r2, #2]
    strh r0, [r4]
lbl_08068cb2:
    adds r2, #0x10
    adds r5, #1
    adds r4, #0x10
    cmp r5, r7
    blt lbl_08068c90
    b lbl_08068d94
    .align 2, 0
lbl_08068cc0: .4byte 0x0840d10c
lbl_08068cc4:
    movs r5, #0
    subs r7, r6, #1
    cmp r5, r7
    bge lbl_08068d94
    movs r3, #0xd
    rsbs r3, r3, #0
    movs r2, #0
lbl_08068cd2:
    ldrb r1, [r4, #0xb]
    movs r0, #0xc0
    ands r0, r1
    cmp r0, #0
    beq lbl_08068cfc
    adds r0, r3, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r4, #0xb]
    cmp r5, #0
    beq lbl_08068cfc
    ldrb r0, [r4, #0xa]
    adds r0, #1
    strb r0, [r4, #0xa]
    strb r2, [r4, #8]
    ldrb r0, [r4, #9]
    cmp r0, #0
    beq lbl_08068cfc
    subs r0, #1
    strb r0, [r4, #9]
lbl_08068cfc:
    adds r5, #1
    adds r4, #0x10
    cmp r5, r7
    blt lbl_08068cd2
    b lbl_08068d94
lbl_08068d06:
    ldr r0, [r5]
    ldr r2, lbl_08068da0 @ =0x00000133
    adds r3, r0, r2
    ldrb r2, [r3]
    movs r1, #0x3f
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r5]
    ldr r4, lbl_08068da4 @ =0x00000143
    adds r3, r0, r4
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r5]
    ldr r2, lbl_08068da8 @ =0x00000153
    adds r3, r0, r2
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r5]
    adds r4, #0x20
    adds r3, r0, r4
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r5]
    ldr r2, lbl_08068dac @ =0x00000173
    adds r3, r0, r2
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r5]
    adds r4, #0x20
    adds r3, r0, r4
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r5]
    ldr r2, lbl_08068db0 @ =0x00000193
    adds r3, r0, r2
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r5]
    adds r4, #0x20
    adds r3, r0, r4
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r2, [r5]
    adds r4, r2, #0
    adds r4, #0x5c
    ldrh r3, [r4]
    ldr r0, lbl_08068db4 @ =0x00007fff
    ands r0, r3
    strh r0, [r4]
    ldr r0, lbl_08068db8 @ =0x00000403
    adds r2, r2, r0
    ldrb r0, [r2]
    ands r1, r0
    movs r0, #0x80
    orrs r1, r0
    strb r1, [r2]
lbl_08068d94:
    mov r0, r8
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08068da0: .4byte 0x00000133
lbl_08068da4: .4byte 0x00000143
lbl_08068da8: .4byte 0x00000153
lbl_08068dac: .4byte 0x00000173
lbl_08068db0: .4byte 0x00000193
lbl_08068db4: .4byte 0x00007fff
lbl_08068db8: .4byte 0x00000403

    thumb_func_start sub_08068dbc
sub_08068dbc: @ 0x08068dbc
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #2
    bne lbl_08068de0
    ldr r3, lbl_08068ddc @ =0x08754bc4
    ldr r2, [r3]
    ldrb r1, [r2, #0xc]
    cmp r1, #0
    bne lbl_08068eb0
    movs r0, #1
    strb r0, [r2, #0xc]
    ldr r0, [r3]
    strh r1, [r0, #0xe]
    b lbl_08068eb0
    .align 2, 0
lbl_08068ddc: .4byte 0x08754bc4
lbl_08068de0:
    ldr r0, lbl_08068e6c @ =0x03001530
    ldrb r2, [r0, #0x12]
    movs r1, #0x2c
    adds r4, r0, #0
    cmp r2, #0
    beq lbl_08068dfa
    movs r1, #0x2d
    cmp r2, #1
    beq lbl_08068dfa
    movs r1, #0x2c
    cmp r2, #2
    bne lbl_08068dfa
    movs r1, #0x2e
lbl_08068dfa:
    cmp r3, #0
    bne lbl_08068e0c
    ldr r0, lbl_08068e70 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #8
    bne lbl_08068e0c
    movs r1, #0x2e
lbl_08068e0c:
    ldr r2, lbl_08068e74 @ =0x08754bc4
    ldr r0, [r2]
    movs r3, #0xc9
    lsls r3, r3, #1
    adds r0, r0, r3
    strb r1, [r0]
    ldr r0, [r2]
    ldr r1, lbl_08068e78 @ =0x00000193
    adds r1, r1, r0
    mov ip, r1
    ldrb r1, [r1]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x80
    orrs r0, r1
    mov r5, ip
    strb r0, [r5]
    ldr r0, [r2]
    movs r6, #0xcc
    lsls r6, r6, #1
    adds r1, r0, r6
    movs r7, #0xc4
    lsls r7, r7, #1
    adds r0, r0, r7
    ldm r0!, {r5, r6, r7}
    stm r1!, {r5, r6, r7}
    ldr r0, [r0]
    str r0, [r1]
    ldr r0, [r2]
    ldr r1, lbl_08068e7c @ =0x000001a3
    adds r1, r1, r0
    mov ip, r1
    ldrb r1, [r1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #8
    orrs r0, r1
    mov r5, ip
    strb r0, [r5]
    movs r1, #0
    ldr r0, [r2]
    adds r0, r0, r3
    ldrb r0, [r0]
    cmp r0, #0x2e
    bne lbl_08068e80
    movs r1, #3
    b lbl_08068e98
    .align 2, 0
lbl_08068e6c: .4byte 0x03001530
lbl_08068e70: .4byte 0x03000bf0
lbl_08068e74: .4byte 0x08754bc4
lbl_08068e78: .4byte 0x00000193
lbl_08068e7c: .4byte 0x000001a3
lbl_08068e80:
    ldrb r2, [r4, #0xf]
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0
    beq lbl_08068e8e
    movs r1, #2
    b lbl_08068e98
lbl_08068e8e:
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0
    beq lbl_08068e98
    movs r1, #1
lbl_08068e98:
    lsls r1, r1, #5
    ldr r0, lbl_08068eb8 @ =0x083fd310
    adds r1, r1, r0
    ldr r0, lbl_08068ebc @ =0x08754bbc
    ldr r2, [r0]
    adds r2, #0x80
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
lbl_08068eb0:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08068eb8: .4byte 0x083fd310
lbl_08068ebc: .4byte 0x08754bbc

    thumb_func_start sub_08068ec0
sub_08068ec0: @ 0x08068ec0
    push {lr}
    ldr r2, lbl_08068ee0 @ =0x08754bc4
    ldr r1, [r2]
    ldrh r0, [r1, #0xe]
    adds r0, #1
    strh r0, [r1, #0xe]
    ldrb r0, [r1, #0xc]
    adds r3, r2, #0
    cmp r0, #6
    bls lbl_08068ed6
    b lbl_08068fc4
lbl_08068ed6:
    lsls r0, r0, #2
    ldr r1, lbl_08068ee4 @ =lbl_08068ee8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08068ee0: .4byte 0x08754bc4
lbl_08068ee4: .4byte lbl_08068ee8
lbl_08068ee8: @ jump table
    .4byte lbl_08068fc4 @ case 0
    .4byte lbl_08068f04 @ case 1
    .4byte lbl_08068f28 @ case 2
    .4byte lbl_08068f4c @ case 3
    .4byte lbl_08068f64 @ case 4
    .4byte lbl_08068f72 @ case 5
    .4byte lbl_08068fb0 @ case 6
lbl_08068f04:
    ldr r2, [r3]
    adds r3, r2, #0
    adds r3, #0x66
    ldrh r1, [r3]
    ldr r0, lbl_08068f20 @ =0x0000fffb
    ands r0, r1
    strh r0, [r3]
    ldr r1, lbl_08068f24 @ =0x0400004b
    movs r0, #0xd0
    strb r0, [r1]
    ldrb r0, [r2, #0xc]
    adds r0, #1
    strb r0, [r2, #0xc]
    b lbl_08068fc4
    .align 2, 0
lbl_08068f20: .4byte 0x0000fffb
lbl_08068f24: .4byte 0x0400004b
lbl_08068f28:
    ldr r1, lbl_08068f44 @ =0x030013b2
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08068f34
    adds r0, #2
    strh r0, [r1]
lbl_08068f34:
    ldrh r0, [r1]
    cmp r0, #0x10
    bls lbl_08068f3e
    movs r0, #0x10
    strh r0, [r1]
lbl_08068f3e:
    ldr r2, lbl_08068f48 @ =0x030013b0
    b lbl_08068f8a
    .align 2, 0
lbl_08068f44: .4byte 0x030013b2
lbl_08068f48: .4byte 0x030013b0
lbl_08068f4c:
    movs r0, #1
    bl sub_08068dbc
    ldr r3, lbl_08068f60 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1, #0xc]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #0xc]
    b lbl_08068fa2
    .align 2, 0
lbl_08068f60: .4byte 0x08754bc4
lbl_08068f64:
    ldr r1, [r3]
    ldrb r0, [r1, #0xc]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #0xc]
    ldr r0, [r3]
    strh r2, [r0, #0xe]
lbl_08068f72:
    ldr r1, lbl_08068fa8 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08068f7e
    adds r0, #2
    strh r0, [r1]
lbl_08068f7e:
    ldrh r0, [r1]
    cmp r0, #0x10
    bls lbl_08068f88
    movs r0, #0x10
    strh r0, [r1]
lbl_08068f88:
    ldr r2, lbl_08068fac @ =0x030013b2
lbl_08068f8a:
    ldrh r1, [r1]
    movs r0, #0x10
    subs r0, r0, r1
    strh r0, [r2]
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0
    bne lbl_08068fc4
    ldr r0, [r3]
    ldrb r1, [r0, #0xc]
    adds r1, #1
    strb r1, [r0, #0xc]
lbl_08068fa2:
    ldr r0, [r3]
    strh r2, [r0, #0xe]
    b lbl_08068fc4
    .align 2, 0
lbl_08068fa8: .4byte 0x030013b0
lbl_08068fac: .4byte 0x030013b2
lbl_08068fb0:
    ldr r2, [r3]
    adds r1, r2, #0
    adds r1, #0x66
    movs r3, #0
    ldr r0, lbl_08068fc8 @ =0x00003c44
    strh r0, [r1]
    ldr r1, lbl_08068fcc @ =0x0400004b
    movs r0, #0x18
    strb r0, [r1]
    strb r3, [r2, #0xc]
lbl_08068fc4:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08068fc8: .4byte 0x00003c44
lbl_08068fcc: .4byte 0x0400004b

    thumb_func_start sub_08068fd0
sub_08068fd0: @ 0x08068fd0
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #6
    bls lbl_08068fdc
    movs r4, #7
lbl_08068fdc:
    ldr r5, lbl_08069018 @ =0x08754bc4
    ldr r0, [r5]
    movs r1, #0x85
    lsls r1, r1, #3
    adds r0, r0, r1
    ldr r1, lbl_0806901c @ =0x0840d090
    lsls r4, r4, #3
    adds r4, r4, r1
    ldrb r1, [r4, #1]
    bl sub_08068128
    ldr r0, [r5]
    movs r6, #0x89
    lsls r6, r6, #3
    adds r0, r0, r6
    ldrb r1, [r4, #2]
    bl sub_08068128
    ldr r1, [r5]
    ldrh r2, [r4, #4]
    ldr r3, lbl_08069020 @ =0x0000044a
    adds r0, r1, r3
    strh r2, [r0]
    ldrh r0, [r4, #6]
    adds r1, r1, r6
    strh r0, [r1]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08069018: .4byte 0x08754bc4
lbl_0806901c: .4byte 0x0840d090
lbl_08069020: .4byte 0x0000044a

    thumb_func_start sub_08069024
sub_08069024: @ 0x08069024
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov ip, r0
    cmp r0, #0
    bne lbl_08069124
    ldr r1, lbl_08069110 @ =0x08754bc4
    ldr r0, [r1]
    movs r2, #0x95
    lsls r2, r2, #3
    adds r3, r0, r2
    ldrb r0, [r3, #0xb]
    movs r5, #4
    rsbs r5, r5, #0
    adds r2, r5, #0
    ands r2, r0
    movs r0, #2
    orrs r2, r0
    strb r2, [r3, #0xb]
    ldr r0, lbl_08069114 @ =0x03001530
    ldrb r0, [r0, #0x12]
    movs r4, #0x10
    mov r8, r1
    cmp r0, #2
    bne lbl_08069060
    movs r4, #0x11
lbl_08069060:
    strb r4, [r3, #0xa]
    movs r0, #0x3f
    ands r2, r0
    movs r0, #0x40
    orrs r2, r0
    strb r2, [r3, #0xb]
    mov r7, r8
    ldr r0, [r7]
    movs r1, #0x97
    lsls r1, r1, #3
    adds r3, r0, r1
    ldr r2, lbl_08069118 @ =0x0840d188
    mov sb, r2
    ldr r7, lbl_0806911c @ =0x03000054
    mov sl, r7
    adds r6, r5, #0
    adds r2, #2
    movs r5, #2
    movs r4, #6
lbl_08069086:
    ldrh r0, [r2]
    strh r0, [r3, #2]
    ldrh r0, [r2, #2]
    strh r0, [r3]
    ldrb r1, [r3, #0xb]
    adds r0, r6, #0
    ands r0, r1
    orrs r0, r5
    strb r0, [r3, #0xb]
    adds r2, #8
    subs r4, #1
    adds r3, #0x10
    cmp r4, #0
    bge lbl_08069086
    mov r1, r8
    ldr r0, [r1]
    movs r2, #0xa5
    lsls r2, r2, #3
    adds r3, r0, r2
    movs r4, #0
    movs r6, #4
    rsbs r6, r6, #0
    ldr r5, lbl_08069120 @ =0x0840d1c0
lbl_080690b4:
    ldrh r0, [r5]
    strh r0, [r3, #2]
    ldrh r0, [r5, #2]
    strh r0, [r3]
    ldrb r0, [r3, #0xb]
    adds r2, r6, #0
    ands r2, r0
    movs r0, #2
    orrs r2, r0
    movs r0, #0x3f
    ands r2, r0
    strb r2, [r3, #0xb]
    mov r7, r8
    ldr r0, [r7]
    adds r0, #0x44
    ldrh r0, [r0]
    asrs r0, r4
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080690f2
    movs r0, #2
    ldrsh r1, [r3, r0]
    movs r7, #0
    ldrsh r0, [r3, r7]
    cmn r1, r0
    beq lbl_080690f2
    movs r1, #0x40
    adds r0, r2, #0
    orrs r0, r1
    strb r0, [r3, #0xb]
lbl_080690f2:
    ldrb r1, [r3, #0xb]
    movs r0, #0xc0
    ands r0, r1
    movs r1, #0
    cmp r0, #0
    beq lbl_08069100
    movs r1, #0xf
lbl_08069100:
    strb r1, [r3, #0xa]
    adds r5, #4
    adds r4, #1
    adds r3, #0x10
    cmp r4, #0xf
    ble lbl_080690b4
    b lbl_08069182
    .align 2, 0
lbl_08069110: .4byte 0x08754bc4
lbl_08069114: .4byte 0x03001530
lbl_08069118: .4byte 0x0840d188
lbl_0806911c: .4byte 0x03000054
lbl_08069120: .4byte 0x0840d1c0
lbl_08069124:
    ldr r0, lbl_08069164 @ =0x08754bc4
    mov r8, r0
    ldr r1, lbl_08069168 @ =0x0840d188
    mov sb, r1
    ldr r2, lbl_0806916c @ =0x03000054
    mov sl, r2
    mov r7, ip
    cmp r7, #2
    bne lbl_08069182
    ldr r0, [r0]
    movs r1, #0xa5
    lsls r1, r1, #3
    adds r3, r0, r1
    movs r4, #0
    movs r2, #0x3f
    mov r5, r8
lbl_08069144:
    ldr r0, [r5]
    adds r0, #0x44
    ldrh r1, [r0]
    asrs r1, r4
    movs r0, #1
    ands r1, r0
    cmp r1, #0
    beq lbl_08069170
    movs r0, #0xf
    strb r0, [r3, #0xa]
    ldrb r1, [r3, #0xb]
    adds r0, r2, #0
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    b lbl_08069178
    .align 2, 0
lbl_08069164: .4byte 0x08754bc4
lbl_08069168: .4byte 0x0840d188
lbl_0806916c: .4byte 0x03000054
lbl_08069170:
    strb r1, [r3, #0xa]
    ldrb r1, [r3, #0xb]
    adds r0, r2, #0
    ands r0, r1
lbl_08069178:
    strb r0, [r3, #0xb]
    adds r4, #1
    adds r3, #0x10
    cmp r4, #0xf
    ble lbl_08069144
lbl_08069182:
    movs r7, #2
    mov r2, ip
    cmp r2, #0
    bne lbl_0806918c
    movs r7, #1
lbl_0806918c:
    mov r1, r8
    ldr r0, [r1]
    movs r2, #0x97
    lsls r2, r2, #3
    adds r3, r0, r2
    movs r4, #0
    mov r6, r8
    ldr r5, lbl_080691a8 @ =0x0840d188
lbl_0806919c:
    ldr r0, [r6]
    ldrb r0, [r0, #0x12]
    cmp r0, r4
    beq lbl_080691ac
    ldrb r0, [r5]
    b lbl_080691ae
    .align 2, 0
lbl_080691a8: .4byte 0x0840d188
lbl_080691ac:
    ldrb r0, [r5, #1]
lbl_080691ae:
    strb r0, [r3, #0xa]
    ldr r0, [r6]
    adds r0, #0xba
    ldrb r1, [r0]
    asrs r1, r4
    movs r0, #1
    ands r1, r0
    movs r2, #0
    cmp r1, #0
    beq lbl_080691c4
    adds r2, r7, #0
lbl_080691c4:
    lsls r2, r2, #6
    ldrb r1, [r3, #0xb]
    movs r0, #0x3f
    ands r0, r1
    orrs r0, r2
    strb r0, [r3, #0xb]
    adds r5, #8
    adds r4, #1
    adds r3, #0x10
    cmp r4, #6
    ble lbl_0806919c
    mov r7, r8
    ldr r0, [r7]
    movs r1, #0x95
    lsls r1, r1, #3
    adds r3, r0, r1
    mov r2, sl
    ldrb r0, [r2]
    lsls r0, r0, #3
    add r0, sb
    ldrh r0, [r0, #2]
    strh r0, [r3, #2]
    ldrb r0, [r2]
    lsls r0, r0, #3
    add r0, sb
    ldrh r0, [r0, #4]
    subs r0, #0x18
    strh r0, [r3]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0806920c
sub_0806920c: @ 0x0806920c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r1, lbl_080692a8 @ =0x08754bc4
    ldr r0, [r1]
    movs r2, #0x84
    lsls r2, r2, #1
    adds r3, r0, r2
    adds r7, r1, #0
    ldr r4, lbl_080692ac @ =0x0840d028
    mov r8, r4
    movs r5, #0x16
lbl_08069224:
    adds r0, r3, #0
    mov r1, r8
    ldm r1!, {r2, r4, r6}
    stm r0!, {r2, r4, r6}
    ldr r1, [r1]
    str r1, [r0]
    subs r5, #1
    adds r3, #0x10
    cmp r5, #0
    bge lbl_08069224
    ldr r0, [r7]
    movs r6, #0x85
    lsls r6, r6, #3
    adds r3, r0, r6
    movs r5, #3
lbl_08069242:
    adds r0, r3, #0
    mov r1, r8
    ldm r1!, {r2, r4, r6}
    stm r0!, {r2, r4, r6}
    ldr r1, [r1]
    str r1, [r0]
    subs r5, #1
    adds r3, #0x10
    cmp r5, #0
    bge lbl_08069242
    ldr r0, [r7]
    movs r1, #0x8d
    lsls r1, r1, #3
    adds r3, r0, r1
    movs r5, #3
lbl_08069260:
    adds r0, r3, #0
    mov r1, r8
    ldm r1!, {r2, r4, r6}
    stm r0!, {r2, r4, r6}
    ldr r1, [r1]
    str r1, [r0]
    subs r5, #1
    adds r3, #0x10
    cmp r5, #0
    bge lbl_08069260
    ldr r0, [r7]
    movs r1, #0x95
    lsls r1, r1, #3
    adds r3, r0, r1
    movs r5, #0x17
lbl_0806927e:
    adds r0, r3, #0
    mov r1, r8
    ldm r1!, {r2, r4, r6}
    stm r0!, {r2, r4, r6}
    ldr r1, [r1]
    str r1, [r0]
    subs r5, #1
    adds r3, #0x10
    cmp r5, #0
    bge lbl_0806927e
    ldr r2, [r7]
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080692b0
    movs r0, #0
    bl sub_08068af8
    b lbl_08069578
    .align 2, 0
lbl_080692a8: .4byte 0x08754bc4
lbl_080692ac: .4byte 0x0840d028
lbl_080692b0:
    ldr r0, lbl_08069340 @ =0x03001530
    ldrb r0, [r0, #0x12]
    movs r1, #2
    cmp r0, #2
    beq lbl_080692bc
    movs r1, #1
lbl_080692bc:
    ldr r3, lbl_08069344 @ =0x00000402
    adds r0, r2, r3
    strb r1, [r0]
    ldr r2, [r7]
    ldr r4, lbl_08069348 @ =0x00000403
    adds r2, r2, r4
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
    ldr r2, [r7]
    ldr r0, lbl_0806934c @ =0x03000059
    ldrb r0, [r0]
    lsls r0, r0, #5
    ldr r6, lbl_08069350 @ =0x000003fa
    adds r1, r2, r6
    strh r0, [r1]
    ldr r0, lbl_08069354 @ =0x0300005a
    ldrb r0, [r0]
    lsls r0, r0, #5
    subs r3, #0xa
    adds r1, r2, r3
    strh r0, [r1]
    adds r4, #1
    adds r2, r2, r4
    ldrb r3, [r2]
    movs r1, #0x10
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r3
    movs r4, #3
    orrs r0, r4
    strb r0, [r2]
    ldr r0, [r7]
    adds r6, #0x1a
    adds r0, r0, r6
    ldrb r2, [r0]
    ands r1, r2
    orrs r1, r4
    strb r1, [r0]
    ldr r3, [r7]
    ldrh r1, [r3]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0806935c
    ldr r0, lbl_08069348 @ =0x00000403
    adds r3, r3, r0
    ldrb r2, [r3]
    movs r1, #4
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r2
    movs r4, #1
    orrs r0, r4
    strb r0, [r3]
    ldr r0, [r7]
    ldr r2, lbl_08069358 @ =0x00000413
    adds r0, r0, r2
    ldrb r2, [r0]
    ands r1, r2
    orrs r1, r4
    strb r1, [r0]
    b lbl_08069372
    .align 2, 0
lbl_08069340: .4byte 0x03001530
lbl_08069344: .4byte 0x00000402
lbl_08069348: .4byte 0x00000403
lbl_0806934c: .4byte 0x03000059
lbl_08069350: .4byte 0x000003fa
lbl_08069354: .4byte 0x0300005a
lbl_08069358: .4byte 0x00000413
lbl_0806935c:
    ldr r6, lbl_080693fc @ =0x00000403
    adds r1, r3, r6
    ldrb r0, [r1]
    orrs r0, r4
    strb r0, [r1]
    ldr r1, [r7]
    ldr r0, lbl_08069400 @ =0x00000413
    adds r1, r1, r0
    ldrb r0, [r1]
    orrs r0, r4
    strb r0, [r1]
lbl_08069372:
    ldr r1, [r7]
    ldrb r0, [r1, #4]
    cmp r0, #1
    beq lbl_08069396
    movs r2, #0x89
    lsls r2, r2, #1
    adds r0, r1, r2
    movs r1, #0
    strb r1, [r0]
    ldr r2, [r7]
    movs r3, #0x84
    lsls r3, r3, #1
    adds r0, r2, r3
    strh r1, [r0]
    movs r4, #0x85
    lsls r4, r4, #1
    adds r0, r2, r4
    strh r1, [r0]
lbl_08069396:
    ldr r2, [r7]
    ldrh r1, [r2]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08069418
    ldr r1, lbl_08069404 @ =0x0840d180
    ldrb r0, [r2, #0x12]
    adds r0, r0, r1
    ldrb r1, [r0]
    ldr r6, lbl_08069408 @ =0x00000432
    adds r0, r2, r6
    strb r1, [r0]
    ldr r1, [r7]
    ldr r3, lbl_0806940c @ =0x0840d17c
    ldrh r2, [r3, #2]
    movs r4, #0x85
    lsls r4, r4, #3
    adds r0, r1, r4
    strh r2, [r0]
    ldrh r2, [r3]
    subs r6, #8
    adds r0, r1, r6
    strh r2, [r0]
    ldr r3, lbl_08069410 @ =0x00000433
    adds r1, r1, r3
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r2, [r7]
    ldr r0, lbl_08069414 @ =0x00000434
    adds r2, r2, r0
    ldrb r1, [r2]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r2]
    ldr r2, [r7]
    adds r2, r2, r3
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
    b lbl_08069502
    .align 2, 0
lbl_080693fc: .4byte 0x00000403
lbl_08069400: .4byte 0x00000413
lbl_08069404: .4byte 0x0840d180
lbl_08069408: .4byte 0x00000432
lbl_0806940c: .4byte 0x0840d17c
lbl_08069410: .4byte 0x00000433
lbl_08069414: .4byte 0x00000434
lbl_08069418:
    movs r0, #0x20
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0
    beq lbl_08069474
    ldr r1, lbl_08069464 @ =0x03000054
    ldrb r0, [r1]
    movs r5, #7
    cmp r0, #6
    bhi lbl_08069430
    adds r5, r0, #0
lbl_08069430:
    movs r4, #0x85
    lsls r4, r4, #3
    adds r0, r2, r4
    ldr r2, lbl_08069468 @ =0x0840d090
    lsls r1, r5, #3
    adds r1, r1, r2
    ldrb r1, [r1]
    bl sub_08068128
    ldr r1, [r7]
    adds r4, r1, r4
    movs r0, #0xc
    strh r0, [r4]
    ldr r3, lbl_0806946c @ =0x0000042a
    adds r2, r1, r3
    movs r0, #0xe8
    lsls r0, r0, #1
    strh r0, [r2]
    ldr r4, lbl_08069470 @ =0x00000433
    adds r1, r1, r4
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    b lbl_08069502
    .align 2, 0
lbl_08069464: .4byte 0x03000054
lbl_08069468: .4byte 0x0840d090
lbl_0806946c: .4byte 0x0000042a
lbl_08069470: .4byte 0x00000433
lbl_08069474:
    ldr r6, lbl_08069584 @ =0x00000442
    adds r0, r2, r6
    strb r1, [r0]
    ldr r1, [r7]
    movs r0, #0x87
    lsls r0, r0, #3
    adds r2, r1, r0
    movs r3, #0
    mov r8, r3
    movs r0, #0x18
    strh r0, [r2]
    ldr r4, lbl_08069588 @ =0x0000043a
    adds r0, r1, r4
    movs r6, #0xe8
    lsls r6, r6, #1
    strh r6, [r0]
    ldr r0, lbl_0806958c @ =0x00000443
    adds r1, r1, r0
    ldrb r2, [r1]
    movs r4, #4
    rsbs r4, r4, #0
    adds r0, r4, #0
    ands r0, r2
    movs r5, #1
    orrs r0, r5
    strb r0, [r1]
    ldr r0, lbl_08069590 @ =0x03000054
    ldrb r0, [r0]
    bl sub_08068fd0
    ldr r1, [r7]
    movs r3, #0x85
    lsls r3, r3, #3
    adds r2, r1, r3
    movs r0, #0xc
    strh r0, [r2]
    ldr r2, lbl_08069594 @ =0x0000042a
    adds r0, r1, r2
    strh r6, [r0]
    adds r3, #0xb
    adds r1, r1, r3
    ldrb r2, [r1]
    adds r0, r4, #0
    ands r0, r2
    orrs r0, r5
    strb r0, [r1]
    ldr r0, [r7]
    ldr r6, lbl_08069598 @ =0x00000453
    adds r0, r0, r6
    ldrb r1, [r0]
    ands r4, r1
    orrs r4, r5
    strb r4, [r0]
    ldr r0, [r7]
    ldr r1, lbl_0806959c @ =0x00000462
    adds r0, r0, r1
    mov r2, r8
    strb r2, [r0]
    ldr r1, [r7]
    adds r3, #0x25
    adds r2, r1, r3
    movs r0, #0xcc
    lsls r0, r0, #1
    strh r0, [r2]
    ldr r4, lbl_080695a0 @ =0x0000045a
    adds r1, r1, r4
    adds r0, #0x88
    strh r0, [r1]
    movs r0, #0
    bl sub_08069024
lbl_08069502:
    movs r0, #0
    bl draw_pause_screen_info
    ldr r7, lbl_080695a4 @ =0x08754bc4
    ldr r6, lbl_080695a8 @ =0x0840d0d0
    ldr r0, lbl_080695ac @ =0x00000473
    mov r8, r0
    ldr r1, lbl_080695b0 @ =0x03000bf0
    mov ip, r1
    adds r4, r6, #0
    adds r4, #0x20
    movs r5, #0x20
lbl_0806951a:
    subs r4, #8
    subs r5, #8
    mov r2, ip
    movs r0, #0
    ldrsb r0, [r2, r0]
    cmp r0, #2
    bne lbl_0806953e
    ldr r2, [r7]
    ldrh r0, [r4]
    lsls r0, r0, #4
    adds r2, r2, r0
    add r2, r8
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
lbl_0806953e:
    ldr r1, [r7]
    ldrh r3, [r4]
    lsls r3, r3, #4
    adds r1, r1, r3
    adds r0, r6, #2
    adds r0, r5, r0
    ldrh r0, [r0]
    ldr r2, lbl_080695b4 @ =0x00000472
    adds r1, r1, r2
    strb r0, [r1]
    ldr r2, [r7]
    adds r2, r2, r3
    adds r0, r6, #4
    adds r0, r5, r0
    ldrh r1, [r0]
    ldr r3, lbl_080695b8 @ =0x0000046a
    adds r0, r2, r3
    strh r1, [r0]
    ldrh r1, [r4, #6]
    subs r3, #2
    adds r0, r2, r3
    strh r1, [r0]
    add r2, r8
    ldrb r0, [r2]
    movs r1, #3
    orrs r0, r1
    strb r0, [r2]
    cmp r4, r6
    bgt lbl_0806951a
lbl_08069578:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08069584: .4byte 0x00000442
lbl_08069588: .4byte 0x0000043a
lbl_0806958c: .4byte 0x00000443
lbl_08069590: .4byte 0x03000054
lbl_08069594: .4byte 0x0000042a
lbl_08069598: .4byte 0x00000453
lbl_0806959c: .4byte 0x00000462
lbl_080695a0: .4byte 0x0000045a
lbl_080695a4: .4byte 0x08754bc4
lbl_080695a8: .4byte 0x0840d0d0
lbl_080695ac: .4byte 0x00000473
lbl_080695b0: .4byte 0x03000bf0
lbl_080695b4: .4byte 0x00000472
lbl_080695b8: .4byte 0x0000046a

    thumb_func_start sub_080695bc
sub_080695bc: @ 0x080695bc
    push {r4, lr}
    ldr r1, lbl_080695f0 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r4, lbl_080695f4 @ =0x08754bc4
    ldr r1, [r4]
    movs r0, #0x85
    lsls r0, r0, #3
    adds r1, r1, r0
    ldr r2, lbl_080695f8 @ =0x0840d3ec
    movs r0, #4
    bl sub_080696ac
    ldr r1, [r4]
    ldrb r0, [r1, #0x11]
    cmp r0, #0
    beq lbl_08069600
    movs r0, #0x95
    lsls r0, r0, #3
    adds r1, r1, r0
    ldr r2, lbl_080695fc @ =0x0840d5dc
    movs r0, #0x18
    bl sub_080696ac
    b lbl_0806960e
    .align 2, 0
lbl_080695f0: .4byte 0x03001382
lbl_080695f4: .4byte 0x08754bc4
lbl_080695f8: .4byte 0x0840d3ec
lbl_080695fc: .4byte 0x0840d5dc
lbl_08069600:
    movs r0, #0x8d
    lsls r0, r0, #3
    adds r1, r1, r0
    ldr r2, lbl_08069690 @ =0x0840d4f4
    movs r0, #4
    bl sub_080696ac
lbl_0806960e:
    ldr r4, lbl_08069694 @ =0x08754bc4
    ldr r1, [r4]
    movs r0, #0x84
    lsls r0, r0, #1
    adds r1, r1, r0
    ldr r2, lbl_08069698 @ =0x0840d22c
    movs r0, #0x17
    bl sub_080696ac
    ldr r2, [r4]
    ldrh r1, [r2]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0806963a
    movs r0, #0xea
    lsls r0, r0, #2
    adds r1, r2, r0
    ldr r2, lbl_0806969c @ =0x0840d55c
    movs r0, #5
    bl sub_080696ac
lbl_0806963a:
    ldr r2, [r4]
    ldrb r0, [r2, #0x11]
    cmp r0, #0
    bne lbl_08069684
    ldrh r1, [r2]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    bne lbl_08069684
    ldr r1, lbl_080696a0 @ =0x03000054
    ldrb r0, [r2, #0x12]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_08069664
    movs r0, #0xfe
    lsls r0, r0, #2
    adds r1, r2, r0
    ldr r2, lbl_080696a4 @ =0x0840d51c
    movs r0, #1
    bl sub_080696ac
lbl_08069664:
    ldr r1, [r4]
    movs r0, #0xba
    lsls r0, r0, #2
    adds r1, r1, r0
    ldr r2, lbl_0806969c @ =0x0840d55c
    movs r0, #0xc
    bl sub_080696ac
    ldr r1, [r4]
    movs r0, #0x81
    lsls r0, r0, #3
    adds r1, r1, r0
    ldr r2, lbl_080696a8 @ =0x0840d534
    movs r0, #1
    bl sub_080696ac
lbl_08069684:
    bl ResetFreeOAM
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08069690: .4byte 0x0840d4f4
lbl_08069694: .4byte 0x08754bc4
lbl_08069698: .4byte 0x0840d22c
lbl_0806969c: .4byte 0x0840d55c
lbl_080696a0: .4byte 0x03000054
lbl_080696a4: .4byte 0x0840d51c
lbl_080696a8: .4byte 0x0840d534

    thumb_func_start sub_080696ac
sub_080696ac: @ 0x080696ac
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x10
    adds r3, r1, #0
    str r2, [sp, #4]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp]
    ldr r0, lbl_08069740 @ =0x03000e7c
    mov sb, r0
    ldr r1, lbl_08069744 @ =0x03001382
    ldrb r2, [r1]
    str r2, [sp, #8]
    mov sl, r2
    lsls r0, r2, #3
    add sb, r0
    movs r0, #0
    str r0, [sp, #0xc]
    ldr r1, [sp]
    cmp r0, r1
    blt lbl_080696de
    b lbl_080699de
lbl_080696de:
    ldrb r0, [r3, #0xa]
    adds r6, r0, #0
    cmp r6, #0
    bne lbl_080696e8
    b lbl_080699ce
lbl_080696e8:
    ldrb r1, [r3, #0xb]
    movs r0, #0xc0
    ands r0, r1
    cmp r0, #0
    bne lbl_080696f4
    b lbl_080699ce
lbl_080696f4:
    cmp r0, #0x80
    bne lbl_08069708
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r3, #0xb]
    movs r0, #0
    strb r0, [r3, #8]
    strb r0, [r3, #9]
lbl_08069708:
    ldrb r1, [r3, #0xb]
    movs r0, #0x11
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r3, #0xb]
    ldrb r0, [r3, #0xa]
    lsls r0, r0, #3
    ldr r2, [sp, #4]
    adds r4, r0, r2
    ldr r5, [r4]
    ldrb r2, [r3, #9]
    lsls r0, r2, #3
    adds r0, r0, r5
    ldrb r1, [r3, #8]
    ldrb r0, [r0, #4]
    cmp r1, r0
    bhs lbl_0806972c
    b lbl_08069880
lbl_0806972c:
    ldrb r0, [r4, #4]
    cmp r0, #9
    bls lbl_08069734
    b lbl_08069880
lbl_08069734:
    lsls r0, r0, #2
    ldr r1, lbl_08069748 @ =lbl_0806974c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08069740: .4byte 0x03000e7c
lbl_08069744: .4byte 0x03001382
lbl_08069748: .4byte lbl_0806974c
lbl_0806974c: @ jump table
    .4byte lbl_08069880 @ case 0
    .4byte lbl_08069774 @ case 1
    .4byte lbl_0806978e @ case 2
    .4byte lbl_08069794 @ case 3
    .4byte lbl_080697c2 @ case 4
    .4byte lbl_080697de @ case 5
    .4byte lbl_08069804 @ case 6
    .4byte lbl_0806981e @ case 7
    .4byte lbl_08069844 @ case 8
    .4byte lbl_0806985e @ case 9
lbl_08069774:
    movs r0, #0
    strb r0, [r3, #8]
    ldrb r0, [r3, #9]
    adds r0, #1
    strb r0, [r3, #9]
    ldrb r0, [r3, #9]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069880
    strb r0, [r3, #9]
    b lbl_08069880
lbl_0806978e:
    movs r0, #0
    strb r0, [r3, #8]
    b lbl_08069880
lbl_08069794:
    lsls r0, r2, #3
    adds r0, r0, r5
    ldrb r1, [r0, #4]
    adds r0, r2, #1
    movs r4, #0
    strb r0, [r3, #9]
    ldrb r2, [r3, #9]
    lsls r0, r2, #3
    adds r0, r0, r5
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_080697be
    subs r0, r2, #1
    strb r0, [r3, #9]
    subs r0, r1, #1
    strb r0, [r3, #8]
    ldrb r0, [r3, #0xb]
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r3, #0xb]
    b lbl_08069880
lbl_080697be:
    strb r4, [r3, #8]
    b lbl_08069880
lbl_080697c2:
    movs r0, #0
    strb r0, [r3, #8]
    ldrb r0, [r3, #9]
    adds r0, #1
    strb r0, [r3, #9]
    ldrb r0, [r3, #9]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069880
    strb r0, [r3, #0xa]
    strb r0, [r3, #9]
    b lbl_08069854
lbl_080697de:
    movs r0, #0
    strb r0, [r3, #8]
    ldrb r0, [r3, #9]
    adds r0, #1
    strb r0, [r3, #9]
    ldrb r0, [r3, #9]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r1, [r0, #4]
    cmp r1, #0
    bne lbl_08069880
    adds r0, r6, #1
    strb r0, [r3, #0xa]
    strb r1, [r3, #9]
    ldrb r0, [r3, #0xa]
    lsls r0, r0, #3
    ldr r1, [sp, #4]
    adds r0, r0, r1
    b lbl_0806987e
lbl_08069804:
    movs r0, #0
    strb r0, [r3, #8]
    ldrb r1, [r3, #9]
    adds r0, r1, #1
    strb r0, [r3, #9]
    ldrb r0, [r3, #9]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069880
    adds r0, r6, #1
    b lbl_08069872
lbl_0806981e:
    movs r0, #0
    strb r0, [r3, #8]
    ldrb r0, [r3, #9]
    adds r0, #1
    strb r0, [r3, #9]
    ldrb r0, [r3, #9]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r1, [r0, #4]
    cmp r1, #0
    bne lbl_08069880
    subs r0, r6, #1
    strb r0, [r3, #0xa]
    strb r1, [r3, #9]
    ldrb r0, [r3, #0xa]
    lsls r0, r0, #3
    ldr r1, [sp, #4]
    adds r0, r0, r1
    b lbl_0806987e
lbl_08069844:
    movs r0, #0
    strb r0, [r3, #8]
    ldrb r0, [r3, #9]
    adds r1, r0, #0
    cmp r1, #0
    bne lbl_0806986a
    strb r1, [r3, #0xa]
    strb r1, [r3, #9]
lbl_08069854:
    ldrb r1, [r3, #0xb]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r3, #0xb]
    b lbl_080699ce
lbl_0806985e:
    movs r0, #0
    strb r0, [r3, #8]
    ldrb r0, [r3, #9]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08069870
lbl_0806986a:
    subs r0, #1
    strb r0, [r3, #9]
    b lbl_08069880
lbl_08069870:
    subs r0, r6, #1
lbl_08069872:
    strb r0, [r3, #0xa]
    strb r1, [r3, #9]
    ldrb r0, [r3, #0xa]
    lsls r0, r0, #3
    ldr r2, [sp, #4]
    adds r0, r0, r2
lbl_0806987e:
    ldr r5, [r0]
lbl_08069880:
    ldrb r0, [r3, #8]
    adds r0, #1
    strb r0, [r3, #8]
    ldrb r1, [r3, #0xb]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08069892
    b lbl_080699ce
lbl_08069892:
    ldrb r0, [r3, #0xc]
    movs r1, #0xf
    ands r1, r0
    cmp r1, #0
    bne lbl_080698b4
    ldr r0, lbl_080698ac @ =0x03000bf4
    movs r1, #0
    ldrsh r7, [r0, r1]
    ldr r0, lbl_080698b0 @ =0x03000bf6
    movs r2, #0
    ldrsh r6, [r0, r2]
    b lbl_0806990c
    .align 2, 0
lbl_080698ac: .4byte 0x03000bf4
lbl_080698b0: .4byte 0x03000bf6
lbl_080698b4:
    cmp r1, #1
    bne lbl_080698d0
    ldr r0, lbl_080698c8 @ =0x03000bf8
    movs r1, #0
    ldrsh r7, [r0, r1]
    ldr r0, lbl_080698cc @ =0x03000bfa
    movs r2, #0
    ldrsh r6, [r0, r2]
    b lbl_0806990c
    .align 2, 0
lbl_080698c8: .4byte 0x03000bf8
lbl_080698cc: .4byte 0x03000bfa
lbl_080698d0:
    cmp r1, #2
    bne lbl_080698ec
    ldr r0, lbl_080698e4 @ =0x03000bfc
    movs r1, #0
    ldrsh r7, [r0, r1]
    ldr r0, lbl_080698e8 @ =0x03000bfe
    movs r2, #0
    ldrsh r6, [r0, r2]
    b lbl_0806990c
    .align 2, 0
lbl_080698e4: .4byte 0x03000bfc
lbl_080698e8: .4byte 0x03000bfe
lbl_080698ec:
    cmp r1, #3
    bne lbl_08069908
    ldr r0, lbl_08069900 @ =0x03000c00
    movs r1, #0
    ldrsh r7, [r0, r1]
    ldr r0, lbl_08069904 @ =0x03000c02
    movs r2, #0
    ldrsh r6, [r0, r2]
    b lbl_0806990c
    .align 2, 0
lbl_08069900: .4byte 0x03000c00
lbl_08069904: .4byte 0x03000c02
lbl_08069908:
    movs r7, #0
    movs r6, #0
lbl_0806990c:
    ldrh r0, [r3]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x12
    asrs r1, r6, #2
    subs r0, r0, r1
    ldr r1, lbl_080699f8 @ =0x03005807
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r6, r1, r0
    ldrh r0, [r3, #2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x12
    asrs r1, r7, #2
    subs r0, r0, r1
    ldr r1, lbl_080699fc @ =0x03005806
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r7, r1, r0
    ldrb r0, [r3, #9]
    lsls r0, r0, #3
    adds r5, r5, r0
    ldr r4, [r5]
    ldrh r0, [r4]
    ldr r1, [sp, #8]
    adds r0, r1, r0
    cmp r0, #0x7f
    bgt lbl_080699de
    str r0, [sp, #8]
    adds r4, #2
    cmp sl, r0
    bge lbl_080699ce
    movs r2, #3
    mov ip, r2
    movs r0, #0xd
    rsbs r0, r0, #0
    mov r8, r0
    ldr r1, lbl_08069a00 @ =0x03000e7c
    mov r2, sl
    lsls r0, r2, #3
    adds r5, r0, r1
lbl_08069960:
    ldrh r1, [r4]
    adds r4, #2
    mov r0, sb
    strh r1, [r0]
    movs r2, #2
    add sb, r2
    adds r0, r1, r6
    strb r0, [r5]
    ldrh r1, [r4]
    adds r4, #2
    mov r0, sb
    strh r1, [r0]
    add sb, r2
    adds r1, r1, r7
    ldr r0, lbl_08069a04 @ =0x000001ff
    ands r1, r0
    ldrh r2, [r5, #2]
    ldr r0, lbl_08069a08 @ =0xfffffe00
    ands r0, r2
    orrs r0, r1
    strh r0, [r5, #2]
    ldrh r0, [r4]
    mov r1, sb
    strh r0, [r1]
    adds r4, #2
    ldrb r1, [r3, #0xb]
    lsls r1, r1, #0x1e
    lsrs r1, r1, #0x1e
    mov r2, ip
    ands r1, r2
    lsls r1, r1, #2
    ldrb r2, [r5, #5]
    mov r0, r8
    ands r0, r2
    orrs r0, r1
    strb r0, [r5, #5]
    ldrb r1, [r3, #0xb]
    lsls r1, r1, #0x1c
    lsrs r1, r1, #0x1e
    mov r0, ip
    ands r1, r0
    lsls r1, r1, #2
    ldrb r2, [r5, #1]
    mov r0, r8
    ands r0, r2
    orrs r0, r1
    strb r0, [r5, #1]
    movs r1, #4
    add sb, r1
    adds r5, #8
    movs r2, #1
    add sl, r2
    ldr r0, [sp, #8]
    cmp sl, r0
    blt lbl_08069960
lbl_080699ce:
    ldr r1, [sp, #0xc]
    adds r1, #1
    str r1, [sp, #0xc]
    adds r3, #0x10
    ldr r2, [sp]
    cmp r1, r2
    bge lbl_080699de
    b lbl_080696de
lbl_080699de:
    mov r0, sp
    ldrb r1, [r0, #8]
    ldr r0, lbl_08069a0c @ =0x03001382
    strb r1, [r0]
    add sp, #0x10
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080699f8: .4byte 0x03005807
lbl_080699fc: .4byte 0x03005806
lbl_08069a00: .4byte 0x03000e7c
lbl_08069a04: .4byte 0x000001ff
lbl_08069a08: .4byte 0xfffffe00
lbl_08069a0c: .4byte 0x03001382

    thumb_func_start sub_08069a10
sub_08069a10: @ 0x08069a10
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x1c
    adds r5, r1, #0
    str r2, [sp, #0x10]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0xc]
    ldr r0, lbl_08069aa4 @ =0x03000e7c
    mov sb, r0
    ldr r0, lbl_08069aa8 @ =0x03001382
    ldrb r0, [r0]
    str r0, [sp, #0x14]
    mov sl, r0
    lsls r0, r0, #3
    add sb, r0
    movs r1, #0
    str r1, [sp, #0x18]
    ldr r2, [sp, #0xc]
    cmp r1, r2
    blt lbl_08069a42
    b lbl_08069da2
lbl_08069a42:
    ldrb r0, [r5, #0xa]
    adds r7, r0, #0
    cmp r7, #0
    bne lbl_08069a4c
    b lbl_08069d92
lbl_08069a4c:
    ldrb r1, [r5, #0xb]
    movs r0, #0xc0
    ands r0, r1
    cmp r0, #0
    bne lbl_08069a58
    b lbl_08069d92
lbl_08069a58:
    cmp r0, #0x80
    bne lbl_08069a6c
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r5, #0xb]
    movs r0, #0
    strb r0, [r5, #8]
    strb r0, [r5, #9]
lbl_08069a6c:
    ldrb r1, [r5, #0xb]
    movs r0, #0x11
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r5, #0xb]
    ldrb r0, [r5, #0xa]
    lsls r0, r0, #3
    ldr r1, [sp, #0x10]
    adds r3, r0, r1
    ldr r6, [r3]
    ldrb r2, [r5, #9]
    lsls r0, r2, #3
    adds r0, r0, r6
    ldrb r1, [r5, #8]
    adds r4, r2, #0
    ldrb r0, [r0, #4]
    cmp r1, r0
    bhs lbl_08069a92
    b lbl_08069be4
lbl_08069a92:
    ldrb r0, [r3, #4]
    cmp r0, #9
    bls lbl_08069a9a
    b lbl_08069be4
lbl_08069a9a:
    lsls r0, r0, #2
    ldr r1, lbl_08069aac @ =lbl_08069ab0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08069aa4: .4byte 0x03000e7c
lbl_08069aa8: .4byte 0x03001382
lbl_08069aac: .4byte lbl_08069ab0
lbl_08069ab0: @ jump table
    .4byte lbl_08069be4 @ case 0
    .4byte lbl_08069ad8 @ case 1
    .4byte lbl_08069af2 @ case 2
    .4byte lbl_08069af8 @ case 3
    .4byte lbl_08069b26 @ case 4
    .4byte lbl_08069b42 @ case 5
    .4byte lbl_08069b5c @ case 6
    .4byte lbl_08069b82 @ case 7
    .4byte lbl_08069ba8 @ case 8
    .4byte lbl_08069bc2 @ case 9
lbl_08069ad8:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r0, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069be4
    strb r0, [r5, #9]
    b lbl_08069be4
lbl_08069af2:
    movs r0, #0
    strb r0, [r5, #8]
    b lbl_08069be4
lbl_08069af8:
    lsls r0, r4, #3
    adds r0, r0, r6
    ldrb r2, [r0, #4]
    adds r0, r4, #1
    movs r3, #0
    strb r0, [r5, #9]
    ldrb r1, [r5, #9]
    lsls r0, r1, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069b22
    subs r0, r1, #1
    strb r0, [r5, #9]
    subs r0, r2, #1
    strb r0, [r5, #8]
    ldrb r0, [r5, #0xb]
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r5, #0xb]
    b lbl_08069be4
lbl_08069b22:
    strb r3, [r5, #8]
    b lbl_08069be4
lbl_08069b26:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r0, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069be4
    strb r0, [r5, #0xa]
    strb r0, [r5, #9]
    b lbl_08069bb8
lbl_08069b42:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r0, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r1, [r0, #4]
    cmp r1, #0
    bne lbl_08069be4
    adds r0, r7, #1
    b lbl_08069bd6
lbl_08069b5c:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r1, [r5, #9]
    adds r0, r1, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069be4
    adds r0, r7, #1
    strb r0, [r5, #0xa]
    strb r1, [r5, #9]
    ldrb r0, [r5, #0xa]
    lsls r0, r0, #3
    ldr r3, [sp, #0x10]
    adds r0, r0, r3
    b lbl_08069be2
lbl_08069b82:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r0, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r1, [r0, #4]
    cmp r1, #0
    bne lbl_08069be4
    subs r0, r7, #1
    strb r0, [r5, #0xa]
    strb r1, [r5, #9]
    ldrb r0, [r5, #0xa]
    lsls r0, r0, #3
    ldr r1, [sp, #0x10]
    adds r0, r0, r1
    b lbl_08069be2
lbl_08069ba8:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r1, r0, #0
    cmp r1, #0
    bne lbl_08069bce
    strb r1, [r5, #0xa]
    strb r1, [r5, #9]
lbl_08069bb8:
    ldrb r1, [r5, #0xb]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r5, #0xb]
    b lbl_08069d92
lbl_08069bc2:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08069bd4
lbl_08069bce:
    subs r0, #1
    strb r0, [r5, #9]
    b lbl_08069be4
lbl_08069bd4:
    subs r0, r7, #1
lbl_08069bd6:
    strb r0, [r5, #0xa]
    strb r1, [r5, #9]
    ldrb r0, [r5, #0xa]
    lsls r0, r0, #3
    ldr r2, [sp, #0x10]
    adds r0, r0, r2
lbl_08069be2:
    ldr r6, [r0]
lbl_08069be4:
    ldrb r0, [r5, #8]
    adds r0, #1
    strb r0, [r5, #8]
    ldrb r1, [r5, #0xb]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08069bf6
    b lbl_08069d92
lbl_08069bf6:
    ldrb r0, [r5, #0xc]
    movs r1, #0xf
    ands r1, r0
    cmp r1, #0
    bne lbl_08069c18
    ldr r0, lbl_08069c10 @ =0x03000bf4
    movs r1, #0
    ldrsh r3, [r0, r1]
    mov r8, r3
    ldr r0, lbl_08069c14 @ =0x03000bf6
    movs r2, #0
    ldrsh r7, [r0, r2]
    b lbl_08069c72
    .align 2, 0
lbl_08069c10: .4byte 0x03000bf4
lbl_08069c14: .4byte 0x03000bf6
lbl_08069c18:
    cmp r1, #1
    bne lbl_08069c34
    ldr r0, lbl_08069c2c @ =0x03000bf8
    movs r1, #0
    ldrsh r3, [r0, r1]
    mov r8, r3
    ldr r0, lbl_08069c30 @ =0x03000bfa
    movs r2, #0
    ldrsh r7, [r0, r2]
    b lbl_08069c72
    .align 2, 0
lbl_08069c2c: .4byte 0x03000bf8
lbl_08069c30: .4byte 0x03000bfa
lbl_08069c34:
    cmp r1, #2
    bne lbl_08069c50
    ldr r0, lbl_08069c48 @ =0x03000bfc
    movs r1, #0
    ldrsh r3, [r0, r1]
    mov r8, r3
    ldr r0, lbl_08069c4c @ =0x03000bfe
    movs r2, #0
    ldrsh r7, [r0, r2]
    b lbl_08069c72
    .align 2, 0
lbl_08069c48: .4byte 0x03000bfc
lbl_08069c4c: .4byte 0x03000bfe
lbl_08069c50:
    cmp r1, #3
    bne lbl_08069c6c
    ldr r0, lbl_08069c64 @ =0x03000c00
    movs r1, #0
    ldrsh r3, [r0, r1]
    mov r8, r3
    ldr r0, lbl_08069c68 @ =0x03000c02
    movs r2, #0
    ldrsh r7, [r0, r2]
    b lbl_08069c72
    .align 2, 0
lbl_08069c64: .4byte 0x03000c00
lbl_08069c68: .4byte 0x03000c02
lbl_08069c6c:
    movs r3, #0
    mov r8, r3
    movs r7, #0
lbl_08069c72:
    ldrh r0, [r5]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x12
    asrs r1, r7, #2
    subs r0, r0, r1
    ldr r1, lbl_08069d0c @ =0x03005807
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r7, r1, r0
    ldrh r0, [r5, #2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x12
    mov r2, r8
    asrs r1, r2, #2
    subs r0, r0, r1
    ldr r1, lbl_08069d10 @ =0x03005806
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r1, r1, r0
    mov r8, r1
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r6, r6, r0
    ldr r4, [r6]
    ldrh r0, [r4]
    ldr r3, [sp, #0x14]
    adds r0, r3, r0
    cmp r0, #0x7f
    bgt lbl_08069da2
    str r0, [sp, #0x14]
    adds r4, #2
    cmp sl, r0
    bge lbl_08069d92
    ldr r1, lbl_08069d14 @ =0x03000e7c
    mov r2, sl
    lsls r0, r2, #3
    adds r6, r0, r1
lbl_08069cc0:
    ldrb r1, [r5, #0xc]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08069d20
    ldrh r2, [r4]
    adds r4, #2
    mov r3, sb
    strh r2, [r3]
    movs r0, #2
    add sb, r0
    ldrh r2, [r4]
    adds r4, #2
    mov r1, sb
    strh r2, [r1]
    add sb, r0
    ldrh r0, [r4]
    mov r2, sb
    strh r0, [r2]
    adds r4, #2
    movs r3, #4
    add sb, r3
    ldr r0, lbl_08069d18 @ =0x03000c04
    ldrh r3, [r0]
    ldr r0, lbl_08069d1c @ =0x03000c06
    ldrh r0, [r0]
    str r0, [sp]
    movs r0, #1
    str r0, [sp, #4]
    movs r0, #0
    str r0, [sp, #8]
    mov r0, sl
    mov r1, r8
    adds r2, r7, #0
    bl sub_0807fd64
    b lbl_08069d58
    .align 2, 0
lbl_08069d0c: .4byte 0x03005807
lbl_08069d10: .4byte 0x03005806
lbl_08069d14: .4byte 0x03000e7c
lbl_08069d18: .4byte 0x03000c04
lbl_08069d1c: .4byte 0x03000c06
lbl_08069d20:
    ldrh r2, [r4]
    adds r4, #2
    mov r0, sb
    strh r2, [r0]
    movs r1, #2
    add sb, r1
    adds r0, r2, r7
    strb r0, [r6]
    ldrh r2, [r4]
    adds r4, #2
    mov r3, sb
    strh r2, [r3]
    add sb, r1
    add r2, r8
    ldr r0, lbl_08069dbc @ =0x000001ff
    ands r2, r0
    ldrh r0, [r6, #2]
    ldr r3, lbl_08069dc0 @ =0xfffffe00
    adds r1, r3, #0
    ands r0, r1
    orrs r0, r2
    strh r0, [r6, #2]
    ldrh r0, [r4]
    mov r1, sb
    strh r0, [r1]
    adds r4, #2
    movs r2, #4
    add sb, r2
lbl_08069d58:
    ldrb r1, [r5, #0xb]
    lsls r1, r1, #0x1e
    lsrs r1, r1, #0x1e
    movs r3, #3
    ands r1, r3
    lsls r1, r1, #2
    ldrb r2, [r6, #5]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r6, #5]
    ldrb r1, [r5, #0xb]
    lsls r1, r1, #0x1c
    lsrs r1, r1, #0x1e
    ands r1, r3
    lsls r1, r1, #2
    ldrb r2, [r6, #1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r6, #1]
    adds r6, #8
    movs r0, #1
    add sl, r0
    ldr r1, [sp, #0x14]
    cmp sl, r1
    blt lbl_08069cc0
lbl_08069d92:
    ldr r2, [sp, #0x18]
    adds r2, #1
    str r2, [sp, #0x18]
    adds r5, #0x10
    ldr r3, [sp, #0xc]
    cmp r2, r3
    bge lbl_08069da2
    b lbl_08069a42
lbl_08069da2:
    ldr r0, lbl_08069dc4 @ =0x03001382
    mov r1, sp
    ldrb r1, [r1, #0x14]
    strb r1, [r0]
    add sp, #0x1c
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08069dbc: .4byte 0x000001ff
lbl_08069dc0: .4byte 0xfffffe00
lbl_08069dc4: .4byte 0x03001382

    thumb_func_start sub_08069dc8
sub_08069dc8: @ 0x08069dc8
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x1c
    adds r5, r1, #0
    str r2, [sp, #0x10]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0xc]
    ldr r0, lbl_08069e5c @ =0x03000e7c
    mov sb, r0
    ldr r0, lbl_08069e60 @ =0x03001382
    ldrb r0, [r0]
    str r0, [sp, #0x14]
    mov sl, r0
    lsls r0, r0, #3
    add sb, r0
    movs r1, #0
    str r1, [sp, #0x18]
    ldr r2, [sp, #0xc]
    cmp r1, r2
    blt lbl_08069dfa
    b lbl_0806a15a
lbl_08069dfa:
    ldrb r0, [r5, #0xa]
    adds r7, r0, #0
    cmp r7, #0
    bne lbl_08069e04
    b lbl_0806a14a
lbl_08069e04:
    ldrb r1, [r5, #0xb]
    movs r0, #0xc0
    ands r0, r1
    cmp r0, #0
    bne lbl_08069e10
    b lbl_0806a14a
lbl_08069e10:
    cmp r0, #0x80
    bne lbl_08069e24
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r5, #0xb]
    movs r0, #0
    strb r0, [r5, #8]
    strb r0, [r5, #9]
lbl_08069e24:
    ldrb r1, [r5, #0xb]
    movs r0, #0x11
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r5, #0xb]
    ldrb r0, [r5, #0xa]
    lsls r0, r0, #3
    ldr r1, [sp, #0x10]
    adds r3, r0, r1
    ldr r6, [r3]
    ldrb r2, [r5, #9]
    lsls r0, r2, #3
    adds r0, r0, r6
    ldrb r1, [r5, #8]
    adds r4, r2, #0
    ldrb r0, [r0, #4]
    cmp r1, r0
    bhs lbl_08069e4a
    b lbl_08069f9c
lbl_08069e4a:
    ldrb r0, [r3, #4]
    cmp r0, #9
    bls lbl_08069e52
    b lbl_08069f9c
lbl_08069e52:
    lsls r0, r0, #2
    ldr r1, lbl_08069e64 @ =lbl_08069e68
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08069e5c: .4byte 0x03000e7c
lbl_08069e60: .4byte 0x03001382
lbl_08069e64: .4byte lbl_08069e68
lbl_08069e68: @ jump table
    .4byte lbl_08069f9c @ case 0
    .4byte lbl_08069e90 @ case 1
    .4byte lbl_08069eaa @ case 2
    .4byte lbl_08069eb0 @ case 3
    .4byte lbl_08069ede @ case 4
    .4byte lbl_08069efa @ case 5
    .4byte lbl_08069f14 @ case 6
    .4byte lbl_08069f3a @ case 7
    .4byte lbl_08069f60 @ case 8
    .4byte lbl_08069f7a @ case 9
lbl_08069e90:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r0, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069f9c
    strb r0, [r5, #9]
    b lbl_08069f9c
lbl_08069eaa:
    movs r0, #0
    strb r0, [r5, #8]
    b lbl_08069f9c
lbl_08069eb0:
    lsls r0, r4, #3
    adds r0, r0, r6
    ldrb r2, [r0, #4]
    adds r0, r4, #1
    movs r3, #0
    strb r0, [r5, #9]
    ldrb r1, [r5, #9]
    lsls r0, r1, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069eda
    subs r0, r1, #1
    strb r0, [r5, #9]
    subs r0, r2, #1
    strb r0, [r5, #8]
    ldrb r0, [r5, #0xb]
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r5, #0xb]
    b lbl_08069f9c
lbl_08069eda:
    strb r3, [r5, #8]
    b lbl_08069f9c
lbl_08069ede:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r0, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069f9c
    strb r0, [r5, #0xa]
    strb r0, [r5, #9]
    b lbl_08069f70
lbl_08069efa:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r0, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r1, [r0, #4]
    cmp r1, #0
    bne lbl_08069f9c
    adds r0, r7, #1
    b lbl_08069f8e
lbl_08069f14:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r1, [r5, #9]
    adds r0, r1, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08069f9c
    adds r0, r7, #1
    strb r0, [r5, #0xa]
    strb r1, [r5, #9]
    ldrb r0, [r5, #0xa]
    lsls r0, r0, #3
    ldr r3, [sp, #0x10]
    adds r0, r0, r3
    b lbl_08069f9a
lbl_08069f3a:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r0, #1
    strb r0, [r5, #9]
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r1, [r0, #4]
    cmp r1, #0
    bne lbl_08069f9c
    subs r0, r7, #1
    strb r0, [r5, #0xa]
    strb r1, [r5, #9]
    ldrb r0, [r5, #0xa]
    lsls r0, r0, #3
    ldr r1, [sp, #0x10]
    adds r0, r0, r1
    b lbl_08069f9a
lbl_08069f60:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r1, r0, #0
    cmp r1, #0
    bne lbl_08069f86
    strb r1, [r5, #0xa]
    strb r1, [r5, #9]
lbl_08069f70:
    ldrb r1, [r5, #0xb]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r5, #0xb]
    b lbl_0806a14a
lbl_08069f7a:
    movs r0, #0
    strb r0, [r5, #8]
    ldrb r0, [r5, #9]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08069f8c
lbl_08069f86:
    subs r0, #1
    strb r0, [r5, #9]
    b lbl_08069f9c
lbl_08069f8c:
    subs r0, r7, #1
lbl_08069f8e:
    strb r0, [r5, #0xa]
    strb r1, [r5, #9]
    ldrb r0, [r5, #0xa]
    lsls r0, r0, #3
    ldr r2, [sp, #0x10]
    adds r0, r0, r2
lbl_08069f9a:
    ldr r6, [r0]
lbl_08069f9c:
    ldrb r0, [r5, #8]
    adds r0, #1
    strb r0, [r5, #8]
    ldrb r1, [r5, #0xb]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08069fae
    b lbl_0806a14a
lbl_08069fae:
    ldrb r0, [r5, #0xc]
    movs r1, #0xf
    ands r1, r0
    cmp r1, #0
    bne lbl_08069fd0
    ldr r0, lbl_08069fc8 @ =0x03000bf4
    movs r1, #0
    ldrsh r3, [r0, r1]
    mov r8, r3
    ldr r0, lbl_08069fcc @ =0x03000bf6
    movs r2, #0
    ldrsh r7, [r0, r2]
    b lbl_0806a02a
    .align 2, 0
lbl_08069fc8: .4byte 0x03000bf4
lbl_08069fcc: .4byte 0x03000bf6
lbl_08069fd0:
    cmp r1, #1
    bne lbl_08069fec
    ldr r0, lbl_08069fe4 @ =0x03000bf8
    movs r1, #0
    ldrsh r3, [r0, r1]
    mov r8, r3
    ldr r0, lbl_08069fe8 @ =0x03000bfa
    movs r2, #0
    ldrsh r7, [r0, r2]
    b lbl_0806a02a
    .align 2, 0
lbl_08069fe4: .4byte 0x03000bf8
lbl_08069fe8: .4byte 0x03000bfa
lbl_08069fec:
    cmp r1, #2
    bne lbl_0806a008
    ldr r0, lbl_0806a000 @ =0x03000bfc
    movs r1, #0
    ldrsh r3, [r0, r1]
    mov r8, r3
    ldr r0, lbl_0806a004 @ =0x03000bfe
    movs r2, #0
    ldrsh r7, [r0, r2]
    b lbl_0806a02a
    .align 2, 0
lbl_0806a000: .4byte 0x03000bfc
lbl_0806a004: .4byte 0x03000bfe
lbl_0806a008:
    cmp r1, #3
    bne lbl_0806a024
    ldr r0, lbl_0806a01c @ =0x03000c00
    movs r1, #0
    ldrsh r3, [r0, r1]
    mov r8, r3
    ldr r0, lbl_0806a020 @ =0x03000c02
    movs r2, #0
    ldrsh r7, [r0, r2]
    b lbl_0806a02a
    .align 2, 0
lbl_0806a01c: .4byte 0x03000c00
lbl_0806a020: .4byte 0x03000c02
lbl_0806a024:
    movs r3, #0
    mov r8, r3
    movs r7, #0
lbl_0806a02a:
    ldrh r0, [r5]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x12
    asrs r1, r7, #2
    subs r0, r0, r1
    ldr r1, lbl_0806a0c4 @ =0x03005807
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r7, r1, r0
    ldrh r0, [r5, #2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x12
    mov r2, r8
    asrs r1, r2, #2
    subs r0, r0, r1
    ldr r1, lbl_0806a0c8 @ =0x03005806
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r1, r1, r0
    mov r8, r1
    ldrb r0, [r5, #9]
    lsls r0, r0, #3
    adds r6, r6, r0
    ldr r4, [r6]
    ldrh r0, [r4]
    ldr r3, [sp, #0x14]
    adds r0, r3, r0
    cmp r0, #0x7f
    bgt lbl_0806a15a
    str r0, [sp, #0x14]
    adds r4, #2
    cmp sl, r0
    bge lbl_0806a14a
    ldr r1, lbl_0806a0cc @ =0x03000e7c
    mov r2, sl
    lsls r0, r2, #3
    adds r6, r0, r1
lbl_0806a078:
    ldrb r1, [r5, #0xc]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0806a0d8
    ldrh r2, [r4]
    adds r4, #2
    mov r3, sb
    strh r2, [r3]
    movs r0, #2
    add sb, r0
    ldrh r2, [r4]
    adds r4, #2
    mov r1, sb
    strh r2, [r1]
    add sb, r0
    ldrh r0, [r4]
    mov r2, sb
    strh r0, [r2]
    adds r4, #2
    movs r3, #4
    add sb, r3
    ldr r0, lbl_0806a0d0 @ =0x03000c04
    ldrh r3, [r0]
    ldr r0, lbl_0806a0d4 @ =0x03000c06
    ldrh r0, [r0]
    str r0, [sp]
    movs r0, #1
    str r0, [sp, #4]
    movs r0, #0
    str r0, [sp, #8]
    mov r0, sl
    mov r1, r8
    adds r2, r7, #0
    bl sub_0807fd64
    b lbl_0806a110
    .align 2, 0
lbl_0806a0c4: .4byte 0x03005807
lbl_0806a0c8: .4byte 0x03005806
lbl_0806a0cc: .4byte 0x03000e7c
lbl_0806a0d0: .4byte 0x03000c04
lbl_0806a0d4: .4byte 0x03000c06
lbl_0806a0d8:
    ldrh r2, [r4]
    adds r4, #2
    mov r0, sb
    strh r2, [r0]
    movs r1, #2
    add sb, r1
    adds r0, r2, r7
    strb r0, [r6]
    ldrh r2, [r4]
    adds r4, #2
    mov r3, sb
    strh r2, [r3]
    add sb, r1
    add r2, r8
    ldr r0, lbl_0806a174 @ =0x000001ff
    ands r2, r0
    ldrh r0, [r6, #2]
    ldr r3, lbl_0806a178 @ =0xfffffe00
    adds r1, r3, #0
    ands r0, r1
    orrs r0, r2
    strh r0, [r6, #2]
    ldrh r0, [r4]
    mov r1, sb
    strh r0, [r1]
    adds r4, #2
    movs r2, #4
    add sb, r2
lbl_0806a110:
    ldrb r1, [r5, #0xb]
    lsls r1, r1, #0x1e
    lsrs r1, r1, #0x1e
    movs r3, #3
    ands r1, r3
    lsls r1, r1, #2
    ldrb r2, [r6, #5]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r6, #5]
    ldrb r1, [r5, #0xb]
    lsls r1, r1, #0x1c
    lsrs r1, r1, #0x1e
    ands r1, r3
    lsls r1, r1, #2
    ldrb r2, [r6, #1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r6, #1]
    adds r6, #8
    movs r0, #1
    add sl, r0
    ldr r1, [sp, #0x14]
    cmp sl, r1
    blt lbl_0806a078
lbl_0806a14a:
    ldr r2, [sp, #0x18]
    adds r2, #1
    str r2, [sp, #0x18]
    adds r5, #0x20
    ldr r3, [sp, #0xc]
    cmp r2, r3
    bge lbl_0806a15a
    b lbl_08069dfa
lbl_0806a15a:
    ldr r0, lbl_0806a17c @ =0x03001382
    mov r1, sp
    ldrb r1, [r1, #0x14]
    strb r1, [r0]
    add sp, #0x1c
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806a174: .4byte 0x000001ff
lbl_0806a178: .4byte 0xfffffe00
lbl_0806a17c: .4byte 0x03001382

    thumb_func_start map_screen_main
map_screen_main: @ 0x0806a180
    push {r4, lr}
    movs r4, #0
    ldr r0, lbl_0806a19c @ =0x03000005
    ldrb r1, [r0]
    adds r3, r0, #0
    cmp r1, #8
    bls lbl_0806a190
    b lbl_0806a2ee
lbl_0806a190:
    lsls r0, r1, #2
    ldr r1, lbl_0806a1a0 @ =lbl_0806a1a4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806a19c: .4byte 0x03000005
lbl_0806a1a0: .4byte lbl_0806a1a4
lbl_0806a1a4: @ jump table
    .4byte lbl_0806a1c8 @ case 0
    .4byte lbl_0806a248 @ case 1
    .4byte lbl_0806a1f6 @ case 2
    .4byte lbl_0806a248 @ case 3
    .4byte lbl_0806a234 @ case 4
    .4byte lbl_0806a248 @ case 5
    .4byte lbl_0806a260 @ case 6
    .4byte lbl_0806a248 @ case 7
    .4byte lbl_0806a2e8 @ case 8
lbl_0806a1c8:
    ldr r0, lbl_0806a1e0 @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806a1ec
    ldr r2, lbl_0806a1e4 @ =0x0300137c
    ldr r1, lbl_0806a1e8 @ =0x03001380
    movs r0, #0
    strh r0, [r1]
    strh r0, [r2]
    movs r0, #5
    b lbl_0806a1ee
    .align 2, 0
lbl_0806a1e0: .4byte 0x030013d2
lbl_0806a1e4: .4byte 0x0300137c
lbl_0806a1e8: .4byte 0x03001380
lbl_0806a1ec:
    movs r0, #1
lbl_0806a1ee:
    strb r0, [r3]
    bl map_screen_init
    b lbl_0806a2ee
lbl_0806a1f6:
    movs r0, #0
    bl sub_080682ec
    bl sub_0806b240
    cmp r0, #0
    beq lbl_0806a212
    movs r0, #4
    bl sub_080682ec
    ldr r1, lbl_0806a22c @ =0x03000005
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_0806a212:
    ldr r0, lbl_0806a230 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbc
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806a222
    bl update_minimap_anim_palette
lbl_0806a222:
    bl sub_08068694
    bl sub_080695bc
    b lbl_0806a2ee
    .align 2, 0
lbl_0806a22c: .4byte 0x03000005
lbl_0806a230: .4byte 0x08754bc4
lbl_0806a234:
    movs r0, #0
    strb r0, [r3]
    ldr r1, lbl_0806a244 @ =0x03000c74
    movs r0, #4
    strb r0, [r1]
    movs r4, #1
    b lbl_0806a2ee
    .align 2, 0
lbl_0806a244: .4byte 0x03000c74
lbl_0806a248:
    movs r0, #0
    bl sub_080682ec
    cmp r0, #0
    beq lbl_0806a2ee
    ldr r1, lbl_0806a25c @ =0x03000005
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0806a2ee
    .align 2, 0
lbl_0806a25c: .4byte 0x03000005
lbl_0806a260:
    movs r0, #0
    bl sub_080682ec
    ldr r2, lbl_0806a288 @ =0x0300137c
    ldrh r1, [r2]
    cmp r1, #0
    beq lbl_0806a294
    ldr r2, lbl_0806a28c @ =0x03000038
    ldrb r1, [r2, #3]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2, #3]
    bl sub_08060d38
    ldr r1, lbl_0806a290 @ =0x03000bf0
    movs r0, #9
    b lbl_0806a2a6
    .align 2, 0
lbl_0806a288: .4byte 0x0300137c
lbl_0806a28c: .4byte 0x03000038
lbl_0806a290: .4byte 0x03000bf0
lbl_0806a294:
    ldr r0, lbl_0806a2d8 @ =0x03001380
    strh r1, [r0]
    strh r1, [r2]
    bl sub_0806b240
    cmp r0, #0
    beq lbl_0806a2b0
    ldr r1, lbl_0806a2dc @ =0x03000c74
    movs r0, #0xb
lbl_0806a2a6:
    strb r0, [r1]
    movs r4, #1
    ldr r1, lbl_0806a2e0 @ =0x03000005
    movs r0, #7
    strb r0, [r1]
lbl_0806a2b0:
    cmp r4, #0
    beq lbl_0806a2ba
    movs r0, #4
    bl sub_080682ec
lbl_0806a2ba:
    ldr r0, lbl_0806a2e4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbc
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806a2ca
    bl update_minimap_anim_palette
lbl_0806a2ca:
    bl sub_08068694
    bl sub_080695bc
    movs r4, #0
    b lbl_0806a2ee
    .align 2, 0
lbl_0806a2d8: .4byte 0x03001380
lbl_0806a2dc: .4byte 0x03000c74
lbl_0806a2e0: .4byte 0x03000005
lbl_0806a2e4: .4byte 0x08754bc4
lbl_0806a2e8:
    movs r4, #1
    movs r0, #0
    strb r0, [r3]
lbl_0806a2ee:
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0806a2f8
sub_0806a2f8: @ 0x0806a2f8
    push {r4, lr}
    ldr r1, lbl_0806a3d8 @ =0x040000d4
    ldr r0, lbl_0806a3dc @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0806a3e0 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xd4
    ldr r0, lbl_0806a3e4 @ =0x08754bc4
    ldr r3, [r0]
    adds r0, r3, #0
    adds r0, #0x5c
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #0x54
    ldr r0, lbl_0806a3e8 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    subs r1, #8
    ldr r0, lbl_0806a3ec @ =0x0300139e
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r2, lbl_0806a3f0 @ =0x04000010
    ldr r0, lbl_0806a3f4 @ =0x03000bf4
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ldr r4, lbl_0806a3f8 @ =0x000001ff
    adds r1, r4, #0
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806a3fc @ =0x03000bf6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806a400 @ =0x03000bf8
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806a404 @ =0x03000bfa
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806a408 @ =0x03000bfc
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806a40c @ =0x03000bfe
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806a410 @ =0x03000c00
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806a414 @ =0x03000c02
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_0806a418 @ =0x04000008
    adds r0, r3, #0
    adds r0, #0x5e
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    adds r0, r3, #0
    adds r0, #0x60
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    adds r0, r3, #0
    adds r0, #0x62
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    adds r0, r3, #0
    adds r0, #0x64
    ldrh r0, [r0]
    strh r0, [r1]
    adds r2, #0x34
    ldr r0, lbl_0806a41c @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_0806a420 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_0806a424 @ =0x04000050
    adds r0, r3, #0
    adds r0, #0x66
    ldrh r0, [r0]
    strh r0, [r1]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806a3d8: .4byte 0x040000d4
lbl_0806a3dc: .4byte 0x03000e7c
lbl_0806a3e0: .4byte 0x84000100
lbl_0806a3e4: .4byte 0x08754bc4
lbl_0806a3e8: .4byte 0x030013ae
lbl_0806a3ec: .4byte 0x0300139e
lbl_0806a3f0: .4byte 0x04000010
lbl_0806a3f4: .4byte 0x03000bf4
lbl_0806a3f8: .4byte 0x000001ff
lbl_0806a3fc: .4byte 0x03000bf6
lbl_0806a400: .4byte 0x03000bf8
lbl_0806a404: .4byte 0x03000bfa
lbl_0806a408: .4byte 0x03000bfc
lbl_0806a40c: .4byte 0x03000bfe
lbl_0806a410: .4byte 0x03000c00
lbl_0806a414: .4byte 0x03000c02
lbl_0806a418: .4byte 0x04000008
lbl_0806a41c: .4byte 0x030013b2
lbl_0806a420: .4byte 0x030013b0
lbl_0806a424: .4byte 0x04000050

    thumb_func_start sub_0806a428
sub_0806a428: @ 0x0806a428
    sub sp, #4
    mov r1, sp
    movs r0, #0
    strb r0, [r1]
    add sp, #4
    bx lr

    thumb_func_start map_screen_init
map_screen_init: @ 0x0806a434
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r0, lbl_0806a4f0 @ =sub_0806a428
    bl CallbackSetVBlank
    ldr r1, lbl_0806a4f4 @ =0x04000050
    movs r0, #0xff
    strh r0, [r1]
    ldr r2, lbl_0806a4f8 @ =0x04000054
    ldr r1, lbl_0806a4fc @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strh r0, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x13
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_0806a500 @ =0x03001382
    strb r1, [r0]
    ldr r2, lbl_0806a504 @ =0x030016c4
    movs r3, #0xc5
    lsls r3, r3, #3
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    bl ResetFreeOAM
    ldr r1, lbl_0806a508 @ =0x040000d4
    ldr r0, lbl_0806a50c @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0806a510 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r4, lbl_0806a514 @ =0x08754bc4
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x66
    movs r5, #0
    movs r0, #0xff
    strh r0, [r2]
    adds r1, #0x5c
    strh r5, [r1]
    ldr r0, lbl_0806a518 @ =0x0300007d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_0806a4ba
    ldr r1, lbl_0806a51c @ =0x06010000
    ldr r2, lbl_0806a520 @ =0x0201e000
    movs r3, #0x80
    lsls r3, r3, #8
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_0806a4ba:
    ldr r1, [r4]
    ldr r0, lbl_0806a524 @ =0x03000054
    ldrb r0, [r0]
    strb r0, [r1, #0x12]
    ldr r1, [r4]
    ldr r0, lbl_0806a528 @ =0x03000059
    ldrb r0, [r0]
    strb r0, [r1, #0x13]
    ldr r1, [r4]
    ldr r0, lbl_0806a52c @ =0x0300005a
    ldrb r0, [r0]
    strb r0, [r1, #0x14]
    ldr r0, [r4]
    strh r5, [r0]
    ldr r0, lbl_0806a530 @ =0x03000bf0
    ldrb r0, [r0]
    subs r0, #3
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #5
    bls lbl_0806a4e6
    b lbl_0806a5dc
lbl_0806a4e6:
    lsls r0, r0, #2
    ldr r1, lbl_0806a534 @ =lbl_0806a538
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806a4f0: .4byte sub_0806a428
lbl_0806a4f4: .4byte 0x04000050
lbl_0806a4f8: .4byte 0x04000054
lbl_0806a4fc: .4byte 0x030013ae
lbl_0806a500: .4byte 0x03001382
lbl_0806a504: .4byte 0x030016c4
lbl_0806a508: .4byte 0x040000d4
lbl_0806a50c: .4byte 0x03000e7c
lbl_0806a510: .4byte 0x84000100
lbl_0806a514: .4byte 0x08754bc4
lbl_0806a518: .4byte 0x0300007d
lbl_0806a51c: .4byte 0x06010000
lbl_0806a520: .4byte 0x0201e000
lbl_0806a524: .4byte 0x03000054
lbl_0806a528: .4byte 0x03000059
lbl_0806a52c: .4byte 0x0300005a
lbl_0806a530: .4byte 0x03000bf0
lbl_0806a534: .4byte lbl_0806a538
lbl_0806a538: @ jump table
    .4byte lbl_0806a560 @ case 0
    .4byte lbl_0806a550 @ case 1
    .4byte lbl_0806a570 @ case 2
    .4byte lbl_0806a580 @ case 3
    .4byte lbl_0806a598 @ case 4
    .4byte lbl_0806a5cc @ case 5
lbl_0806a550:
    ldr r0, lbl_0806a55c @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    movs r0, #0x12
    b lbl_0806a58c
    .align 2, 0
lbl_0806a55c: .4byte 0x08754bc4
lbl_0806a560:
    ldr r0, lbl_0806a56c @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    movs r0, #8
    b lbl_0806a58c
    .align 2, 0
lbl_0806a56c: .4byte 0x08754bc4
lbl_0806a570:
    ldr r0, lbl_0806a57c @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    movs r0, #0x22
    b lbl_0806a58c
    .align 2, 0
lbl_0806a57c: .4byte 0x08754bc4
lbl_0806a580:
    ldr r0, lbl_0806a594 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    movs r3, #0xc0
    lsls r3, r3, #1
    adds r0, r3, #0
lbl_0806a58c:
    orrs r0, r1
    strh r0, [r2]
    b lbl_0806a5dc
    .align 2, 0
lbl_0806a594: .4byte 0x08754bc4
lbl_0806a598:
    movs r0, #2
    bl update_suitType
    ldr r1, lbl_0806a5c0 @ =0x030013d4
    movs r3, #0
    movs r0, #0x1e
    strb r0, [r1]
    movs r2, #0
    movs r0, #0x20
    strh r0, [r1, #0xe]
    strb r2, [r1, #0x1d]
    strh r3, [r1, #0xc]
    ldr r1, lbl_0806a5c4 @ =0x03000bf2
    movs r0, #8
    strb r0, [r1]
    ldr r0, lbl_0806a5c8 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0xe0
    lsls r0, r0, #2
    b lbl_0806a5da
    .align 2, 0
lbl_0806a5c0: .4byte 0x030013d4
lbl_0806a5c4: .4byte 0x03000bf2
lbl_0806a5c8: .4byte 0x08754bc4
lbl_0806a5cc:
    movs r0, #1
    bl update_suitType
    ldr r0, lbl_0806a698 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0xb0
    lsls r0, r0, #3
lbl_0806a5da:
    strh r0, [r1]
lbl_0806a5dc:
    ldr r1, lbl_0806a69c @ =0x083fd050
    ldr r2, lbl_0806a6a0 @ =0x05000200
    movs r3, #0x80
    lsls r3, r3, #2
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_0806a6a4 @ =0x08411360
    movs r2, #0xa0
    lsls r2, r2, #0x13
    str r4, [sp]
    movs r0, #3
    movs r3, #0xa0
    bl DMATransfer
    ldr r1, lbl_0806a6a8 @ =0x083fcef0
    ldr r2, lbl_0806a6ac @ =0x050000a0
    movs r3, #0xb0
    lsls r3, r3, #1
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, lbl_0806a6b0 @ =0x08754bb8
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1]
    ldr r1, lbl_0806a6b4 @ =0x0840e0c4
    ldr r2, lbl_0806a6b8 @ =0x06008000
    movs r3, #0xc0
    lsls r3, r3, #6
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_0806a6bc @ =0x0600a820
    ldr r2, lbl_0806a6c0 @ =0x0600ac20
    movs r3, #0xf8
    lsls r3, r3, #2
    movs r6, #0x20
    str r6, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, lbl_0806a6c4 @ =0x08400e08
    ldr r1, lbl_0806a6c8 @ =0x06013000
    bl CallLZ77UncompVRAM
    ldr r1, lbl_0806a6cc @ =0x08760104
    ldr r5, lbl_0806a6d0 @ =0x03000020
    movs r0, #0
    ldrsb r0, [r5, r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    ldr r1, lbl_0806a6d4 @ =0x06010800
    bl CallLZ77UncompVRAM
    ldr r1, lbl_0806a6d8 @ =0x0876013c
    movs r0, #0
    ldrsb r0, [r5, r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    ldr r1, lbl_0806a6dc @ =0x06011400
    bl CallLZ77UncompVRAM
    ldr r1, lbl_0806a6e0 @ =0x08760120
    movs r0, #0
    ldrsb r0, [r5, r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    ldr r1, lbl_0806a6e4 @ =0x06011800
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806a698 @ =0x08754bc4
    ldr r0, [r0]
    ldrh r0, [r0]
    ands r4, r0
    cmp r4, #0
    beq lbl_0806a6f4
    ldr r0, lbl_0806a6e8 @ =0x084030b4
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806a6ec @ =0x084110c4
    ldr r1, lbl_0806a6f0 @ =0x0600a800
    bl CallLZ77UncompVRAM
    b lbl_0806a744
    .align 2, 0
lbl_0806a698: .4byte 0x08754bc4
lbl_0806a69c: .4byte 0x083fd050
lbl_0806a6a0: .4byte 0x05000200
lbl_0806a6a4: .4byte 0x08411360
lbl_0806a6a8: .4byte 0x083fcef0
lbl_0806a6ac: .4byte 0x050000a0
lbl_0806a6b0: .4byte 0x08754bb8
lbl_0806a6b4: .4byte 0x0840e0c4
lbl_0806a6b8: .4byte 0x06008000
lbl_0806a6bc: .4byte 0x0600a820
lbl_0806a6c0: .4byte 0x0600ac20
lbl_0806a6c4: .4byte 0x08400e08
lbl_0806a6c8: .4byte 0x06013000
lbl_0806a6cc: .4byte 0x08760104
lbl_0806a6d0: .4byte 0x03000020
lbl_0806a6d4: .4byte 0x06010800
lbl_0806a6d8: .4byte 0x0876013c
lbl_0806a6dc: .4byte 0x06011400
lbl_0806a6e0: .4byte 0x08760120
lbl_0806a6e4: .4byte 0x06011800
lbl_0806a6e8: .4byte 0x084030b4
lbl_0806a6ec: .4byte 0x084110c4
lbl_0806a6f0: .4byte 0x0600a800
lbl_0806a6f4:
    ldr r0, lbl_0806a794 @ =0x083feb60
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806a798 @ =0x083fefb8
    ldr r1, lbl_0806a79c @ =0x06001000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806a7a0 @ =0x084005a8
    ldr r1, lbl_0806a7a4 @ =0x06007400
    bl CallLZ77UncompVRAM
    ldr r1, lbl_0806a7a8 @ =0x08760158
    movs r0, #0
    ldrsb r0, [r5, r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    ldr r4, lbl_0806a7ac @ =0x06006000
    adds r1, r4, #0
    bl CallLZ77UncompVRAM
    ldr r1, lbl_0806a7b0 @ =0x08760174
    movs r0, #0
    ldrsb r0, [r5, r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    ldr r1, lbl_0806a7b4 @ =0x06000c00
    bl CallLZ77UncompVRAM
    ldr r2, lbl_0806a7b8 @ =0x06010000
    movs r3, #0x80
    lsls r3, r3, #4
    str r6, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl DMATransfer
lbl_0806a744:
    movs r1, #0x8a
    lsls r1, r1, #5
    ldr r2, lbl_0806a7bc @ =0x0600e800
    movs r3, #0xc0
    lsls r3, r3, #5
    movs r6, #0x10
    str r6, [sp]
    movs r0, #3
    bl BitFill
    ldr r1, lbl_0806a7c0 @ =0x02034000
    ldr r2, lbl_0806a7c4 @ =0x0600e000
    movs r7, #0x80
    lsls r7, r7, #4
    str r6, [sp]
    movs r0, #3
    adds r3, r7, #0
    bl DMATransfer
    ldr r5, lbl_0806a7c8 @ =0x08754bc4
    mov r8, r5
    ldr r0, [r5]
    ldrh r1, [r0]
    adds r0, r6, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0806a7dc
    ldr r0, lbl_0806a7cc @ =0x08408e00
    ldr r1, lbl_0806a7d0 @ =0x0600b800
    bl CallLZ77UncompVRAM
    ldr r1, lbl_0806a7d4 @ =0x0000115f
    ldr r2, lbl_0806a7d8 @ =0x0600c000
    str r6, [sp]
    movs r0, #3
    adds r3, r7, #0
    bl BitFill
    b lbl_0806a8f6
    .align 2, 0
lbl_0806a794: .4byte 0x083feb60
lbl_0806a798: .4byte 0x083fefb8
lbl_0806a79c: .4byte 0x06001000
lbl_0806a7a0: .4byte 0x084005a8
lbl_0806a7a4: .4byte 0x06007400
lbl_0806a7a8: .4byte 0x08760158
lbl_0806a7ac: .4byte 0x06006000
lbl_0806a7b0: .4byte 0x08760174
lbl_0806a7b4: .4byte 0x06000c00
lbl_0806a7b8: .4byte 0x06010000
lbl_0806a7bc: .4byte 0x0600e800
lbl_0806a7c0: .4byte 0x02034000
lbl_0806a7c4: .4byte 0x0600e000
lbl_0806a7c8: .4byte 0x08754bc4
lbl_0806a7cc: .4byte 0x08408e00
lbl_0806a7d0: .4byte 0x0600b800
lbl_0806a7d4: .4byte 0x0000115f
lbl_0806a7d8: .4byte 0x0600c000
lbl_0806a7dc:
    ldr r0, lbl_0806a81c @ =0x08407ba8
    ldr r5, lbl_0806a820 @ =0x08754bb4
    ldr r1, [r5]
    movs r4, #0x90
    lsls r4, r4, #8
    adds r1, r1, r4
    bl CallLZ77UncompWRAM
    ldr r1, [r5]
    adds r1, r1, r4
    ldr r2, lbl_0806a824 @ =0x0600c800
    str r6, [sp]
    movs r0, #3
    adds r3, r7, #0
    bl DMATransfer
    movs r0, #2
    movs r1, #2
    bl sub_0806b00c
    mov r1, r8
    ldr r0, [r1]
    ldrh r1, [r0]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0806a828
    movs r0, #0xff
    bl sub_0806b718
    b lbl_0806a8f6
    .align 2, 0
lbl_0806a81c: .4byte 0x08407ba8
lbl_0806a820: .4byte 0x08754bb4
lbl_0806a824: .4byte 0x0600c800
lbl_0806a828:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806a84e
    ldr r0, lbl_0806a88c @ =0x084078ec
    ldr r1, lbl_0806a890 @ =0x0600b000
    bl CallLZ77UncompVRAM
    movs r1, #0xf0
    lsls r1, r1, #8
    ldr r2, [r5]
    movs r3, #0xd0
    lsls r3, r3, #8
    adds r2, r2, r3
    str r6, [sp]
    movs r0, #3
    adds r3, r7, #0
    bl BitFill
lbl_0806a84e:
    ldr r0, lbl_0806a894 @ =0x084082bc
    ldr r1, [r5]
    movs r2, #0xf0
    lsls r2, r2, #7
    adds r1, r1, r2
    bl CallLZ77UncompWRAM
    ldr r0, lbl_0806a898 @ =0x084089ec
    ldr r1, [r5]
    movs r3, #0x80
    lsls r3, r3, #8
    adds r1, r1, r3
    bl CallLZ77UncompWRAM
    ldr r0, lbl_0806a89c @ =0x03001530
    ldrb r0, [r0, #0x12]
    cmp r0, #2
    bne lbl_0806a8a4
    ldr r1, [r5]
    movs r5, #0x80
    lsls r5, r5, #8
    adds r1, r1, r5
    ldr r2, lbl_0806a8a0 @ =0x0600c000
    movs r3, #0xa0
    lsls r3, r3, #3
    str r6, [sp]
    movs r0, #3
    bl DMATransfer
    b lbl_0806a8ba
    .align 2, 0
lbl_0806a88c: .4byte 0x084078ec
lbl_0806a890: .4byte 0x0600b000
lbl_0806a894: .4byte 0x084082bc
lbl_0806a898: .4byte 0x084089ec
lbl_0806a89c: .4byte 0x03001530
lbl_0806a8a0: .4byte 0x0600c000
lbl_0806a8a4:
    ldr r1, [r5]
    movs r0, #0xf0
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r2, lbl_0806a948 @ =0x0600c000
    movs r3, #0xa0
    lsls r3, r3, #3
    str r6, [sp]
    movs r0, #3
    bl DMATransfer
lbl_0806a8ba:
    ldr r0, lbl_0806a94c @ =0x08407d90
    ldr r4, lbl_0806a950 @ =0x08754bb4
    ldr r1, [r4]
    movs r2, #0x98
    lsls r2, r2, #8
    adds r1, r1, r2
    bl CallLZ77UncompWRAM
    ldr r0, lbl_0806a954 @ =0x08407f84
    ldr r1, [r4]
    movs r3, #0xa0
    lsls r3, r3, #8
    adds r1, r1, r3
    bl CallLZ77UncompWRAM
    ldr r0, lbl_0806a958 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strb r0, [r1, #0x11]
    ldr r0, lbl_0806a95c @ =0x08408c90
    ldr r1, lbl_0806a960 @ =0x0600d800
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0806a964 @ =0x084086dc
    ldr r1, [r4]
    movs r5, #0x88
    lsls r5, r5, #8
    adds r1, r1, r5
    bl CallLZ77UncompWRAM
lbl_0806a8f6:
    ldr r2, lbl_0806a968 @ =0x03000bf4
    ldr r0, lbl_0806a96c @ =0x03000bf6
    movs r1, #0
    strh r1, [r0]
    strh r1, [r2]
    ldr r0, lbl_0806a970 @ =0x03000bf8
    ldr r4, lbl_0806a974 @ =0x03000bfa
    strh r1, [r4]
    strh r1, [r0]
    ldr r2, lbl_0806a978 @ =0x03000bfc
    ldr r0, lbl_0806a97c @ =0x03000bfe
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_0806a980 @ =0x03000c00
    ldr r0, lbl_0806a984 @ =0x03000c02
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_0806a958 @ =0x08754bc4
    ldr r0, [r2]
    movs r3, #0
    strb r1, [r0, #8]
    ldr r1, [r2]
    strh r3, [r1, #0xa]
    adds r1, #4
    ldr r0, lbl_0806a988 @ =0x087600f8
    ldm r0!, {r3, r5, r6}
    stm r1!, {r3, r5, r6}
    movs r6, #0x80
    lsls r6, r6, #3
    adds r5, r6, #0
    strh r5, [r4]
    ldr r3, [r2]
    ldrh r1, [r3]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0806a98c
    movs r0, #0xf
    strb r0, [r3, #4]
    b lbl_0806a9f2
    .align 2, 0
lbl_0806a948: .4byte 0x0600c000
lbl_0806a94c: .4byte 0x08407d90
lbl_0806a950: .4byte 0x08754bb4
lbl_0806a954: .4byte 0x08407f84
lbl_0806a958: .4byte 0x08754bc4
lbl_0806a95c: .4byte 0x08408c90
lbl_0806a960: .4byte 0x0600d800
lbl_0806a964: .4byte 0x084086dc
lbl_0806a968: .4byte 0x03000bf4
lbl_0806a96c: .4byte 0x03000bf6
lbl_0806a970: .4byte 0x03000bf8
lbl_0806a974: .4byte 0x03000bfa
lbl_0806a978: .4byte 0x03000bfc
lbl_0806a97c: .4byte 0x03000bfe
lbl_0806a980: .4byte 0x03000c00
lbl_0806a984: .4byte 0x03000c02
lbl_0806a988: .4byte 0x087600f8
lbl_0806a98c:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0806a9cc
    ldr r2, lbl_0806a9c0 @ =0x03001530
    ldr r4, lbl_0806a9c4 @ =0x03000054
    movs r0, #1
    ldrb r1, [r4]
    lsls r0, r1
    ldrb r1, [r2, #0x10]
    orrs r0, r1
    strb r0, [r2, #0x10]
    movs r0, #9
    strb r0, [r3, #4]
    ldrb r0, [r4]
    ldr r5, lbl_0806a9c8 @ =0x02034000
    adds r1, r5, #0
    bl get_minimap_data
    ldrb r0, [r4]
    adds r1, r5, #0
    bl minimap_set_downloaded_tiles
    bl sub_0806d334
    b lbl_0806a9f2
    .align 2, 0
lbl_0806a9c0: .4byte 0x03001530
lbl_0806a9c4: .4byte 0x03000054
lbl_0806a9c8: .4byte 0x02034000
lbl_0806a9cc:
    adds r0, r5, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0806a9da
    movs r0, #0x14
    strb r0, [r3, #4]
    b lbl_0806a9f2
lbl_0806a9da:
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806a9f2
    movs r0, #0x13
    strb r0, [r3, #4]
    ldr r0, lbl_0806aa38 @ =0x03000bf2
    ldrb r1, [r0]
    movs r0, #1
    bl sub_08070020
lbl_0806a9f2:
    movs r0, #0xff
    bl get_all_minimap_data
    ldr r4, lbl_0806aa3c @ =0x08754bc4
    bl draw_status_screen_tanks_amounts
    movs r0, #0
    bl chozo_statue_hint_determine_path
    movs r0, #0
    bl sub_0806db58
    bl sub_0806facc
    ldr r2, [r4]
    ldrh r1, [r2]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0806aa40
    adds r0, r2, #0
    adds r0, #0xb8
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0xb9
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0xba
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0xbb
    strb r1, [r0]
    b lbl_0806aa6a
    .align 2, 0
lbl_0806aa38: .4byte 0x03000bf2
lbl_0806aa3c: .4byte 0x08754bc4
lbl_0806aa40:
    bl check_explored_areas
    bl check_non_explored_area_has_hint
    bl determine_maps_viewable
    bl sub_0806fe18
    ldr r0, lbl_0806aac8 @ =0x08754bb4
    ldr r1, [r0]
    movs r2, #0x98
    lsls r2, r2, #8
    adds r1, r1, r2
    ldr r2, lbl_0806aacc @ =0x0600d000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_0806aa6a:
    ldr r2, lbl_0806aad0 @ =0x08754bc4
    ldr r0, [r2]
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    mov sl, r2
    ldr r3, lbl_0806aad4 @ =0x03000bf8
    mov ip, r3
    ldr r5, lbl_0806aad8 @ =0x03000bfa
    mov sb, r5
    cmp r0, #0
    beq lbl_0806aa88
    movs r0, #0x10
    strh r0, [r3]
    strh r0, [r5]
lbl_0806aa88:
    ldr r0, lbl_0806aadc @ =0x030013ae
    ldr r2, lbl_0806aae0 @ =0x030013b2
    movs r5, #0
    strh r5, [r2]
    strh r5, [r0]
    ldr r1, lbl_0806aae4 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    mov r6, sl
    ldr r3, [r6]
    ldrh r4, [r3]
    movs r0, #0x10
    ands r0, r4
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r7, r2, #0
    mov r8, r1
    cmp r6, #0
    beq lbl_0806aaf0
    adds r1, r3, #0
    adds r1, #0x66
    ldr r0, lbl_0806aae8 @ =0x00003f42
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0806aaec @ =0x00000709
    strh r0, [r1]
    movs r0, #7
    strh r0, [r7]
    movs r0, #9
    mov r1, r8
    strh r0, [r1]
    b lbl_0806ab30
    .align 2, 0
lbl_0806aac8: .4byte 0x08754bb4
lbl_0806aacc: .4byte 0x0600d000
lbl_0806aad0: .4byte 0x08754bc4
lbl_0806aad4: .4byte 0x03000bf8
lbl_0806aad8: .4byte 0x03000bfa
lbl_0806aadc: .4byte 0x030013ae
lbl_0806aae0: .4byte 0x030013b2
lbl_0806aae4: .4byte 0x030013b0
lbl_0806aae8: .4byte 0x00003f42
lbl_0806aaec: .4byte 0x00000709
lbl_0806aaf0:
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r4
    cmp r0, #0
    beq lbl_0806ab18
    adds r1, r3, #0
    adds r1, #0x66
    ldr r0, lbl_0806ab14 @ =0x00003c44
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0x68
    movs r1, #0x16
    strh r1, [r0]
    strh r6, [r7]
    mov r2, r8
    strh r1, [r2]
    b lbl_0806ab30
    .align 2, 0
lbl_0806ab14: .4byte 0x00003c44
lbl_0806ab18:
    adds r1, r3, #0
    adds r1, #0x66
    ldr r0, lbl_0806ac3c @ =0x00003844
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0806ac40 @ =0x0000060a
    strh r0, [r1]
    movs r0, #6
    strh r0, [r7]
    movs r0, #0xa
    mov r3, r8
    strh r0, [r3]
lbl_0806ab30:
    ldr r1, lbl_0806ac44 @ =0x0400004a
    movs r0, #0x3f
    strb r0, [r1]
    adds r1, #1
    movs r0, #0x18
    strb r0, [r1]
    ldr r0, lbl_0806ac48 @ =0x0300139e
    movs r6, #0
    strh r6, [r0]
    ldr r2, lbl_0806ac4c @ =0x04000010
    ldr r0, lbl_0806ac50 @ =0x03000bf4
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ldr r5, lbl_0806ac54 @ =0x000001ff
    adds r1, r5, #0
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806ac58 @ =0x03000bf6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    mov r3, ip
    ldrh r0, [r3]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    mov r5, sb
    ldrh r0, [r5]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806ac5c @ =0x03000bfc
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806ac60 @ =0x03000bfe
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806ac64 @ =0x03000c00
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0806ac68 @ =0x03000c02
    ldrh r0, [r0]
    lsrs r0, r0, #2
    ands r0, r1
    strh r0, [r2]
    ldr r0, lbl_0806ac6c @ =0x0400004c
    strh r6, [r0]
    ldr r1, lbl_0806ac70 @ =0x04000050
    mov r0, sl
    ldr r4, [r0]
    adds r0, r4, #0
    adds r0, #0x66
    ldrh r0, [r0]
    strh r0, [r1]
    adds r2, #0x34
    ldrh r0, [r7]
    lsls r0, r0, #8
    mov r3, r8
    ldrh r1, [r3]
    orrs r0, r1
    strh r0, [r2]
    ldrh r1, [r4]
    movs r0, #0x10
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    cmp r5, #0
    beq lbl_0806ac80
    adds r1, r4, #0
    adds r1, #0x5c
    movs r2, #0
    movs r0, #0xf0
    lsls r0, r0, #5
    strh r0, [r1]
    adds r0, r4, #0
    adds r0, #0x6a
    strh r2, [r0]
    adds r0, #6
    strh r2, [r0]
    adds r0, #2
    strh r2, [r0]
    adds r0, #2
    strh r2, [r0]
    adds r0, #2
    strh r2, [r0]
    adds r0, #2
    strh r2, [r0]
    adds r0, #2
    strh r2, [r0]
    subs r0, #0xc
    strh r2, [r0]
    ldr r3, lbl_0806ac74 @ =0x0840d088
    ldrh r1, [r3, #2]
    ldr r5, lbl_0806ac78 @ =0x0000dc48
    adds r0, r5, #0
    orrs r1, r0
    adds r0, r4, #0
    adds r0, #0x6c
    strh r1, [r0]
    subs r0, #8
    strh r1, [r0]
    ldrh r0, [r3, #6]
    movs r6, #0xb8
    lsls r6, r6, #5
    adds r1, r6, #0
    orrs r0, r1
    adds r1, r4, #0
    adds r1, #0x62
    strh r0, [r1]
    ldrh r0, [r3, #4]
    ldr r3, lbl_0806ac7c @ =0x00001808
    adds r1, r3, #0
    orrs r0, r1
    adds r1, r4, #0
    adds r1, #0x60
    strh r0, [r1]
    adds r0, r4, #0
    adds r0, #0x5e
    strh r2, [r0]
    b lbl_0806ae08
    .align 2, 0
lbl_0806ac3c: .4byte 0x00003844
lbl_0806ac40: .4byte 0x0000060a
lbl_0806ac44: .4byte 0x0400004a
lbl_0806ac48: .4byte 0x0300139e
lbl_0806ac4c: .4byte 0x04000010
lbl_0806ac50: .4byte 0x03000bf4
lbl_0806ac54: .4byte 0x000001ff
lbl_0806ac58: .4byte 0x03000bf6
lbl_0806ac5c: .4byte 0x03000bfc
lbl_0806ac60: .4byte 0x03000bfe
lbl_0806ac64: .4byte 0x03000c00
lbl_0806ac68: .4byte 0x03000c02
lbl_0806ac6c: .4byte 0x0400004c
lbl_0806ac70: .4byte 0x04000050
lbl_0806ac74: .4byte 0x0840d088
lbl_0806ac78: .4byte 0x0000dc48
lbl_0806ac7c: .4byte 0x00001808
lbl_0806ac80:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0806ad08
    adds r1, r4, #0
    adds r1, #0x5c
    movs r0, #0xf8
    lsls r0, r0, #5
    strh r0, [r1]
    adds r0, r4, #0
    adds r0, #0x6a
    strh r5, [r0]
    ldr r2, lbl_0806acfc @ =0x0840d088
    ldrh r0, [r2]
    movs r6, #0xc8
    lsls r6, r6, #5
    adds r1, r6, #0
    orrs r0, r1
    adds r3, r4, #0
    adds r3, #0x70
    strh r0, [r3]
    adds r0, r4, #0
    adds r0, #0x72
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    subs r0, #0xc
    strh r5, [r0]
    ldrh r1, [r2, #2]
    ldr r5, lbl_0806ad00 @ =0x0000dc48
    adds r0, r5, #0
    orrs r1, r0
    adds r0, r4, #0
    adds r0, #0x6c
    strh r1, [r0]
    subs r0, #8
    strh r1, [r0]
    ldrh r0, [r2, #6]
    movs r6, #0xb8
    lsls r6, r6, #5
    adds r1, r6, #0
    orrs r0, r1
    adds r1, r4, #0
    adds r1, #0x62
    strh r0, [r1]
    ldrh r0, [r2, #4]
    ldr r2, lbl_0806ad04 @ =0x00001808
    adds r1, r2, #0
    orrs r0, r1
    adds r1, r4, #0
    adds r1, #0x60
    strh r0, [r1]
    ldrh r1, [r3]
    adds r0, r4, #0
    adds r0, #0x5e
    b lbl_0806ae06
    .align 2, 0
lbl_0806acfc: .4byte 0x0840d088
lbl_0806ad00: .4byte 0x0000dc48
lbl_0806ad04: .4byte 0x00001808
lbl_0806ad08:
    adds r1, r4, #0
    adds r1, #0x5c
    movs r0, #0xf0
    lsls r0, r0, #5
    strh r0, [r1]
    ldr r3, lbl_0806ada0 @ =0x0840d088
    ldrh r0, [r3]
    ldr r5, lbl_0806ada4 @ =0x00001b04
    adds r1, r5, #0
    orrs r0, r1
    adds r1, r4, #0
    adds r1, #0x6a
    strh r0, [r1]
    ldrh r1, [r3, #6]
    ldr r2, lbl_0806ada8 @ =0x0000dc08
    adds r0, r2, #0
    adds r2, r1, #0
    orrs r2, r0
    adds r0, r4, #0
    adds r0, #0x6c
    strh r2, [r0]
    ldr r5, lbl_0806adac @ =0x00001f08
    adds r0, r5, #0
    orrs r1, r0
    adds r0, r4, #0
    adds r0, #0x6e
    strh r1, [r0]
    ldrh r0, [r3, #2]
    movs r2, #0xc8
    lsls r2, r2, #5
    adds r1, r2, #0
    orrs r0, r1
    adds r1, r4, #0
    adds r1, #0x70
    strh r0, [r1]
    ldrh r2, [r3, #4]
    movs r3, #0xd0
    lsls r3, r3, #5
    adds r0, r3, #0
    orrs r0, r2
    adds r3, r4, #0
    adds r3, #0x72
    strh r0, [r3]
    movs r5, #0xc0
    lsls r5, r5, #5
    adds r0, r5, #0
    adds r1, r2, #0
    orrs r1, r0
    adds r0, r4, #0
    adds r0, #0x74
    strh r1, [r0]
    ldrh r0, [r3]
    adds r1, r4, #0
    adds r1, #0x76
    strh r0, [r1]
    ldrh r0, [r4]
    movs r1, #1
    ands r1, r0
    cmp r1, #0
    beq lbl_0806adb4
    movs r6, #0xb0
    lsls r6, r6, #5
    adds r0, r6, #0
    adds r1, r2, #0
    orrs r1, r0
    adds r0, r4, #0
    adds r0, #0x78
    strh r1, [r0]
    ldr r1, lbl_0806adb0 @ =0x00001608
    adds r0, r1, #0
    adds r1, r2, #0
    orrs r1, r0
    adds r0, r4, #0
    adds r0, #0x7a
    b lbl_0806adbc
    .align 2, 0
lbl_0806ada0: .4byte 0x0840d088
lbl_0806ada4: .4byte 0x00001b04
lbl_0806ada8: .4byte 0x0000dc08
lbl_0806adac: .4byte 0x00001f08
lbl_0806adb0: .4byte 0x00001608
lbl_0806adb4:
    adds r0, r4, #0
    adds r0, #0x78
    strh r1, [r0]
    adds r0, #2
lbl_0806adbc:
    strh r1, [r0]
    mov r3, sl
    ldr r2, [r3]
    adds r0, r2, #0
    adds r0, #0x6c
    ldrh r1, [r0]
    subs r0, #8
    strh r1, [r0]
    adds r0, #0xc
    ldrh r1, [r0]
    subs r0, #0x10
    strh r1, [r0]
    adds r0, #0xa
    ldrh r0, [r0]
    adds r1, r2, #0
    adds r1, #0x5e
    strh r0, [r1]
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806adfe
    adds r1, r2, #0
    adds r1, #0x5c
    movs r0, #0x94
    lsls r0, r0, #8
    strh r0, [r1]
    adds r0, r2, #0
    adds r0, #0x74
    ldrh r1, [r0]
    subs r0, #0x12
    b lbl_0806ae06
lbl_0806adfe:
    adds r0, r2, #0
    adds r0, #0x72
    ldrh r1, [r0]
    subs r0, #0x10
lbl_0806ae06:
    strh r1, [r0]
lbl_0806ae08:
    ldr r1, lbl_0806aeac @ =0x04000008
    mov r5, sl
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x5e
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    adds r0, r2, #0
    adds r0, #0x60
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    adds r0, r2, #0
    adds r0, #0x62
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    adds r0, r2, #0
    adds r0, #0x64
    ldrh r0, [r0]
    strh r0, [r1]
    bl sub_0806920c
    ldr r0, lbl_0806aeb0 @ =0x03005807
    movs r1, #4
    strb r1, [r0]
    ldr r0, lbl_0806aeb4 @ =0x03005806
    strb r1, [r0]
    bl sub_08068694
    bl sub_0806889c
    ldr r2, [r5]
    ldrh r1, [r2]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0806ae6c
    ldr r6, lbl_0806aeb8 @ =0x00000412
    adds r0, r2, r6
    ldrb r0, [r0]
    cmp r0, #3
    beq lbl_0806ae6c
    ldr r1, lbl_0806aebc @ =0x00000413
    adds r0, r2, r1
    ldrb r1, [r0]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0]
lbl_0806ae6c:
    bl sub_080695bc
    ldr r1, lbl_0806aec0 @ =0x040000d4
    ldr r0, lbl_0806aec4 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0806aec8 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r0, #2
    bl sub_080682ec
    ldr r0, lbl_0806aecc @ =sub_0806a2f8
    bl CallbackSetVBlank
    movs r1, #0x80
    lsls r1, r1, #0x13
    ldr r0, lbl_0806aed0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x5c
    ldrh r0, [r0]
    strh r0, [r1]
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806aeac: .4byte 0x04000008
lbl_0806aeb0: .4byte 0x03005807
lbl_0806aeb4: .4byte 0x03005806
lbl_0806aeb8: .4byte 0x00000412
lbl_0806aebc: .4byte 0x00000413
lbl_0806aec0: .4byte 0x040000d4
lbl_0806aec4: .4byte 0x03000e7c
lbl_0806aec8: .4byte 0x84000100
lbl_0806aecc: .4byte sub_0806a2f8
lbl_0806aed0: .4byte 0x08754bc4

    thumb_func_start determine_maps_viewable
determine_maps_viewable: @ 0x0806aed4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r3, lbl_0806aff8 @ =0x08754bc4
    ldr r0, [r3]
    ldr r1, lbl_0806affc @ =0x03001530
    ldrb r1, [r1, #0x10]
    adds r0, #0xba
    strb r1, [r0]
    ldr r1, [r3]
    adds r2, r1, #0
    adds r2, #0xba
    adds r1, #0xb8
    ldrb r0, [r2]
    ldrb r1, [r1]
    orrs r0, r1
    strb r0, [r2]
    ldr r1, [r3]
    adds r2, r1, #0
    adds r2, #0xba
    adds r1, #0xb9
    ldrb r0, [r2]
    ldrb r1, [r1]
    orrs r0, r1
    strb r0, [r2]
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0xba
    ldrb r2, [r0]
    movs r4, #1
    movs r0, #1
    ands r0, r2
    adds r1, #0xbb
    strb r0, [r1]
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0xbb
    adds r0, #0xba
    ldrb r1, [r0]
    lsrs r1, r1, #1
    ands r1, r4
    ldrb r0, [r2]
    adds r0, r0, r1
    strb r0, [r2]
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0xbb
    adds r0, #0xba
    ldrb r1, [r0]
    lsrs r1, r1, #2
    ands r1, r4
    ldrb r0, [r2]
    adds r0, r0, r1
    strb r0, [r2]
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0xbb
    adds r0, #0xba
    ldrb r1, [r0]
    lsrs r1, r1, #3
    ands r1, r4
    ldrb r0, [r2]
    adds r0, r0, r1
    strb r0, [r2]
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0xbb
    adds r0, #0xba
    ldrb r1, [r0]
    lsrs r1, r1, #4
    ands r1, r4
    ldrb r0, [r2]
    adds r0, r0, r1
    strb r0, [r2]
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0xbb
    adds r0, #0xba
    ldrb r1, [r0]
    lsrs r1, r1, #5
    ands r1, r4
    ldrb r0, [r2]
    adds r0, r0, r1
    strb r0, [r2]
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0xbb
    adds r0, #0xba
    ldrb r1, [r0]
    lsrs r1, r1, #6
    ands r1, r4
    ldrb r0, [r2]
    adds r0, r0, r1
    strb r0, [r2]
    ldr r0, [r3]
    adds r0, #0xbb
    ldrb r0, [r0]
    cmp r0, #1
    bhi lbl_0806afe2
    movs r5, #0x93
    lsls r5, r5, #2
    ldr r0, lbl_0806b000 @ =0x00000251
    mov sl, r0
    ldr r0, lbl_0806b004 @ =0x08754bb4
    mov sb, r0
    movs r7, #0
    ldr r6, lbl_0806b008 @ =0x000090d0
    movs r4, #0x9b
    lsls r4, r4, #3
    movs r0, #0x98
    lsls r0, r0, #8
    mov r8, r0
    movs r0, #0xa0
    lsls r0, r0, #8
    mov ip, r0
lbl_0806afbe:
    mov r0, sb
    ldr r2, [r0]
    lsls r3, r5, #1
    mov r0, r8
    adds r1, r2, r0
    adds r0, r1, r3
    strh r7, [r0]
    adds r1, r1, r4
    strh r7, [r1]
    add r2, ip
    adds r3, r2, r3
    strh r6, [r3]
    adds r2, r2, r4
    strh r6, [r2]
    adds r4, #2
    adds r5, #1
    cmp r5, sl
    ble lbl_0806afbe
lbl_0806afe2:
    movs r0, #1
    movs r1, #1
    bl sub_0806b00c
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806aff8: .4byte 0x08754bc4
lbl_0806affc: .4byte 0x03001530
lbl_0806b000: .4byte 0x00000251
lbl_0806b004: .4byte 0x08754bb4
lbl_0806b008: .4byte 0x000090d0

    thumb_func_start sub_0806b00c
sub_0806b00c: @ 0x0806b00c
    push {r4, r5, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r0, lbl_0806b074 @ =0x0600cc40
    mov ip, r0
    ldr r0, lbl_0806b078 @ =0x08754bb4
    ldr r0, [r0]
    movs r3, #0x97
    lsls r3, r3, #8
    adds r5, r0, r3
    movs r4, #1
    rsbs r4, r4, #0
    adds r3, r4, #0
    cmp r2, #0
    beq lbl_0806b042
    movs r3, #0
    cmp r2, #1
    bne lbl_0806b042
    ldr r0, lbl_0806b07c @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #0x11]
    cmp r0, #0
    bne lbl_0806b042
    movs r3, #0x16
lbl_0806b042:
    cmp r1, #0
    beq lbl_0806b05a
    movs r4, #0
    cmp r1, #1
    bne lbl_0806b05a
    ldr r0, lbl_0806b07c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbb
    ldrb r0, [r0]
    cmp r0, #1
    bls lbl_0806b05a
    movs r4, #0x2d
lbl_0806b05a:
    cmp r3, #0
    bne lbl_0806b080
    cmp r4, #0
    bne lbl_0806b080
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    mov r2, ip
    movs r3, #0x80
    bl BitFill
    b lbl_0806b0ee
    .align 2, 0
lbl_0806b074: .4byte 0x0600cc40
lbl_0806b078: .4byte 0x08754bb4
lbl_0806b07c: .4byte 0x08754bc4
lbl_0806b080:
    cmp r3, #0
    blt lbl_0806b0a6
    lsls r0, r3, #1
    adds r0, r0, r5
    ldrh r1, [r0]
    mov r2, ip
    strh r1, [r2, #0x2c]
    ldrh r1, [r0, #2]
    strh r1, [r2, #0x2e]
    adds r2, #0x6c
    adds r1, r0, #0
    adds r1, #0x40
    ldrh r1, [r1]
    strh r1, [r2]
    mov r1, ip
    adds r1, #0x6e
    adds r0, #0x42
    ldrh r0, [r0]
    strh r0, [r1]
lbl_0806b0a6:
    cmp r4, #0
    blt lbl_0806b0ee
    mov r3, ip
    adds r3, #0x5a
    adds r1, r4, #0
    adds r0, r1, #1
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    adds r2, r4, #0
    lsls r1, r1, #1
    adds r1, r1, r5
    ldrh r0, [r1]
    strh r0, [r3]
    adds r3, #2
    adds r0, r2, #1
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    adds r1, r4, #0
    lsls r2, r2, #1
    adds r2, r2, r5
    ldrh r0, [r2]
    strh r0, [r3]
    mov r2, ip
    adds r2, #0x5e
    adds r0, r1, #1
    lsls r0, r0, #0x10
    lsls r1, r1, #1
    adds r1, r1, r5
    ldrh r1, [r1]
    strh r1, [r2]
    mov r1, ip
    adds r1, #0x60
    asrs r0, r0, #0xf
    adds r0, r0, r5
    ldrh r0, [r0]
    strh r0, [r1]
lbl_0806b0ee:
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start get_minimap_data
get_minimap_data: @ 0x0806b0f8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r7, r1, #0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r8, r0
    ldr r0, lbl_0806b174 @ =0x087601ec
    mov r1, r8
    lsls r4, r1, #2
    adds r0, r4, r0
    ldr r0, [r0]
    adds r1, r7, #0
    bl CallLZ77UncompWRAM
    mov r0, r8
    adds r1, r7, #0
    bl set_tiles_with_obtained_items
    ldr r6, lbl_0806b178 @ =0x0840d200
    mov r0, r8
    adds r5, r4, r0
    adds r0, r5, r6
    ldrb r4, [r0]
    cmp r4, #0
    beq lbl_0806b212
    adds r1, r4, #0
    movs r0, #3
    bl EventFunction
    cmp r0, #0
    beq lbl_0806b212
    adds r0, r6, #2
    adds r0, r5, r0
    adds r1, r6, #3
    adds r1, r5, r1
    ldrb r1, [r1]
    lsls r1, r1, #5
    ldrb r0, [r0]
    adds r4, r1, r0
    mov r1, r8
    cmp r1, #5
    bne lbl_0806b184
    lsls r0, r4, #1
    adds r4, r0, r7
    ldrh r2, [r4]
    ldr r0, lbl_0806b17c @ =0x000003ff
    ldr r1, lbl_0806b180 @ =0x0840d224
    ands r0, r2
    ldrh r1, [r1, #4]
    cmp r0, r1
    bne lbl_0806b212
    adds r1, r4, #0
    movs r3, #2
lbl_0806b164:
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0806b164
    b lbl_0806b212
    .align 2, 0
lbl_0806b174: .4byte 0x087601ec
lbl_0806b178: .4byte 0x0840d200
lbl_0806b17c: .4byte 0x000003ff
lbl_0806b180: .4byte 0x0840d224
lbl_0806b184:
    mov r0, r8
    cmp r0, #1
    bne lbl_0806b1d0
    lsls r0, r4, #1
    adds r3, r0, r7
    ldrh r2, [r3]
    ldr r0, lbl_0806b1c8 @ =0x000003ff
    ldr r1, lbl_0806b1cc @ =0x0840d224
    ands r0, r2
    ldrh r1, [r1]
    cmp r0, r1
    bne lbl_0806b212
    adds r2, r3, #0
    movs r3, #1
lbl_0806b1a0:
    ldrh r0, [r2]
    adds r0, #0x20
    strh r0, [r2]
    adds r2, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0806b1a0
    lsls r0, r4, #1
    adds r0, r0, r7
    adds r1, r0, #0
    adds r1, #0x40
    movs r3, #1
lbl_0806b1b8:
    ldrh r0, [r1]
    adds r0, #0x20
    strh r0, [r1]
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0806b1b8
    b lbl_0806b212
    .align 2, 0
lbl_0806b1c8: .4byte 0x000003ff
lbl_0806b1cc: .4byte 0x0840d224
lbl_0806b1d0:
    mov r1, r8
    cmp r1, #3
    bne lbl_0806b212
    lsls r0, r4, #1
    adds r3, r0, r7
    ldrh r2, [r3]
    ldr r0, lbl_0806b238 @ =0x000003ff
    ldr r1, lbl_0806b23c @ =0x0840d224
    ands r0, r2
    ldrh r1, [r1, #2]
    cmp r0, r1
    bne lbl_0806b212
    adds r2, r3, #0
    movs r3, #1
lbl_0806b1ec:
    ldrh r0, [r2]
    adds r0, #0x20
    strh r0, [r2]
    adds r2, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0806b1ec
    lsls r0, r4, #1
    adds r0, r0, r7
    adds r1, r0, #0
    adds r1, #0x40
    movs r3, #1
lbl_0806b204:
    ldrh r0, [r1]
    adds r0, #0x20
    strh r0, [r1]
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0806b204
lbl_0806b212:
    mov r0, r8
    cmp r0, #0
    bne lbl_0806b22e
    movs r0, #3
    movs r1, #0x44
    bl EventFunction
    cmp r0, #0
    beq lbl_0806b22e
    adds r1, r7, #0
    adds r1, #0x9c
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
lbl_0806b22e:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806b238: .4byte 0x000003ff
lbl_0806b23c: .4byte 0x0840d224

    thumb_func_start sub_0806b240
sub_0806b240: @ 0x0806b240
    push {r4, r5, r6, lr}
    movs r6, #0
    bl check_for_maintained_input
    ldr r0, lbl_0806b264 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0xa]
    adds r0, #1
    strh r0, [r1, #0xa]
    ldrb r0, [r1, #4]
    cmp r0, #0x14
    bls lbl_0806b25a
    b lbl_0806b4f6
lbl_0806b25a:
    lsls r0, r0, #2
    ldr r1, lbl_0806b268 @ =lbl_0806b26c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806b264: .4byte 0x08754bc4
lbl_0806b268: .4byte lbl_0806b26c
lbl_0806b26c: @ jump table
    .4byte lbl_0806b2c0 @ case 0
    .4byte lbl_0806b2f0 @ case 1
    .4byte lbl_0806b31e @ case 2
    .4byte lbl_0806b328 @ case 3
    .4byte lbl_0806b358 @ case 4
    .4byte lbl_0806b398 @ case 5
    .4byte lbl_0806b37c @ case 6
    .4byte lbl_0806b398 @ case 7
    .4byte lbl_0806b3ac @ case 8
    .4byte lbl_0806b3c4 @ case 9
    .4byte lbl_0806b3dc @ case 10
    .4byte lbl_0806b3f4 @ case 11
    .4byte lbl_0806b418 @ case 12
    .4byte lbl_0806b430 @ case 13
    .4byte lbl_0806b45c @ case 14
    .4byte lbl_0806b430 @ case 15
    .4byte lbl_0806b478 @ case 16
    .4byte lbl_0806b498 @ case 17
    .4byte lbl_0806b44c @ case 18
    .4byte lbl_0806b4c6 @ case 19
    .4byte lbl_0806b4dc @ case 20
lbl_0806b2c0:
    ldr r2, lbl_0806b2e4 @ =0x03001380
    ldr r0, lbl_0806b2e8 @ =0x0300168c
    ldrh r0, [r0, #4]
    movs r1, #2
    orrs r0, r1
    ldrh r1, [r2]
    ands r0, r1
    cmp r0, #0
    beq lbl_0806b2dc
    ldr r0, lbl_0806b2ec @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #0x11]
    cmp r0, #0
    beq lbl_0806b324
lbl_0806b2dc:
    bl map_screen_check_input
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b2e4: .4byte 0x03001380
lbl_0806b2e8: .4byte 0x0300168c
lbl_0806b2ec: .4byte 0x08754bc4
lbl_0806b2f0:
    ldr r0, lbl_0806b314 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806b318
    adds r0, r2, #0
    adds r0, #0xd8
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806b30e
    movs r0, #1
    bl sub_0806b504
lbl_0806b30e:
    movs r6, #0
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b314: .4byte 0x08754bc4
lbl_0806b318:
    bl sub_08071800
    b lbl_0806b4f6
lbl_0806b31e:
    movs r0, #0xa0
    bl FadeMusic
lbl_0806b324:
    movs r6, #1
    b lbl_0806b4f6
lbl_0806b328:
    ldr r2, lbl_0806b34c @ =0x03001380
    ldr r0, lbl_0806b350 @ =0x0300168c
    ldrh r0, [r0, #4]
    movs r1, #3
    orrs r0, r1
    ldrh r1, [r2]
    ands r0, r1
    cmp r0, #0
    bne lbl_0806b33c
    b lbl_0806b4f6
lbl_0806b33c:
    ldr r0, lbl_0806b354 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #0x11]
    cmp r0, #0
    beq lbl_0806b348
    b lbl_0806b4f6
lbl_0806b348:
    b lbl_0806b324
    .align 2, 0
lbl_0806b34c: .4byte 0x03001380
lbl_0806b350: .4byte 0x0300168c
lbl_0806b354: .4byte 0x08754bc4
lbl_0806b358:
    bl sub_08070fb0
    cmp r0, #0
    bne lbl_0806b362
    b lbl_0806b4f6
lbl_0806b362:
    movs r0, #4
    bl sub_08068af8
    ldr r0, lbl_0806b378 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #0xa]
    movs r0, #5
    strb r0, [r1, #4]
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b378: .4byte 0x08754bc4
lbl_0806b37c:
    bl sub_0807142c
    cmp r0, #0
    bne lbl_0806b386
    b lbl_0806b4f6
lbl_0806b386:
    ldr r0, lbl_0806b394 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #0xa]
    movs r0, #7
    strb r0, [r1, #4]
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b394: .4byte 0x08754bc4
lbl_0806b398:
    ldr r0, lbl_0806b3a8 @ =0x08754bc4
    ldr r0, [r0]
    ldrh r0, [r0, #0xa]
    cmp r0, #0xc
    bhi lbl_0806b3a4
    b lbl_0806b4f6
lbl_0806b3a4:
    b lbl_0806b324
    .align 2, 0
lbl_0806b3a8: .4byte 0x08754bc4
lbl_0806b3ac:
    bl chozo_statue_hint_subroutine
    cmp r0, #0
    bne lbl_0806b3b6
    b lbl_0806b4f6
lbl_0806b3b6:
    ldr r0, lbl_0806b3c0 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0xe
    strb r0, [r1, #4]
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b3c0: .4byte 0x08754bc4
lbl_0806b3c4:
    bl sub_0806d448
    cmp r0, #0
    bne lbl_0806b3ce
    b lbl_0806b4f6
lbl_0806b3ce:
    ldr r0, lbl_0806b3d8 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0x12
    strb r0, [r1, #4]
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b3d8: .4byte 0x08754bc4
lbl_0806b3dc:
    bl easy_sleep_menu_subroutine
    cmp r0, #0
    bne lbl_0806b3e6
    b lbl_0806b4f6
lbl_0806b3e6:
    ldr r0, lbl_0806b3f0 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0x11
    strb r0, [r1, #4]
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b3f0: .4byte 0x08754bc4
lbl_0806b3f4:
    ldr r5, lbl_0806b414 @ =0x08754bc4
    ldr r0, [r5]
    adds r0, #0x7c
    ldrb r4, [r0]
    cmp r4, #0
    bne lbl_0806b4a4
    bl sub_0806b838
    cmp r0, #0
    bne lbl_0806b40a
    b lbl_0806b4f6
lbl_0806b40a:
    ldr r1, [r5]
    movs r0, #1
    strb r0, [r1, #4]
    b lbl_0806b4bc
    .align 2, 0
lbl_0806b414: .4byte 0x08754bc4
lbl_0806b418:
    ldr r5, lbl_0806b42c @ =0x08754bc4
    ldr r0, [r5]
    adds r0, #0x7c
    ldrb r4, [r0]
    cmp r4, #0
    bne lbl_0806b4a4
    bl sub_0806ba34
    b lbl_0806b4b4
    .align 2, 0
lbl_0806b42c: .4byte 0x08754bc4
lbl_0806b430:
    ldr r1, lbl_0806b448 @ =0x08754bc4
    ldr r2, [r1]
    movs r3, #0
    movs r0, #8
    strb r0, [r2, #4]
    ldr r0, [r1]
    movs r2, #0
    strh r3, [r0, #0xa]
    strb r2, [r0, #8]
    ldr r0, [r1]
    strb r2, [r0, #8]
    b lbl_0806b4f2
    .align 2, 0
lbl_0806b448: .4byte 0x08754bc4
lbl_0806b44c:
    ldr r1, lbl_0806b458 @ =0x08754bc4
    ldr r2, [r1]
    movs r3, #0
    movs r0, #3
    b lbl_0806b4ec
    .align 2, 0
lbl_0806b458: .4byte 0x08754bc4
lbl_0806b45c:
    ldr r0, lbl_0806b474 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    movs r0, #2
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0
    beq lbl_0806b470
    movs r0, #2
lbl_0806b470:
    strb r0, [r2, #4]
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b474: .4byte 0x08754bc4
lbl_0806b478:
    ldr r5, lbl_0806b494 @ =0x08754bc4
    ldr r0, [r5]
    adds r0, #0x7c
    ldrb r4, [r0]
    cmp r4, #0
    bne lbl_0806b4a4
    bl sub_0806bc34
    cmp r0, #0
    beq lbl_0806b4f6
    ldr r1, [r5]
    movs r0, #0xa
    strb r0, [r1, #4]
    b lbl_0806b4bc
    .align 2, 0
lbl_0806b494: .4byte 0x08754bc4
lbl_0806b498:
    ldr r5, lbl_0806b4ac @ =0x08754bc4
    ldr r0, [r5]
    adds r0, #0x7c
    ldrb r4, [r0]
    cmp r4, #0
    beq lbl_0806b4b0
lbl_0806b4a4:
    bl sub_080681c8
    b lbl_0806b4f6
    .align 2, 0
lbl_0806b4ac: .4byte 0x08754bc4
lbl_0806b4b0:
    bl sub_0806bf08
lbl_0806b4b4:
    cmp r0, #0
    beq lbl_0806b4f6
    ldr r0, [r5]
    strb r4, [r0, #4]
lbl_0806b4bc:
    ldr r0, [r5]
    strb r4, [r0, #8]
    ldr r0, [r5]
    strh r4, [r0, #0xa]
    b lbl_0806b4f6
lbl_0806b4c6:
    bl sub_0806b778
    cmp r0, #0
    beq lbl_0806b4f6
    ldr r1, lbl_0806b4d8 @ =0x08754bc4
    ldr r2, [r1]
    movs r3, #0
    movs r0, #4
    b lbl_0806b4ec
    .align 2, 0
lbl_0806b4d8: .4byte 0x08754bc4
lbl_0806b4dc:
    bl sub_0806b778
    cmp r0, #0
    beq lbl_0806b4f6
    ldr r1, lbl_0806b500 @ =0x08754bc4
    ldr r2, [r1]
    movs r3, #0
    movs r0, #6
lbl_0806b4ec:
    strb r0, [r2, #4]
    ldr r0, [r1]
    strb r3, [r0, #8]
lbl_0806b4f2:
    ldr r0, [r1]
    strh r3, [r0, #0xa]
lbl_0806b4f6:
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806b500: .4byte 0x08754bc4

    thumb_func_start sub_0806b504
sub_0806b504: @ 0x0806b504
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    ldr r4, lbl_0806b568 @ =0x08754bc4
    ldr r0, [r4]
    mov ip, r0
    movs r2, #0x84
    lsls r2, r2, #1
    add r2, ip
    ldrh r1, [r2]
    movs r3, #0x20
    rsbs r3, r3, #0
    adds r0, r3, #0
    ands r0, r1
    strh r0, [r2]
    movs r2, #0x85
    lsls r2, r2, #1
    add r2, ip
    ldrh r0, [r2]
    ands r3, r0
    strh r3, [r2]
    ldr r0, lbl_0806b56c @ =0x0300137c
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    adds r7, r4, #0
    cmp r0, #0
    beq lbl_0806b53e
    b lbl_0806b666
lbl_0806b53e:
    mov r1, ip
    ldrb r5, [r1, #8]
    cmp r5, #0
    beq lbl_0806b548
    b lbl_0806b666
lbl_0806b548:
    cmp r6, #0
    bne lbl_0806b5cc
    ldr r1, lbl_0806b570 @ =0x03001380
    ldrh r4, [r1]
    movs r0, #0x10
    ands r0, r4
    adds r6, r1, #0
    cmp r0, #0
    beq lbl_0806b578
    lsls r1, r3, #0x10
    ldr r0, lbl_0806b574 @ =0x039f0000
    cmp r1, r0
    bgt lbl_0806b58a
    adds r0, r3, #0
    adds r0, #0x20
    b lbl_0806b588
    .align 2, 0
lbl_0806b568: .4byte 0x08754bc4
lbl_0806b56c: .4byte 0x0300137c
lbl_0806b570: .4byte 0x03001380
lbl_0806b574: .4byte 0x039f0000
lbl_0806b578:
    movs r0, #0x20
    ands r0, r4
    cmp r0, #0
    beq lbl_0806b58a
    cmp r3, #0
    beq lbl_0806b58a
    adds r0, r3, #0
    subs r0, #0x20
lbl_0806b588:
    strh r0, [r2]
lbl_0806b58a:
    ldrh r1, [r6]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_0806b5a8
    ldr r0, [r7]
    movs r2, #0x84
    lsls r2, r2, #1
    adds r4, r0, r2
    ldrh r1, [r4]
    movs r2, #0
    ldrsh r0, [r4, r2]
    cmp r0, #0
    beq lbl_0806b666
    b lbl_0806b62c
lbl_0806b5a8:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0806b666
    ldr r0, [r7]
    movs r1, #0x84
    lsls r1, r1, #1
    adds r4, r0, r1
    ldrh r2, [r4]
    movs r0, #0
    ldrsh r1, [r4, r0]
    ldr r0, lbl_0806b5c8 @ =0x0000025f
    cmp r1, r0
    bgt lbl_0806b666
    b lbl_0806b658
    .align 2, 0
lbl_0806b5c8: .4byte 0x0000025f
lbl_0806b5cc:
    ldr r1, lbl_0806b5e8 @ =0x03001380
    ldrh r4, [r1]
    movs r0, #0x10
    ands r0, r4
    adds r6, r1, #0
    cmp r0, #0
    beq lbl_0806b5f4
    lsls r1, r3, #0x10
    ldr r0, lbl_0806b5ec @ =0x039f0000
    cmp r1, r0
    bgt lbl_0806b5f0
    adds r0, r3, #0
    adds r0, #0x20
    b lbl_0806b60a
    .align 2, 0
lbl_0806b5e8: .4byte 0x03001380
lbl_0806b5ec: .4byte 0x039f0000
lbl_0806b5f0:
    strh r5, [r2]
    b lbl_0806b60c
lbl_0806b5f4:
    movs r0, #0x20
    ands r0, r4
    cmp r0, #0
    beq lbl_0806b60c
    cmp r3, #0
    beq lbl_0806b606
    adds r0, r3, #0
    subs r0, #0x20
    b lbl_0806b60a
lbl_0806b606:
    movs r0, #0xe8
    lsls r0, r0, #2
lbl_0806b60a:
    strh r0, [r2]
lbl_0806b60c:
    ldrh r1, [r6]
    movs r0, #0x40
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0
    beq lbl_0806b63c
    ldr r0, [r7]
    movs r1, #0x84
    lsls r1, r1, #1
    adds r4, r0, r1
    ldrh r1, [r4]
    movs r2, #0
    ldrsh r0, [r4, r2]
    cmp r0, #0
    beq lbl_0806b634
lbl_0806b62c:
    adds r0, r1, #0
    subs r0, #0x20
    strh r0, [r4]
    b lbl_0806b666
lbl_0806b634:
    movs r0, #0x98
    lsls r0, r0, #2
    strh r0, [r4]
    b lbl_0806b666
lbl_0806b63c:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0806b666
    ldr r0, [r7]
    movs r1, #0x84
    lsls r1, r1, #1
    adds r4, r0, r1
    ldrh r2, [r4]
    movs r0, #0
    ldrsh r1, [r4, r0]
    ldr r0, lbl_0806b660 @ =0x0000025f
    cmp r1, r0
    bgt lbl_0806b664
lbl_0806b658:
    adds r0, r2, #0
    adds r0, #0x20
    strh r0, [r4]
    b lbl_0806b666
    .align 2, 0
lbl_0806b660: .4byte 0x0000025f
lbl_0806b664:
    strh r3, [r4]
lbl_0806b666:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_0806b66c
sub_0806b66c: @ 0x0806b66c
    push {r4, r5, lr}
    adds r2, r0, #0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    movs r5, #0
    ldrh r3, [r2]
    movs r4, #1
    cmp r3, r1
    bls lbl_0806b680
    subs r4, #2
lbl_0806b680:
    ldr r0, lbl_0806b690 @ =0x08754bc4
    ldr r0, [r0]
    ldrh r0, [r0, #0xa]
    adds r0, #4
    cmp r0, #0x1f
    bgt lbl_0806b694
    muls r0, r4, r0
    b lbl_0806b696
    .align 2, 0
lbl_0806b690: .4byte 0x08754bc4
lbl_0806b694:
    lsls r0, r4, #5
lbl_0806b696:
    adds r0, r3, r0
    strh r0, [r2]
    cmp r4, #0
    ble lbl_0806b6a8
    ldrh r0, [r2]
    cmp r0, r1
    blo lbl_0806b6ba
    strh r1, [r2]
    b lbl_0806b6b8
lbl_0806b6a8:
    movs r3, #0
    ldrsh r0, [r2, r3]
    cmp r0, r1
    bgt lbl_0806b6ba
    subs r0, r1, r0
    ldrh r1, [r2]
    adds r0, r0, r1
    strh r0, [r2]
lbl_0806b6b8:
    movs r5, #1
lbl_0806b6ba:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0806b6c4
sub_0806b6c4: @ 0x0806b6c4
    push {r4, r5, lr}
    adds r3, r0, #0
    lsls r1, r1, #0x10
    lsrs r4, r1, #0x10
    movs r5, #0
    ldrh r2, [r3]
    movs r1, #1
    cmp r2, r4
    bls lbl_0806b6d8
    subs r1, #2
lbl_0806b6d8:
    ldr r0, lbl_0806b6e8 @ =0x08754bc4
    ldr r0, [r0]
    ldrh r0, [r0, #0xa]
    adds r0, #4
    cmp r0, #0x1f
    bgt lbl_0806b6ec
    muls r0, r1, r0
    b lbl_0806b6ee
    .align 2, 0
lbl_0806b6e8: .4byte 0x08754bc4
lbl_0806b6ec:
    lsls r0, r1, #5
lbl_0806b6ee:
    adds r0, r2, r0
    strh r0, [r3]
    cmp r1, #0
    ble lbl_0806b700
    ldrh r0, [r3]
    cmp r0, r4
    blo lbl_0806b70a
    movs r5, #1
    b lbl_0806b70e
lbl_0806b700:
    movs r1, #0
    ldrsh r0, [r3, r1]
    cmp r0, r4
    bgt lbl_0806b70a
    movs r5, #1
lbl_0806b70a:
    cmp r5, #0
    beq lbl_0806b710
lbl_0806b70e:
    strh r4, [r3]
lbl_0806b710:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sub_0806b718
sub_0806b718: @ 0x0806b718
    push {r4, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    adds r4, r1, #0
    cmp r1, #0xff
    beq lbl_0806b734
    ldr r0, lbl_0806b76c @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0x87
    lsls r2, r2, #3
    adds r0, r0, r2
    bl sub_08068128
lbl_0806b734:
    movs r0, #1
    cmp r4, #0xf
    beq lbl_0806b748
    movs r0, #2
    cmp r4, #0x10
    beq lbl_0806b748
    movs r0, #3
    cmp r4, #0
    bne lbl_0806b748
    movs r0, #0
lbl_0806b748:
    ldr r1, lbl_0806b770 @ =0x08754bb4
    lsls r0, r0, #7
    movs r2, #0x95
    lsls r2, r2, #8
    adds r0, r0, r2
    ldr r1, [r1]
    adds r1, r1, r0
    ldr r2, lbl_0806b774 @ =0x0600c800
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x80
    bl DMATransfer
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806b76c: .4byte 0x08754bc4
lbl_0806b770: .4byte 0x08754bb4
lbl_0806b774: .4byte 0x0600c800

    thumb_func_start sub_0806b778
sub_0806b778: @ 0x0806b778
    push {r4, r5, lr}
    sub sp, #4
    movs r4, #0
    ldr r5, lbl_0806b794 @ =0x08754bc4
    ldr r1, [r5]
    ldrb r0, [r1, #8]
    cmp r0, #1
    beq lbl_0806b7a2
    cmp r0, #1
    bgt lbl_0806b798
    cmp r0, #0
    beq lbl_0806b7a8
    b lbl_0806b7fa
    .align 2, 0
lbl_0806b794: .4byte 0x08754bc4
lbl_0806b798:
    cmp r0, #2
    beq lbl_0806b7ae
    cmp r0, #3
    beq lbl_0806b7c0
    b lbl_0806b7fa
lbl_0806b7a2:
    movs r0, #3
    bl sub_08068af8
lbl_0806b7a8:
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806b7fe
lbl_0806b7ae:
    ldrb r0, [r1, #0xa]
    subs r0, #1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    bl draw_status_screen_item
    cmp r0, #0
    beq lbl_0806b7fa
    b lbl_0806b7a8
lbl_0806b7c0:
    ldr r0, lbl_0806b810 @ =0x03000bf2
    ldrb r1, [r0]
    movs r0, #2
    bl sub_08070020
    ldr r1, [r5]
    adds r1, #0xc1
    strb r0, [r1]
    bl sub_08070f6c
    ldr r1, [r5]
    adds r1, #0x5c
    ldrh r2, [r1]
    movs r3, #0x80
    lsls r3, r3, #1
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    ldr r2, lbl_0806b814 @ =0x06007800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    movs r4, #1
    rsbs r4, r4, #0
lbl_0806b7fa:
    cmp r4, #0
    ble lbl_0806b82a
lbl_0806b7fe:
    cmp r4, #0xff
    ble lbl_0806b81c
    ldr r2, lbl_0806b818 @ =0x08754bc4
    ldr r1, [r2]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    adds r1, r2, #0
    b lbl_0806b822
    .align 2, 0
lbl_0806b810: .4byte 0x03000bf2
lbl_0806b814: .4byte 0x06007800
lbl_0806b818: .4byte 0x08754bc4
lbl_0806b81c:
    ldr r1, lbl_0806b834 @ =0x08754bc4
    ldr r0, [r1]
    strb r4, [r0, #8]
lbl_0806b822:
    ldr r1, [r1]
    movs r0, #0
    strh r0, [r1, #0xa]
    movs r4, #0
lbl_0806b82a:
    adds r0, r4, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806b834: .4byte 0x08754bc4

    thumb_func_start sub_0806b838
sub_0806b838: @ 0x0806b838
    push {r4, lr}
    sub sp, #4
    movs r4, #0
    ldr r1, lbl_0806b858 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #8]
    adds r2, r1, #0
    cmp r0, #9
    bls lbl_0806b84c
    b lbl_0806b9d6
lbl_0806b84c:
    lsls r0, r0, #2
    ldr r1, lbl_0806b85c @ =lbl_0806b860
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806b858: .4byte 0x08754bc4
lbl_0806b85c: .4byte lbl_0806b860
lbl_0806b860: @ jump table
    .4byte lbl_0806b888 @ case 0
    .4byte lbl_0806b8e0 @ case 1
    .4byte lbl_0806b8f4 @ case 2
    .4byte lbl_0806b912 @ case 3
    .4byte lbl_0806b93c @ case 4
    .4byte lbl_0806b944 @ case 5
    .4byte lbl_0806b950 @ case 6
    .4byte lbl_0806b95c @ case 7
    .4byte lbl_0806b974 @ case 8
    .4byte lbl_0806b9ac @ case 9
lbl_0806b888:
    ldr r0, lbl_0806b8ac @ =0x03001530
    ldrb r0, [r0, #0x12]
    cmp r0, #2
    bne lbl_0806b8b8
    ldr r0, lbl_0806b8b0 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0x80
    lsls r0, r0, #8
    adds r1, r1, r0
    ldr r2, lbl_0806b8b4 @ =0x0600c000
    movs r3, #0xa0
    lsls r3, r3, #3
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    b lbl_0806b8d2
    .align 2, 0
lbl_0806b8ac: .4byte 0x03001530
lbl_0806b8b0: .4byte 0x08754bb4
lbl_0806b8b4: .4byte 0x0600c000
lbl_0806b8b8:
    ldr r0, lbl_0806b8d8 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0xf0
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_0806b8dc @ =0x0600c000
    movs r3, #0xa0
    lsls r3, r3, #3
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_0806b8d2:
    movs r4, #1
    b lbl_0806b9da
    .align 2, 0
lbl_0806b8d8: .4byte 0x08754bb4
lbl_0806b8dc: .4byte 0x0600c000
lbl_0806b8e0:
    movs r0, #0xf
    bl sub_0806b718
    movs r4, #0x80
    lsls r4, r4, #1
    movs r0, #0xfa
    lsls r0, r0, #1
    bl SoundPlay
    b lbl_0806b9d6
lbl_0806b8f4:
    movs r0, #0x80
    lsls r0, r0, #5
    movs r1, #2
    movs r2, #0
    bl sub_08068168
    cmp r0, #0
    beq lbl_0806b9d6
    movs r0, #2
    movs r1, #2
    bl sub_0806b00c
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806b9da
lbl_0806b912:
    ldr r0, lbl_0806b934 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    movs r0, #0x80
    orrs r0, r1
    strh r0, [r2]
    adds r0, r2, #0
    adds r0, #0x74
    ldrh r0, [r0]
    adds r1, r2, #0
    adds r1, #0x62
    strh r0, [r1]
    adds r1, #4
    ldr r0, lbl_0806b938 @ =0x00003c44
    strh r0, [r1]
    movs r0, #1
    b lbl_0806b952
    .align 2, 0
lbl_0806b934: .4byte 0x08754bc4
lbl_0806b938: .4byte 0x00003c44
lbl_0806b93c:
    movs r0, #2
    bl sub_08068af8
    b lbl_0806b96a
lbl_0806b944:
    movs r0, #0x10
    movs r1, #2
    movs r2, #0
    bl sub_08068168
    b lbl_0806b96a
lbl_0806b950:
    movs r0, #3
lbl_0806b952:
    bl sub_08068af8
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806b9da
lbl_0806b95c:
    ldr r0, [r2]
    ldrb r0, [r0, #0xa]
    subs r0, #1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    bl draw_status_screen_item
lbl_0806b96a:
    cmp r0, #0
    beq lbl_0806b9d6
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806b9da
lbl_0806b974:
    bl sub_08070f6c
    ldr r0, lbl_0806b9a4 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x5c
    ldrh r2, [r1]
    movs r3, #0x80
    lsls r3, r3, #1
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    ldr r2, lbl_0806b9a8 @ =0x06007800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    movs r4, #1
    rsbs r4, r4, #0
    b lbl_0806ba14
    .align 2, 0
lbl_0806b9a4: .4byte 0x08754bc4
lbl_0806b9a8: .4byte 0x06007800
lbl_0806b9ac:
    ldr r3, [r2]
    adds r0, r3, #0
    adds r0, #0x78
    ldrh r0, [r0]
    adds r1, r3, #0
    adds r1, #0x62
    strh r0, [r1]
    adds r2, r3, #0
    adds r2, #0x5c
    ldrh r1, [r2]
    ldr r0, lbl_0806b9ec @ =0x0000fdff
    ands r0, r1
    strh r0, [r2]
    ldr r0, lbl_0806b9f0 @ =0x00000433
    adds r2, r3, r0
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
    movs r4, #1
    rsbs r4, r4, #0
lbl_0806b9d6:
    cmp r4, #0
    ble lbl_0806ba10
lbl_0806b9da:
    cmp r4, #0xff
    ble lbl_0806b9f8
    ldr r2, lbl_0806b9f4 @ =0x08754bc4
    ldr r1, [r2]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    b lbl_0806ba00
    .align 2, 0
lbl_0806b9ec: .4byte 0x0000fdff
lbl_0806b9f0: .4byte 0x00000433
lbl_0806b9f4: .4byte 0x08754bc4
lbl_0806b9f8:
    ldr r1, lbl_0806ba0c @ =0x08754bc4
    ldr r0, [r1]
    strb r4, [r0, #8]
    adds r2, r1, #0
lbl_0806ba00:
    ldr r1, [r2]
    movs r0, #0
    strh r0, [r1, #0xa]
    movs r4, #0
    b lbl_0806ba20
    .align 2, 0
lbl_0806ba0c: .4byte 0x08754bc4
lbl_0806ba10:
    cmp r4, #0
    bge lbl_0806ba20
lbl_0806ba14:
    ldr r1, lbl_0806ba2c @ =0x030013b2
    movs r0, #0
    strh r0, [r1]
    ldr r1, lbl_0806ba30 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
lbl_0806ba20:
    adds r0, r4, #0
    add sp, #4
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806ba2c: .4byte 0x030013b2
lbl_0806ba30: .4byte 0x030013b0

    thumb_func_start sub_0806ba34
sub_0806ba34: @ 0x0806ba34
    push {r4, r5, lr}
    movs r4, #0
    ldr r1, lbl_0806ba50 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #8]
    adds r5, r1, #0
    cmp r0, #8
    bls lbl_0806ba46
    b lbl_0806bbd0
lbl_0806ba46:
    lsls r0, r0, #2
    ldr r1, lbl_0806ba54 @ =lbl_0806ba58
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806ba50: .4byte 0x08754bc4
lbl_0806ba54: .4byte lbl_0806ba58
lbl_0806ba58: @ jump table
    .4byte lbl_0806ba7c @ case 0
    .4byte lbl_0806baa4 @ case 1
    .4byte lbl_0806bac8 @ case 2
    .4byte lbl_0806bad8 @ case 3
    .4byte lbl_0806bb18 @ case 4
    .4byte lbl_0806bb40 @ case 5
    .4byte lbl_0806bb76 @ case 6
    .4byte lbl_0806bb9c @ case 7
    .4byte lbl_0806bbc4 @ case 8
lbl_0806ba7c:
    ldr r0, lbl_0806ba9c @ =0x000001f5
    bl SoundPlay
    ldr r0, lbl_0806baa0 @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0x89
    lsls r2, r2, #1
    adds r1, r0, r2
    movs r0, #0
    strb r0, [r1]
    bl sub_0806b718
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806bbd4
    .align 2, 0
lbl_0806ba9c: .4byte 0x000001f5
lbl_0806baa0: .4byte 0x08754bc4
lbl_0806baa4:
    movs r0, #4
    bl sub_08068af8
    ldr r0, lbl_0806bac0 @ =0x08754bc4
    ldr r0, [r0]
    ldr r4, lbl_0806bac4 @ =0x00000123
    adds r2, r0, r4
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806bbd4
    .align 2, 0
lbl_0806bac0: .4byte 0x08754bc4
lbl_0806bac4: .4byte 0x00000123
lbl_0806bac8:
    ldr r0, [r5]
    ldrh r0, [r0, #0xa]
    cmp r0, #0xc
    bhi lbl_0806bad2
    b lbl_0806bbd0
lbl_0806bad2:
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806bbd4
lbl_0806bad8:
    movs r0, #0x80
    lsls r0, r0, #5
    movs r1, #2
    movs r2, #0
    bl sub_08068168
    cmp r0, #0
    beq lbl_0806bbd0
    ldr r0, lbl_0806bb0c @ =0x08754bc4
    ldr r1, [r0]
    adds r3, r1, #0
    adds r3, #0x5c
    ldrh r2, [r3]
    ldr r0, lbl_0806bb10 @ =0x0000feff
    ands r0, r2
    strh r0, [r3]
    ldr r0, lbl_0806bb14 @ =0x00000463
    adds r1, r1, r0
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806bbd4
    .align 2, 0
lbl_0806bb0c: .4byte 0x08754bc4
lbl_0806bb10: .4byte 0x0000feff
lbl_0806bb14: .4byte 0x00000463
lbl_0806bb18:
    ldr r4, lbl_0806bb38 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x66
    movs r5, #0
    ldr r1, lbl_0806bb3c @ =0x00003844
    strh r1, [r0]
    movs r0, #5
    bl sub_08068af8
    ldr r0, [r4]
    adds r0, #0x57
    strb r5, [r0]
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806bbd4
    .align 2, 0
lbl_0806bb38: .4byte 0x08754bc4
lbl_0806bb3c: .4byte 0x00003844
lbl_0806bb40:
    ldr r1, lbl_0806bb8c @ =0x030013b2
    movs r0, #0x10
    strh r0, [r1]
    ldr r1, lbl_0806bb90 @ =0x030013b0
    movs r0, #0
    strh r0, [r1]
    ldr r2, [r5]
    adds r3, r2, #0
    adds r3, #0x5c
    ldrh r0, [r3]
    movs r4, #0x80
    lsls r4, r4, #2
    adds r1, r4, #0
    orrs r0, r1
    strh r0, [r3]
    ldr r0, lbl_0806bb94 @ =0x00000433
    adds r2, r2, r0
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
    ldr r1, [r5]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
lbl_0806bb76:
    ldr r0, lbl_0806bb98 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r0, #0
    adds r1, #0x72
    ldrh r1, [r1]
    adds r0, #0x62
    strh r1, [r0]
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806bbd4
    .align 2, 0
lbl_0806bb8c: .4byte 0x030013b2
lbl_0806bb90: .4byte 0x030013b0
lbl_0806bb94: .4byte 0x00000433
lbl_0806bb98: .4byte 0x08754bc4
lbl_0806bb9c:
    ldr r0, [r5]
    adds r0, #0x68
    ldrh r0, [r0]
    movs r1, #2
    movs r2, #0
    bl sub_08068168
    cmp r0, #0
    beq lbl_0806bbd0
    ldr r2, [r5]
    ldrh r1, [r2]
    ldr r0, lbl_0806bbc0 @ =0x0000ff7f
    ands r0, r1
    strh r0, [r2]
    movs r4, #0x80
    lsls r4, r4, #1
    b lbl_0806bbd4
    .align 2, 0
lbl_0806bbc0: .4byte 0x0000ff7f
lbl_0806bbc4:
    movs r0, #1
    movs r1, #1
    bl sub_0806b00c
    movs r4, #1
    rsbs r4, r4, #0
lbl_0806bbd0:
    cmp r4, #0
    ble lbl_0806bc04
lbl_0806bbd4:
    cmp r4, #0xff
    ble lbl_0806bbec
    ldr r2, lbl_0806bbe8 @ =0x08754bc4
    ldr r1, [r2]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    adds r5, r2, #0
    b lbl_0806bbf4
    .align 2, 0
lbl_0806bbe8: .4byte 0x08754bc4
lbl_0806bbec:
    ldr r1, lbl_0806bc00 @ =0x08754bc4
    ldr r0, [r1]
    strb r4, [r0, #8]
    adds r5, r1, #0
lbl_0806bbf4:
    ldr r1, [r5]
    movs r0, #0
    strh r0, [r1, #0xa]
    movs r4, #0
    b lbl_0806bc1e
    .align 2, 0
lbl_0806bc00: .4byte 0x08754bc4
lbl_0806bc04:
    cmp r4, #0
    bge lbl_0806bc1e
    ldr r1, lbl_0806bc28 @ =0x030013b2
    ldr r0, lbl_0806bc2c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x68
    ldrh r2, [r0]
    lsrs r0, r2, #8
    strh r0, [r1]
    ldr r1, lbl_0806bc30 @ =0x030013b0
    movs r0, #0xff
    ands r0, r2
    strh r0, [r1]
lbl_0806bc1e:
    adds r0, r4, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806bc28: .4byte 0x030013b2
lbl_0806bc2c: .4byte 0x08754bc4
lbl_0806bc30: .4byte 0x030013b0

    thumb_func_start sub_0806bc34
sub_0806bc34: @ 0x0806bc34
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r4, lbl_0806bc60 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xe9
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    blt lbl_0806bc4c
    bl sub_0806fbb8
lbl_0806bc4c:
    ldr r0, [r4]
    ldrb r0, [r0, #8]
    cmp r0, #0xb
    bls lbl_0806bc56
    b lbl_0806bef0
lbl_0806bc56:
    lsls r0, r0, #2
    ldr r1, lbl_0806bc64 @ =lbl_0806bc68
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806bc60: .4byte 0x08754bc4
lbl_0806bc64: .4byte lbl_0806bc68
lbl_0806bc68: @ jump table
    .4byte lbl_0806bc98 @ case 0
    .4byte lbl_0806bc9e @ case 1
    .4byte lbl_0806bcc4 @ case 2
    .4byte lbl_0806bce8 @ case 3
    .4byte lbl_0806bd1c @ case 4
    .4byte lbl_0806bef0 @ case 5
    .4byte lbl_0806bd50 @ case 6
    .4byte lbl_0806bdbc @ case 7
    .4byte lbl_0806be04 @ case 8
    .4byte lbl_0806be58 @ case 9
    .4byte lbl_0806be7a @ case 10
    .4byte lbl_0806be9c @ case 11
lbl_0806bc98:
    movs r0, #0x80
    lsls r0, r0, #5
    b lbl_0806be7c
lbl_0806bc9e:
    movs r0, #2
    movs r1, #2
    bl sub_0806b00c
    movs r0, #0x10
    bl sub_0806b718
    ldr r0, lbl_0806bcbc @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x5c
    ldrh r2, [r1]
    ldr r0, lbl_0806bcc0 @ =0x0000fbff
    ands r0, r2
    strh r0, [r1]
    b lbl_0806bef0
    .align 2, 0
lbl_0806bcbc: .4byte 0x08754bc4
lbl_0806bcc0: .4byte 0x0000fbff
lbl_0806bcc4:
    ldr r0, lbl_0806bce0 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0x88
    lsls r0, r0, #8
    adds r1, r1, r0
    ldr r2, lbl_0806bce4 @ =0x0600d000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    b lbl_0806bef0
    .align 2, 0
lbl_0806bce0: .4byte 0x08754bb4
lbl_0806bce4: .4byte 0x0600d000
lbl_0806bce8:
    ldr r1, lbl_0806bd10 @ =0x06006000
    ldr r5, lbl_0806bd14 @ =0x08754bb4
    ldr r2, [r5]
    movs r3, #0xa8
    lsls r3, r3, #8
    adds r2, r2, r3
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0806bd18 @ =0x06006800
    ldr r2, [r5]
    movs r0, #0xb0
    lsls r0, r0, #8
    adds r2, r2, r0
    b lbl_0806be3c
    .align 2, 0
lbl_0806bd10: .4byte 0x06006000
lbl_0806bd14: .4byte 0x08754bb4
lbl_0806bd18: .4byte 0x06006800
lbl_0806bd1c:
    ldr r1, lbl_0806bd44 @ =0x06007000
    ldr r5, lbl_0806bd48 @ =0x08754bb4
    ldr r2, [r5]
    movs r3, #0xb8
    lsls r3, r3, #8
    adds r2, r2, r3
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, lbl_0806bd4c @ =0x06007800
    ldr r2, [r5]
    movs r0, #0xc0
    lsls r0, r0, #8
    adds r2, r2, r0
    b lbl_0806be3c
    .align 2, 0
lbl_0806bd44: .4byte 0x06007000
lbl_0806bd48: .4byte 0x08754bb4
lbl_0806bd4c: .4byte 0x06007800
lbl_0806bd50:
    ldr r0, lbl_0806bda8 @ =0x040000d4
    ldr r1, lbl_0806bdac @ =0x08754bb4
    ldr r2, [r1]
    movs r3, #0xc0
    lsls r3, r3, #7
    adds r1, r2, r3
    str r1, [r0]
    movs r4, #0x87
    lsls r4, r4, #7
    adds r1, r2, r4
    str r1, [r0, #4]
    ldr r3, lbl_0806bdb0 @ =0x80000040
    str r3, [r0, #8]
    ldr r1, [r0, #8]
    movs r4, #0xc8
    lsls r4, r4, #7
    adds r1, r2, r4
    str r1, [r0]
    movs r4, #0x8f
    lsls r4, r4, #7
    adds r1, r2, r4
    str r1, [r0, #4]
    str r3, [r0, #8]
    ldr r1, [r0, #8]
    ldr r4, lbl_0806bdb4 @ =0x000061c0
    adds r1, r2, r4
    str r1, [r0]
    movs r4, #0x97
    lsls r4, r4, #7
    adds r1, r2, r4
    str r1, [r0, #4]
    str r3, [r0, #8]
    ldr r1, [r0, #8]
    ldr r4, lbl_0806bdb8 @ =0x000065c0
    adds r1, r2, r4
    str r1, [r0]
    movs r1, #0x9f
    lsls r1, r1, #7
    adds r2, r2, r1
    str r2, [r0, #4]
    str r3, [r0, #8]
    ldr r0, [r0, #8]
    b lbl_0806bef0
    .align 2, 0
lbl_0806bda8: .4byte 0x040000d4
lbl_0806bdac: .4byte 0x08754bb4
lbl_0806bdb0: .4byte 0x80000040
lbl_0806bdb4: .4byte 0x000061c0
lbl_0806bdb8: .4byte 0x000065c0
lbl_0806bdbc:
    ldr r0, lbl_0806bdf4 @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0xe9
    ldrb r0, [r0]
    cmp r0, #1
    bls lbl_0806be8c
    ldr r5, lbl_0806bdf8 @ =0x08754bb4
    ldr r1, [r5]
    movs r3, #0x80
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_0806bdfc @ =0x06006000
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, [r5]
    movs r0, #0x90
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r2, lbl_0806be00 @ =0x06006800
    b lbl_0806be3c
    .align 2, 0
lbl_0806bdf4: .4byte 0x08754bc4
lbl_0806bdf8: .4byte 0x08754bb4
lbl_0806bdfc: .4byte 0x06006000
lbl_0806be00: .4byte 0x06006800
lbl_0806be04:
    ldr r0, lbl_0806be48 @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0xe9
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bge lbl_0806be8c
    ldr r5, lbl_0806be4c @ =0x08754bb4
    ldr r1, [r5]
    movs r3, #0xa0
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_0806be50 @ =0x06007000
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, [r5]
    movs r0, #0xb0
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r2, lbl_0806be54 @ =0x06007800
lbl_0806be3c:
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    b lbl_0806bef0
    .align 2, 0
lbl_0806be48: .4byte 0x08754bc4
lbl_0806be4c: .4byte 0x08754bb4
lbl_0806be50: .4byte 0x06007000
lbl_0806be54: .4byte 0x06007800
lbl_0806be58:
    ldr r0, lbl_0806be94 @ =0x08754bc4
    ldr r3, [r0]
    adds r1, r3, #0
    adds r1, #0x66
    ldr r0, lbl_0806be98 @ =0x00003c44
    strh r0, [r1]
    adds r2, r3, #0
    adds r2, #0x5c
    ldrh r1, [r2]
    movs r4, #0x80
    lsls r4, r4, #3
    adds r0, r4, #0
    orrs r0, r1
    strh r0, [r2]
    ldrb r0, [r3, #8]
    adds r0, #1
    strb r0, [r3, #8]
lbl_0806be7a:
    movs r0, #0x10
lbl_0806be7c:
    movs r1, #4
    movs r2, #0
    bl sub_08068168
    cmp r0, #0
    bne lbl_0806bef0
    ldr r0, lbl_0806be94 @ =0x08754bc4
    ldr r1, [r0]
lbl_0806be8c:
    ldrb r0, [r1, #8]
    subs r0, #1
    strb r0, [r1, #8]
    b lbl_0806bef0
    .align 2, 0
lbl_0806be94: .4byte 0x08754bc4
lbl_0806be98: .4byte 0x00003c44
lbl_0806be9c:
    ldr r5, lbl_0806bee8 @ =0x08754bc4
    ldr r0, [r5]
    movs r4, #0x8c
    lsls r4, r4, #1
    adds r0, r0, r4
    movs r1, #2
    bl sub_08068128
    ldr r1, [r5]
    movs r0, #0x8d
    lsls r0, r0, #1
    adds r6, r1, r0
    movs r2, #0
    movs r3, #0
    adds r0, #0xf6
    strh r0, [r6]
    adds r4, r1, r4
    movs r0, #0x88
    lsls r0, r0, #1
    strh r0, [r4]
    adds r0, #0x13
    adds r4, r1, r0
    ldrb r1, [r4]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r4]
    ldr r1, lbl_0806beec @ =0x03000043
    movs r0, #1
    strb r0, [r1]
    ldr r0, [r5]
    strb r2, [r0, #8]
    ldr r0, [r5]
    strh r3, [r0, #0xa]
    movs r0, #1
    b lbl_0806befc
    .align 2, 0
lbl_0806bee8: .4byte 0x08754bc4
lbl_0806beec: .4byte 0x03000043
lbl_0806bef0:
    ldr r0, lbl_0806bf04 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    movs r0, #0
lbl_0806befc:
    add sp, #4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806bf04: .4byte 0x08754bc4

    thumb_func_start sub_0806bf08
sub_0806bf08: @ 0x0806bf08
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r1, lbl_0806bf24 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #8]
    adds r2, r1, #0
    cmp r0, #8
    bls lbl_0806bf1a
    b lbl_0806c0c8
lbl_0806bf1a:
    lsls r0, r0, #2
    ldr r1, lbl_0806bf28 @ =lbl_0806bf2c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806bf24: .4byte 0x08754bc4
lbl_0806bf28: .4byte lbl_0806bf2c
lbl_0806bf2c: @ jump table
    .4byte lbl_0806bf50 @ case 0
    .4byte lbl_0806bf66 @ case 1
    .4byte lbl_0806bf88 @ case 2
    .4byte lbl_0806bfc4 @ case 3
    .4byte lbl_0806bff0 @ case 4
    .4byte lbl_0806c024 @ case 5
    .4byte lbl_0806c064 @ case 6
    .4byte lbl_0806c084 @ case 7
    .4byte lbl_0806c0ac @ case 8
lbl_0806bf50:
    ldr r1, lbl_0806bf80 @ =0x03000043
    movs r0, #0
    strb r0, [r1]
    movs r0, #0
    bl sub_0806b718
    ldr r0, lbl_0806bf84 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
lbl_0806bf66:
    movs r0, #0x80
    lsls r0, r0, #5
    movs r1, #4
    movs r2, #0
    bl sub_08068168
    cmp r0, #0
    beq lbl_0806bf78
    b lbl_0806c0c8
lbl_0806bf78:
    ldr r0, lbl_0806bf84 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_0806c09a
    .align 2, 0
lbl_0806bf80: .4byte 0x03000043
lbl_0806bf84: .4byte 0x08754bc4
lbl_0806bf88:
    ldr r4, lbl_0806bfb8 @ =0x08754bc4
    ldr r3, [r4]
    adds r2, r3, #0
    adds r2, #0x5c
    ldrh r1, [r2]
    ldr r0, lbl_0806bfbc @ =0x0000fbff
    ands r0, r1
    strh r0, [r2]
    movs r1, #0x8c
    lsls r1, r1, #1
    adds r0, r3, r1
    movs r1, #0
    bl sub_08068128
    ldr r0, [r4]
    ldr r4, lbl_0806bfc0 @ =0x00000123
    adds r2, r0, r4
    ldrb r1, [r2]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r2]
    b lbl_0806c0c8
    .align 2, 0
lbl_0806bfb8: .4byte 0x08754bc4
lbl_0806bfbc: .4byte 0x0000fbff
lbl_0806bfc0: .4byte 0x00000123
lbl_0806bfc4:
    ldr r1, lbl_0806bfe0 @ =0x040000d4
    ldr r0, lbl_0806bfe4 @ =0x08754bb4
    ldr r0, [r0]
    movs r2, #0x98
    lsls r2, r2, #8
    adds r0, r0, r2
    str r0, [r1]
    ldr r0, lbl_0806bfe8 @ =0x0600d000
    str r0, [r1, #4]
    ldr r0, lbl_0806bfec @ =0x80000400
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    b lbl_0806c0c8
    .align 2, 0
lbl_0806bfe0: .4byte 0x040000d4
lbl_0806bfe4: .4byte 0x08754bb4
lbl_0806bfe8: .4byte 0x0600d000
lbl_0806bfec: .4byte 0x80000400
lbl_0806bff0:
    ldr r5, lbl_0806c018 @ =0x08754bb4
    ldr r1, [r5]
    movs r4, #0xa8
    lsls r4, r4, #8
    adds r1, r1, r4
    ldr r2, lbl_0806c01c @ =0x06006000
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, [r5]
    movs r0, #0xb0
    lsls r0, r0, #8
    adds r1, r1, r0
    ldr r2, lbl_0806c020 @ =0x06006800
    b lbl_0806c04a
    .align 2, 0
lbl_0806c018: .4byte 0x08754bb4
lbl_0806c01c: .4byte 0x06006000
lbl_0806c020: .4byte 0x06006800
lbl_0806c024:
    ldr r5, lbl_0806c058 @ =0x08754bb4
    ldr r1, [r5]
    movs r2, #0xb8
    lsls r2, r2, #8
    adds r1, r1, r2
    ldr r2, lbl_0806c05c @ =0x06007000
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, [r5]
    movs r0, #0xc0
    lsls r0, r0, #8
    adds r1, r1, r0
    ldr r2, lbl_0806c060 @ =0x06007800
lbl_0806c04a:
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    b lbl_0806c0c8
    .align 2, 0
lbl_0806c058: .4byte 0x08754bb4
lbl_0806c05c: .4byte 0x06007000
lbl_0806c060: .4byte 0x06007800
lbl_0806c064:
    ldr r3, [r2]
    adds r1, r3, #0
    adds r1, #0x66
    ldr r0, lbl_0806c0a4 @ =0x00003844
    strh r0, [r1]
    adds r2, r3, #0
    adds r2, #0x5c
    ldrh r1, [r2]
    movs r4, #0x80
    lsls r4, r4, #3
    adds r0, r4, #0
    orrs r0, r1
    strh r0, [r2]
    ldrb r0, [r3, #8]
    adds r0, #1
    strb r0, [r3, #8]
lbl_0806c084:
    ldr r4, lbl_0806c0a8 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x68
    ldrh r0, [r0]
    movs r1, #4
    movs r2, #0
    bl sub_08068168
    cmp r0, #0
    bne lbl_0806c0c8
    ldr r1, [r4]
lbl_0806c09a:
    ldrb r0, [r1, #8]
    subs r0, #1
    strb r0, [r1, #8]
    b lbl_0806c0c8
    .align 2, 0
lbl_0806c0a4: .4byte 0x00003844
lbl_0806c0a8: .4byte 0x08754bc4
lbl_0806c0ac:
    movs r0, #1
    movs r1, #1
    bl sub_0806b00c
    ldr r2, lbl_0806c0c4 @ =0x08754bc4
    ldr r0, [r2]
    movs r1, #0
    strb r1, [r0, #8]
    ldr r0, [r2]
    strh r1, [r0, #0xa]
    movs r0, #1
    b lbl_0806c0d4
    .align 2, 0
lbl_0806c0c4: .4byte 0x08754bc4
lbl_0806c0c8:
    ldr r0, lbl_0806c0dc @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    movs r0, #0
lbl_0806c0d4:
    add sp, #4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806c0dc: .4byte 0x08754bc4

    thumb_func_start check_for_maintained_input
check_for_maintained_input: @ 0x0806c0e0
    push {r4, lr}
    ldr r1, lbl_0806c104 @ =0x03005804
    ldr r2, lbl_0806c108 @ =0x03001380
    ldrh r0, [r2]
    strh r0, [r1]
    ldr r1, lbl_0806c10c @ =0x0300137c
    ldrh r0, [r1]
    movs r3, #0xf0
    ands r3, r0
    adds r4, r1, #0
    cmp r3, #0
    beq lbl_0806c114
    ldr r1, lbl_0806c110 @ =0x03005800
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    adds r3, r1, #0
    b lbl_0806c11c
    .align 2, 0
lbl_0806c104: .4byte 0x03005804
lbl_0806c108: .4byte 0x03001380
lbl_0806c10c: .4byte 0x0300137c
lbl_0806c110: .4byte 0x03005800
lbl_0806c114:
    ldr r0, lbl_0806c14c @ =0x03005800
    strb r3, [r0]
    strb r3, [r0, #1]
    adds r3, r0, #0
lbl_0806c11c:
    ldr r0, lbl_0806c150 @ =0x0840d66c
    ldrb r1, [r3, #1]
    adds r1, r1, r0
    ldrb r0, [r3]
    ldrb r1, [r1]
    cmp r0, r1
    blo lbl_0806c144
    ldrh r1, [r4]
    movs r0, #0xf0
    ands r0, r1
    ldrh r1, [r2]
    orrs r0, r1
    strh r0, [r2]
    movs r0, #0
    strb r0, [r3]
    ldrb r0, [r3, #1]
    cmp r0, #5
    bhi lbl_0806c144
    adds r0, #1
    strb r0, [r3, #1]
lbl_0806c144:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c14c: .4byte 0x03005800
lbl_0806c150: .4byte 0x0840d66c

    thumb_func_start update_minimap
update_minimap: @ 0x0806c154
    push {lr}
    bl check_for_unexplored_minimap_tile
    ldr r0, lbl_0806c174 @ =0x03000903
    ldrb r0, [r0]
    cmp r0, #3
    bne lbl_0806c16a
    bl set_minimap_tile_explored
    bl update_minimap_for_explored_tiles
lbl_0806c16a:
    bl draw_minimap
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c174: .4byte 0x03000903

    thumb_func_start set_minimap_tile_explored
set_minimap_tile_explored: @ 0x0806c178
    push {lr}
    ldr r0, lbl_0806c1ac @ =0x0300004b
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806c1a8
    ldr r0, lbl_0806c1b0 @ =0x03000054
    ldrb r2, [r0]
    ldr r0, lbl_0806c1b4 @ =0x0300005a
    lsls r2, r2, #5
    ldrb r0, [r0]
    adds r2, r2, r0
    ldr r0, lbl_0806c1b8 @ =0x08754bc0
    ldr r0, [r0]
    lsls r2, r2, #2
    adds r2, r2, r0
    ldr r1, lbl_0806c1bc @ =0x08760218
    ldr r0, lbl_0806c1c0 @ =0x03000059
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r1, [r2]
    ldr r0, [r0]
    orrs r1, r0
    str r1, [r2]
lbl_0806c1a8:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c1ac: .4byte 0x0300004b
lbl_0806c1b0: .4byte 0x03000054
lbl_0806c1b4: .4byte 0x0300005a
lbl_0806c1b8: .4byte 0x08754bc0
lbl_0806c1bc: .4byte 0x08760218
lbl_0806c1c0: .4byte 0x03000059

    thumb_func_start sub_0806c1c4
sub_0806c1c4: @ 0x0806c1c4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp]
    ldr r0, lbl_0806c21c @ =0x0300004b
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806c1e0
    b lbl_0806c372
lbl_0806c1e0:
    ldr r0, lbl_0806c220 @ =0x03000c08
    ldrb r1, [r0]
    mov ip, r0
    cmp r1, #0
    bne lbl_0806c1ec
    b lbl_0806c372
lbl_0806c1ec:
    movs r4, #0
    movs r6, #0
    ldr r0, [sp]
    cmp r0, #1
    bne lbl_0806c236
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0806c2a6
    movs r6, #0x7f
    ands r6, r1
    ldr r1, lbl_0806c224 @ =0x0840d684
    lsls r0, r6, #1
    adds r0, r0, r6
    lsls r0, r0, #2
    adds r3, r0, r1
    ldr r0, lbl_0806c228 @ =0x03000bf1
    ldrb r1, [r3]
    ldrb r2, [r0]
    cmp r1, r2
    bne lbl_0806c22c
    movs r4, #1
    b lbl_0806c2a6
    .align 2, 0
lbl_0806c21c: .4byte 0x0300004b
lbl_0806c220: .4byte 0x03000c08
lbl_0806c224: .4byte 0x0840d684
lbl_0806c228: .4byte 0x03000bf1
lbl_0806c22c:
    ldrb r0, [r3, #5]
    cmp r0, r2
    bne lbl_0806c2a6
    movs r4, #2
    b lbl_0806c2a6
lbl_0806c236:
    ldr r1, lbl_0806c264 @ =0x0840d684
    mov r8, r1
    ldrb r0, [r1]
    cmp r0, #0xff
    beq lbl_0806c294
    mov r5, ip
    ldrb r2, [r5, #1]
    movs r3, #0
lbl_0806c246:
    ldrb r0, [r1]
    cmp r0, r2
    bne lbl_0806c268
    mov r7, ip
    ldrb r0, [r7, #2]
    ldrb r7, [r1, #1]
    cmp r0, r7
    bne lbl_0806c280
    ldrb r0, [r5, #3]
    ldrb r7, [r1, #2]
    cmp r0, r7
    bne lbl_0806c280
    movs r4, #1
    b lbl_0806c298
    .align 2, 0
lbl_0806c264: .4byte 0x0840d684
lbl_0806c268:
    ldrb r0, [r1, #5]
    cmp r0, r2
    bne lbl_0806c280
    ldrb r0, [r5, #2]
    ldrb r7, [r1, #6]
    cmp r0, r7
    bne lbl_0806c280
    ldrb r0, [r5, #3]
    ldrb r7, [r1, #7]
    cmp r0, r7
    bne lbl_0806c280
    movs r4, #2
lbl_0806c280:
    cmp r4, #0
    bne lbl_0806c298
    adds r3, #0xc
    adds r1, #0xc
    adds r6, #1
    mov r7, r8
    adds r0, r3, r7
    ldrb r0, [r0]
    cmp r0, #0xff
    bne lbl_0806c246
lbl_0806c294:
    cmp r4, #0
    beq lbl_0806c2a6
lbl_0806c298:
    movs r0, #0x80
    rsbs r0, r0, #0
    adds r1, r0, #0
    adds r0, r6, #0
    orrs r0, r1
    mov r1, ip
    strb r0, [r1]
lbl_0806c2a6:
    cmp r4, #1
    bne lbl_0806c2cc
    ldr r0, lbl_0806c2c8 @ =0x0840d684
    lsls r1, r6, #1
    adds r1, r1, r6
    lsls r1, r1, #2
    adds r1, r1, r0
    ldrb r5, [r1]
    ldrb r3, [r1, #1]
    movs r0, #3
    ldrsb r0, [r1, r0]
    adds r0, r3, r0
    subs r4, r0, #1
    ldrb r2, [r1, #2]
    movs r0, #4
    ldrsb r0, [r1, r0]
    b lbl_0806c2f4
    .align 2, 0
lbl_0806c2c8: .4byte 0x0840d684
lbl_0806c2cc:
    cmp r4, #2
    beq lbl_0806c2d8
    movs r0, #0
    mov r1, ip
    strb r0, [r1]
    b lbl_0806c372
lbl_0806c2d8:
    ldr r0, lbl_0806c384 @ =0x0840d684
    lsls r1, r6, #1
    adds r1, r1, r6
    lsls r1, r1, #2
    adds r1, r1, r0
    ldrb r5, [r1, #5]
    ldrb r3, [r1, #6]
    movs r0, #8
    ldrsb r0, [r1, r0]
    adds r0, r3, r0
    subs r4, r0, #1
    ldrb r2, [r1, #7]
    movs r0, #9
    ldrsb r0, [r1, r0]
lbl_0806c2f4:
    adds r0, r2, r0
    subs r1, r0, #1
    subs r3, #1
    mov r7, ip
    strb r3, [r7, #2]
    subs r2, #1
    strb r2, [r7, #3]
    lsls r0, r1, #5
    adds r0, r4, r0
    lsls r0, r0, #1
    ldr r2, lbl_0806c388 @ =0x02034800
    adds r3, r0, r2
    lsls r0, r5, #5
    adds r5, r0, r1
    movs r6, #0
    mov sl, r0
    ldr r1, lbl_0806c38c @ =0x08760218
    lsls r0, r4, #2
    adds r7, r0, r1
    ldr r0, lbl_0806c390 @ =0xfffffebf
    mov sb, r0
    ldr r1, lbl_0806c394 @ =0x08754bc0
    mov r8, r1
lbl_0806c322:
    ldrh r0, [r3]
    ldr r4, lbl_0806c398 @ =0x000003ff
    ands r4, r0
    mov r2, sb
    adds r0, r4, r2
    cmp r0, #0x1d
    bhi lbl_0806c348
    mov r1, r8
    ldr r0, [r1]
    lsls r2, r5, #2
    adds r2, r2, r0
    ldr r0, [r2]
    ldm r7!, {r1}
    orrs r0, r1
    str r0, [r2]
    adds r6, #1
    adds r3, #2
    cmp r6, #0x1f
    ble lbl_0806c322
lbl_0806c348:
    ldr r2, [sp]
    cmp r2, #0
    beq lbl_0806c372
    mov r3, ip
    ldrb r0, [r3, #3]
    mov r7, sl
    adds r5, r7, r0
    ldr r0, lbl_0806c394 @ =0x08754bc0
    ldr r0, [r0]
    lsls r2, r5, #2
    adds r2, r2, r0
    ldr r1, lbl_0806c38c @ =0x08760218
    ldrb r0, [r3, #2]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r1, [r2]
    ldr r0, [r0]
    orrs r1, r0
    str r1, [r2]
    movs r0, #0
    strb r0, [r3]
lbl_0806c372:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c384: .4byte 0x0840d684
lbl_0806c388: .4byte 0x02034800
lbl_0806c38c: .4byte 0x08760218
lbl_0806c390: .4byte 0xfffffebf
lbl_0806c394: .4byte 0x08754bc0
lbl_0806c398: .4byte 0x000003ff

    thumb_func_start check_for_unexplored_minimap_tile
check_for_unexplored_minimap_tile: @ 0x0806c39c
    push {r4, r5, r6, lr}
    ldr r0, lbl_0806c3cc @ =0x03000903
    ldrb r1, [r0]
    adds r6, r0, #0
    cmp r1, #0
    bne lbl_0806c45c
    ldr r1, lbl_0806c3d0 @ =0x030013d4
    ldrh r3, [r1, #0x12]
    adds r0, r3, #0
    subs r0, #0x80
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    ldrh r0, [r1, #0x14]
    subs r0, #0x80
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    movs r0, #0x80
    lsls r0, r0, #8
    ands r0, r4
    cmp r0, #0
    beq lbl_0806c3d4
    movs r4, #0
    b lbl_0806c3ec
    .align 2, 0
lbl_0806c3cc: .4byte 0x03000903
lbl_0806c3d0: .4byte 0x030013d4
lbl_0806c3d4:
    ldr r0, lbl_0806c3fc @ =0x0300009c
    ldrh r0, [r0, #0x1c]
    lsls r0, r0, #0x16
    movs r2, #0xff
    lsls r2, r2, #0x18
    adds r0, r0, r2
    lsrs r2, r0, #0x10
    cmp r3, r2
    blo lbl_0806c3ec
    subs r0, r2, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
lbl_0806c3ec:
    movs r0, #0x80
    lsls r0, r0, #8
    ands r0, r5
    cmp r0, #0
    beq lbl_0806c400
    movs r5, #0
    b lbl_0806c41a
    .align 2, 0
lbl_0806c3fc: .4byte 0x0300009c
lbl_0806c400:
    ldr r0, lbl_0806c464 @ =0x0300009c
    ldrh r0, [r0, #0x1e]
    lsls r0, r0, #0x16
    movs r2, #0xff
    lsls r2, r2, #0x18
    adds r0, r0, r2
    lsrs r2, r0, #0x10
    ldrh r0, [r1, #0x14]
    cmp r0, r2
    blo lbl_0806c41a
    subs r0, r2, #1
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
lbl_0806c41a:
    lsrs r4, r4, #6
    lsrs r5, r5, #6
    adds r0, r4, #0
    movs r1, #0xf
    bl __udivsi3
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    adds r0, r5, #0
    movs r1, #0xa
    bl __udivsi3
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, lbl_0806c468 @ =0x03000059
    ldrb r1, [r2]
    ldr r3, lbl_0806c46c @ =0x030000bc
    ldrb r0, [r3, #0xe]
    adds r0, r4, r0
    cmp r1, r0
    beq lbl_0806c44a
    strb r0, [r2]
    movs r0, #3
    strb r0, [r6]
lbl_0806c44a:
    ldr r2, lbl_0806c470 @ =0x0300005a
    ldrb r1, [r2]
    ldrb r0, [r3, #0xf]
    adds r0, r5, r0
    cmp r1, r0
    beq lbl_0806c45c
    strb r0, [r2]
    movs r0, #3
    strb r0, [r6]
lbl_0806c45c:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c464: .4byte 0x0300009c
lbl_0806c468: .4byte 0x03000059
lbl_0806c46c: .4byte 0x030000bc
lbl_0806c470: .4byte 0x0300005a

    thumb_func_start MinimapCheckOnTransition
MinimapCheckOnTransition: @ 0x0806c474
    push {r4, r5, lr}
    ldr r5, lbl_0806c4f4 @ =0x03000bf1
    ldr r4, lbl_0806c4f8 @ =0x03000054
    ldrb r0, [r5]
    ldrb r1, [r4]
    cmp r0, r1
    beq lbl_0806c4bc
    movs r0, #0
    bl sub_0806c1c4
    ldrb r0, [r4]
    strb r0, [r5]
    ldrb r0, [r5]
    ldr r4, lbl_0806c4fc @ =0x02034800
    adds r1, r4, #0
    bl get_minimap_data
    ldr r1, lbl_0806c500 @ =0x040000d4
    str r4, [r1]
    ldr r4, lbl_0806c504 @ =0x02034000
    str r4, [r1, #4]
    ldr r0, lbl_0806c508 @ =0x80000400
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r0, #1
    bl sub_0806c1c4
    ldrb r0, [r5]
    adds r1, r4, #0
    bl minimap_set_downloaded_tiles
    ldr r0, lbl_0806c50c @ =0x03000059
    movs r1, #0xff
    strb r1, [r0]
    ldr r0, lbl_0806c510 @ =0x0300005a
    strb r1, [r0]
lbl_0806c4bc:
    ldr r4, lbl_0806c514 @ =0x03000903
    movs r0, #0
    strb r0, [r4]
    bl check_for_unexplored_minimap_tile
    ldrb r0, [r4]
    cmp r0, #3
    bne lbl_0806c4d4
    bl set_minimap_tile_explored
    bl update_minimap_for_explored_tiles
lbl_0806c4d4:
    movs r0, #1
    strb r0, [r4]
    bl draw_minimap
    movs r0, #2
    strb r0, [r4]
    bl draw_minimap
    movs r0, #3
    strb r0, [r4]
    bl draw_minimap
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c4f4: .4byte 0x03000bf1
lbl_0806c4f8: .4byte 0x03000054
lbl_0806c4fc: .4byte 0x02034800
lbl_0806c500: .4byte 0x040000d4
lbl_0806c504: .4byte 0x02034000
lbl_0806c508: .4byte 0x80000400
lbl_0806c50c: .4byte 0x03000059
lbl_0806c510: .4byte 0x0300005a
lbl_0806c514: .4byte 0x03000903

    thumb_func_start update_minimap_for_explored_tiles
update_minimap_for_explored_tiles: @ 0x0806c518
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_0806c558 @ =0x0300004b
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806c59c
    ldr r2, lbl_0806c55c @ =0x03000059
    ldr r3, lbl_0806c560 @ =0x0300005a
    ldrb r0, [r3]
    lsls r0, r0, #5
    ldrb r1, [r2]
    adds r0, r0, r1
    lsls r5, r0, #1
    ldr r0, lbl_0806c564 @ =0x02034000
    adds r4, r5, r0
    ldrh r1, [r4]
    movs r6, #0xf0
    lsls r6, r6, #8
    adds r0, r6, #0
    ands r0, r1
    adds r7, r2, #0
    cmp r0, #0
    bne lbl_0806c59c
    ldr r1, lbl_0806c568 @ =0x02034800
    adds r2, r5, r1
    ldrh r1, [r2]
    adds r0, r6, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0806c56c
    strh r1, [r4]
    b lbl_0806c576
    .align 2, 0
lbl_0806c558: .4byte 0x0300004b
lbl_0806c55c: .4byte 0x03000059
lbl_0806c560: .4byte 0x0300005a
lbl_0806c564: .4byte 0x02034000
lbl_0806c568: .4byte 0x02034800
lbl_0806c56c:
    movs r5, #0x80
    lsls r5, r5, #5
    adds r0, r5, #0
    orrs r0, r1
    strh r0, [r4]
lbl_0806c576:
    ldrh r1, [r2]
    ldr r0, lbl_0806c5a4 @ =0x000003ff
    ands r0, r1
    ldr r1, lbl_0806c5a8 @ =0xfffffebf
    adds r0, r0, r1
    cmp r0, #3
    bhi lbl_0806c59c
    ldr r1, lbl_0806c5ac @ =0x03000c08
    movs r0, #1
    strb r0, [r1]
    ldr r0, lbl_0806c5b0 @ =0x03000054
    ldrb r0, [r0]
    strb r0, [r1, #1]
    ldrb r0, [r7]
    adds r0, #1
    strb r0, [r1, #2]
    ldrb r0, [r3]
    adds r0, #1
    strb r0, [r1, #3]
lbl_0806c59c:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c5a4: .4byte 0x000003ff
lbl_0806c5a8: .4byte 0xfffffebf
lbl_0806c5ac: .4byte 0x03000c08
lbl_0806c5b0: .4byte 0x03000054

    thumb_func_start draw_minimap
draw_minimap: @ 0x0806c5b4
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    ldr r3, lbl_0806c5e4 @ =0x03000903
    ldrb r0, [r3]
    cmp r0, #0
    beq lbl_0806c690
    ldr r0, lbl_0806c5e8 @ =0x02034000
    mov r8, r0
    ldrb r2, [r3]
    subs r1, r2, #1
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #5
    ldr r1, lbl_0806c5ec @ =0x02037e20
    adds r6, r0, r1
    cmp r2, #3
    bne lbl_0806c5f0
    movs r7, #1
    mov sb, r7
    b lbl_0806c60a
    .align 2, 0
lbl_0806c5e4: .4byte 0x03000903
lbl_0806c5e8: .4byte 0x02034000
lbl_0806c5ec: .4byte 0x02037e20
lbl_0806c5f0:
    cmp r2, #2
    bne lbl_0806c5fa
    movs r0, #0
    mov sb, r0
    b lbl_0806c60a
lbl_0806c5fa:
    cmp r2, #1
    beq lbl_0806c604
    movs r0, #0
    strb r0, [r3]
    b lbl_0806c690
lbl_0806c604:
    movs r1, #1
    rsbs r1, r1, #0
    mov sb, r1
lbl_0806c60a:
    movs r5, #1
    rsbs r5, r5, #0
    mov r4, sp
lbl_0806c610:
    ldr r0, lbl_0806c6a0 @ =0x03000059
    ldrb r0, [r0]
    adds r1, r0, r5
    cmp r1, #0x1f
    bls lbl_0806c61e
    movs r1, #1
    rsbs r1, r1, #0
lbl_0806c61e:
    ldr r0, lbl_0806c6a4 @ =0x0300005a
    ldrb r0, [r0]
    add r0, sb
    cmp r0, #0x1f
    bls lbl_0806c62c
    movs r0, #1
    rsbs r0, r0, #0
lbl_0806c62c:
    cmp r0, #0
    blt lbl_0806c634
    cmp r1, #0
    bge lbl_0806c638
lbl_0806c634:
    movs r1, #0x1f
    movs r0, #0x1f
lbl_0806c638:
    lsls r0, r0, #5
    adds r0, r0, r1
    lsls r0, r0, #1
    add r0, r8
    movs r7, #0xc0
    lsls r7, r7, #4
    adds r2, r7, #0
    ldrh r1, [r0]
    adds r0, r1, #0
    ands r0, r2
    lsrs r3, r0, #0xa
    lsrs r2, r1, #0xc
    ldr r7, lbl_0806c6a8 @ =0x000003ff
    adds r0, r7, #0
    ands r1, r0
    strh r1, [r4]
    ldr r0, lbl_0806c6ac @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_0806c672
    movs r0, #0xa0
    lsls r0, r0, #1
    cmp r1, r0
    bls lbl_0806c672
    adds r0, r1, #0
    adds r0, #0x20
    strh r0, [r4]
lbl_0806c672:
    ldrh r0, [r4]
    lsls r0, r0, #5
    strh r0, [r4]
    ldr r1, lbl_0806c6b0 @ =0x08760298
    lsls r0, r3, #2
    adds r0, r0, r1
    ldr r3, [r0]
    adds r0, r6, #0
    mov r1, sp
    bl _call_via_r3
    adds r5, #1
    adds r6, #0x20
    cmp r5, #1
    ble lbl_0806c610
lbl_0806c690:
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c6a0: .4byte 0x03000059
lbl_0806c6a4: .4byte 0x0300005a
lbl_0806c6a8: .4byte 0x000003ff
lbl_0806c6ac: .4byte 0x03000020
lbl_0806c6b0: .4byte 0x08760298

    thumb_func_start sub_0806c6b4
sub_0806c6b4: @ 0x0806c6b4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    mov sl, r0
    adds r5, r1, #0
    lsls r2, r2, #0x18
    ldr r0, lbl_0806c780 @ =0x0840e0c4
    mov r8, r0
    ldr r1, lbl_0806c784 @ =0x0840d74c
    mov ip, r1
    lsrs r4, r2, #0x14
    ldr r7, lbl_0806c788 @ =0x0840d6fc
    movs r6, #0xf
    movs r0, #7
    mov sb, r0
lbl_0806c6d6:
    ldrh r2, [r5]
    mov r1, r8
    adds r0, r2, r1
    ldrb r0, [r0]
    lsrs r1, r0, #4
    adds r1, r1, r4
    add r1, ip
    ands r0, r6
    adds r0, r0, r4
    adds r0, r0, r7
    ldrb r1, [r1]
    ldrb r3, [r0]
    orrs r3, r1
    adds r2, #1
    strh r2, [r5]
    ldrh r2, [r5]
    mov r1, r8
    adds r0, r2, r1
    ldrb r0, [r0]
    lsrs r1, r0, #4
    adds r1, r1, r4
    add r1, ip
    ands r0, r6
    adds r0, r0, r4
    adds r0, r0, r7
    ldrb r1, [r1]
    ldrb r0, [r0]
    orrs r0, r1
    lsls r0, r0, #8
    orrs r3, r0
    adds r2, #1
    strh r2, [r5]
    ldrh r2, [r5]
    mov r1, r8
    adds r0, r2, r1
    ldrb r0, [r0]
    lsrs r1, r0, #4
    adds r1, r1, r4
    add r1, ip
    ands r0, r6
    adds r0, r0, r4
    adds r0, r0, r7
    ldrb r1, [r1]
    ldrb r0, [r0]
    orrs r0, r1
    lsls r0, r0, #0x10
    orrs r3, r0
    adds r2, #1
    strh r2, [r5]
    ldrh r2, [r5]
    mov r1, r8
    adds r0, r2, r1
    ldrb r0, [r0]
    lsrs r1, r0, #4
    adds r1, r1, r4
    add r1, ip
    ands r0, r6
    adds r0, r0, r4
    adds r0, r0, r7
    ldrb r1, [r1]
    ldrb r0, [r0]
    orrs r0, r1
    lsls r0, r0, #0x18
    orrs r3, r0
    adds r2, #1
    strh r2, [r5]
    mov r0, sl
    adds r0, #4
    mov sl, r0
    subs r0, #4
    stm r0!, {r3}
    movs r1, #1
    rsbs r1, r1, #0
    add sb, r1
    mov r0, sb
    cmp r0, #0
    bge lbl_0806c6d6
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c780: .4byte 0x0840e0c4
lbl_0806c784: .4byte 0x0840d74c
lbl_0806c788: .4byte 0x0840d6fc

    thumb_func_start sub_0806c78c
sub_0806c78c: @ 0x0806c78c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    str r0, [sp]
    adds r5, r1, #0
    lsls r2, r2, #0x18
    ldr r0, lbl_0806c86c @ =0x0840e0c4
    mov sb, r0
    ldr r1, lbl_0806c870 @ =0x0840d74c
    mov r8, r1
    movs r3, #0xf
    mov ip, r3
    lsrs r6, r2, #0x14
    ldr r7, lbl_0806c874 @ =0x0840d6fc
    movs r0, #7
    mov sl, r0
lbl_0806c7b2:
    ldrh r0, [r5]
    adds r0, #3
    strh r0, [r5]
    ldrh r2, [r5]
    mov r1, sb
    adds r0, r2, r1
    ldrb r1, [r0]
    adds r0, r1, #0
    mov r3, ip
    ands r0, r3
    adds r0, r0, r6
    add r0, r8
    lsrs r1, r1, #4
    adds r1, r1, r6
    adds r1, r1, r7
    ldrb r0, [r0]
    ldrb r4, [r1]
    orrs r4, r0
    subs r2, #1
    strh r2, [r5]
    ldrh r3, [r5]
    mov r1, sb
    adds r0, r3, r1
    ldrb r1, [r0]
    adds r0, r1, #0
    mov r2, ip
    ands r0, r2
    adds r0, r0, r6
    add r0, r8
    lsrs r1, r1, #4
    adds r1, r1, r6
    adds r1, r1, r7
    ldrb r2, [r0]
    ldrb r0, [r1]
    orrs r0, r2
    lsls r0, r0, #8
    orrs r4, r0
    subs r3, #1
    strh r3, [r5]
    ldrh r3, [r5]
    mov r1, sb
    adds r0, r3, r1
    ldrb r1, [r0]
    adds r0, r1, #0
    mov r2, ip
    ands r0, r2
    adds r0, r0, r6
    add r0, r8
    lsrs r1, r1, #4
    adds r1, r1, r6
    adds r1, r1, r7
    ldrb r2, [r0]
    ldrb r0, [r1]
    orrs r0, r2
    lsls r0, r0, #0x10
    orrs r4, r0
    subs r0, r3, #1
    strh r0, [r5]
    ldrh r0, [r5]
    add r0, sb
    ldrb r1, [r0]
    adds r0, r1, #0
    mov r2, ip
    ands r0, r2
    adds r0, r0, r6
    add r0, r8
    lsrs r1, r1, #4
    adds r1, r1, r6
    adds r1, r1, r7
    ldrb r2, [r0]
    ldrb r0, [r1]
    orrs r0, r2
    lsls r0, r0, #0x18
    orrs r4, r0
    ldr r0, [sp]
    stm r0!, {r4}
    str r0, [sp]
    adds r3, #3
    strh r3, [r5]
    movs r1, #1
    rsbs r1, r1, #0
    add sl, r1
    mov r2, sl
    cmp r2, #0
    bge lbl_0806c7b2
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c86c: .4byte 0x0840e0c4
lbl_0806c870: .4byte 0x0840d74c
lbl_0806c874: .4byte 0x0840d6fc

    thumb_func_start sub_0806c878
sub_0806c878: @ 0x0806c878
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    mov sl, r0
    adds r4, r1, #0
    lsls r2, r2, #0x18
    ldrh r0, [r4]
    adds r0, #0x1c
    strh r0, [r4]
    ldr r0, lbl_0806c948 @ =0x0840e0c4
    mov r8, r0
    ldr r1, lbl_0806c94c @ =0x0840d74c
    mov ip, r1
    lsrs r5, r2, #0x14
    ldr r7, lbl_0806c950 @ =0x0840d6fc
    movs r6, #0xf
    movs r0, #7
    mov sb, r0
lbl_0806c8a0:
    ldrh r2, [r4]
    mov r1, r8
    adds r0, r2, r1
    ldrb r0, [r0]
    lsrs r1, r0, #4
    adds r1, r1, r5
    add r1, ip
    ands r0, r6
    adds r0, r0, r5
    adds r0, r0, r7
    ldrb r1, [r1]
    ldrb r3, [r0]
    orrs r3, r1
    adds r2, #1
    strh r2, [r4]
    ldrh r2, [r4]
    mov r1, r8
    adds r0, r2, r1
    ldrb r0, [r0]
    lsrs r1, r0, #4
    adds r1, r1, r5
    add r1, ip
    ands r0, r6
    adds r0, r0, r5
    adds r0, r0, r7
    ldrb r1, [r1]
    ldrb r0, [r0]
    orrs r0, r1
    lsls r0, r0, #8
    orrs r3, r0
    adds r2, #1
    strh r2, [r4]
    ldrh r2, [r4]
    mov r1, r8
    adds r0, r2, r1
    ldrb r0, [r0]
    lsrs r1, r0, #4
    adds r1, r1, r5
    add r1, ip
    ands r0, r6
    adds r0, r0, r5
    adds r0, r0, r7
    ldrb r1, [r1]
    ldrb r0, [r0]
    orrs r0, r1
    lsls r0, r0, #0x10
    orrs r3, r0
    adds r0, r2, #1
    strh r0, [r4]
    ldrh r0, [r4]
    add r0, r8
    ldrb r0, [r0]
    lsrs r1, r0, #4
    adds r1, r1, r5
    add r1, ip
    ands r0, r6
    adds r0, r0, r5
    adds r0, r0, r7
    ldrb r1, [r1]
    ldrb r0, [r0]
    orrs r0, r1
    lsls r0, r0, #0x18
    orrs r3, r0
    mov r0, sl
    adds r0, #4
    mov sl, r0
    subs r0, #4
    stm r0!, {r3}
    subs r2, #6
    strh r2, [r4]
    movs r1, #1
    rsbs r1, r1, #0
    add sb, r1
    mov r0, sb
    cmp r0, #0
    bge lbl_0806c8a0
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806c948: .4byte 0x0840e0c4
lbl_0806c94c: .4byte 0x0840d74c
lbl_0806c950: .4byte 0x0840d6fc

    thumb_func_start sub_0806c954
sub_0806c954: @ 0x0806c954
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    str r0, [sp]
    adds r5, r1, #0
    lsls r2, r2, #0x18
    ldrh r0, [r5]
    adds r0, #0x1f
    strh r0, [r5]
    ldr r0, lbl_0806ca38 @ =0x0840e0c4
    mov sb, r0
    ldr r1, lbl_0806ca3c @ =0x0840d74c
    mov r8, r1
    movs r3, #0xf
    mov ip, r3
    lsrs r6, r2, #0x14
    ldr r7, lbl_0806ca40 @ =0x0840d6fc
    movs r0, #7
    mov sl, r0
lbl_0806c980:
    ldrh r2, [r5]
    mov r1, sb
    adds r0, r2, r1
    ldrb r1, [r0]
    adds r0, r1, #0
    mov r3, ip
    ands r0, r3
    adds r0, r0, r6
    add r0, r8
    lsrs r1, r1, #4
    adds r1, r1, r6
    adds r1, r1, r7
    ldrb r0, [r0]
    ldrb r4, [r1]
    orrs r4, r0
    subs r2, #1
    strh r2, [r5]
    ldrh r3, [r5]
    mov r1, sb
    adds r0, r3, r1
    ldrb r1, [r0]
    adds r0, r1, #0
    mov r2, ip
    ands r0, r2
    adds r0, r0, r6
    add r0, r8
    lsrs r1, r1, #4
    adds r1, r1, r6
    adds r1, r1, r7
    ldrb r2, [r0]
    ldrb r0, [r1]
    orrs r0, r2
    lsls r0, r0, #8
    orrs r4, r0
    subs r3, #1
    strh r3, [r5]
    ldrh r3, [r5]
    mov r1, sb
    adds r0, r3, r1
    ldrb r1, [r0]
    adds r0, r1, #0
    mov r2, ip
    ands r0, r2
    adds r0, r0, r6
    add r0, r8
    lsrs r1, r1, #4
    adds r1, r1, r6
    adds r1, r1, r7
    ldrb r2, [r0]
    ldrb r0, [r1]
    orrs r0, r2
    lsls r0, r0, #0x10
    orrs r4, r0
    subs r3, #1
    strh r3, [r5]
    ldrh r3, [r5]
    mov r1, sb
    adds r0, r3, r1
    ldrb r1, [r0]
    adds r0, r1, #0
    mov r2, ip
    ands r0, r2
    adds r0, r0, r6
    add r0, r8
    lsrs r1, r1, #4
    adds r1, r1, r6
    adds r1, r1, r7
    ldrb r2, [r0]
    ldrb r0, [r1]
    orrs r0, r2
    lsls r0, r0, #0x18
    orrs r4, r0
    subs r3, #1
    strh r3, [r5]
    ldr r3, [sp]
    stm r3!, {r4}
    str r3, [sp]
    movs r0, #1
    rsbs r0, r0, #0
    add sl, r0
    mov r1, sl
    cmp r1, #0
    bge lbl_0806c980
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806ca38: .4byte 0x0840e0c4
lbl_0806ca3c: .4byte 0x0840d74c
lbl_0806ca40: .4byte 0x0840d6fc

    thumb_func_start set_tiles_with_obtained_items
set_tiles_with_obtained_items: @ 0x0806ca44
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    mov ip, r1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #7
    bhi lbl_0806ca9e
    lsls r0, r0, #7
    ldr r1, lbl_0806caa8 @ =0x02033800
    adds r2, r0, r1
    movs r3, #0
    ldr r0, lbl_0806caac @ =0x08760218
    mov r8, r0
lbl_0806ca60:
    ldm r2!, {r0}
    adds r6, r3, #1
    adds r7, r2, #0
    cmp r0, #0
    beq lbl_0806ca96
    adds r4, r0, #0
    movs r5, #0
    lsls r0, r3, #6
    mov r1, ip
    adds r3, r0, r1
    mov r1, r8
lbl_0806ca76:
    ldr r2, [r1]
    adds r0, r4, #0
    ands r0, r2
    cmp r0, #0
    beq lbl_0806ca88
    eors r4, r2
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
lbl_0806ca88:
    adds r3, #2
    adds r1, #4
    adds r5, #1
    cmp r5, #0x1f
    bgt lbl_0806ca96
    cmp r4, #0
    bne lbl_0806ca76
lbl_0806ca96:
    adds r3, r6, #0
    adds r2, r7, #0
    cmp r3, #0x1f
    ble lbl_0806ca60
lbl_0806ca9e:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806caa8: .4byte 0x02033800
lbl_0806caac: .4byte 0x08760218

    thumb_func_start minimap_set_downloaded_tiles
minimap_set_downloaded_tiles: @ 0x0806cab0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    adds r2, r1, #0
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldr r0, lbl_0806cb24 @ =0x08754bc0
    lsls r1, r4, #7
    ldr r0, [r0]
    adds r3, r0, r1
    ldr r0, lbl_0806cb28 @ =0x03001530
    ldrb r0, [r0, #0x10]
    asrs r0, r4
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0806cae4
    adds r0, r4, #0
    subs r0, #8
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    bhi lbl_0806cb68
lbl_0806cae4:
    movs r1, #0
    movs r0, #0xf0
    lsls r0, r0, #8
    mov sl, r0
    ldr r5, lbl_0806cb2c @ =0x00002fff
    mov r8, r5
    movs r0, #0xc0
    lsls r0, r0, #6
    mov sb, r0
    ldr r5, lbl_0806cb30 @ =0x00000fff
    mov ip, r5
lbl_0806cafa:
    ldm r3!, {r0}
    adds r6, r1, #1
    adds r7, r3, #0
    str r0, [sp]
    ldr r3, lbl_0806cb34 @ =0x08760218
    movs r4, #0x1f
lbl_0806cb06:
    ldr r0, [r3]
    ldr r1, [sp]
    ands r0, r1
    cmp r0, #0
    beq lbl_0806cb38
    ldrh r1, [r2]
    mov r0, sl
    ands r0, r1
    cmp r0, #0
    bne lbl_0806cb54
    movs r5, #0x80
    lsls r5, r5, #5
    adds r0, r5, #0
    orrs r0, r1
    b lbl_0806cb52
    .align 2, 0
lbl_0806cb24: .4byte 0x08754bc0
lbl_0806cb28: .4byte 0x03001530
lbl_0806cb2c: .4byte 0x00002fff
lbl_0806cb30: .4byte 0x00000fff
lbl_0806cb34: .4byte 0x08760218
lbl_0806cb38:
    ldrh r1, [r2]
    cmp r1, r8
    bls lbl_0806cb46
    movs r1, #0xa0
    lsls r1, r1, #1
    adds r0, r1, #0
    b lbl_0806cb52
lbl_0806cb46:
    mov r0, sb
    ands r0, r1
    cmp r0, #0
    beq lbl_0806cb54
    mov r0, ip
    ands r0, r1
lbl_0806cb52:
    strh r0, [r2]
lbl_0806cb54:
    adds r3, #4
    subs r4, #1
    adds r2, #2
    cmp r4, #0
    bge lbl_0806cb06
    adds r1, r6, #0
    adds r3, r7, #0
    cmp r1, #0x1f
    ble lbl_0806cafa
    b lbl_0806cbc8
lbl_0806cb68:
    movs r1, #0
    ldr r5, lbl_0806cba0 @ =0x08760218
    mov r8, r5
    movs r0, #0xf0
    lsls r0, r0, #8
    mov ip, r0
lbl_0806cb74:
    ldm r3!, {r0}
    adds r6, r1, #1
    adds r7, r3, #0
    mov sb, r0
    mov r3, r8
    movs r4, #0x1f
lbl_0806cb80:
    ldr r0, [r3]
    mov r1, sb
    ands r0, r1
    cmp r0, #0
    beq lbl_0806cba4
    ldrh r1, [r2]
    mov r0, ip
    ands r0, r1
    cmp r0, #0
    bne lbl_0806cbb6
    movs r5, #0x80
    lsls r5, r5, #5
    adds r0, r5, #0
    orrs r0, r1
    b lbl_0806cbb4
    .align 2, 0
lbl_0806cba0: .4byte 0x08760218
lbl_0806cba4:
    ldrh r1, [r2]
    mov r0, ip
    ands r0, r1
    cmp r0, #0
    beq lbl_0806cbb6
    movs r1, #0xa0
    lsls r1, r1, #1
    adds r0, r1, #0
lbl_0806cbb4:
    strh r0, [r2]
lbl_0806cbb6:
    adds r3, #4
    subs r4, #1
    adds r2, #2
    cmp r4, #0
    bge lbl_0806cb80
    adds r1, r6, #0
    adds r3, r7, #0
    cmp r1, #0x1f
    ble lbl_0806cb74
lbl_0806cbc8:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start update_minimap_square_for_collected_item
update_minimap_square_for_collected_item: @ 0x0806cbd8
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r6, r1, #0x18
    ldr r7, lbl_0806cc4c @ =0x03000054
    ldrb r0, [r7]
    cmp r0, #7
    bhi lbl_0806cc44
    subs r0, r2, #2
    movs r1, #0xf
    bl __divsi3
    adds r4, r0, #0
    ldr r5, lbl_0806cc50 @ =0x030000bc
    ldrb r0, [r5, #0xe]
    adds r4, r4, r0
    subs r0, r6, #2
    movs r1, #0xa
    bl __divsi3
    ldrb r1, [r5, #0xf]
    adds r0, r0, r1
    ldrb r1, [r7]
    lsls r1, r1, #7
    ldr r2, lbl_0806cc54 @ =0x02033800
    adds r1, r1, r2
    lsls r3, r0, #2
    adds r3, r3, r1
    ldr r2, lbl_0806cc58 @ =0x08760218
    lsls r1, r4, #2
    adds r1, r1, r2
    ldr r2, [r3]
    ldr r1, [r1]
    orrs r2, r1
    str r2, [r3]
    lsls r0, r0, #5
    adds r4, r4, r0
    lsls r4, r4, #1
    ldr r0, lbl_0806cc5c @ =0x02034000
    adds r1, r4, r0
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    ldr r2, lbl_0806cc60 @ =0x02034800
    adds r4, r4, r2
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    ldr r1, lbl_0806cc64 @ =0x03000903
    movs r0, #3
    strb r0, [r1]
    bl draw_minimap
lbl_0806cc44:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806cc4c: .4byte 0x03000054
lbl_0806cc50: .4byte 0x030000bc
lbl_0806cc54: .4byte 0x02033800
lbl_0806cc58: .4byte 0x08760218
lbl_0806cc5c: .4byte 0x02034000
lbl_0806cc60: .4byte 0x02034800
lbl_0806cc64: .4byte 0x03000903

    thumb_func_start sub_0806cc68
sub_0806cc68: @ 0x0806cc68
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r7, r1, #0x18
    ldr r1, lbl_0806ccb4 @ =0x03000054
    ldrb r0, [r1]
    cmp r0, #7
    bhi lbl_0806ccc4
    adds r5, r0, #0
    lsls r5, r5, #5
    subs r0, r2, #2
    movs r1, #0xf
    bl __divsi3
    adds r4, r0, #0
    ldr r6, lbl_0806ccb8 @ =0x030000bc
    ldrb r0, [r6, #0xe]
    adds r4, r4, r0
    subs r0, r7, #2
    movs r1, #0xa
    bl __divsi3
    ldrb r1, [r6, #0xf]
    adds r0, r0, r1
    adds r0, r0, r5
    ldr r1, lbl_0806ccbc @ =0x08754bc0
    ldr r1, [r1]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r1, lbl_0806ccc0 @ =0x08760218
    lsls r4, r4, #2
    adds r4, r4, r1
    ldr r0, [r0]
    ldr r1, [r4]
    ands r0, r1
    b lbl_0806ccc6
    .align 2, 0
lbl_0806ccb4: .4byte 0x03000054
lbl_0806ccb8: .4byte 0x030000bc
lbl_0806ccbc: .4byte 0x08754bc0
lbl_0806ccc0: .4byte 0x08760218
lbl_0806ccc4:
    movs r0, #1
lbl_0806ccc6:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start load_minimap_tiles_with_obtained_items
load_minimap_tiles_with_obtained_items: @ 0x0806cccc
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    ldr r2, lbl_0806cd74 @ =0x02033800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    movs r2, #0
lbl_0806ccea:
    lsls r0, r2, #8
    ldr r1, lbl_0806cd78 @ =0x02036c00
    adds r5, r0, r1
    lsls r0, r2, #7
    ldr r1, lbl_0806cd74 @ =0x02033800
    adds r1, r1, r0
    mov r8, r1
    movs r6, #0
    ldrb r0, [r5]
    adds r1, r2, #1
    mov sb, r1
    cmp r0, #0xff
    beq lbl_0806cd5a
    ldr r1, lbl_0806cd7c @ =0x0875fac4
    lsls r0, r2, #2
    adds r0, r0, r1
    ldr r7, [r0]
lbl_0806cd0c:
    ldrb r0, [r5, #2]
    subs r0, #2
    movs r1, #0xf
    bl __divsi3
    adds r4, r0, #0
    ldrb r0, [r5, #3]
    subs r0, #2
    movs r1, #0xa
    bl __divsi3
    ldrb r2, [r5]
    lsls r1, r2, #4
    subs r1, r1, r2
    lsls r1, r1, #2
    adds r1, r1, r7
    adds r2, r1, #0
    adds r2, #0x35
    ldrb r2, [r2]
    adds r4, r4, r2
    adds r1, #0x36
    ldrb r1, [r1]
    adds r0, r0, r1
    lsls r0, r0, #2
    add r0, r8
    ldr r1, lbl_0806cd80 @ =0x08760218
    lsls r4, r4, #2
    adds r4, r4, r1
    ldr r1, [r0]
    ldr r2, [r4]
    orrs r1, r2
    str r1, [r0]
    adds r6, #1
    adds r5, #4
    cmp r6, #0x3f
    bgt lbl_0806cd5a
    ldrb r0, [r5]
    cmp r0, #0xff
    bne lbl_0806cd0c
lbl_0806cd5a:
    mov r1, sb
    lsls r0, r1, #0x18
    lsrs r2, r0, #0x18
    cmp r2, #7
    bls lbl_0806ccea
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806cd74: .4byte 0x02033800
lbl_0806cd78: .4byte 0x02036c00
lbl_0806cd7c: .4byte 0x0875fac4
lbl_0806cd80: .4byte 0x08760218

    thumb_func_start MinimapUpdateChunk
MinimapUpdateChunk: @ 0x0806cd84
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    movs r4, #0
    ldr r0, lbl_0806ce14 @ =0x0840d200
    adds r1, r0, #0
    ldrb r0, [r1]
    cmp r2, r0
    beq lbl_0806cda6
    adds r0, r1, #0
lbl_0806cd98:
    adds r0, #5
    adds r4, #1
    cmp r4, #6
    bhi lbl_0806cda6
    ldrb r3, [r0]
    cmp r2, r3
    bne lbl_0806cd98
lbl_0806cda6:
    cmp r4, #6
    ble lbl_0806cdac
    b lbl_0806ceec
lbl_0806cdac:
    ldr r0, lbl_0806ce18 @ =0x03000054
    ldrb r3, [r0]
    cmp r4, r3
    beq lbl_0806cdb6
    b lbl_0806ceec
lbl_0806cdb6:
    lsls r2, r4, #2
    adds r2, r2, r4
    adds r0, r1, #3
    adds r0, r2, r0
    ldrb r0, [r0]
    adds r1, #2
    adds r2, r2, r1
    lsls r0, r0, #5
    ldrb r2, [r2]
    adds r4, r0, r2
    lsls r0, r4, #1
    ldr r1, lbl_0806ce1c @ =0x02034800
    adds r5, r0, r1
    ldr r1, lbl_0806ce20 @ =0x02034000
    adds r6, r0, r1
    adds r0, r3, #0
    cmp r0, #5
    bne lbl_0806ce2c
    ldrh r0, [r5]
    ldr r1, lbl_0806ce24 @ =0x000003ff
    ldr r2, lbl_0806ce28 @ =0x0840d224
    ands r1, r0
    ldrh r2, [r2, #4]
    cmp r1, r2
    beq lbl_0806cdea
    b lbl_0806ceec
lbl_0806cdea:
    movs r7, #0xf0
    lsls r7, r7, #8
    adds r1, r6, #0
    adds r3, r5, #0
    movs r4, #2
lbl_0806cdf4:
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    ldrh r2, [r1]
    adds r0, r7, #0
    ands r0, r2
    cmp r0, #0
    beq lbl_0806ce08
    adds r0, r2, #1
    strh r0, [r1]
lbl_0806ce08:
    adds r1, #2
    adds r3, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_0806cdf4
    b lbl_0806cee2
    .align 2, 0
lbl_0806ce14: .4byte 0x0840d200
lbl_0806ce18: .4byte 0x03000054
lbl_0806ce1c: .4byte 0x02034800
lbl_0806ce20: .4byte 0x02034000
lbl_0806ce24: .4byte 0x000003ff
lbl_0806ce28: .4byte 0x0840d224
lbl_0806ce2c:
    cmp r0, #1
    bne lbl_0806ce84
    ldrh r0, [r5]
    ldr r1, lbl_0806ce7c @ =0x000003ff
    ldr r2, lbl_0806ce80 @ =0x0840d224
    ands r1, r0
    ldrh r2, [r2]
    cmp r1, r2
    bne lbl_0806ceec
    adds r3, r6, #0
    adds r2, r5, #0
    movs r4, #1
lbl_0806ce44:
    ldrh r0, [r2]
    adds r0, #0x20
    strh r0, [r2]
    ldrh r0, [r3]
    adds r0, #0x20
    strh r0, [r3]
    adds r3, #2
    adds r2, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_0806ce44
    adds r3, r6, #0
    adds r3, #0x40
    adds r2, r5, #0
    adds r2, #0x40
    movs r4, #1
lbl_0806ce64:
    ldrh r0, [r2]
    adds r0, #0x20
    strh r0, [r2]
    ldrh r0, [r3]
    adds r0, #0x20
    strh r0, [r3]
    adds r3, #2
    adds r2, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_0806ce64
    b lbl_0806cee2
    .align 2, 0
lbl_0806ce7c: .4byte 0x000003ff
lbl_0806ce80: .4byte 0x0840d224
lbl_0806ce84:
    cmp r0, #3
    bne lbl_0806cede
    ldrh r0, [r5]
    ldr r1, lbl_0806ced4 @ =0x000003ff
    ldr r2, lbl_0806ced8 @ =0x0840d224
    ands r1, r0
    ldrh r2, [r2, #2]
    cmp r1, r2
    bne lbl_0806cedc
    adds r3, r6, #0
    adds r2, r5, #0
    movs r4, #1
lbl_0806ce9c:
    ldrh r0, [r2]
    adds r0, #0x20
    strh r0, [r2]
    ldrh r0, [r3]
    adds r0, #0x20
    strh r0, [r3]
    adds r3, #2
    adds r2, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_0806ce9c
    adds r3, r6, #0
    adds r3, #0x40
    adds r2, r5, #0
    adds r2, #0x40
    movs r4, #1
lbl_0806cebc:
    ldrh r0, [r2]
    adds r0, #0x20
    strh r0, [r2]
    ldrh r0, [r3]
    adds r0, #0x20
    strh r0, [r3]
    adds r3, #2
    adds r2, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_0806cebc
    b lbl_0806cee2
    .align 2, 0
lbl_0806ced4: .4byte 0x000003ff
lbl_0806ced8: .4byte 0x0840d224
lbl_0806cedc:
    movs r4, #1
lbl_0806cede:
    cmp r4, #0
    bne lbl_0806ceec
lbl_0806cee2:
    ldr r1, lbl_0806cef4 @ =0x03000903
    movs r0, #3
    strb r0, [r1]
    bl draw_minimap
lbl_0806ceec:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806cef4: .4byte 0x03000903

    thumb_func_start count_tanks_in_area
count_tanks_in_area: @ 0x0806cef8
    push {r4, r5, lr}
    ldr r1, lbl_0806cf3c @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x36
    movs r2, #0
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0x38
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0x3a
    strb r2, [r0]
    ldr r0, [r1]
    adds r0, #0x3c
    strb r2, [r0]
    ldr r0, lbl_0806cf40 @ =0x03000054
    ldrb r0, [r0]
    adds r5, r1, #0
    cmp r0, #7
    bls lbl_0806cf44
    ldr r0, [r5]
    adds r0, #0x35
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x37
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x39
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x3b
    strb r2, [r0]
    b lbl_0806cfd8
    .align 2, 0
lbl_0806cf3c: .4byte 0x08754bc4
lbl_0806cf40: .4byte 0x03000054
lbl_0806cf44:
    ldr r1, [r5]
    ldr r2, lbl_0806cfa0 @ =0x083459a0
    ldrb r0, [r1, #0x12]
    lsls r0, r0, #2
    adds r0, r0, r2
    ldrb r0, [r0]
    adds r1, #0x35
    strb r0, [r1]
    ldr r1, [r5]
    ldrb r0, [r1, #0x12]
    lsls r0, r0, #2
    adds r0, r0, r2
    ldrb r0, [r0, #1]
    adds r1, #0x37
    strb r0, [r1]
    ldr r1, [r5]
    ldrb r0, [r1, #0x12]
    lsls r0, r0, #2
    adds r0, r0, r2
    ldrb r0, [r0, #2]
    adds r1, #0x39
    strb r0, [r1]
    ldr r1, [r5]
    ldrb r0, [r1, #0x12]
    lsls r0, r0, #2
    adds r0, r0, r2
    ldrb r0, [r0, #3]
    adds r1, #0x3b
    strb r0, [r1]
    ldr r0, [r5]
    ldrb r0, [r0, #0x12]
    lsls r0, r0, #8
    ldr r1, lbl_0806cfa4 @ =0x02036c00
    adds r2, r0, r1
    movs r4, #0
    ldrb r0, [r2]
    cmp r0, #0xff
    beq lbl_0806cfd8
    adds r3, r5, #0
lbl_0806cf92:
    ldrb r0, [r2, #1]
    cmp r0, #1
    bne lbl_0806cfa8
    ldr r1, [r3]
    adds r1, #0x38
    b lbl_0806cfc4
    .align 2, 0
lbl_0806cfa0: .4byte 0x083459a0
lbl_0806cfa4: .4byte 0x02036c00
lbl_0806cfa8:
    cmp r0, #2
    bne lbl_0806cfb2
    ldr r1, [r3]
    adds r1, #0x36
    b lbl_0806cfc4
lbl_0806cfb2:
    cmp r0, #3
    bne lbl_0806cfbc
    ldr r1, [r3]
    adds r1, #0x3a
    b lbl_0806cfc4
lbl_0806cfbc:
    cmp r0, #4
    bne lbl_0806cfca
    ldr r1, [r3]
    adds r1, #0x3c
lbl_0806cfc4:
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_0806cfca:
    adds r4, #1
    adds r2, #4
    cmp r4, #0x3f
    bgt lbl_0806cfd8
    ldrb r0, [r2]
    cmp r0, #0xff
    bne lbl_0806cf92
lbl_0806cfd8:
    adds r3, r5, #0
    ldr r0, [r3]
    adds r0, #0x3d
    movs r1, #0
    strb r1, [r0]
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x36
    adds r2, r1, #0
    adds r2, #0x35
    ldrb r0, [r0]
    ldrb r2, [r2]
    cmp r0, r2
    blo lbl_0806d000
    adds r0, r1, #0
    adds r0, #0x3d
    ldrb r1, [r0]
    movs r2, #1
    orrs r1, r2
    strb r1, [r0]
lbl_0806d000:
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x38
    adds r2, r1, #0
    adds r2, #0x37
    ldrb r0, [r0]
    ldrb r2, [r2]
    cmp r0, r2
    blo lbl_0806d01e
    adds r0, r1, #0
    adds r0, #0x3d
    ldrb r1, [r0]
    movs r2, #2
    orrs r1, r2
    strb r1, [r0]
lbl_0806d01e:
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x3a
    adds r2, r1, #0
    adds r2, #0x39
    ldrb r0, [r0]
    ldrb r2, [r2]
    cmp r0, r2
    blo lbl_0806d03c
    adds r0, r1, #0
    adds r0, #0x3d
    ldrb r1, [r0]
    movs r2, #4
    orrs r1, r2
    strb r1, [r0]
lbl_0806d03c:
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x3c
    adds r2, r1, #0
    adds r2, #0x3b
    ldrb r0, [r0]
    ldrb r2, [r2]
    cmp r0, r2
    blo lbl_0806d05a
    adds r0, r1, #0
    adds r0, #0x3d
    ldrb r1, [r0]
    movs r2, #8
    orrs r1, r2
    strb r1, [r0]
lbl_0806d05a:
    pop {r4, r5}
    pop {r0}
    bx r0

    thumb_func_start draw_in_game_time_and_tanks
draw_in_game_time_and_tanks: @ 0x0806d060
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    cmp r1, #0
    beq lbl_0806d076
    b lbl_0806d1e8
lbl_0806d076:
    cmp r0, #0
    beq lbl_0806d0a0
    ldr r0, lbl_0806d090 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r0, #0
    adds r1, #0x34
    ldrb r0, [r1]
    cmp r0, #1
    bne lbl_0806d094
    movs r0, #2
    strb r0, [r1]
    b lbl_0806d0aa
    .align 2, 0
lbl_0806d090: .4byte 0x08754bc4
lbl_0806d094:
    cmp r0, #2
    beq lbl_0806d09a
    b lbl_0806d324
lbl_0806d09a:
    movs r0, #1
    strb r0, [r1]
    b lbl_0806d0aa
lbl_0806d0a0:
    ldr r0, lbl_0806d1d4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x34
    movs r1, #2
    strb r1, [r0]
lbl_0806d0aa:
    ldr r5, lbl_0806d1d8 @ =0x03000150
    ldrb r0, [r5]
    movs r1, #0xa
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0xa
    bl __umodsi3
    adds r1, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x13
    ldr r4, lbl_0806d1dc @ =0x06017ea0
    adds r1, r1, r4
    ldr r0, lbl_0806d1e0 @ =0x0840d79c
    mov sb, r0
    ldr r6, [r0, #0x10]
    movs r7, #0x20
    str r7, [sp]
    movs r0, #3
    adds r2, r6, #0
    movs r3, #0x20
    bl DMATransfer
    ldrb r0, [r5]
    movs r1, #0xa
    bl __umodsi3
    adds r1, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x13
    adds r1, r1, r4
    adds r2, r6, #0
    adds r2, #0x20
    str r7, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    ldrb r0, [r5, #1]
    movs r1, #0xa
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0xa
    bl __umodsi3
    adds r1, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x13
    adds r1, r1, r4
    adds r2, r6, #0
    adds r2, #0x60
    str r7, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    ldrb r0, [r5, #1]
    movs r1, #0xa
    bl __umodsi3
    adds r1, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x13
    adds r1, r1, r4
    adds r2, r6, #0
    adds r2, #0x80
    str r7, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    ldrb r0, [r5, #2]
    movs r1, #0xa
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0xa
    bl __umodsi3
    adds r1, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x13
    adds r1, r1, r4
    adds r2, r6, #0
    adds r2, #0xc0
    str r7, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    ldrb r0, [r5, #2]
    movs r1, #0xa
    bl __umodsi3
    adds r1, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x13
    adds r1, r1, r4
    adds r2, r6, #0
    adds r2, #0xe0
    str r7, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    ldr r1, lbl_0806d1d4 @ =0x08754bc4
    mov r8, r1
    ldr r0, [r1]
    adds r0, #0x36
    ldrb r4, [r0]
    adds r0, r4, #0
    cmp r0, #0x10
    ble lbl_0806d198
    movs r0, #0x10
lbl_0806d198:
    lsls r1, r0, #5
    ldr r6, lbl_0806d1e4 @ =0x06017c00
    adds r1, r1, r6
    mov r0, sb
    ldr r5, [r0]
    str r7, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0x20
    bl DMATransfer
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x35
    ldrb r4, [r0]
    adds r0, r4, #0
    cmp r0, #0x10
    ble lbl_0806d1be
    movs r0, #0x10
lbl_0806d1be:
    lsls r1, r0, #5
    adds r1, r1, r6
    adds r2, r5, #0
    adds r2, #0x40
    str r7, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    b lbl_0806d324
    .align 2, 0
lbl_0806d1d4: .4byte 0x08754bc4
lbl_0806d1d8: .4byte 0x03000150
lbl_0806d1dc: .4byte 0x06017ea0
lbl_0806d1e0: .4byte 0x0840d79c
lbl_0806d1e4: .4byte 0x06017c00
lbl_0806d1e8:
    ldr r0, lbl_0806d2fc @ =0x08754bc4
    mov r8, r0
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0x34
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806d1fa
    b lbl_0806d324
lbl_0806d1fa:
    adds r0, r1, #0
    adds r0, #0x38
    ldrb r4, [r0]
    adds r0, r4, #0
    cmp r0, #0x10
    ble lbl_0806d208
    movs r0, #0x10
lbl_0806d208:
    lsls r1, r0, #5
    ldr r7, lbl_0806d300 @ =0x06017c00
    adds r1, r1, r7
    ldr r0, lbl_0806d304 @ =0x0840d79c
    mov sb, r0
    ldr r5, [r0, #4]
    movs r6, #0x20
    str r6, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0x20
    bl DMATransfer
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x37
    ldrb r4, [r0]
    adds r0, r4, #0
    cmp r0, #0x10
    ble lbl_0806d232
    movs r0, #0x10
lbl_0806d232:
    lsls r1, r0, #5
    adds r1, r1, r7
    adds r2, r5, #0
    adds r2, #0x40
    str r6, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x3a
    ldrb r4, [r0]
    adds r0, r4, #0
    cmp r0, #0x10
    ble lbl_0806d254
    movs r0, #0x10
lbl_0806d254:
    lsls r1, r0, #5
    adds r1, r1, r7
    mov r0, sb
    ldr r5, [r0, #8]
    str r6, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0x20
    bl DMATransfer
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x39
    ldrb r4, [r0]
    adds r0, r4, #0
    cmp r0, #0x10
    ble lbl_0806d278
    movs r0, #0x10
lbl_0806d278:
    lsls r1, r0, #5
    adds r1, r1, r7
    adds r2, r5, #0
    adds r2, #0x40
    str r6, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x3c
    ldrb r4, [r0]
    adds r0, r4, #0
    cmp r0, #0x10
    ble lbl_0806d29a
    movs r0, #0x10
lbl_0806d29a:
    lsls r1, r0, #5
    adds r1, r1, r7
    mov r0, sb
    ldr r5, [r0, #0xc]
    str r6, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0x20
    bl DMATransfer
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x3b
    ldrb r4, [r0]
    adds r0, r4, #0
    cmp r0, #0x10
    ble lbl_0806d2be
    movs r0, #0x10
lbl_0806d2be:
    lsls r1, r0, #5
    adds r1, r1, r7
    adds r2, r5, #0
    adds r2, #0x40
    str r6, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    movs r4, #3
    movs r6, #0x20
    mov r5, sb
    adds r5, #0xc
lbl_0806d2d8:
    ldr r0, lbl_0806d2fc @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3d
    ldrb r0, [r0]
    asrs r0, r4
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806d30c
    ldr r2, [r5]
    subs r2, #0x60
    str r6, [sp]
    movs r0, #3
    ldr r1, lbl_0806d308 @ =0x06017e00
    movs r3, #0x20
    bl DMATransfer
    b lbl_0806d31c
    .align 2, 0
lbl_0806d2fc: .4byte 0x08754bc4
lbl_0806d300: .4byte 0x06017c00
lbl_0806d304: .4byte 0x0840d79c
lbl_0806d308: .4byte 0x06017e00
lbl_0806d30c:
    ldr r2, [r5]
    subs r2, #0x60
    str r6, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x20
    bl BitFill
lbl_0806d31c:
    subs r5, #4
    subs r4, #1
    cmp r4, #0
    bge lbl_0806d2d8
lbl_0806d324:
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0806d334
sub_0806d334: @ 0x0806d334
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r2, lbl_0806d374 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x4c
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x4c
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_0806d384
    movs r1, #0xf0
    lsls r1, r1, #1
    ldr r2, lbl_0806d378 @ =0x0600d800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    bl BitFill
    ldr r1, lbl_0806d37c @ =0x0840f4c4
    ldr r0, lbl_0806d380 @ =0x087602a8
    ldr r2, [r0]
    str r4, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    b lbl_0806d3c6
    .align 2, 0
lbl_0806d374: .4byte 0x08754bc4
lbl_0806d378: .4byte 0x0600d800
lbl_0806d37c: .4byte 0x0840f4c4
lbl_0806d380: .4byte 0x087602a8
lbl_0806d384:
    cmp r0, #2
    bne lbl_0806d3c6
    movs r4, #0
    ldr r5, lbl_0806d424 @ =0x0600d800
    movs r6, #0x10
lbl_0806d38e:
    movs r0, #0xf0
    lsls r0, r0, #1
    adds r1, r4, r0
    str r6, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0x40
    bl BitFill
    adds r5, #0x40
    adds r4, #1
    cmp r4, #0x1f
    ble lbl_0806d38e
    movs r4, #0
    ldr r6, lbl_0806d428 @ =0x087602a8
    movs r5, #0x10
lbl_0806d3ae:
    lsls r0, r4, #5
    ldr r2, [r6]
    adds r2, r2, r0
    str r5, [sp]
    movs r0, #3
    ldr r1, lbl_0806d42c @ =0x0840f4c4
    movs r3, #0x20
    bl DMATransfer
    adds r4, #1
    cmp r4, #0x1f
    ble lbl_0806d3ae
lbl_0806d3c6:
    ldr r2, lbl_0806d430 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x4d
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x4e
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x50
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x4f
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x4c
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806d41c
    ldr r3, lbl_0806d434 @ =0x0600e000
    ldr r2, lbl_0806d424 @ =0x0600d800
    ldr r5, lbl_0806d438 @ =0x000003ff
    movs r6, #0xc0
    adds r4, r5, #1
lbl_0806d3f6:
    ldrh r1, [r3]
    adds r0, r5, #0
    ands r0, r1
    cmp r0, #0xa0
    beq lbl_0806d402
    strh r6, [r2]
lbl_0806d402:
    subs r4, #1
    adds r2, #2
    adds r3, #2
    cmp r4, #0
    bne lbl_0806d3f6
    ldr r1, lbl_0806d43c @ =0x040000d4
    ldr r0, lbl_0806d440 @ =0x02034000
    str r0, [r1]
    ldr r0, lbl_0806d434 @ =0x0600e000
    str r0, [r1, #4]
    ldr r0, lbl_0806d444 @ =0x80000400
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0806d41c:
    add sp, #4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806d424: .4byte 0x0600d800
lbl_0806d428: .4byte 0x087602a8
lbl_0806d42c: .4byte 0x0840f4c4
lbl_0806d430: .4byte 0x08754bc4
lbl_0806d434: .4byte 0x0600e000
lbl_0806d438: .4byte 0x000003ff
lbl_0806d43c: .4byte 0x040000d4
lbl_0806d440: .4byte 0x02034000
lbl_0806d444: .4byte 0x80000400

    thumb_func_start sub_0806d448
sub_0806d448: @ 0x0806d448
    push {lr}
    movs r1, #0
    ldr r0, lbl_0806d460 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x4c
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0806d464
    bl sub_0806d680
    b lbl_0806d476
    .align 2, 0
lbl_0806d460: .4byte 0x08754bc4
lbl_0806d464:
    cmp r0, #1
    bne lbl_0806d46e
    bl sub_0806d480
    b lbl_0806d476
lbl_0806d46e:
    cmp r0, #2
    bne lbl_0806d478
    bl sub_0806d528
lbl_0806d476:
    adds r1, r0, #0
lbl_0806d478:
    adds r0, r1, #0
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0806d480
sub_0806d480: @ 0x0806d480
    push {r4, r5, r6, r7, lr}
    ldr r3, lbl_0806d494 @ =0x08754bc4
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x4f
    ldrb r0, [r0]
    cmp r0, #0xf
    bls lbl_0806d498
    movs r0, #1
    b lbl_0806d516
    .align 2, 0
lbl_0806d494: .4byte 0x08754bc4
lbl_0806d498:
    adds r1, #0x4d
    ldrb r0, [r1]
    adds r0, #1
    movs r4, #0
    strb r0, [r1]
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0x4e
    ldrb r1, [r2]
    cmp r1, #0
    beq lbl_0806d4b4
    cmp r1, #1
    beq lbl_0806d4c8
    b lbl_0806d514
lbl_0806d4b4:
    adds r0, #0x4d
    ldrb r0, [r0]
    cmp r0, #0x10
    bls lbl_0806d514
    movs r0, #1
    strb r0, [r2]
    ldr r0, [r3]
    adds r0, #0x4d
    strb r4, [r0]
    b lbl_0806d514
lbl_0806d4c8:
    adds r1, r0, #0
    adds r1, #0x4d
    ldrb r0, [r1]
    cmp r0, #3
    bls lbl_0806d514
    strb r4, [r1]
    ldr r2, lbl_0806d51c @ =0x0840f4c4
    ldr r0, [r3]
    adds r0, #0x4f
    ldrb r1, [r0]
    adds r1, #1
    strb r1, [r0]
    ldr r0, [r3]
    adds r0, #0x4f
    ldrb r3, [r0]
    movs r4, #0
    cmp r3, #0
    beq lbl_0806d514
    ldr r7, lbl_0806d520 @ =0x087602a8
    ldr r5, lbl_0806d524 @ =0x087602b0
    adds r6, r2, #0
lbl_0806d4f2:
    adds r1, r3, #0
    cmp r3, #8
    ble lbl_0806d4fa
    movs r1, #8
lbl_0806d4fa:
    ldr r0, [r7]
    lsls r2, r4, #2
    adds r2, r2, r0
    lsls r0, r1, #2
    adds r0, r0, r5
    ldm r6!, {r1}
    ldr r0, [r0]
    ands r1, r0
    str r1, [r2]
    subs r3, #1
    adds r4, #1
    cmp r3, #0
    bne lbl_0806d4f2
lbl_0806d514:
    movs r0, #0
lbl_0806d516:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0806d51c: .4byte 0x0840f4c4
lbl_0806d520: .4byte 0x087602a8
lbl_0806d524: .4byte 0x087602b0

    thumb_func_start sub_0806d528
sub_0806d528: @ 0x0806d528
    push {r4, r5, r6, r7, lr}
    movs r6, #0
    ldr r5, lbl_0806d550 @ =0x08754bc4
    ldr r1, [r5]
    adds r1, #0x4d
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r5]
    adds r3, r1, #0
    adds r3, #0x4e
    ldrb r0, [r3]
    cmp r0, #1
    beq lbl_0806d5f8
    cmp r0, #1
    bgt lbl_0806d554
    cmp r0, #0
    beq lbl_0806d560
    b lbl_0806d676
    .align 2, 0
lbl_0806d550: .4byte 0x08754bc4
lbl_0806d554:
    cmp r0, #2
    beq lbl_0806d640
    cmp r0, #3
    bne lbl_0806d55e
    b lbl_0806d664
lbl_0806d55e:
    b lbl_0806d676
lbl_0806d560:
    adds r0, r1, #0
    adds r0, #0x4d
    ldrb r0, [r0]
    cmp r0, #8
    bhi lbl_0806d56c
    b lbl_0806d676
lbl_0806d56c:
    movs r0, #0x99
    lsls r0, r0, #1
    adds r1, r1, r0
    movs r0, #0xb
    strb r0, [r1]
    ldr r0, [r5]
    movs r1, #0x98
    lsls r1, r1, #1
    adds r0, r0, r1
    strb r6, [r0]
    ldr r0, [r5]
    ldr r7, lbl_0806d5e4 @ =0x00000131
    adds r0, r0, r7
    strb r6, [r0]
    ldr r2, [r5]
    movs r0, #0x95
    lsls r0, r0, #1
    adds r1, r2, r0
    movs r4, #0
    adds r0, #0xa6
    strh r0, [r1]
    subs r7, #9
    adds r1, r2, r7
    ldr r0, lbl_0806d5e8 @ =0x0000ffe0
    strh r0, [r1]
    ldr r3, lbl_0806d5ec @ =0x00000133
    adds r2, r2, r3
    ldrb r1, [r2]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2]
    ldr r2, [r5]
    adds r2, r2, r3
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
    ldr r1, [r5]
    adds r1, #0x4e
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r5]
    adds r0, #0x4d
    strb r4, [r0]
    ldr r1, [r5]
    ldr r0, lbl_0806d5f0 @ =0x03000c02
    ldrh r2, [r0]
    ldr r0, lbl_0806d5f4 @ =0x000003ff
    ands r0, r2
    lsrs r0, r0, #2
    adds r1, #0x50
    strb r0, [r1]
    b lbl_0806d676
    .align 2, 0
lbl_0806d5e4: .4byte 0x00000131
lbl_0806d5e8: .4byte 0x0000ffe0
lbl_0806d5ec: .4byte 0x00000133
lbl_0806d5f0: .4byte 0x03000c02
lbl_0806d5f4: .4byte 0x000003ff
lbl_0806d5f8:
    movs r4, #0x94
    lsls r4, r4, #1
    adds r0, r1, r4
    movs r7, #0
    ldrsh r2, [r0, r7]
    movs r0, #0xaa
    lsls r0, r0, #2
    cmp r2, r0
    ble lbl_0806d610
    movs r0, #2
    strb r0, [r3]
    b lbl_0806d676
lbl_0806d610:
    movs r0, #0x10
    rsbs r0, r0, #0
    cmp r2, r0
    blt lbl_0806d62e
    adds r2, r1, #0
    adds r2, #0x50
    ldrb r0, [r2]
    ldr r1, lbl_0806d63c @ =0x087602a8
    ldr r1, [r1]
    lsls r0, r0, #2
    adds r0, r0, r1
    str r6, [r0]
    ldrb r0, [r2]
    adds r0, #1
    strb r0, [r2]
lbl_0806d62e:
    ldr r1, [r5]
    adds r1, r1, r4
    ldrh r0, [r1]
    adds r0, #4
    strh r0, [r1]
    b lbl_0806d676
    .align 2, 0
lbl_0806d63c: .4byte 0x087602a8
lbl_0806d640:
    ldr r0, lbl_0806d660 @ =0x00000133
    adds r2, r1, r0
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
    ldr r0, [r5]
    adds r0, #0x4d
    strb r6, [r0]
    ldr r1, [r5]
    adds r1, #0x4e
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0806d676
    .align 2, 0
lbl_0806d660: .4byte 0x00000133
lbl_0806d664:
    adds r1, #0x4d
    ldrb r0, [r1]
    cmp r0, #0x1d
    bls lbl_0806d676
    strb r6, [r1]
    ldr r0, [r5]
    adds r0, #0x4e
    strb r6, [r0]
    movs r6, #1
lbl_0806d676:
    adds r0, r6, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0806d680
sub_0806d680: @ 0x0806d680
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    movs r0, #0
    str r0, [sp]
    ldr r2, lbl_0806d6b4 @ =0x08754bc4
    ldr r1, [r2]
    adds r1, #0x4d
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r2]
    adds r0, #0x4e
    ldrb r0, [r0]
    mov ip, r2
    cmp r0, #6
    bls lbl_0806d6aa
    b lbl_0806db44
lbl_0806d6aa:
    lsls r0, r0, #2
    ldr r1, lbl_0806d6b8 @ =lbl_0806d6bc
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806d6b4: .4byte 0x08754bc4
lbl_0806d6b8: .4byte lbl_0806d6bc
lbl_0806d6bc: @ jump table
    .4byte lbl_0806d6d8 @ case 0
    .4byte lbl_0806d828 @ case 1
    .4byte lbl_0806d890 @ case 2
    .4byte lbl_0806da18 @ case 3
    .4byte lbl_0806da4c @ case 4
    .4byte lbl_0806da7c @ case 5
    .4byte lbl_0806db28 @ case 6
lbl_0806d6d8:
    mov r2, ip
    ldr r1, [r2]
    adds r0, r1, #0
    adds r0, #0x4d
    ldrb r0, [r0]
    cmp r0, #8
    bhi lbl_0806d6e8
    b lbl_0806db44
lbl_0806d6e8:
    movs r4, #0x99
    lsls r4, r4, #1
    adds r2, r1, r4
    movs r1, #0
    movs r0, #0xb
    strb r0, [r2]
    mov r5, ip
    ldr r0, [r5]
    movs r2, #0x98
    lsls r2, r2, #1
    adds r0, r0, r2
    strb r1, [r0]
    ldr r0, [r5]
    subs r4, #1
    adds r0, r0, r4
    strb r1, [r0]
    ldr r2, [r5]
    movs r5, #0x95
    lsls r5, r5, #1
    adds r1, r2, r5
    movs r0, #0xe8
    lsls r0, r0, #1
    strh r0, [r1]
    movs r1, #0x94
    lsls r1, r1, #1
    adds r0, r2, r1
    ldr r5, lbl_0806d818 @ =0x0000ffe0
    strh r5, [r0]
    ldr r3, lbl_0806d81c @ =0x00000133
    adds r2, r2, r3
    ldrb r1, [r2]
    movs r4, #4
    rsbs r4, r4, #0
    adds r0, r4, #0
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2]
    mov r0, ip
    ldr r2, [r0]
    adds r2, r2, r3
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
    movs r6, #3
    ldr r1, lbl_0806d820 @ =0x087602ac
    mov sb, r1
    mov r7, ip
    movs r2, #0
    mov r8, r2
    ldr r5, lbl_0806d824 @ =0x00000113
    mov sl, r4
lbl_0806d756:
    ldr r1, [r7]
    mov r4, sb
    adds r3, r6, r4
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    movs r2, #0x89
    lsls r2, r2, #1
    adds r0, r1, r2
    mov r4, r8
    strb r4, [r0]
    ldr r1, [r7]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    movs r0, #0x88
    lsls r0, r0, #1
    adds r1, r1, r0
    strb r4, [r1]
    ldr r1, [r7]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    subs r2, #1
    adds r0, r1, r2
    strb r4, [r0]
    ldr r2, [r7]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r0, r2, r0
    movs r4, #0x85
    lsls r4, r4, #1
    adds r1, r0, r4
    movs r0, #0xe8
    lsls r0, r0, #1
    strh r0, [r1]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r0, r2, r0
    movs r1, #0x84
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r4, #0x20
    rsbs r4, r4, #0
    strh r4, [r0]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r2, r2, r0
    adds r2, r2, r5
    ldrb r1, [r2]
    mov r0, sl
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r2]
    ldr r2, [r7]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r2, r2, r0
    adds r2, r2, r5
    ldrb r1, [r2]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r2]
    ldr r1, [r7]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    adds r1, r1, r5
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    subs r6, #1
    cmp r6, #0
    bge lbl_0806d756
    mov r5, ip
    ldr r1, [r5]
    adds r1, #0x4e
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r5]
    adds r0, #0x4d
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x4f
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x51
    movs r1, #0x80
    strb r1, [r0]
    b lbl_0806db44
    .align 2, 0
lbl_0806d818: .4byte 0x0000ffe0
lbl_0806d81c: .4byte 0x00000133
lbl_0806d820: .4byte 0x087602ac
lbl_0806d824: .4byte 0x00000113
lbl_0806d828:
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0x50
    movs r1, #0
    strb r1, [r0]
    mov r2, ip
    ldr r0, [r2]
    adds r0, #0x4f
    strb r1, [r0]
    ldr r3, lbl_0806d858 @ =0x03000c02
    ldrh r1, [r3]
    ldr r0, lbl_0806d85c @ =0x000007ff
    cmp r1, r0
    bhi lbl_0806d860
    ldr r2, [r2]
    adds r0, #1
    subs r0, r0, r1
    asrs r0, r0, #5
    movs r1, #0x3f
    subs r1, r1, r0
    adds r2, #0x50
    strb r1, [r2]
    b lbl_0806d878
    .align 2, 0
lbl_0806d858: .4byte 0x03000c02
lbl_0806d85c: .4byte 0x000007ff
lbl_0806d860:
    movs r0, #0x80
    lsls r0, r0, #4
    cmp r1, r0
    bls lbl_0806d878
    mov r4, ip
    ldr r1, [r4]
    ldrh r0, [r3]
    ldr r5, lbl_0806d88c @ =0xfffff800
    adds r0, r0, r5
    asrs r0, r0, #5
    adds r1, #0x50
    strb r0, [r1]
lbl_0806d878:
    mov r0, ip
    ldr r1, [r0]
    adds r1, #0x4e
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    mov r1, ip
    ldr r0, [r1]
    b lbl_0806da6c
    .align 2, 0
lbl_0806d88c: .4byte 0xfffff800
lbl_0806d890:
    movs r6, #1
    mov r2, ip
    ldr r1, [r2]
    adds r0, r1, #0
    adds r0, #0x4d
    ldrb r0, [r0]
    cmp r0, #7
    bls lbl_0806d964
    adds r0, r1, #0
    adds r0, #0x4f
    ldrb r0, [r0]
    cmp r0, #0x14
    bhi lbl_0806d950
    adds r1, #0x50
    ldrb r0, [r1]
    cmp r0, #0x1f
    bhi lbl_0806d8d2
    ldr r2, lbl_0806d934 @ =0x040000d4
    lsls r0, r0, #6
    ldr r1, lbl_0806d938 @ =0x02034000
    adds r0, r0, r1
    str r0, [r2]
    mov r4, ip
    ldr r0, [r4]
    adds r0, #0x50
    ldrb r0, [r0]
    lsls r0, r0, #6
    ldr r5, lbl_0806d93c @ =0x0600e000
    adds r0, r0, r5
    str r0, [r2, #4]
    ldr r0, lbl_0806d940 @ =0x80000020
    str r0, [r2, #8]
    ldr r0, [r2, #8]
lbl_0806d8d2:
    mov r0, ip
    ldr r1, [r0]
    adds r1, #0x4f
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    mov r2, ip
    ldr r1, [r2]
    adds r1, #0x50
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0x50
    ldrb r0, [r1]
    cmp r0, #0x3f
    bls lbl_0806d8fa
    movs r0, #0
    strb r0, [r1]
lbl_0806d8fa:
    mov r5, ip
    ldr r4, [r5]
    ldr r1, lbl_0806d944 @ =0x00000412
    adds r0, r4, r1
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806d95a
    adds r0, r4, #0
    adds r0, #0x50
    ldrb r3, [r0]
    ldr r1, lbl_0806d948 @ =0x0840d200
    ldrb r2, [r4, #0x12]
    lsls r0, r2, #2
    adds r0, r0, r2
    adds r1, #3
    adds r0, r0, r1
    ldrb r0, [r0]
    adds r0, #2
    cmp r3, r0
    bne lbl_0806d95a
    ldr r5, lbl_0806d94c @ =0x00000413
    adds r2, r4, r5
    ldrb r1, [r2]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r2]
    b lbl_0806d95a
    .align 2, 0
lbl_0806d934: .4byte 0x040000d4
lbl_0806d938: .4byte 0x02034000
lbl_0806d93c: .4byte 0x0600e000
lbl_0806d940: .4byte 0x80000020
lbl_0806d944: .4byte 0x00000412
lbl_0806d948: .4byte 0x0840d200
lbl_0806d94c: .4byte 0x00000413
lbl_0806d950:
    adds r1, #0x4e
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r6, #0
lbl_0806d95a:
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0x4d
    movs r1, #0
    strb r1, [r0]
lbl_0806d964:
    cmp r6, #0
    bne lbl_0806d96a
    b lbl_0806db44
lbl_0806d96a:
    mov r2, ip
    ldr r1, [r2]
    adds r0, r1, #0
    adds r0, #0x4f
    ldrb r0, [r0]
    subs r0, #1
    adds r2, r1, #0
    adds r2, #0x4d
    lsls r0, r0, #3
    ldrb r2, [r2]
    adds r0, r0, r2
    lsls r0, r0, #2
    movs r5, #0x94
    lsls r5, r5, #1
    adds r2, r1, r5
    movs r4, #0
    strh r0, [r2]
    adds r1, #0x51
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    mov r1, ip
    ldr r0, [r1]
    adds r1, r0, #0
    adds r1, #0x51
    ldrb r0, [r1]
    cmp r0, #3
    bls lbl_0806d9a4
    strb r4, [r1]
lbl_0806d9a4:
    mov r0, ip
    ldr r2, [r0]
    adds r0, r2, #0
    adds r0, #0x51
    ldrb r6, [r0]
    ldr r3, lbl_0806da10 @ =0x087602ac
    adds r3, r6, r3
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r0, r2, r0
    adds r1, r2, r5
    ldrh r1, [r1]
    subs r1, #4
    movs r5, #0x84
    lsls r5, r5, #1
    adds r0, r0, r5
    strh r1, [r0]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r2, r2, r0
    movs r0, #0x89
    lsls r0, r0, #1
    adds r1, r2, r0
    movs r0, #0xa
    strb r0, [r1]
    mov r2, ip
    ldr r1, [r2]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    adds r5, #8
    adds r1, r1, r5
    strb r4, [r1]
    ldr r1, [r2]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    ldr r2, lbl_0806da14 @ =0x00000111
    adds r0, r1, r2
    strb r4, [r0]
    mov r4, ip
    ldr r1, [r4]
    ldrb r0, [r3]
    lsls r0, r0, #4
    adds r1, r1, r0
    adds r5, #3
    adds r2, r1, r5
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
    b lbl_0806db44
    .align 2, 0
lbl_0806da10: .4byte 0x087602ac
lbl_0806da14: .4byte 0x00000111
lbl_0806da18:
    ldr r1, lbl_0806da3c @ =0x040000d4
    ldr r0, lbl_0806da40 @ =0x02034000
    str r0, [r1]
    ldr r0, lbl_0806da44 @ =0x0600e000
    str r0, [r1, #4]
    ldr r0, lbl_0806da48 @ =0x80000400
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    mov r0, ip
    ldr r1, [r0]
    adds r1, #0x4e
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    mov r1, ip
    ldr r0, [r1]
    b lbl_0806da6c
    .align 2, 0
lbl_0806da3c: .4byte 0x040000d4
lbl_0806da40: .4byte 0x02034000
lbl_0806da44: .4byte 0x0600e000
lbl_0806da48: .4byte 0x80000400
lbl_0806da4c:
    movs r6, #3
    ldr r4, lbl_0806da74 @ =0x03000903
lbl_0806da50:
    strb r6, [r4]
    bl draw_minimap
    subs r6, #1
    cmp r6, #0
    bgt lbl_0806da50
    ldr r3, lbl_0806da78 @ =0x08754bc4
    ldr r1, [r3]
    adds r1, #0x4e
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
lbl_0806da6c:
    adds r0, #0x4d
    strb r2, [r0]
    b lbl_0806db44
    .align 2, 0
lbl_0806da74: .4byte 0x03000903
lbl_0806da78: .4byte 0x08754bc4
lbl_0806da7c:
    mov r2, ip
    ldr r0, [r2]
    movs r4, #0x99
    lsls r4, r4, #1
    adds r0, r0, r4
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r2]
    movs r5, #0x98
    lsls r5, r5, #1
    adds r0, r0, r5
    strb r1, [r0]
    ldr r0, [r2]
    ldr r2, lbl_0806db1c @ =0x00000131
    adds r0, r0, r2
    strb r1, [r0]
    mov r4, ip
    ldr r0, [r4]
    adds r5, #3
    adds r2, r0, r5
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
    movs r6, #4
    ldr r0, lbl_0806db20 @ =0x087602ac
    mov sb, r0
    mov r3, ip
    movs r4, #0
lbl_0806dab6:
    subs r6, #1
    ldr r1, [r3]
    mov r5, sb
    adds r2, r6, r5
    ldrb r0, [r2]
    lsls r0, r0, #4
    adds r1, r1, r0
    movs r5, #0x89
    lsls r5, r5, #1
    adds r0, r1, r5
    strb r4, [r0]
    ldr r1, [r3]
    ldrb r0, [r2]
    lsls r0, r0, #4
    adds r1, r1, r0
    movs r0, #0x88
    lsls r0, r0, #1
    adds r1, r1, r0
    strb r4, [r1]
    ldr r1, [r3]
    ldrb r0, [r2]
    lsls r0, r0, #4
    adds r1, r1, r0
    subs r5, #1
    adds r0, r1, r5
    strb r4, [r0]
    ldr r1, [r3]
    ldrb r0, [r2]
    lsls r0, r0, #4
    adds r1, r1, r0
    ldr r0, lbl_0806db24 @ =0x00000113
    adds r2, r1, r0
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
    cmp r6, #0
    bgt lbl_0806dab6
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0x4d
    movs r1, #0
    strb r1, [r0]
    mov r2, ip
    ldr r1, [r2]
    adds r1, #0x4e
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0806db44
    .align 2, 0
lbl_0806db1c: .4byte 0x00000131
lbl_0806db20: .4byte 0x087602ac
lbl_0806db24: .4byte 0x00000113
lbl_0806db28:
    mov r4, ip
    ldr r0, [r4]
    adds r2, r0, #0
    adds r2, #0x4d
    ldrb r0, [r2]
    cmp r0, #0x1d
    bls lbl_0806db44
    movs r1, #0
    strb r1, [r2]
    ldr r0, [r4]
    adds r0, #0x4e
    strb r1, [r0]
    movs r5, #1
    str r5, [sp]
lbl_0806db44:
    ldr r0, [sp]
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0806db58
sub_0806db58: @ 0x0806db58
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    adds r6, r4, #0
    ldr r5, lbl_0806dc14 @ =0x08754bc4
    ldr r0, [r5]
    adds r0, #0x2e
    movs r2, #0
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x2f
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x30
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x31
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x27
    movs r1, #0x1f
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x28
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x26
    strb r2, [r0]
    ldr r0, [r5]
    adds r0, #0x29
    strb r2, [r0]
    bl sub_0806ddc0
    bl sub_0806ded0
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x27
    adds r2, r0, #0
    adds r2, #0x26
    ldrb r3, [r1]
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    movs r0, #0
    ldrsb r0, [r2, r0]
    cmp r1, r0
    ble lbl_0806dbba
    strb r3, [r2]
lbl_0806dbba:
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x28
    adds r2, r0, #0
    adds r2, #0x29
    ldrb r3, [r1]
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    movs r0, #0
    ldrsb r0, [r2, r0]
    cmp r1, r0
    ble lbl_0806dbd6
    strb r3, [r2]
lbl_0806dbd6:
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x26
    ldrb r1, [r1]
    adds r0, #0x2a
    strb r1, [r0]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x27
    ldrb r1, [r1]
    adds r0, #0x2b
    strb r1, [r0]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x28
    ldrb r1, [r1]
    adds r0, #0x2c
    strb r1, [r0]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x29
    ldrb r1, [r1]
    adds r0, #0x2d
    strb r1, [r0]
    cmp r4, #1
    bne lbl_0806dc18
    ldr r0, [r5]
    ldrb r6, [r0, #0x13]
    ldrb r4, [r0, #0x14]
    adds r7, r5, #0
    b lbl_0806dcc0
    .align 2, 0
lbl_0806dc14: .4byte 0x08754bc4
lbl_0806dc18:
    cmp r6, #2
    bne lbl_0806dc52
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x27
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r1, r2, #0
    adds r1, #0x26
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r0, r0, r1
    asrs r6, r0, #1
    adds r0, r2, #0
    adds r0, #0x28
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r1, r2, #0
    adds r1, #0x29
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r0, r0, r1
    asrs r4, r0, #1
    adds r7, r5, #0
    b lbl_0806dcc0
lbl_0806dc52:
    ldr r3, [r5]
    adds r0, r3, #0
    adds r0, #0x27
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r1, r3, #0
    adds r1, #0x26
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r0, r0, r1
    asrs r6, r0, #1
    adds r0, r3, #0
    adds r0, #0x28
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r1, r3, #0
    adds r1, #0x29
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r0, r0, r1
    asrs r4, r0, #1
    adds r2, r4, #5
    subs r5, r4, #5
    ldrb r0, [r3, #0x14]
    cmp r2, r0
    bge lbl_0806dc94
    subs r0, r0, r2
    adds r4, r4, r0
    b lbl_0806dc9c
lbl_0806dc94:
    cmp r5, r0
    ble lbl_0806dc9c
    subs r0, r5, r0
    subs r4, r4, r0
lbl_0806dc9c:
    adds r2, r6, #6
    subs r5, r6, #6
    ldr r1, lbl_0806dcb4 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #0x13]
    adds r7, r1, #0
    cmp r2, r0
    bge lbl_0806dcb8
    subs r0, r0, r2
    adds r6, r6, r0
    b lbl_0806dcc0
    .align 2, 0
lbl_0806dcb4: .4byte 0x08754bc4
lbl_0806dcb8:
    cmp r5, r0
    ble lbl_0806dcc0
    subs r0, r5, r0
    subs r6, r6, r0
lbl_0806dcc0:
    ldr r0, [r7]
    adds r0, #0x24
    strb r6, [r0]
    ldr r0, [r7]
    adds r0, #0x25
    strb r4, [r0]
    ldr r0, [r7]
    adds r5, r0, #0
    adds r5, #0x29
    movs r4, #0
    ldrsb r4, [r5, r4]
    adds r1, r0, #0
    adds r1, #0x28
    movs r3, #0
    ldrsb r3, [r1, r3]
    subs r0, r4, r3
    asrs r0, r0, #1
    cmp r0, #5
    ble lbl_0806dcf6
    ldrb r0, [r1]
    adds r0, #5
    strb r0, [r1]
    ldr r1, [r7]
    adds r1, #0x29
    ldrb r0, [r1]
    subs r0, #5
    b lbl_0806dcfc
lbl_0806dcf6:
    adds r0, r4, r3
    asrs r0, r0, #1
    strb r0, [r5]
lbl_0806dcfc:
    strb r0, [r1]
    ldr r0, [r7]
    adds r5, r0, #0
    adds r5, #0x26
    movs r4, #0
    ldrsb r4, [r5, r4]
    adds r1, r0, #0
    adds r1, #0x27
    movs r3, #0
    ldrsb r3, [r1, r3]
    subs r0, r4, r3
    asrs r0, r0, #1
    cmp r0, #6
    ble lbl_0806dd28
    ldrb r0, [r1]
    adds r0, #6
    strb r0, [r1]
    ldr r1, [r7]
    adds r1, #0x26
    ldrb r0, [r1]
    subs r0, #6
    b lbl_0806dd2e
lbl_0806dd28:
    adds r0, r4, r3
    asrs r0, r0, #1
    strb r0, [r5]
lbl_0806dd2e:
    strb r0, [r1]
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x24
    adds r3, r1, #0
    adds r3, #0x27
    ldrb r5, [r0]
    movs r4, #0
    ldrsb r4, [r0, r4]
    movs r0, #0
    ldrsb r0, [r3, r0]
    cmp r4, r0
    bge lbl_0806dd4c
    strb r5, [r3]
    b lbl_0806dd58
lbl_0806dd4c:
    adds r1, #0x26
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r4, r0
    ble lbl_0806dd58
    strb r5, [r1]
lbl_0806dd58:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x25
    adds r3, r1, #0
    adds r3, #0x28
    ldrb r5, [r0]
    movs r4, #0
    ldrsb r4, [r0, r4]
    movs r0, #0
    ldrsb r0, [r3, r0]
    cmp r4, r0
    bge lbl_0806dd74
    strb r5, [r3]
    b lbl_0806dd80
lbl_0806dd74:
    adds r1, #0x29
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r4, r0
    ble lbl_0806dd80
    strb r5, [r1]
lbl_0806dd80:
    ldr r3, lbl_0806ddb8 @ =0x03000c00
    ldr r2, [r7]
    adds r0, r2, #0
    adds r0, #0x24
    movs r1, #0
    ldrsb r1, [r0, r1]
    movs r0, #0xf
    subs r0, r0, r1
    lsls r0, r0, #3
    movs r1, #0x81
    lsls r1, r1, #2
    subs r0, r1, r0
    lsls r0, r0, #2
    strh r0, [r3]
    ldr r3, lbl_0806ddbc @ =0x03000c02
    adds r2, #0x25
    ldrb r2, [r2]
    lsls r2, r2, #0x18
    asrs r2, r2, #0x18
    movs r0, #0xa
    subs r0, r0, r2
    lsls r0, r0, #3
    subs r1, r1, r0
    lsls r1, r1, #2
    strh r1, [r3]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806ddb8: .4byte 0x03000c00
lbl_0806ddbc: .4byte 0x03000c02

    thumb_func_start sub_0806ddc0
sub_0806ddc0: @ 0x0806ddc0
    push {r4, r5, r6, r7, lr}
    ldr r4, lbl_0806de00 @ =0x08754bc4
    ldr r2, [r4]
    ldrb r0, [r2, #0x12]
    movs r1, #7
    cmp r0, #6
    bhi lbl_0806ddd0
    adds r1, r0, #0
lbl_0806ddd0:
    movs r3, #0x82
    lsls r3, r3, #1
    adds r0, r2, r3
    lsls r1, r1, #0xb
    ldr r0, [r0]
    adds r6, r0, r1
    movs r5, #0
    movs r3, #0
    movs r0, #0xa0
    lsls r0, r0, #1
    mov ip, r0
    adds r7, r4, #0
lbl_0806dde8:
    movs r1, #0
    adds r4, r3, #1
    lsls r0, r3, #6
    adds r2, r0, r6
lbl_0806ddf0:
    ldrh r0, [r2]
    cmp r0, ip
    beq lbl_0806de04
    ldr r0, [r7]
    adds r0, #0x28
    strb r3, [r0]
    movs r5, #1
    b lbl_0806de0c
    .align 2, 0
lbl_0806de00: .4byte 0x08754bc4
lbl_0806de04:
    adds r2, #2
    adds r1, #1
    cmp r1, #0x1f
    ble lbl_0806ddf0
lbl_0806de0c:
    adds r3, r4, #0
    cmp r3, #0x1f
    bgt lbl_0806de16
    cmp r5, #0
    beq lbl_0806dde8
lbl_0806de16:
    movs r3, #0x1f
    movs r5, #0
    movs r0, #0xa0
    lsls r0, r0, #1
    mov ip, r0
    ldr r7, lbl_0806de3c @ =0x08754bc4
lbl_0806de22:
    movs r1, #0
    subs r4, r3, #1
    lsls r0, r3, #6
    adds r2, r0, r6
lbl_0806de2a:
    ldrh r0, [r2]
    cmp r0, ip
    beq lbl_0806de40
    ldr r0, [r7]
    adds r0, #0x29
    strb r3, [r0]
    movs r5, #1
    b lbl_0806de48
    .align 2, 0
lbl_0806de3c: .4byte 0x08754bc4
lbl_0806de40:
    adds r2, #2
    adds r1, #1
    cmp r1, #0x1f
    ble lbl_0806de2a
lbl_0806de48:
    adds r3, r4, #0
    cmp r3, #0
    blt lbl_0806de52
    cmp r5, #0
    beq lbl_0806de22
lbl_0806de52:
    movs r5, #0
    movs r3, #0
    movs r0, #0xa0
    lsls r0, r0, #1
    mov ip, r0
    ldr r7, lbl_0806de78 @ =0x08754bc4
lbl_0806de5e:
    movs r1, #0
    adds r4, r3, #1
    lsls r0, r3, #1
    adds r2, r0, r6
lbl_0806de66:
    ldrh r0, [r2]
    cmp r0, ip
    beq lbl_0806de7c
    ldr r0, [r7]
    adds r0, #0x27
    strb r3, [r0]
    movs r5, #1
    b lbl_0806de84
    .align 2, 0
lbl_0806de78: .4byte 0x08754bc4
lbl_0806de7c:
    adds r2, #0x40
    adds r1, #1
    cmp r1, #0x1f
    ble lbl_0806de66
lbl_0806de84:
    adds r3, r4, #0
    cmp r3, #0x1f
    bgt lbl_0806de8e
    cmp r5, #0
    beq lbl_0806de5e
lbl_0806de8e:
    movs r3, #0x1f
    movs r5, #0
    movs r0, #0xa0
    lsls r0, r0, #1
    mov ip, r0
    ldr r7, lbl_0806deb4 @ =0x08754bc4
lbl_0806de9a:
    movs r1, #0
    subs r4, r3, #1
    lsls r0, r3, #1
    adds r2, r0, r6
lbl_0806dea2:
    ldrh r0, [r2]
    cmp r0, ip
    beq lbl_0806deb8
    ldr r0, [r7]
    adds r0, #0x26
    strb r3, [r0]
    movs r5, #1
    b lbl_0806dec0
    .align 2, 0
lbl_0806deb4: .4byte 0x08754bc4
lbl_0806deb8:
    adds r2, #0x40
    adds r1, #1
    cmp r1, #0x1f
    ble lbl_0806dea2
lbl_0806dec0:
    adds r3, r4, #0
    cmp r3, #0
    blt lbl_0806deca
    cmp r5, #0
    beq lbl_0806de9a
lbl_0806deca:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_0806ded0
sub_0806ded0: @ 0x0806ded0
    push {r4, r5, r6, r7, lr}
    ldr r1, lbl_0806defc @ =0x08754bc4
    ldr r0, [r1]
    movs r2, #0xba
    lsls r2, r2, #2
    adds r4, r0, r2
    mov ip, r1
    ldr r7, lbl_0806df00 @ =0x000003ff
    movs r6, #0xb
lbl_0806dee2:
    ldrb r1, [r4, #0xb]
    movs r0, #0xc0
    ands r0, r1
    cmp r0, #0
    beq lbl_0806df72
    ldrh r0, [r4, #2]
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    cmp r1, #0
    bge lbl_0806df04
    movs r5, #0
    b lbl_0806df12
    .align 2, 0
lbl_0806defc: .4byte 0x08754bc4
lbl_0806df00: .4byte 0x000003ff
lbl_0806df04:
    cmp r1, r7
    ble lbl_0806df0c
    movs r5, #0x1f
    b lbl_0806df12
lbl_0806df0c:
    asrs r0, r0, #0x15
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
lbl_0806df12:
    ldrh r0, [r4]
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    cmp r1, #0
    bge lbl_0806df20
    movs r2, #0
    b lbl_0806df2e
lbl_0806df20:
    cmp r1, r7
    ble lbl_0806df28
    movs r2, #0x1f
    b lbl_0806df2e
lbl_0806df28:
    asrs r0, r0, #0x15
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
lbl_0806df2e:
    mov r3, ip
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0x28
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r2, r0
    bge lbl_0806df40
    strb r2, [r1]
lbl_0806df40:
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0x29
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r2, r0
    ble lbl_0806df50
    strb r2, [r1]
lbl_0806df50:
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0x27
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r5, r0
    bge lbl_0806df60
    strb r5, [r1]
lbl_0806df60:
    mov r1, ip
    ldr r0, [r1]
    adds r1, r0, #0
    adds r1, #0x26
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r5, r0
    ble lbl_0806df72
    strb r5, [r1]
lbl_0806df72:
    subs r6, #1
    adds r4, #0x10
    cmp r6, #0
    bge lbl_0806dee2
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start get_all_minimap_data
get_all_minimap_data: @ 0x0806df80
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #7
    bls lbl_0806df98
    movs r6, #0
    movs r0, #8
    mov sb, r0
    b lbl_0806df9e
lbl_0806df98:
    adds r6, r0, #0
    adds r1, r6, #1
    mov sb, r1
lbl_0806df9e:
    ldr r3, lbl_0806dff0 @ =0x08754bc4
    ldr r0, [r3]
    movs r2, #0x82
    lsls r2, r2, #1
    adds r0, r0, r2
    ldr r1, lbl_0806dff4 @ =0x08754bb4
    ldr r1, [r1]
    str r1, [r0]
    cmp r6, sb
    bge lbl_0806dfe4
    mov r8, r3
    adds r7, r2, #0
lbl_0806dfb6:
    ldr r0, lbl_0806dff8 @ =0x0840d674
    adds r0, r6, r0
    ldrb r5, [r0]
    mov r1, r8
    ldr r0, [r1]
    adds r0, r0, r7
    lsls r4, r6, #0xb
    ldr r1, [r0]
    adds r1, r1, r4
    adds r0, r5, #0
    bl get_minimap_data
    mov r1, r8
    ldr r0, [r1]
    adds r0, r0, r7
    ldr r1, [r0]
    adds r1, r1, r4
    adds r0, r5, #0
    bl minimap_set_downloaded_tiles
    adds r6, #1
    cmp r6, sb
    blt lbl_0806dfb6
lbl_0806dfe4:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806dff0: .4byte 0x08754bc4
lbl_0806dff4: .4byte 0x08754bb4
lbl_0806dff8: .4byte 0x0840d674

    thumb_func_start check_explored_areas
check_explored_areas: @ 0x0806dffc
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_0806e030 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0xb8
    movs r2, #0
    strb r2, [r1]
    movs r1, #0
    ldr r6, lbl_0806e034 @ =0x08754bc0
    movs r7, #1
    adds r5, r0, #0
lbl_0806e010:
    movs r3, #0
    adds r4, r1, #1
    adds r2, r7, #0
    lsls r2, r1
    lsls r1, r1, #7
lbl_0806e01a:
    ldr r0, [r6]
    adds r0, r1, r0
    ldr r0, [r0]
    cmp r0, #0
    beq lbl_0806e038
    ldr r1, [r5]
    adds r1, #0xb8
    ldrb r0, [r1]
    orrs r2, r0
    strb r2, [r1]
    b lbl_0806e040
    .align 2, 0
lbl_0806e030: .4byte 0x08754bc4
lbl_0806e034: .4byte 0x08754bc0
lbl_0806e038:
    adds r1, #4
    adds r3, #1
    cmp r3, #0x1f
    ble lbl_0806e01a
lbl_0806e040:
    adds r1, r4, #0
    cmp r1, #6
    bls lbl_0806e010
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start map_screen_check_input
map_screen_check_input: @ 0x0806e04c
    push {r4, r5, r6, lr}
    ldr r0, lbl_0806e064 @ =0x08754bc4
    ldr r3, [r0]
    adds r1, r3, #0
    adds r1, #0xb4
    ldrb r1, [r1]
    adds r5, r0, #0
    cmp r1, #0
    beq lbl_0806e068
    bl map_screen_change_map
    b lbl_0806e1ea
    .align 2, 0
lbl_0806e064: .4byte 0x08754bc4
lbl_0806e068:
    movs r4, #0
    ldr r0, lbl_0806e09c @ =0x0300137c
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806e078
    b lbl_0806e1a2
lbl_0806e078:
    ldr r1, lbl_0806e0a0 @ =0x03001380
    ldrh r2, [r1]
    movs r0, #0x40
    ands r0, r2
    adds r6, r1, #0
    cmp r0, #0
    beq lbl_0806e0a4
    adds r0, r3, #0
    adds r0, #0x30
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806e0c2
    adds r1, r3, #0
    adds r1, #0x25
    ldrb r0, [r1]
    subs r0, #1
    b lbl_0806e0be
    .align 2, 0
lbl_0806e09c: .4byte 0x0300137c
lbl_0806e0a0: .4byte 0x03001380
lbl_0806e0a4:
    movs r0, #0x80
    ands r0, r2
    cmp r0, #0
    beq lbl_0806e0c2
    adds r0, r3, #0
    adds r0, #0x31
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806e0c2
    adds r1, r3, #0
    adds r1, #0x25
    ldrb r0, [r1]
    adds r0, #1
lbl_0806e0be:
    strb r0, [r1]
    movs r4, #1
lbl_0806e0c2:
    ldrh r1, [r6]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0806e0e0
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x2f
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806e0fe
    adds r1, #0x24
    ldrb r0, [r1]
    subs r0, #1
    b lbl_0806e0fa
lbl_0806e0e0:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0806e0fe
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x2e
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806e0fe
    adds r1, #0x24
    ldrb r0, [r1]
    adds r0, #1
lbl_0806e0fa:
    strb r0, [r1]
    movs r4, #1
lbl_0806e0fe:
    ldr r2, lbl_0806e144 @ =0x03000c00
    ldr r0, [r5]
    mov ip, r0
    adds r0, #0x24
    movs r1, #0
    ldrsb r1, [r0, r1]
    movs r0, #0xf
    subs r0, r0, r1
    lsls r0, r0, #3
    movs r1, #0x81
    lsls r1, r1, #2
    subs r0, r1, r0
    lsls r0, r0, #2
    strh r0, [r2]
    ldr r3, lbl_0806e148 @ =0x03000c02
    mov r0, ip
    adds r0, #0x25
    movs r2, #0
    ldrsb r2, [r0, r2]
    movs r0, #0xa
    subs r0, r0, r2
    lsls r0, r0, #3
    subs r1, r1, r0
    lsls r1, r1, #2
    strh r1, [r3]
    cmp r4, #1
    bne lbl_0806e15a
    mov r1, ip
    ldrb r0, [r1, #0x11]
    cmp r0, #0
    beq lbl_0806e150
    ldr r0, lbl_0806e14c @ =0x00000201
    bl SoundPlay
    b lbl_0806e1a2
    .align 2, 0
lbl_0806e144: .4byte 0x03000c00
lbl_0806e148: .4byte 0x03000c02
lbl_0806e14c: .4byte 0x00000201
lbl_0806e150:
    movs r0, #0x80
    lsls r0, r0, #2
    bl SoundPlay
    b lbl_0806e1a2
lbl_0806e15a:
    cmp r4, #0
    bne lbl_0806e1ea
    ldrh r1, [r6]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806e174
    movs r0, #0xb
    mov r1, ip
    strb r0, [r1, #4]
    movs r4, #2
    b lbl_0806e190
lbl_0806e174:
    movs r0, #0x80
    lsls r0, r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0806e18c
    ldr r0, lbl_0806e1bc @ =0x00000205
    bl SoundPlay
    ldr r1, [r5]
    movs r0, #0x10
    strb r0, [r1, #4]
    movs r4, #2
lbl_0806e18c:
    cmp r4, #0
    beq lbl_0806e1a6
lbl_0806e190:
    ldr r0, lbl_0806e1c0 @ =0x08754bc4
    ldr r1, [r0]
    movs r2, #0
    movs r0, #0
    strh r0, [r1, #0xa]
    strb r2, [r1, #8]
    movs r0, #1
    bl sub_0806e1f4
lbl_0806e1a2:
    cmp r4, #0
    bne lbl_0806e1ea
lbl_0806e1a6:
    ldr r0, lbl_0806e1c4 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    beq lbl_0806e1c8
    movs r0, #0
    bl sub_0806e1f4
    b lbl_0806e1ea
    .align 2, 0
lbl_0806e1bc: .4byte 0x00000205
lbl_0806e1c0: .4byte 0x08754bc4
lbl_0806e1c4: .4byte 0x03001380
lbl_0806e1c8:
    movs r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_0806e1ea
    ldr r0, lbl_0806e1f0 @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0xbb
    ldrb r0, [r0]
    cmp r0, #1
    bls lbl_0806e1ea
    ldrb r0, [r1, #0x12]
    cmp r0, #6
    bhi lbl_0806e1ea
    adds r1, #0xb4
    movs r0, #1
    strb r0, [r1]
lbl_0806e1ea:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806e1f0: .4byte 0x08754bc4

    thumb_func_start sub_0806e1f4
sub_0806e1f4: @ 0x0806e1f4
    push {r4, r5, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0
    bne lbl_0806e210
    ldr r3, lbl_0806e20c @ =0x08754bc4
    ldr r2, [r3]
    ldrb r0, [r2, #0x11]
    movs r1, #1
    eors r0, r1
    b lbl_0806e21e
    .align 2, 0
lbl_0806e20c: .4byte 0x08754bc4
lbl_0806e210:
    ldr r0, lbl_0806e260 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #0x11]
    adds r3, r0, #0
    cmp r1, #0
    beq lbl_0806e2b2
    movs r0, #0
lbl_0806e21e:
    strb r0, [r2, #0x11]
    ldr r0, [r3]
    ldrb r0, [r0, #0x11]
    cmp r0, #0
    beq lbl_0806e278
    ldr r0, lbl_0806e264 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xa0
    lsls r0, r0, #8
    adds r1, r1, r0
    ldr r2, lbl_0806e268 @ =0x0600d000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_0806e26c @ =0x083fd252
    ldr r2, lbl_0806e270 @ =0x05000002
    str r4, [sp]
    movs r0, #3
    movs r3, #0x9e
    bl DMATransfer
    movs r0, #1
    bl sub_08069024
    ldr r0, lbl_0806e274 @ =0x00000202
    bl SoundPlay
    b lbl_0806e2aa
    .align 2, 0
lbl_0806e260: .4byte 0x08754bc4
lbl_0806e264: .4byte 0x08754bb4
lbl_0806e268: .4byte 0x0600d000
lbl_0806e26c: .4byte 0x083fd252
lbl_0806e270: .4byte 0x05000002
lbl_0806e274: .4byte 0x00000202
lbl_0806e278:
    ldr r0, lbl_0806e2bc @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0x98
    lsls r0, r0, #8
    adds r1, r1, r0
    ldr r2, lbl_0806e2c0 @ =0x0600d000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_0806e2c4 @ =0x08411362
    ldr r2, lbl_0806e2c8 @ =0x05000002
    str r4, [sp]
    movs r0, #3
    movs r3, #0x9e
    bl DMATransfer
    cmp r5, #0
    bne lbl_0806e2aa
    ldr r0, lbl_0806e2cc @ =0x00000203
    bl SoundPlay
lbl_0806e2aa:
    movs r0, #1
    movs r1, #0
    bl sub_0806b00c
lbl_0806e2b2:
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806e2bc: .4byte 0x08754bb4
lbl_0806e2c0: .4byte 0x0600d000
lbl_0806e2c4: .4byte 0x08411362
lbl_0806e2c8: .4byte 0x05000002
lbl_0806e2cc: .4byte 0x00000203

    thumb_func_start map_screen_change_map
map_screen_change_map: @ 0x0806e2d0
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r5, lbl_0806e2f0 @ =0x08754bc4
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0xb4
    ldrb r4, [r0]
    adds r7, r5, #0
    cmp r4, #2
    beq lbl_0806e39c
    cmp r4, #2
    bgt lbl_0806e2f4
    cmp r4, #1
    beq lbl_0806e302
    b lbl_0806e454
    .align 2, 0
lbl_0806e2f0: .4byte 0x08754bc4
lbl_0806e2f4:
    cmp r4, #3
    bne lbl_0806e2fa
    b lbl_0806e42c
lbl_0806e2fa:
    cmp r4, #4
    bne lbl_0806e300
    b lbl_0806e442
lbl_0806e300:
    b lbl_0806e454
lbl_0806e302:
    movs r3, #0
    ldr r1, lbl_0806e390 @ =0x0840d67c
    ldrb r0, [r2, #0x12]
    ldrb r2, [r1]
    cmp r0, r2
    beq lbl_0806e324
    adds r2, r5, #0
    adds r4, r1, #0
lbl_0806e312:
    adds r3, #1
    cmp r3, #6
    bhi lbl_0806e324
    ldr r0, [r2]
    adds r1, r3, r4
    ldrb r0, [r0, #0x12]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_0806e312
lbl_0806e324:
    cmp r3, #6
    bhi lbl_0806e324
    ldr r6, lbl_0806e394 @ =0x08754bc4
    ldr r5, lbl_0806e390 @ =0x0840d67c
    movs r4, #1
lbl_0806e32e:
    adds r3, #1
    cmp r3, #6
    bls lbl_0806e336
    movs r3, #0
lbl_0806e336:
    ldr r2, [r6]
    adds r0, r2, #0
    adds r0, #0xba
    ldrb r1, [r0]
    adds r0, r3, r5
    ldrb r0, [r0]
    asrs r1, r0
    ands r1, r4
    cmp r1, #0
    beq lbl_0806e32e
    strb r0, [r2, #0x12]
    ldr r0, [r7]
    movs r1, #0xba
    lsls r1, r1, #2
    adds r2, r0, r1
    movs r4, #0x3f
    movs r3, #0xb
lbl_0806e358:
    ldrb r1, [r2, #0xb]
    adds r0, r4, #0
    ands r0, r1
    strb r0, [r2, #0xb]
    subs r3, #1
    adds r2, #0x10
    cmp r3, #0
    bge lbl_0806e358
    ldr r1, [r7]
    ldr r2, lbl_0806e398 @ =0x00000403
    adds r1, r1, r2
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x6e
    ldrh r1, [r1]
    adds r0, #0x64
    strh r1, [r0]
    movs r0, #0x81
    lsls r0, r0, #2
    bl SoundPlay
    ldr r1, [r7]
    b lbl_0806e414
    .align 2, 0
lbl_0806e390: .4byte 0x0840d67c
lbl_0806e394: .4byte 0x08754bc4
lbl_0806e398: .4byte 0x00000403
lbl_0806e39c:
    movs r0, #0x82
    lsls r0, r0, #1
    adds r1, r2, r0
    ldrb r0, [r2, #0x12]
    lsls r0, r0, #0xb
    ldr r1, [r1]
    adds r1, r1, r0
    ldr r2, lbl_0806e420 @ =0x0600e000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    movs r0, #1
    bl chozo_statue_hint_determine_path
    ldr r0, [r5]
    ldr r2, lbl_0806e424 @ =0x03000054
    ldrb r1, [r0, #0x12]
    ldrb r0, [r2]
    eors r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    asrs r0, r0, #0x1f
    ands r0, r4
    bl sub_0806db58
    ldr r2, [r5]
    ldr r1, lbl_0806e428 @ =0x00000403
    adds r2, r2, r1
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x80
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r5]
    ldrb r0, [r0, #0x12]
    bl sub_08068fd0
    ldr r0, [r5]
    ldrb r0, [r0, #0x11]
    cmp r0, #0
    beq lbl_0806e3fe
    movs r0, #1
    bl sub_08069024
lbl_0806e3fe:
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x6c
    ldrh r1, [r1]
    adds r0, #0x64
    strh r1, [r0]
    bl sub_0806fe18
    bl sub_0806889c
    ldr r1, [r5]
lbl_0806e414:
    adds r1, #0xb4
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0806e454
    .align 2, 0
lbl_0806e420: .4byte 0x0600e000
lbl_0806e424: .4byte 0x03000054
lbl_0806e428: .4byte 0x00000403
lbl_0806e42c:
    bl count_tanks_in_area
    movs r0, #0
    movs r1, #0
    bl draw_in_game_time_and_tanks
    ldr r1, [r5]
    adds r1, #0xb4
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_0806e442:
    movs r0, #0
    movs r1, #1
    bl draw_in_game_time_and_tanks
    ldr r0, lbl_0806e45c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xb4
    movs r1, #0
    strb r1, [r0]
lbl_0806e454:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806e45c: .4byte 0x08754bc4

    thumb_func_start get_chararcter_width
get_chararcter_width: @ 0x0806e460
    push {lr}
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    ldr r0, lbl_0806e474 @ =0x0000049f
    cmp r1, r0
    bhi lbl_0806e47c
    ldr r0, lbl_0806e478 @ =0x0840d7b0
    adds r0, r1, r0
    ldrb r0, [r0]
    b lbl_0806e47e
    .align 2, 0
lbl_0806e474: .4byte 0x0000049f
lbl_0806e478: .4byte 0x0840d7b0
lbl_0806e47c:
    movs r0, #0xa
lbl_0806e47e:
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start draw_character_for_text
draw_character_for_text: @ 0x0806e484
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x2c
    str r1, [sp, #8]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #4]
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    str r2, [sp, #0xc]
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    str r3, [sp, #0x10]
    ldr r2, lbl_0806e550 @ =0x02027700
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x80
    bl BitFill
    ldr r0, [sp, #4]
    bl get_chararcter_width
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x18]
    movs r0, #0
    mov sl, r0
lbl_0806e4c4:
    ldr r5, lbl_0806e550 @ =0x02027700
    mov r1, sl
    cmp r1, #0
    beq lbl_0806e4ce
    adds r5, #0x40
lbl_0806e4ce:
    ldr r2, [sp, #4]
    lsls r0, r2, #5
    mov r3, sl
    lsls r1, r3, #0xa
    adds r4, r0, r1
    ldr r0, lbl_0806e554 @ =0x08415460
    adds r6, r4, r0
    movs r0, #8
    str r0, [sp, #0x14]
    str r1, [sp, #0x24]
    ldr r1, [sp, #0x18]
    cmp r1, #8
    bls lbl_0806e4ec
    movs r2, #0x10
    str r2, [sp, #0x14]
lbl_0806e4ec:
    ldr r3, [sp, #0x10]
    cmp r3, #0
    bne lbl_0806e4f4
    b lbl_0806e614
lbl_0806e4f4:
    ldr r0, [sp, #0xc]
    lsrs r0, r0, #8
    mov ip, r0
    mov r1, sl
    adds r1, #1
    str r1, [sp, #0x28]
    ldr r2, [sp, #0x14]
    cmp r2, #0
    bgt lbl_0806e508
    b lbl_0806e632
lbl_0806e508:
    ldr r3, lbl_0806e558 @ =0x08760338
    mov r8, r3
    ldr r7, lbl_0806e55c @ =0x08760398
    mov sb, r2
lbl_0806e510:
    ldr r4, [r6]
    cmp r4, #0
    beq lbl_0806e600
    movs r1, #0
    movs r3, #4
    ldr r0, [sp, #0x10]
    cmp r0, #0
    beq lbl_0806e522
    adds r3, r0, #0
lbl_0806e522:
    mov r0, r8
    ldr r2, [r0]
    ands r2, r4
    cmp r2, #0
    beq lbl_0806e538
    ldr r0, [r7]
    ands r0, r2
    adds r1, r2, #0
    cmp r0, #0
    beq lbl_0806e538
    adds r1, r3, #0
lbl_0806e538:
    lsls r3, r3, #4
    mov r0, r8
    ldr r2, [r0, #4]
    ands r2, r4
    cmp r2, #0
    beq lbl_0806e562
    ldr r0, [r7, #4]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806e560
    orrs r1, r3
    b lbl_0806e562
    .align 2, 0
lbl_0806e550: .4byte 0x02027700
lbl_0806e554: .4byte 0x08415460
lbl_0806e558: .4byte 0x08760338
lbl_0806e55c: .4byte 0x08760398
lbl_0806e560:
    orrs r1, r2
lbl_0806e562:
    lsls r3, r3, #4
    mov r0, r8
    ldr r2, [r0, #8]
    ands r2, r4
    cmp r2, #0
    beq lbl_0806e57c
    ldr r0, [r7, #8]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806e57a
    orrs r1, r3
    b lbl_0806e57c
lbl_0806e57a:
    orrs r1, r2
lbl_0806e57c:
    lsls r3, r3, #4
    mov r0, r8
    ldr r2, [r0, #0xc]
    ands r2, r4
    cmp r2, #0
    beq lbl_0806e596
    ldr r0, [r7, #0xc]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806e594
    orrs r1, r3
    b lbl_0806e596
lbl_0806e594:
    orrs r1, r2
lbl_0806e596:
    lsls r3, r3, #4
    mov r0, r8
    ldr r2, [r0, #0x10]
    ands r2, r4
    cmp r2, #0
    beq lbl_0806e5b0
    ldr r0, [r7, #0x10]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806e5ae
    orrs r1, r3
    b lbl_0806e5b0
lbl_0806e5ae:
    orrs r1, r2
lbl_0806e5b0:
    lsls r3, r3, #4
    mov r0, r8
    ldr r2, [r0, #0x14]
    ands r2, r4
    cmp r2, #0
    beq lbl_0806e5ca
    ldr r0, [r7, #0x14]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806e5c8
    orrs r1, r3
    b lbl_0806e5ca
lbl_0806e5c8:
    orrs r1, r2
lbl_0806e5ca:
    lsls r3, r3, #4
    mov r0, r8
    ldr r2, [r0, #0x18]
    ands r2, r4
    cmp r2, #0
    beq lbl_0806e5e4
    ldr r0, [r7, #0x18]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806e5e2
    orrs r1, r3
    b lbl_0806e5e4
lbl_0806e5e2:
    orrs r1, r2
lbl_0806e5e4:
    lsls r3, r3, #4
    mov r0, r8
    ldr r2, [r0, #0x1c]
    ands r2, r4
    cmp r2, #0
    beq lbl_0806e5fe
    ldr r0, [r7, #0x1c]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806e5fc
    orrs r1, r3
    b lbl_0806e5fe
lbl_0806e5fc:
    orrs r1, r2
lbl_0806e5fe:
    str r1, [r5]
lbl_0806e600:
    movs r1, #1
    rsbs r1, r1, #0
    add sb, r1
    adds r5, #4
    adds r6, #4
    mov r2, sb
    cmp r2, #0
    beq lbl_0806e612
    b lbl_0806e510
lbl_0806e612:
    b lbl_0806e632
lbl_0806e614:
    ldr r0, [sp, #0x14]
    lsls r3, r0, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r2, r5, #0
    bl DMATransfer
    ldr r1, [sp, #0xc]
    lsrs r1, r1, #8
    mov ip, r1
    mov r2, sl
    adds r2, #1
    str r2, [sp, #0x28]
lbl_0806e632:
    movs r0, #0xff
    ldr r3, [sp, #0xc]
    ands r0, r3
    lsrs r0, r0, #3
    lsls r0, r0, #5
    ldr r1, [sp, #8]
    adds r0, r1, r0
    ldr r2, [sp, #0x24]
    adds r5, r0, r2
    mov r3, ip
    lsls r0, r3, #0xb
    adds r5, r5, r0
    ldr r6, lbl_0806e7f8 @ =0x02027700
    mov r0, sl
    cmp r0, #0
    beq lbl_0806e654
    adds r6, #0x40
lbl_0806e654:
    movs r3, #7
    ldr r1, [sp, #0xc]
    ands r3, r1
    cmp r3, #0
    bne lbl_0806e660
    b lbl_0806e89a
lbl_0806e660:
    lsls r4, r3, #2
    movs r0, #0x20
    subs r0, r0, r4
    str r0, [sp, #0x14]
    ldr r2, [sp, #0x18]
    adds r3, r3, r2
    str r3, [sp, #0x1c]
    cmp r3, #8
    bgt lbl_0806e674
    b lbl_0806e848
lbl_0806e674:
    ldr r2, [r6]
    adds r1, r2, #0
    lsls r1, r4
    ldr r0, [r5]
    orrs r0, r1
    str r0, [r5]
    ldr r3, [sp, #0x14]
    lsrs r2, r3
    ldr r3, [r5, #0x20]
    orrs r3, r2
    str r3, [r5, #0x20]
    ldr r2, [r6, #4]
    adds r1, r2, #0
    lsls r1, r4
    ldr r0, [r5, #4]
    orrs r0, r1
    str r0, [r5, #4]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r7, [r5, #0x24]
    orrs r7, r2
    str r7, [r5, #0x24]
    ldr r2, [r6, #8]
    adds r1, r2, #0
    lsls r1, r4
    ldr r0, [r5, #8]
    orrs r0, r1
    str r0, [r5, #8]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r5, #0x28]
    mov ip, r0
    mov r1, ip
    orrs r1, r2
    mov ip, r1
    str r1, [r5, #0x28]
    ldr r2, [r6, #0xc]
    adds r1, r2, #0
    lsls r1, r4
    ldr r0, [r5, #0xc]
    orrs r0, r1
    str r0, [r5, #0xc]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r1, [r5, #0x2c]
    mov r8, r1
    mov r0, r8
    orrs r0, r2
    mov r8, r0
    str r0, [r5, #0x2c]
    ldr r2, [r6, #0x10]
    adds r1, r2, #0
    lsls r1, r4
    ldr r0, [r5, #0x10]
    orrs r0, r1
    str r0, [r5, #0x10]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r5, #0x30]
    mov sb, r0
    mov r1, sb
    orrs r1, r2
    mov sb, r1
    str r1, [r5, #0x30]
    ldr r2, [r6, #0x14]
    adds r1, r2, #0
    lsls r1, r4
    ldr r0, [r5, #0x14]
    orrs r0, r1
    str r0, [r5, #0x14]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r1, [r5, #0x34]
    mov sl, r1
    mov r0, sl
    orrs r0, r2
    mov sl, r0
    str r0, [r5, #0x34]
    ldr r2, [r6, #0x18]
    adds r1, r2, #0
    lsls r1, r4
    ldr r0, [r5, #0x18]
    orrs r0, r1
    str r0, [r5, #0x18]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r5, #0x38]
    orrs r0, r2
    str r0, [sp, #0x20]
    str r0, [r5, #0x38]
    ldr r2, [r6, #0x1c]
    adds r1, r2, #0
    lsls r1, r4
    ldr r0, [r5, #0x1c]
    orrs r0, r1
    str r0, [r5, #0x1c]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r1, [r5, #0x3c]
    orrs r1, r2
    str r1, [r5, #0x3c]
    ldr r2, [sp, #0x18]
    cmp r2, #8
    bhi lbl_0806e746
    b lbl_0806e920
lbl_0806e746:
    ldr r0, [sp, #0x1c]
    cmp r0, #0x10
    ble lbl_0806e7fc
    ldr r2, [r6, #0x20]
    adds r0, r2, #0
    lsls r0, r4
    orrs r3, r0
    str r3, [r5, #0x20]
    ldr r3, [sp, #0x14]
    lsrs r2, r3
    ldr r0, [r5, #0x40]
    orrs r0, r2
    str r0, [r5, #0x40]
    ldr r2, [r6, #0x24]
    adds r0, r2, #0
    lsls r0, r4
    orrs r7, r0
    str r7, [r5, #0x24]
    lsrs r2, r3
    ldr r0, [r5, #0x44]
    orrs r0, r2
    str r0, [r5, #0x44]
    ldr r2, [r6, #0x28]
    adds r0, r2, #0
    lsls r0, r4
    mov r3, ip
    orrs r3, r0
    str r3, [r5, #0x28]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r5, #0x48]
    orrs r0, r2
    str r0, [r5, #0x48]
    ldr r2, [r6, #0x2c]
    adds r0, r2, #0
    lsls r0, r4
    mov r3, r8
    orrs r3, r0
    str r3, [r5, #0x2c]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r5, #0x4c]
    orrs r0, r2
    str r0, [r5, #0x4c]
    ldr r2, [r6, #0x30]
    adds r0, r2, #0
    lsls r0, r4
    mov r3, sb
    orrs r3, r0
    str r3, [r5, #0x30]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r5, #0x50]
    orrs r0, r2
    str r0, [r5, #0x50]
    ldr r2, [r6, #0x34]
    adds r0, r2, #0
    lsls r0, r4
    mov r3, sl
    orrs r3, r0
    str r3, [r5, #0x34]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r5, #0x54]
    orrs r0, r2
    str r0, [r5, #0x54]
    ldr r2, [r6, #0x38]
    adds r0, r2, #0
    lsls r0, r4
    ldr r3, [sp, #0x20]
    orrs r3, r0
    str r3, [r5, #0x38]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r5, #0x58]
    orrs r0, r2
    str r0, [r5, #0x58]
    ldr r2, [r6, #0x3c]
    adds r0, r2, #0
    lsls r0, r4
    orrs r1, r0
    str r1, [r5, #0x3c]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r5, #0x5c]
    orrs r0, r2
    str r0, [r5, #0x5c]
    b lbl_0806e920
    .align 2, 0
lbl_0806e7f8: .4byte 0x02027700
lbl_0806e7fc:
    ldr r0, [r6, #0x20]
    lsls r0, r4
    orrs r3, r0
    str r3, [r5, #0x20]
    ldr r0, [r6, #0x24]
    lsls r0, r4
    orrs r7, r0
    str r7, [r5, #0x24]
    ldr r0, [r6, #0x28]
    lsls r0, r4
    mov r2, ip
    orrs r2, r0
    str r2, [r5, #0x28]
    ldr r0, [r6, #0x2c]
    lsls r0, r4
    mov r3, r8
    orrs r3, r0
    str r3, [r5, #0x2c]
    ldr r0, [r6, #0x30]
    lsls r0, r4
    mov r2, sb
    orrs r2, r0
    str r2, [r5, #0x30]
    ldr r0, [r6, #0x34]
    lsls r0, r4
    mov r3, sl
    orrs r3, r0
    str r3, [r5, #0x34]
    ldr r0, [r6, #0x38]
    lsls r0, r4
    ldr r2, [sp, #0x20]
    orrs r2, r0
    str r2, [r5, #0x38]
    ldr r0, [r6, #0x3c]
    lsls r0, r4
    orrs r1, r0
    str r1, [r5, #0x3c]
    b lbl_0806e920
lbl_0806e848:
    ldr r1, [r6]
    lsls r1, r4
    ldr r0, [r5]
    orrs r0, r1
    str r0, [r5]
    ldr r1, [r6, #4]
    lsls r1, r4
    ldr r0, [r5, #4]
    orrs r0, r1
    str r0, [r5, #4]
    ldr r1, [r6, #8]
    lsls r1, r4
    ldr r0, [r5, #8]
    orrs r0, r1
    str r0, [r5, #8]
    ldr r1, [r6, #0xc]
    lsls r1, r4
    ldr r0, [r5, #0xc]
    orrs r0, r1
    str r0, [r5, #0xc]
    ldr r1, [r6, #0x10]
    lsls r1, r4
    ldr r0, [r5, #0x10]
    orrs r0, r1
    str r0, [r5, #0x10]
    ldr r1, [r6, #0x14]
    lsls r1, r4
    ldr r0, [r5, #0x14]
    orrs r0, r1
    str r0, [r5, #0x14]
    ldr r1, [r6, #0x18]
    lsls r1, r4
    ldr r0, [r5, #0x18]
    orrs r0, r1
    str r0, [r5, #0x18]
    ldr r1, [r6, #0x1c]
    lsls r1, r4
    ldr r0, [r5, #0x1c]
    orrs r0, r1
    str r0, [r5, #0x1c]
    b lbl_0806e920
lbl_0806e89a:
    ldr r0, [r5]
    ldr r1, [r6]
    orrs r0, r1
    str r0, [r5]
    ldr r0, [r5, #4]
    ldr r1, [r6, #4]
    orrs r0, r1
    str r0, [r5, #4]
    ldr r0, [r5, #8]
    ldr r1, [r6, #8]
    orrs r0, r1
    str r0, [r5, #8]
    ldr r0, [r5, #0xc]
    ldr r1, [r6, #0xc]
    orrs r0, r1
    str r0, [r5, #0xc]
    ldr r0, [r5, #0x10]
    ldr r1, [r6, #0x10]
    orrs r0, r1
    str r0, [r5, #0x10]
    ldr r0, [r5, #0x14]
    ldr r1, [r6, #0x14]
    orrs r0, r1
    str r0, [r5, #0x14]
    ldr r0, [r5, #0x18]
    ldr r1, [r6, #0x18]
    orrs r0, r1
    str r0, [r5, #0x18]
    ldr r0, [r5, #0x1c]
    ldr r1, [r6, #0x1c]
    orrs r0, r1
    str r0, [r5, #0x1c]
    ldr r3, [sp, #0x18]
    cmp r3, #8
    bls lbl_0806e920
    ldr r0, [r5, #0x20]
    ldr r1, [r6, #0x20]
    orrs r0, r1
    str r0, [r5, #0x20]
    ldr r0, [r5, #0x24]
    ldr r1, [r6, #0x24]
    orrs r0, r1
    str r0, [r5, #0x24]
    ldr r0, [r5, #0x28]
    ldr r1, [r6, #0x28]
    orrs r0, r1
    str r0, [r5, #0x28]
    ldr r0, [r5, #0x2c]
    ldr r1, [r6, #0x2c]
    orrs r0, r1
    str r0, [r5, #0x2c]
    ldr r0, [r5, #0x30]
    ldr r1, [r6, #0x30]
    orrs r0, r1
    str r0, [r5, #0x30]
    ldr r0, [r5, #0x34]
    ldr r1, [r6, #0x34]
    orrs r0, r1
    str r0, [r5, #0x34]
    ldr r0, [r5, #0x38]
    ldr r1, [r6, #0x38]
    orrs r0, r1
    str r0, [r5, #0x38]
    ldr r0, [r5, #0x3c]
    ldr r1, [r6, #0x3c]
    orrs r0, r1
    str r0, [r5, #0x3c]
lbl_0806e920:
    ldr r0, [sp, #0x28]
    mov sl, r0
    cmp r0, #1
    bgt lbl_0806e92a
    b lbl_0806e4c4
lbl_0806e92a:
    add sp, #0x2c
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start draw_character_for_message
draw_character_for_message: @ 0x0806e93c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x3c
    str r1, [sp, #8]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #4]
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    str r2, [sp, #0xc]
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    str r3, [sp, #0x10]
    ldr r2, lbl_0806e9e8 @ =0x02027700
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x80
    bl BitFill
    ldr r0, [sp, #4]
    bl get_chararcter_width
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x18]
    movs r0, #0
    mov ip, r0
lbl_0806e97c:
    ldr r4, lbl_0806e9e8 @ =0x02027700
    mov r1, ip
    cmp r1, #0
    beq lbl_0806e986
    adds r4, #0x40
lbl_0806e986:
    ldr r2, [sp, #4]
    lsls r0, r2, #5
    mov r3, ip
    lsls r1, r3, #0xa
    adds r3, r0, r1
    ldr r0, lbl_0806e9ec @ =0x08415460
    adds r5, r3, r0
    movs r6, #8
    str r6, [sp, #0x14]
    str r1, [sp, #0x34]
    ldr r7, [sp, #0x18]
    cmp r7, #8
    bls lbl_0806e9a4
    movs r0, #0x10
    str r0, [sp, #0x14]
lbl_0806e9a4:
    ldr r1, [sp, #0xc]
    lsrs r1, r1, #8
    str r1, [sp, #0x30]
    mov r2, ip
    adds r2, #1
    str r2, [sp, #0x38]
    ldr r3, [sp, #0x14]
    cmp r3, #0
    bgt lbl_0806e9b8
    b lbl_0806eb28
lbl_0806e9b8:
    ldr r6, lbl_0806e9f0 @ =0x08760338
    mov sb, r6
    ldr r7, lbl_0806e9f4 @ =0x08760398
    mov r8, r7
    mov sl, r3
lbl_0806e9c2:
    ldr r6, [r5]
    movs r1, #4
    ldr r0, [sp, #0x10]
    cmp r0, #0
    beq lbl_0806e9ce
    adds r1, r0, #0
lbl_0806e9ce:
    mov r3, sb
    ldr r2, [r3]
    ands r2, r6
    cmp r2, #0
    beq lbl_0806e9f8
    mov r7, r8
    ldr r0, [r7]
    ands r0, r2
    adds r3, r2, #0
    cmp r0, #0
    beq lbl_0806e9fc
    adds r3, r1, #0
    b lbl_0806e9fc
    .align 2, 0
lbl_0806e9e8: .4byte 0x02027700
lbl_0806e9ec: .4byte 0x08415460
lbl_0806e9f0: .4byte 0x08760338
lbl_0806e9f4: .4byte 0x08760398
lbl_0806e9f8:
    ldr r0, lbl_0806ea18 @ =0x087603b8
    ldr r3, [r0]
lbl_0806e9fc:
    lsls r1, r1, #4
    mov r7, sb
    ldr r2, [r7, #4]
    ands r2, r6
    cmp r2, #0
    beq lbl_0806ea20
    mov r7, r8
    ldr r0, [r7, #4]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806ea1c
    orrs r3, r1
    b lbl_0806ea26
    .align 2, 0
lbl_0806ea18: .4byte 0x087603b8
lbl_0806ea1c:
    orrs r3, r2
    b lbl_0806ea26
lbl_0806ea20:
    ldr r2, lbl_0806ea40 @ =0x087603b8
    ldr r0, [r2, #4]
    orrs r3, r0
lbl_0806ea26:
    lsls r1, r1, #4
    mov r7, sb
    ldr r2, [r7, #8]
    ands r2, r6
    cmp r2, #0
    beq lbl_0806ea48
    mov r7, r8
    ldr r0, [r7, #8]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806ea44
    orrs r3, r1
    b lbl_0806ea4e
    .align 2, 0
lbl_0806ea40: .4byte 0x087603b8
lbl_0806ea44:
    orrs r3, r2
    b lbl_0806ea4e
lbl_0806ea48:
    ldr r2, lbl_0806ea68 @ =0x087603b8
    ldr r0, [r2, #8]
    orrs r3, r0
lbl_0806ea4e:
    lsls r1, r1, #4
    mov r7, sb
    ldr r2, [r7, #0xc]
    ands r2, r6
    cmp r2, #0
    beq lbl_0806ea70
    mov r7, r8
    ldr r0, [r7, #0xc]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806ea6c
    orrs r3, r1
    b lbl_0806ea76
    .align 2, 0
lbl_0806ea68: .4byte 0x087603b8
lbl_0806ea6c:
    orrs r3, r2
    b lbl_0806ea76
lbl_0806ea70:
    ldr r2, lbl_0806ea90 @ =0x087603b8
    ldr r0, [r2, #0xc]
    orrs r3, r0
lbl_0806ea76:
    lsls r1, r1, #4
    mov r7, sb
    ldr r2, [r7, #0x10]
    ands r2, r6
    cmp r2, #0
    beq lbl_0806ea98
    mov r7, r8
    ldr r0, [r7, #0x10]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806ea94
    orrs r3, r1
    b lbl_0806ea9e
    .align 2, 0
lbl_0806ea90: .4byte 0x087603b8
lbl_0806ea94:
    orrs r3, r2
    b lbl_0806ea9e
lbl_0806ea98:
    ldr r2, lbl_0806eab8 @ =0x087603b8
    ldr r0, [r2, #0x10]
    orrs r3, r0
lbl_0806ea9e:
    lsls r1, r1, #4
    mov r7, sb
    ldr r2, [r7, #0x14]
    ands r2, r6
    cmp r2, #0
    beq lbl_0806eac0
    mov r7, r8
    ldr r0, [r7, #0x14]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806eabc
    orrs r3, r1
    b lbl_0806eac6
    .align 2, 0
lbl_0806eab8: .4byte 0x087603b8
lbl_0806eabc:
    orrs r3, r2
    b lbl_0806eac6
lbl_0806eac0:
    ldr r2, lbl_0806eae0 @ =0x087603b8
    ldr r0, [r2, #0x14]
    orrs r3, r0
lbl_0806eac6:
    lsls r1, r1, #4
    mov r7, sb
    ldr r2, [r7, #0x18]
    ands r2, r6
    cmp r2, #0
    beq lbl_0806eae8
    mov r7, r8
    ldr r0, [r7, #0x18]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806eae4
    orrs r3, r1
    b lbl_0806eaee
    .align 2, 0
lbl_0806eae0: .4byte 0x087603b8
lbl_0806eae4:
    orrs r3, r2
    b lbl_0806eaee
lbl_0806eae8:
    ldr r2, lbl_0806eb08 @ =0x087603b8
    ldr r0, [r2, #0x18]
    orrs r3, r0
lbl_0806eaee:
    lsls r1, r1, #4
    mov r7, sb
    ldr r2, [r7, #0x1c]
    ands r2, r6
    cmp r2, #0
    beq lbl_0806eb10
    mov r6, r8
    ldr r0, [r6, #0x1c]
    ands r0, r2
    cmp r0, #0
    beq lbl_0806eb0c
    orrs r3, r1
    b lbl_0806eb16
    .align 2, 0
lbl_0806eb08: .4byte 0x087603b8
lbl_0806eb0c:
    orrs r3, r2
    b lbl_0806eb16
lbl_0806eb10:
    ldr r7, lbl_0806ed90 @ =0x087603b8
    ldr r0, [r7, #0x1c]
    orrs r3, r0
lbl_0806eb16:
    stm r4!, {r3}
    movs r0, #1
    rsbs r0, r0, #0
    add sl, r0
    adds r5, #4
    mov r1, sl
    cmp r1, #0
    beq lbl_0806eb28
    b lbl_0806e9c2
lbl_0806eb28:
    movs r0, #0xff
    ldr r2, [sp, #0xc]
    ands r0, r2
    lsrs r0, r0, #3
    lsls r0, r0, #5
    ldr r3, [sp, #8]
    adds r0, r3, r0
    ldr r6, [sp, #0x34]
    adds r4, r0, r6
    ldr r7, [sp, #0x30]
    lsls r0, r7, #0xb
    adds r4, r4, r0
    ldr r5, lbl_0806ed94 @ =0x02027700
    mov r0, ip
    cmp r0, #0
    beq lbl_0806eb4a
    adds r5, #0x40
lbl_0806eb4a:
    movs r1, #7
    ldr r2, [sp, #0xc]
    ands r1, r2
    cmp r1, #0
    bne lbl_0806eb56
    b lbl_0806ee8c
lbl_0806eb56:
    lsls r3, r1, #2
    movs r0, #8
    subs r0, r0, r1
    mov sl, r0
    movs r0, #0x20
    subs r0, r0, r3
    str r0, [sp, #0x14]
    ldr r6, [sp, #0x18]
    adds r1, r1, r6
    str r1, [sp, #0x1c]
    cmp r1, #8
    bgt lbl_0806eb70
    b lbl_0806ee12
lbl_0806eb70:
    ldr r2, [r5]
    adds r1, r2, #0
    lsls r1, r3
    ldr r0, lbl_0806ed98 @ =0x087602f0
    adds r6, r3, r0
    ldr r0, [r6]
    orrs r1, r0
    ldr r0, [r4]
    ands r0, r1
    str r0, [r4]
    ldr r7, [sp, #0x14]
    lsrs r2, r7
    ldr r1, lbl_0806ed9c @ =0x08760314
    mov r7, sl
    lsls r0, r7, #2
    adds r7, r0, r1
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x20]
    mov ip, r0
    mov r1, ip
    ands r1, r2
    mov ip, r1
    str r1, [r4, #0x20]
    ldr r2, [r5, #4]
    adds r1, r2, #0
    lsls r1, r3
    ldr r0, [r6]
    orrs r1, r0
    ldr r0, [r4, #4]
    ands r0, r1
    str r0, [r4, #4]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r1, [r4, #0x24]
    mov r8, r1
    mov r0, r8
    ands r0, r2
    mov r8, r0
    str r0, [r4, #0x24]
    ldr r2, [r5, #8]
    adds r1, r2, #0
    lsls r1, r3
    ldr r0, [r6]
    orrs r1, r0
    ldr r0, [r4, #8]
    ands r0, r1
    str r0, [r4, #8]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x28]
    mov sb, r0
    mov r1, sb
    ands r1, r2
    mov sb, r1
    str r1, [r4, #0x28]
    ldr r2, [r5, #0xc]
    adds r1, r2, #0
    lsls r1, r3
    ldr r0, [r6]
    orrs r1, r0
    ldr r0, [r4, #0xc]
    ands r0, r1
    str r0, [r4, #0xc]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r1, [r4, #0x2c]
    mov sl, r1
    mov r0, sl
    ands r0, r2
    mov sl, r0
    str r0, [r4, #0x2c]
    ldr r2, [r5, #0x10]
    adds r1, r2, #0
    lsls r1, r3
    ldr r0, [r6]
    orrs r1, r0
    ldr r0, [r4, #0x10]
    ands r0, r1
    str r0, [r4, #0x10]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x30]
    ands r0, r2
    str r0, [sp, #0x20]
    str r0, [r4, #0x30]
    ldr r2, [r5, #0x14]
    adds r1, r2, #0
    lsls r1, r3
    ldr r0, [r6]
    orrs r1, r0
    ldr r0, [r4, #0x14]
    ands r0, r1
    str r0, [r4, #0x14]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x34]
    ands r0, r2
    str r0, [sp, #0x24]
    str r0, [r4, #0x34]
    ldr r2, [r5, #0x18]
    adds r1, r2, #0
    lsls r1, r3
    ldr r0, [r6]
    orrs r1, r0
    ldr r0, [r4, #0x18]
    ands r0, r1
    str r0, [r4, #0x18]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x38]
    ands r0, r2
    str r0, [sp, #0x28]
    str r0, [r4, #0x38]
    ldr r2, [r5, #0x1c]
    adds r1, r2, #0
    lsls r1, r3
    ldr r0, [r6]
    orrs r1, r0
    ldr r0, [r4, #0x1c]
    ands r0, r1
    str r0, [r4, #0x1c]
    ldr r1, [sp, #0x14]
    lsrs r2, r1
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x3c]
    ands r0, r2
    str r0, [sp, #0x2c]
    str r0, [r4, #0x3c]
    ldr r1, [sp, #0x18]
    cmp r1, #8
    bhi lbl_0806ec94
    b lbl_0806ef12
lbl_0806ec94:
    ldr r2, [sp, #0x1c]
    cmp r2, #0x10
    bgt lbl_0806ec9c
    b lbl_0806eda0
lbl_0806ec9c:
    ldr r2, [r5, #0x20]
    adds r0, r2, #0
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    mov r1, ip
    ands r1, r0
    str r1, [r4, #0x20]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x40]
    ands r0, r2
    str r0, [r4, #0x40]
    ldr r2, [r5, #0x24]
    adds r0, r2, #0
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    mov r1, r8
    ands r1, r0
    str r1, [r4, #0x24]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x44]
    ands r0, r2
    str r0, [r4, #0x44]
    ldr r2, [r5, #0x28]
    adds r0, r2, #0
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    mov r1, sb
    ands r1, r0
    str r1, [r4, #0x28]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x48]
    ands r0, r2
    str r0, [r4, #0x48]
    ldr r2, [r5, #0x2c]
    adds r0, r2, #0
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    mov r1, sl
    ands r1, r0
    str r1, [r4, #0x2c]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x4c]
    ands r0, r2
    str r0, [r4, #0x4c]
    ldr r2, [r5, #0x30]
    adds r0, r2, #0
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    ldr r1, [sp, #0x20]
    ands r1, r0
    str r1, [r4, #0x30]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x50]
    ands r0, r2
    str r0, [r4, #0x50]
    ldr r2, [r5, #0x34]
    adds r0, r2, #0
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    ldr r1, [sp, #0x24]
    ands r1, r0
    str r1, [r4, #0x34]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x54]
    ands r0, r2
    str r0, [r4, #0x54]
    ldr r2, [r5, #0x38]
    adds r0, r2, #0
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    ldr r1, [sp, #0x28]
    ands r1, r0
    str r1, [r4, #0x38]
    ldr r0, [sp, #0x14]
    lsrs r2, r0
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x58]
    ands r0, r2
    str r0, [r4, #0x58]
    ldr r2, [r5, #0x3c]
    adds r0, r2, #0
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    ldr r1, [sp, #0x2c]
    ands r1, r0
    str r1, [r4, #0x3c]
    ldr r3, [sp, #0x14]
    lsrs r2, r3
    ldr r0, [r7]
    orrs r2, r0
    ldr r0, [r4, #0x5c]
    ands r0, r2
    str r0, [r4, #0x5c]
    b lbl_0806ef12
    .align 2, 0
lbl_0806ed90: .4byte 0x087603b8
lbl_0806ed94: .4byte 0x02027700
lbl_0806ed98: .4byte 0x087602f0
lbl_0806ed9c: .4byte 0x08760314
lbl_0806eda0:
    ldr r0, [r5, #0x20]
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    mov r7, ip
    ands r7, r0
    str r7, [r4, #0x20]
    ldr r0, [r5, #0x24]
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    mov r1, r8
    ands r1, r0
    str r1, [r4, #0x24]
    ldr r0, [r5, #0x28]
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    mov r2, sb
    ands r2, r0
    str r2, [r4, #0x28]
    ldr r0, [r5, #0x2c]
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    mov r7, sl
    ands r7, r0
    str r7, [r4, #0x2c]
    ldr r0, [r5, #0x30]
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    ldr r1, [sp, #0x20]
    ands r1, r0
    str r1, [r4, #0x30]
    ldr r0, [r5, #0x34]
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    ldr r2, [sp, #0x24]
    ands r2, r0
    str r2, [r4, #0x34]
    ldr r0, [r5, #0x38]
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    ldr r7, [sp, #0x28]
    ands r7, r0
    str r7, [r4, #0x38]
    ldr r0, [r5, #0x3c]
    lsls r0, r3
    ldr r1, [r6]
    orrs r0, r1
    ldr r1, [sp, #0x2c]
    ands r1, r0
    str r1, [r4, #0x3c]
    b lbl_0806ef12
lbl_0806ee12:
    ldr r1, [r5]
    lsls r1, r3
    ldr r2, lbl_0806ee88 @ =0x087602f0
    adds r2, r3, r2
    ldr r0, [r2]
    orrs r1, r0
    ldr r0, [r4]
    ands r0, r1
    str r0, [r4]
    ldr r1, [r5, #4]
    lsls r1, r3
    ldr r0, [r2]
    orrs r1, r0
    ldr r0, [r4, #4]
    ands r0, r1
    str r0, [r4, #4]
    ldr r1, [r5, #8]
    lsls r1, r3
    ldr r0, [r2]
    orrs r1, r0
    ldr r0, [r4, #8]
    ands r0, r1
    str r0, [r4, #8]
    ldr r1, [r5, #0xc]
    lsls r1, r3
    ldr r0, [r2]
    orrs r1, r0
    ldr r0, [r4, #0xc]
    ands r0, r1
    str r0, [r4, #0xc]
    ldr r1, [r5, #0x10]
    lsls r1, r3
    ldr r0, [r2]
    orrs r1, r0
    ldr r0, [r4, #0x10]
    ands r0, r1
    str r0, [r4, #0x10]
    ldr r1, [r5, #0x14]
    lsls r1, r3
    ldr r0, [r2]
    orrs r1, r0
    ldr r0, [r4, #0x14]
    ands r0, r1
    str r0, [r4, #0x14]
    ldr r1, [r5, #0x18]
    lsls r1, r3
    ldr r0, [r2]
    orrs r1, r0
    ldr r0, [r4, #0x18]
    ands r0, r1
    str r0, [r4, #0x18]
    ldr r1, [r5, #0x1c]
    lsls r1, r3
    ldr r0, [r2]
    orrs r1, r0
    ldr r0, [r4, #0x1c]
    ands r0, r1
    str r0, [r4, #0x1c]
    b lbl_0806ef12
    .align 2, 0
lbl_0806ee88: .4byte 0x087602f0
lbl_0806ee8c:
    ldr r0, [r4]
    ldr r1, [r5]
    ands r0, r1
    str r0, [r4]
    ldr r0, [r4, #4]
    ldr r1, [r5, #4]
    ands r0, r1
    str r0, [r4, #4]
    ldr r0, [r4, #8]
    ldr r1, [r5, #8]
    ands r0, r1
    str r0, [r4, #8]
    ldr r0, [r4, #0xc]
    ldr r1, [r5, #0xc]
    ands r0, r1
    str r0, [r4, #0xc]
    ldr r0, [r4, #0x10]
    ldr r1, [r5, #0x10]
    ands r0, r1
    str r0, [r4, #0x10]
    ldr r0, [r4, #0x14]
    ldr r1, [r5, #0x14]
    ands r0, r1
    str r0, [r4, #0x14]
    ldr r0, [r4, #0x18]
    ldr r1, [r5, #0x18]
    ands r0, r1
    str r0, [r4, #0x18]
    ldr r0, [r4, #0x1c]
    ldr r1, [r5, #0x1c]
    ands r0, r1
    str r0, [r4, #0x1c]
    ldr r2, [sp, #0x18]
    cmp r2, #8
    bls lbl_0806ef12
    ldr r0, [r4, #0x20]
    ldr r1, [r5, #0x20]
    ands r0, r1
    str r0, [r4, #0x20]
    ldr r0, [r4, #0x24]
    ldr r1, [r5, #0x24]
    ands r0, r1
    str r0, [r4, #0x24]
    ldr r0, [r4, #0x28]
    ldr r1, [r5, #0x28]
    ands r0, r1
    str r0, [r4, #0x28]
    ldr r0, [r4, #0x2c]
    ldr r1, [r5, #0x2c]
    ands r0, r1
    str r0, [r4, #0x2c]
    ldr r0, [r4, #0x30]
    ldr r1, [r5, #0x30]
    ands r0, r1
    str r0, [r4, #0x30]
    ldr r0, [r4, #0x34]
    ldr r1, [r5, #0x34]
    ands r0, r1
    str r0, [r4, #0x34]
    ldr r0, [r4, #0x38]
    ldr r1, [r5, #0x38]
    ands r0, r1
    str r0, [r4, #0x38]
    ldr r0, [r4, #0x3c]
    ldr r1, [r5, #0x3c]
    ands r0, r1
    str r0, [r4, #0x3c]
lbl_0806ef12:
    ldr r3, [sp, #0x38]
    mov ip, r3
    cmp r3, #1
    bgt lbl_0806ef1c
    b lbl_0806e97c
lbl_0806ef1c:
    add sp, #0x3c
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start draw_location_text_characters
draw_location_text_characters: @ 0x0806ef2c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    adds r6, r1, #0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_0806ef48
    movs r0, #0x80
    lsls r0, r0, #0x12
    mov sl, r0
    b lbl_0806ef72
lbl_0806ef48:
    cmp r0, #2
    bne lbl_0806f00a
    ldr r1, lbl_0806efa8 @ =0x02000800
    mov sl, r1
    ldr r2, [r6]
    ldrh r0, [r2]
    movs r1, #0xfe
    lsls r1, r1, #8
    cmp r0, r1
    beq lbl_0806ef6c
    adds r3, r1, #0
lbl_0806ef5e:
    adds r0, r2, #0
    adds r1, r0, #2
    adds r2, r1, #0
    ldrh r0, [r0, #2]
    cmp r0, r3
    bne lbl_0806ef5e
    str r1, [r6]
lbl_0806ef6c:
    ldr r0, [r6]
    adds r0, #2
    str r0, [r6]
lbl_0806ef72:
    movs r7, #0
    movs r0, #0
    mov r8, r0
    ldr r3, [r6]
    movs r1, #0xff
    lsls r1, r1, #8
    mov ip, r1
    ldrh r1, [r3]
    cmp r1, ip
    beq lbl_0806f00a
    movs r0, #0xfe
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806f00a
    movs r0, #0xff
    mov sb, r0
lbl_0806ef92:
    movs r5, #1
    ldrh r2, [r3]
    mov r1, ip
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #8
    cmp r1, r0
    bne lbl_0806efac
    mov r4, sb
    ands r4, r2
    b lbl_0806efec
    .align 2, 0
lbl_0806efa8: .4byte 0x02000800
lbl_0806efac:
    movs r0, #0x83
    lsls r0, r0, #8
    cmp r1, r0
    bne lbl_0806efbc
    movs r4, #0
    mov r7, sb
    ands r7, r2
    b lbl_0806efec
lbl_0806efbc:
    movs r0, #0x81
    lsls r0, r0, #8
    cmp r1, r0
    bne lbl_0806efd0
    movs r4, #0
    mov r8, sb
    mov r1, r8
    ands r1, r2
    mov r8, r1
    movs r5, #0
lbl_0806efd0:
    cmp r5, #0
    beq lbl_0806efec
    ldrh r0, [r3]
    bl get_chararcter_width
    adds r4, r0, #0
    ldr r0, [r6]
    ldrh r0, [r0]
    lsls r2, r7, #0x10
    lsrs r2, r2, #0x10
    mov r3, r8
    mov r1, sl
    bl draw_character_for_message
lbl_0806efec:
    ldr r0, [r6]
    adds r2, r0, #2
    str r2, [r6]
    adds r7, r7, r4
    movs r1, #0xff
    lsls r1, r1, #8
    mov ip, r1
    ldrh r1, [r0, #2]
    cmp r1, ip
    beq lbl_0806f00a
    adds r3, r2, #0
    movs r0, #0xfe
    lsls r0, r0, #8
    cmp r1, r0
    bne lbl_0806ef92
lbl_0806f00a:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start draw_location_text
draw_location_text: @ 0x0806f018
    push {r4, r5, r6, lr}
    sub sp, #8
    adds r4, r0, #0
    adds r5, r1, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    lsls r5, r5, #0x18
    lsrs r5, r5, #0x18
    ldr r1, lbl_0806f088 @ =0x0000ffff
    movs r6, #0x80
    lsls r6, r6, #0x12
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r6, #0
    bl BitFill
    ldr r1, lbl_0806f08c @ =0x08760764
    ldr r0, lbl_0806f090 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    lsls r4, r4, #2
    adds r4, r4, r0
    ldr r0, [r4]
    str r0, [sp, #4]
    movs r0, #1
    add r1, sp, #4
    bl draw_location_text_characters
    ldr r0, lbl_0806f094 @ =0x040000d4
    str r6, [r0]
    lsls r5, r5, #0xb
    ldr r2, lbl_0806f098 @ =0x06014000
    adds r1, r5, r2
    str r1, [r0, #4]
    ldr r2, lbl_0806f09c @ =0x840000e0
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    ldr r1, lbl_0806f0a0 @ =0x02000400
    str r1, [r0]
    ldr r1, lbl_0806f0a4 @ =0x06014400
    adds r5, r5, r1
    str r5, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    add sp, #8
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806f088: .4byte 0x0000ffff
lbl_0806f08c: .4byte 0x08760764
lbl_0806f090: .4byte 0x03000020
lbl_0806f094: .4byte 0x040000d4
lbl_0806f098: .4byte 0x06014000
lbl_0806f09c: .4byte 0x840000e0
lbl_0806f0a0: .4byte 0x02000400
lbl_0806f0a4: .4byte 0x06014400

    thumb_func_start sub_0806f0a8
sub_0806f0a8: @ 0x0806f0a8
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov ip, r1
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    ldr r7, lbl_0806f0ec @ =0x03000c0c
    cmp r2, #0xf
    bne lbl_0806f0da
    adds r0, r7, #0
    ldr r1, lbl_0806f0f0 @ =0x0840dc50
    ldm r1!, {r4, r5, r6}
    stm r0!, {r4, r5, r6}
    ldr r1, [r1]
    str r1, [r0]
    adds r0, r3, #0
    cmp r3, #0x23
    bls lbl_0806f0d4
    movs r0, #0x23
lbl_0806f0d4:
    strb r0, [r7, #0xa]
    mov r0, ip
    strb r0, [r7, #0xb]
lbl_0806f0da:
    ldrb r0, [r7, #0xc]
    cmp r0, #4
    bls lbl_0806f0e2
    b lbl_0806f23e
lbl_0806f0e2:
    lsls r0, r0, #2
    ldr r1, lbl_0806f0f4 @ =lbl_0806f0f8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806f0ec: .4byte 0x03000c0c
lbl_0806f0f0: .4byte 0x0840dc50
lbl_0806f0f4: .4byte lbl_0806f0f8
lbl_0806f0f8: @ jump table
    .4byte lbl_0806f10c @ case 0
    .4byte lbl_0806f13c @ case 1
    .4byte lbl_0806f180 @ case 2
    .4byte lbl_0806f218 @ case 3
    .4byte lbl_0806f23e @ case 4
lbl_0806f10c:
    movs r6, #1
    rsbs r6, r6, #0
    ldrb r2, [r7, #0xb]
    lsls r2, r2, #0xb
    ldr r3, lbl_0806f134 @ =0x06014000
    adds r2, r2, r3
    movs r5, #0xe0
    lsls r5, r5, #2
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl BitFill
    ldrb r2, [r7, #0xb]
    lsls r2, r2, #0xb
    ldr r0, lbl_0806f138 @ =0x06014400
    b lbl_0806f160
    .align 2, 0
lbl_0806f134: .4byte 0x06014000
lbl_0806f138: .4byte 0x06014400
lbl_0806f13c:
    movs r6, #1
    rsbs r6, r6, #0
    ldrb r2, [r7, #0xb]
    lsls r2, r2, #0xb
    ldr r3, lbl_0806f178 @ =0x06014800
    adds r2, r2, r3
    movs r5, #0xe0
    lsls r5, r5, #2
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl BitFill
    ldrb r2, [r7, #0xb]
    lsls r2, r2, #0xb
    ldr r0, lbl_0806f17c @ =0x06014c00
lbl_0806f160:
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl BitFill
    ldrb r0, [r7, #0xc]
    adds r0, #1
    strb r0, [r7, #0xc]
    b lbl_0806f24c
    .align 2, 0
lbl_0806f178: .4byte 0x06014800
lbl_0806f17c: .4byte 0x06014c00
lbl_0806f180:
    movs r5, #8
    ldrb r0, [r7, #7]
    cmp r0, #1
    bhi lbl_0806f18e
    ldrb r0, [r7, #0xe]
    cmp r0, #0
    beq lbl_0806f196
lbl_0806f18e:
    ldrb r0, [r7, #0xc]
    adds r0, #1
    strb r0, [r7, #0xc]
    movs r5, #0
lbl_0806f196:
    cmp r2, #1
    bne lbl_0806f1a2
    ldrb r0, [r7, #0xc]
    adds r0, #1
    strb r0, [r7, #0xc]
    movs r5, #0
lbl_0806f1a2:
    cmp r5, #0
    beq lbl_0806f24c
    ldr r4, lbl_0806f1e8 @ =0x03000c0c
    ldr r6, lbl_0806f1ec @ =0x08760780
lbl_0806f1aa:
    ldr r0, lbl_0806f1f0 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r1, [r4, #0xa]
    ldr r0, [r0]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldr r1, [r1]
    ldrb r2, [r4, #0xb]
    lsls r2, r2, #0xb
    ldrb r0, [r4, #7]
    lsls r0, r0, #0xb
    ldr r3, lbl_0806f1f4 @ =0x06014000
    adds r0, r0, r3
    adds r2, r2, r0
    adds r0, r4, #0
    bl process_current_message
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_0806f1fe
    cmp r0, #2
    bgt lbl_0806f1f8
    cmp r0, #1
    beq lbl_0806f204
    b lbl_0806f20a
    .align 2, 0
lbl_0806f1e8: .4byte 0x03000c0c
lbl_0806f1ec: .4byte 0x08760780
lbl_0806f1f0: .4byte 0x03000020
lbl_0806f1f4: .4byte 0x06014000
lbl_0806f1f8:
    cmp r0, #4
    beq lbl_0806f204
    b lbl_0806f20a
lbl_0806f1fe:
    ldrb r0, [r4, #0xc]
    adds r0, #1
    strb r0, [r4, #0xc]
lbl_0806f204:
    movs r0, #0
    strh r0, [r4, #2]
    b lbl_0806f24c
lbl_0806f20a:
    ldrb r0, [r4, #7]
    cmp r0, #1
    bhi lbl_0806f24c
    subs r5, #1
    cmp r5, #0
    bne lbl_0806f1aa
    b lbl_0806f24c
lbl_0806f218:
    ldr r1, lbl_0806f244 @ =0x03000c0c
    ldrb r0, [r1, #7]
    adds r0, #1
    strb r0, [r1, #7]
    ldrb r2, [r1, #0xa]
    adds r1, r2, #0
    cmp r1, #0x15
    bhi lbl_0806f234
    ldr r0, lbl_0806f248 @ =0x03000bf2
    strb r2, [r0]
    cmp r1, #7
    bls lbl_0806f234
    bl finish_collecting_ability
lbl_0806f234:
    ldr r1, lbl_0806f244 @ =0x03000c0c
    ldrb r0, [r1, #0xc]
    adds r0, #1
    strb r0, [r1, #0xc]
    adds r7, r1, #0
lbl_0806f23e:
    ldrb r0, [r7, #7]
    b lbl_0806f24e
    .align 2, 0
lbl_0806f244: .4byte 0x03000c0c
lbl_0806f248: .4byte 0x03000bf2
lbl_0806f24c:
    movs r0, #0
lbl_0806f24e:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start start_message
start_message: @ 0x0806f258
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldr r3, lbl_0806f284 @ =0x03000c0c
    adds r2, r3, #0
    ldr r1, lbl_0806f288 @ =0x0840dc50
    ldm r1!, {r5, r6, r7}
    stm r2!, {r5, r6, r7}
    ldr r1, [r1]
    str r1, [r2]
    adds r1, r0, #0
    cmp r0, #0x23
    bls lbl_0806f278
    movs r1, #0x23
lbl_0806f278:
    strb r1, [r3, #0xa]
    strb r4, [r3, #0xb]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806f284: .4byte 0x03000c0c
lbl_0806f288: .4byte 0x0840dc50

    thumb_func_start process_item_banner_text
process_item_banner_text: @ 0x0806f28c
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r0, lbl_0806f2a8 @ =0x03000c0c
    ldrb r2, [r0, #0xc]
    adds r7, r0, #0
    cmp r2, #4
    bls lbl_0806f29c
    b lbl_0806f3ea
lbl_0806f29c:
    lsls r0, r2, #2
    ldr r1, lbl_0806f2ac @ =lbl_0806f2b0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806f2a8: .4byte 0x03000c0c
lbl_0806f2ac: .4byte lbl_0806f2b0
lbl_0806f2b0: @ jump table
    .4byte lbl_0806f2c4 @ case 0
    .4byte lbl_0806f2f4 @ case 1
    .4byte lbl_0806f338 @ case 2
    .4byte lbl_0806f3c4 @ case 3
    .4byte lbl_0806f3ea @ case 4
lbl_0806f2c4:
    movs r6, #1
    rsbs r6, r6, #0
    ldrb r2, [r7, #0xb]
    lsls r2, r2, #0xb
    ldr r0, lbl_0806f2ec @ =0x06014000
    adds r2, r2, r0
    movs r5, #0xe0
    lsls r5, r5, #2
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl BitFill
    ldrb r2, [r7, #0xb]
    lsls r2, r2, #0xb
    ldr r3, lbl_0806f2f0 @ =0x06014400
    b lbl_0806f318
    .align 2, 0
lbl_0806f2ec: .4byte 0x06014000
lbl_0806f2f0: .4byte 0x06014400
lbl_0806f2f4:
    movs r6, #1
    rsbs r6, r6, #0
    ldrb r2, [r7, #0xb]
    lsls r2, r2, #0xb
    ldr r0, lbl_0806f330 @ =0x06014800
    adds r2, r2, r0
    movs r5, #0xe0
    lsls r5, r5, #2
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl BitFill
    ldrb r2, [r7, #0xb]
    lsls r2, r2, #0xb
    ldr r3, lbl_0806f334 @ =0x06014c00
lbl_0806f318:
    adds r2, r2, r3
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl BitFill
    ldrb r0, [r7, #0xc]
    adds r0, #1
    strb r0, [r7, #0xc]
    b lbl_0806f3f8
    .align 2, 0
lbl_0806f330: .4byte 0x06014800
lbl_0806f334: .4byte 0x06014c00
lbl_0806f338:
    movs r5, #8
    ldrb r0, [r7, #7]
    cmp r0, #1
    bhi lbl_0806f346
    ldrb r0, [r7, #0xe]
    cmp r0, #0
    beq lbl_0806f34e
lbl_0806f346:
    ldrb r0, [r7, #0xc]
    adds r0, #1
    strb r0, [r7, #0xc]
    movs r5, #0
lbl_0806f34e:
    cmp r5, #0
    beq lbl_0806f3f8
    ldr r4, lbl_0806f394 @ =0x03000c0c
    ldr r6, lbl_0806f398 @ =0x08760780
lbl_0806f356:
    ldr r0, lbl_0806f39c @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r1, [r4, #0xa]
    ldr r0, [r0]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldr r1, [r1]
    ldrb r2, [r4, #0xb]
    lsls r2, r2, #0xb
    ldrb r0, [r4, #7]
    lsls r0, r0, #0xb
    ldr r3, lbl_0806f3a0 @ =0x06014000
    adds r0, r0, r3
    adds r2, r2, r0
    adds r0, r4, #0
    bl process_current_message
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_0806f3aa
    cmp r0, #2
    bgt lbl_0806f3a4
    cmp r0, #1
    beq lbl_0806f3b0
    b lbl_0806f3b6
    .align 2, 0
lbl_0806f394: .4byte 0x03000c0c
lbl_0806f398: .4byte 0x08760780
lbl_0806f39c: .4byte 0x03000020
lbl_0806f3a0: .4byte 0x06014000
lbl_0806f3a4:
    cmp r0, #4
    beq lbl_0806f3b0
    b lbl_0806f3b6
lbl_0806f3aa:
    ldrb r0, [r4, #0xc]
    adds r0, #1
    strb r0, [r4, #0xc]
lbl_0806f3b0:
    movs r0, #0
    strh r0, [r4, #2]
    b lbl_0806f3f8
lbl_0806f3b6:
    ldrb r0, [r4, #7]
    cmp r0, #1
    bhi lbl_0806f3f8
    subs r5, #1
    cmp r5, #0
    bne lbl_0806f356
    b lbl_0806f3f8
lbl_0806f3c4:
    ldr r1, lbl_0806f3f0 @ =0x03000c0c
    ldrb r0, [r1, #7]
    adds r0, #1
    strb r0, [r1, #7]
    ldrb r2, [r1, #0xa]
    adds r1, r2, #0
    cmp r1, #0x15
    bhi lbl_0806f3e0
    ldr r0, lbl_0806f3f4 @ =0x03000bf2
    strb r2, [r0]
    cmp r1, #7
    bls lbl_0806f3e0
    bl finish_collecting_ability
lbl_0806f3e0:
    ldr r1, lbl_0806f3f0 @ =0x03000c0c
    ldrb r0, [r1, #0xc]
    adds r0, #1
    strb r0, [r1, #0xc]
    adds r7, r1, #0
lbl_0806f3ea:
    ldrb r0, [r7, #7]
    b lbl_0806f3fa
    .align 2, 0
lbl_0806f3f0: .4byte 0x03000c0c
lbl_0806f3f4: .4byte 0x03000bf2
lbl_0806f3f8:
    movs r0, #0
lbl_0806f3fa:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start start_story_text
start_story_text: @ 0x0806f404
    push {r4, r5, r6, lr}
    ldr r3, lbl_0806f41c @ =0x03000c0c
    adds r2, r3, #0
    ldr r1, lbl_0806f420 @ =0x0840dc60
    ldm r1!, {r4, r5, r6}
    stm r2!, {r4, r5, r6}
    ldr r1, [r1]
    str r1, [r2]
    strb r0, [r3, #0xa]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806f41c: .4byte 0x03000c0c
lbl_0806f420: .4byte 0x0840dc60

    thumb_func_start sub_0806f424
sub_0806f424: @ 0x0806f424
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r0, lbl_0806f440 @ =0x03000c0c
    ldrb r1, [r0, #0xc]
    adds r6, r0, #0
    cmp r1, #4
    bls lbl_0806f434
    b lbl_0806f594
lbl_0806f434:
    lsls r0, r1, #2
    ldr r1, lbl_0806f444 @ =lbl_0806f448
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806f440: .4byte 0x03000c0c
lbl_0806f444: .4byte lbl_0806f448
lbl_0806f448: @ jump table
    .4byte lbl_0806f45c @ case 0
    .4byte lbl_0806f49c @ case 1
    .4byte lbl_0806f4d4 @ case 2
    .4byte lbl_0806f588 @ case 3
    .4byte lbl_0806f594 @ case 4
lbl_0806f45c:
    ldrb r1, [r6, #0xa]
    cmp r1, #1
    bne lbl_0806f46a
    movs r0, #2
    strb r0, [r6, #0xc]
    strb r1, [r6, #0xb]
    b lbl_0806f598
lbl_0806f46a:
    ldr r2, lbl_0806f494 @ =0x06007000
    movs r5, #0xe0
    lsls r5, r5, #2
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r3, r5, #0
    bl BitFill
    ldr r2, lbl_0806f498 @ =0x06007400
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r3, r5, #0
    bl BitFill
    movs r0, #1
    strb r0, [r6, #0xc]
    b lbl_0806f598
    .align 2, 0
lbl_0806f494: .4byte 0x06007000
lbl_0806f498: .4byte 0x06007400
lbl_0806f49c:
    ldr r2, lbl_0806f4c8 @ =0x06007800
    movs r5, #0xe0
    lsls r5, r5, #2
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r3, r5, #0
    bl BitFill
    ldr r2, lbl_0806f4cc @ =0x06007c00
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r3, r5, #0
    bl BitFill
    ldr r1, lbl_0806f4d0 @ =0x03000c0c
    ldrb r0, [r1, #0xc]
    adds r0, #1
    strb r0, [r1, #0xc]
    b lbl_0806f598
    .align 2, 0
lbl_0806f4c8: .4byte 0x06007800
lbl_0806f4cc: .4byte 0x06007c00
lbl_0806f4d0: .4byte 0x03000c0c
lbl_0806f4d4:
    movs r7, #6
    ldrb r0, [r6, #0xb]
    cmp r0, #0
    beq lbl_0806f4f4
    ldrb r0, [r6, #7]
    cmp r0, #9
    bhi lbl_0806f50c
    ldrb r0, [r6, #0xe]
    cmp r0, #0
    bne lbl_0806f50c
    ldrb r0, [r6, #7]
    lsls r0, r0, #0xb
    ldr r1, lbl_0806f4f0 @ =0x06013000
    b lbl_0806f506
    .align 2, 0
lbl_0806f4f0: .4byte 0x06013000
lbl_0806f4f4:
    ldrb r0, [r6, #7]
    cmp r0, #1
    bhi lbl_0806f50c
    ldrb r0, [r6, #0xe]
    cmp r0, #0
    bne lbl_0806f50c
    ldrb r0, [r6, #7]
    lsls r0, r0, #0xb
    ldr r1, lbl_0806f514 @ =0x06007000
lbl_0806f506:
    adds r5, r0, r1
    cmp r7, #0
    bne lbl_0806f518
lbl_0806f50c:
    movs r0, #3
    strb r0, [r6, #0xc]
    b lbl_0806f598
    .align 2, 0
lbl_0806f514: .4byte 0x06007000
lbl_0806f518:
    ldr r4, lbl_0806f54c @ =0x03000c0c
    ldr r6, lbl_0806f550 @ =0x0875fee0
lbl_0806f51c:
    ldr r0, lbl_0806f554 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r1, [r4, #0xa]
    ldr r0, [r0]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldr r1, [r1]
    adds r0, r4, #0
    adds r2, r5, #0
    bl process_current_message
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #2
    beq lbl_0806f55e
    cmp r1, #2
    bgt lbl_0806f558
    cmp r1, #1
    beq lbl_0806f564
    b lbl_0806f56a
    .align 2, 0
lbl_0806f54c: .4byte 0x03000c0c
lbl_0806f550: .4byte 0x0875fee0
lbl_0806f554: .4byte 0x03000020
lbl_0806f558:
    cmp r1, #4
    beq lbl_0806f564
    b lbl_0806f56a
lbl_0806f55e:
    ldrb r0, [r4, #0xc]
    adds r0, #1
    strb r0, [r4, #0xc]
lbl_0806f564:
    movs r0, #0
    strh r0, [r4, #2]
    b lbl_0806f598
lbl_0806f56a:
    ldr r2, lbl_0806f584 @ =0x03000c0c
    ldrb r0, [r2, #0xb]
    movs r1, #2
    cmp r0, #0
    beq lbl_0806f576
    movs r1, #0xa
lbl_0806f576:
    ldrb r0, [r2, #7]
    cmp r0, r1
    bge lbl_0806f598
    subs r7, #1
    cmp r7, #0
    bne lbl_0806f51c
    b lbl_0806f598
    .align 2, 0
lbl_0806f584: .4byte 0x03000c0c
lbl_0806f588:
    ldrb r0, [r6, #7]
    adds r0, #1
    strb r0, [r6, #7]
    ldrb r0, [r6, #0xc]
    adds r0, #1
    strb r0, [r6, #0xc]
lbl_0806f594:
    ldrb r0, [r6, #7]
    b lbl_0806f59a
lbl_0806f598:
    movs r0, #0
lbl_0806f59a:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start start_file_screen_text
start_file_screen_text: @ 0x0806f5a4
    push {r4, r5, r6, lr}
    ldr r3, lbl_0806f5bc @ =0x03000c0c
    adds r2, r3, #0
    ldr r1, lbl_0806f5c0 @ =0x0840dc70
    ldm r1!, {r4, r5, r6}
    stm r2!, {r4, r5, r6}
    ldr r1, [r1]
    str r1, [r2]
    strb r0, [r3, #0xa]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806f5bc: .4byte 0x03000c0c
lbl_0806f5c0: .4byte 0x0840dc70

    thumb_func_start sub_0806f5c4
sub_0806f5c4: @ 0x0806f5c4
    push {r4, r5, r6, lr}
    ldr r0, lbl_0806f5ec @ =0x03000c0c
    ldrb r1, [r0, #0xc]
    adds r2, r0, #0
    cmp r1, #1
    beq lbl_0806f668
    cmp r1, #1
    bgt lbl_0806f674
    cmp r1, #0
    bne lbl_0806f674
    movs r5, #8
    ldrb r0, [r2, #7]
    cmp r0, #3
    bhi lbl_0806f5e6
    ldrb r0, [r2, #0xe]
    cmp r0, #0
    beq lbl_0806f5f0
lbl_0806f5e6:
    movs r0, #1
    strb r0, [r2, #0xc]
    b lbl_0806f678
    .align 2, 0
lbl_0806f5ec: .4byte 0x03000c0c
lbl_0806f5f0:
    ldrb r0, [r2, #7]
    lsls r0, r0, #0xb
    movs r1, #0xc0
    lsls r1, r1, #0x13
    adds r6, r0, r1
lbl_0806f5fa:
    ldr r4, lbl_0806f630 @ =0x03000c0c
    ldr r1, lbl_0806f634 @ =0x0876079c
    ldr r0, lbl_0806f638 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r1, [r4, #0xa]
    ldr r0, [r0]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldr r1, [r1]
    adds r0, r4, #0
    adds r2, r6, #0
    bl process_current_message
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_0806f642
    cmp r0, #2
    bgt lbl_0806f63c
    cmp r0, #1
    beq lbl_0806f648
    b lbl_0806f654
    .align 2, 0
lbl_0806f630: .4byte 0x03000c0c
lbl_0806f634: .4byte 0x0876079c
lbl_0806f638: .4byte 0x03000020
lbl_0806f63c:
    cmp r0, #4
    beq lbl_0806f648
    b lbl_0806f654
lbl_0806f642:
    ldrb r0, [r4, #0xc]
    adds r0, #1
    strb r0, [r4, #0xc]
lbl_0806f648:
    ldr r1, lbl_0806f650 @ =0x03000c0c
    movs r0, #0
    strh r0, [r1, #2]
    b lbl_0806f678
    .align 2, 0
lbl_0806f650: .4byte 0x03000c0c
lbl_0806f654:
    ldr r0, lbl_0806f664 @ =0x03000c0c
    ldrb r0, [r0, #7]
    cmp r0, #3
    bhi lbl_0806f678
    subs r5, #1
    cmp r5, #0
    bne lbl_0806f5fa
    b lbl_0806f678
    .align 2, 0
lbl_0806f664: .4byte 0x03000c0c
lbl_0806f668:
    ldrb r0, [r2, #7]
    adds r0, #1
    strb r0, [r2, #7]
    ldrb r0, [r2, #0xc]
    adds r0, #1
    strb r0, [r2, #0xc]
lbl_0806f674:
    ldrb r0, [r2, #7]
    b lbl_0806f67a
lbl_0806f678:
    movs r0, #0
lbl_0806f67a:
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start sub_0806f680
sub_0806f680: @ 0x0806f680
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r1, lbl_0806f6e4 @ =0x08754bc4
    ldr r3, [r1]
    adds r0, r3, #0
    adds r0, #0x57
    adds r2, r3, #0
    adds r2, #0xc1
    ldrb r0, [r0]
    adds r6, r1, #0
    ldrb r2, [r2]
    cmp r0, r2
    beq lbl_0806f6cc
    ldr r0, lbl_0806f6e8 @ =0x00000123
    adds r2, r3, r0
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
    ldr r0, [r6]
    adds r0, #0x56
    movs r2, #0
    strb r2, [r0]
    ldr r0, [r6]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r1, [r1]
    adds r0, #0x57
    strb r1, [r0]
    ldr r0, [r6]
    adds r0, #0x58
    strb r2, [r0]
    ldr r1, lbl_0806f6ec @ =0x03000c0c
    ldr r0, lbl_0806f6f0 @ =0x0840dc80
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldr r0, [r0]
    str r0, [r1]
lbl_0806f6cc:
    ldr r0, [r6]
    adds r0, #0x56
    ldrb r0, [r0]
    cmp r0, #6
    bls lbl_0806f6d8
    b lbl_0806f974
lbl_0806f6d8:
    lsls r0, r0, #2
    ldr r1, lbl_0806f6f4 @ =lbl_0806f6f8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0806f6e4: .4byte 0x08754bc4
lbl_0806f6e8: .4byte 0x00000123
lbl_0806f6ec: .4byte 0x03000c0c
lbl_0806f6f0: .4byte 0x0840dc80
lbl_0806f6f4: .4byte lbl_0806f6f8
lbl_0806f6f8: @ jump table
    .4byte lbl_0806f714 @ case 0
    .4byte lbl_0806f758 @ case 1
    .4byte lbl_0806f794 @ case 2
    .4byte lbl_0806f87e @ case 3
    .4byte lbl_0806f8dc @ case 4
    .4byte lbl_0806f930 @ case 5
    .4byte lbl_0806f974 @ case 6
lbl_0806f714:
    ldr r0, [r6]
    adds r0, #0x57
    ldrb r0, [r0]
    bl get_current_equipment_selected
    ldr r1, [r6]
    adds r1, #0x58
    strb r0, [r1]
    ldr r2, lbl_0806f74c @ =0x06007800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r1, [r6]
    adds r0, r1, #0
    adds r0, #0x58
    ldrb r0, [r0]
    cmp r0, #0x12
    bhi lbl_0806f750
    adds r1, #0x56
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0806f974
    .align 2, 0
lbl_0806f74c: .4byte 0x06007800
lbl_0806f750:
    adds r1, #0x56
    movs r0, #0x80
    strb r0, [r1]
    b lbl_0806f974
lbl_0806f758:
    ldr r2, lbl_0806f78c @ =0x03000c0c
    ldrh r0, [r2, #4]
    adds r0, #1
    strh r0, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldrb r5, [r2, #9]
    cmp r0, r5
    bhi lbl_0806f778
    ldr r0, lbl_0806f790 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0806f778
    b lbl_0806f974
lbl_0806f778:
    movs r0, #0
    strb r0, [r2, #9]
    ldr r1, [r6]
    adds r1, #0x56
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    strh r0, [r2, #4]
    b lbl_0806f974
    .align 2, 0
lbl_0806f78c: .4byte 0x03000c0c
lbl_0806f790: .4byte 0x03001380
lbl_0806f794:
    ldr r5, lbl_0806f7d4 @ =0x03000c0c
    ldr r2, lbl_0806f7d8 @ =0x087602d4
    ldr r0, lbl_0806f7dc @ =0x03000020
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r1, r1, #2
    adds r1, r1, r2
    ldr r0, [r6]
    adds r0, #0x58
    ldrb r0, [r0]
    ldr r1, [r1]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r1, [r0]
    ldr r2, lbl_0806f7e0 @ =0x06007800
    adds r0, r5, #0
    bl process_current_message
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #2
    bne lbl_0806f7f0
    ldrb r0, [r5, #7]
    cmp r0, #0
    beq lbl_0806f7e4
    movs r4, #5
    ldr r0, [r6]
    adds r0, #0x56
    movs r1, #4
    strb r1, [r0]
    b lbl_0806f81c
    .align 2, 0
lbl_0806f7d4: .4byte 0x03000c0c
lbl_0806f7d8: .4byte 0x087602d4
lbl_0806f7dc: .4byte 0x03000020
lbl_0806f7e0: .4byte 0x06007800
lbl_0806f7e4:
    movs r4, #0
    ldr r0, [r6]
    adds r0, #0x56
    movs r1, #6
    strb r1, [r0]
    b lbl_0806f81c
lbl_0806f7f0:
    cmp r4, #1
    bne lbl_0806f81a
    movs r4, #4
    movs r0, #0
    strh r0, [r5, #4]
    ldr r0, lbl_0806f80c @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806f810
    ldr r0, [r6]
    adds r0, #0x56
    movs r1, #5
    strb r1, [r0]
    b lbl_0806f81c
    .align 2, 0
lbl_0806f80c: .4byte 0x030013d2
lbl_0806f810:
    ldr r0, [r6]
    adds r0, #0x56
    movs r1, #3
    strb r1, [r0]
    b lbl_0806f81c
lbl_0806f81a:
    movs r4, #0
lbl_0806f81c:
    cmp r4, #0
    bne lbl_0806f822
    b lbl_0806f974
lbl_0806f822:
    ldr r1, lbl_0806f84c @ =0x08754bc4
    ldr r3, [r1]
    ldr r0, lbl_0806f850 @ =0x03000c0c
    ldrh r0, [r0, #2]
    adds r0, #0xa
    lsls r0, r0, #2
    movs r5, #0x8d
    lsls r5, r5, #1
    adds r2, r3, r5
    strh r0, [r2]
    adds r6, r1, #0
    cmp r4, #4
    bne lbl_0806f854
    movs r0, #0x8c
    lsls r0, r0, #1
    adds r1, r3, r0
    movs r0, #0x90
    lsls r0, r0, #2
    strh r0, [r1]
    b lbl_0806f86e
    .align 2, 0
lbl_0806f84c: .4byte 0x08754bc4
lbl_0806f850: .4byte 0x03000c0c
lbl_0806f854:
    movs r2, #0x8c
    lsls r2, r2, #1
    adds r1, r3, r2
    movs r0, #0x89
    lsls r0, r0, #2
    strh r0, [r1]
    ldrh r1, [r3]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806f86e
    movs r4, #0
lbl_0806f86e:
    ldr r0, [r6]
    movs r3, #0x8c
    lsls r3, r3, #1
    adds r0, r0, r3
    adds r1, r4, #0
    bl sub_08068128
    b lbl_0806f974
lbl_0806f87e:
    ldr r0, lbl_0806f8c4 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0806f892
    ldr r0, lbl_0806f8c8 @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0806f974
lbl_0806f892:
    ldr r2, lbl_0806f8cc @ =0x06007800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r3, lbl_0806f8d0 @ =0x08754bc4
    ldr r0, [r3]
    adds r0, #0x56
    movs r2, #0
    movs r1, #1
    strb r1, [r0]
    ldr r0, lbl_0806f8d4 @ =0x03000c0c
    strh r2, [r0, #4]
    strh r2, [r0, #2]
    movs r1, #0xa
    strb r1, [r0, #9]
    ldr r0, [r3]
    ldr r4, lbl_0806f8d8 @ =0x00000123
    adds r2, r0, r4
    b lbl_0806f96c
    .align 2, 0
lbl_0806f8c4: .4byte 0x03001380
lbl_0806f8c8: .4byte 0x030013d2
lbl_0806f8cc: .4byte 0x06007800
lbl_0806f8d0: .4byte 0x08754bc4
lbl_0806f8d4: .4byte 0x03000c0c
lbl_0806f8d8: .4byte 0x00000123
lbl_0806f8dc:
    ldr r0, lbl_0806f918 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0806f974
    ldr r2, lbl_0806f91c @ =0x06007800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r2, lbl_0806f920 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x56
    movs r1, #1
    strb r1, [r0]
    ldr r1, lbl_0806f924 @ =0x03000c0c
    ldr r0, lbl_0806f928 @ =0x0840dc80
    ldm r0!, {r3, r4, r5}
    stm r1!, {r3, r4, r5}
    ldr r0, [r0]
    str r0, [r1]
    ldr r0, [r2]
    ldr r5, lbl_0806f92c @ =0x00000123
    adds r2, r0, r5
    b lbl_0806f96c
    .align 2, 0
lbl_0806f918: .4byte 0x03001380
lbl_0806f91c: .4byte 0x06007800
lbl_0806f920: .4byte 0x08754bc4
lbl_0806f924: .4byte 0x03000c0c
lbl_0806f928: .4byte 0x0840dc80
lbl_0806f92c: .4byte 0x00000123
lbl_0806f930:
    ldr r4, lbl_0806f97c @ =0x03000c0c
    ldrh r0, [r4, #4]
    adds r0, #1
    movs r5, #0
    strh r0, [r4, #4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x1e
    bls lbl_0806f974
    ldr r2, lbl_0806f980 @ =0x06007800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r2, lbl_0806f984 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x56
    movs r1, #1
    strb r1, [r0]
    strh r5, [r4, #4]
    strh r5, [r4, #2]
    movs r0, #0xa
    strb r0, [r4, #9]
    ldr r0, [r2]
    ldr r1, lbl_0806f988 @ =0x00000123
    adds r2, r0, r1
lbl_0806f96c:
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
lbl_0806f974:
    add sp, #4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806f97c: .4byte 0x03000c0c
lbl_0806f980: .4byte 0x06007800
lbl_0806f984: .4byte 0x08754bc4
lbl_0806f988: .4byte 0x00000123

    thumb_func_start process_current_message
process_current_message: @ 0x0806f98c
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    adds r4, r0, #0
    adds r6, r1, #0
    mov r8, r2
    movs r5, #1
    rsbs r5, r5, #0
    ldrh r0, [r4, #4]
    adds r2, r0, #1
    strh r2, [r4, #4]
    ldr r0, lbl_0806fa04 @ =0x0300137c
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0806f9c4
    ldrb r1, [r4, #9]
    lsls r0, r2, #0x10
    lsrs r2, r0, #0x10
    cmp r1, r2
    bls lbl_0806f9bc
    movs r5, #0
lbl_0806f9bc:
    ldrb r0, [r4, #8]
    cmp r0, r2
    bls lbl_0806f9c4
    movs r5, #0
lbl_0806f9c4:
    cmp r5, #0
    bge lbl_0806faba
    movs r0, #0
    strb r0, [r4, #9]
    strh r0, [r4, #4]
    ldrh r0, [r4]
    lsls r0, r0, #1
    adds r6, r6, r0
    movs r0, #0xff
    lsls r0, r0, #8
    mov sb, r0
lbl_0806f9da:
    movs r7, #0
    ldrh r2, [r6]
    mov r1, sb
    ands r1, r2
    movs r0, #0xe1
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806fa48
    cmp r1, r0
    bgt lbl_0806fa12
    movs r0, #0x81
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806fa44
    cmp r1, r0
    bgt lbl_0806fa08
    movs r0, #0x80
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806fa36
    b lbl_0806fa60
    .align 2, 0
lbl_0806fa04: .4byte 0x0300137c
lbl_0806fa08:
    movs r0, #0x83
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806fa3c
    b lbl_0806fa60
lbl_0806fa12:
    movs r0, #0xfd
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806fa50
    cmp r1, r0
    bgt lbl_0806fa28
    movs r0, #0xfc
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806fa54
    b lbl_0806fa60
lbl_0806fa28:
    movs r0, #0xfe
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806fa4c
    cmp r1, sb
    beq lbl_0806fa58
    b lbl_0806fa60
lbl_0806fa36:
    movs r7, #0xff
    ands r7, r2
    b lbl_0806fa6a
lbl_0806fa3c:
    movs r0, #0xff
    ands r0, r2
    strh r0, [r4, #2]
    b lbl_0806fa6a
lbl_0806fa44:
    strb r2, [r4, #6]
    b lbl_0806fa6a
lbl_0806fa48:
    strb r2, [r4, #9]
    b lbl_0806fa6a
lbl_0806fa4c:
    movs r5, #1
    b lbl_0806fa6a
lbl_0806fa50:
    movs r5, #4
    b lbl_0806fa6a
lbl_0806fa54:
    movs r5, #3
    b lbl_0806fa6a
lbl_0806fa58:
    movs r0, #1
    strb r0, [r4, #0xe]
    movs r5, #2
    b lbl_0806fa6a
lbl_0806fa60:
    ldrh r0, [r6]
    bl get_chararcter_width
    adds r7, r0, #0
    movs r5, #0
lbl_0806fa6a:
    ldrh r2, [r4, #2]
    adds r0, r2, r7
    cmp r0, #0xe0
    ble lbl_0806fa76
    movs r5, #1
    b lbl_0806faba
lbl_0806fa76:
    cmp r5, #0
    bge lbl_0806fa7e
    adds r6, #2
    b lbl_0806faaa
lbl_0806fa7e:
    cmp r5, #0
    bne lbl_0806faa0
    ldrb r0, [r4, #0xd]
    cmp r0, #0
    beq lbl_0806fa94
    ldrh r0, [r6]
    ldrb r3, [r4, #6]
    mov r1, r8
    bl draw_character_for_message
    b lbl_0806faaa
lbl_0806fa94:
    ldrh r0, [r6]
    ldrb r3, [r4, #6]
    mov r1, r8
    bl draw_character_for_text
    b lbl_0806faaa
lbl_0806faa0:
    cmp r5, #2
    beq lbl_0806faaa
    ldrb r0, [r4, #7]
    adds r0, #1
    strb r0, [r4, #7]
lbl_0806faaa:
    ldrh r0, [r4, #2]
    adds r0, r0, r7
    strh r0, [r4, #2]
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    cmp r5, #0
    blt lbl_0806f9da
lbl_0806faba:
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0806facc
sub_0806facc: @ 0x0806facc
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    ldr r1, lbl_0806fb48 @ =0x0000ffff
    ldr r0, lbl_0806fb4c @ =0x08754bb4
    ldr r2, [r0]
    movs r0, #0x80
    lsls r0, r0, #7
    adds r2, r2, r0
    movs r3, #0xa0
    lsls r3, r3, #6
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl BitFill
    ldr r0, lbl_0806fb50 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xe9
    movs r1, #0
    strb r1, [r0]
    ldr r1, lbl_0806fb54 @ =0x08760780
    ldr r0, lbl_0806fb58 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    adds r0, #0x98
    ldr r4, [r0]
    ldr r5, lbl_0806fb5c @ =0x03000c0c
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r5, #0
    movs r3, #0x10
    bl BitFill
    ldrh r1, [r4]
    movs r0, #0xff
    lsls r0, r0, #8
    cmp r1, r0
    beq lbl_0806fba8
    movs r2, #0xfe
    lsls r2, r2, #8
    mov r8, r2
    adds r7, r0, #0
    movs r6, #0x81
    lsls r6, r6, #8
lbl_0806fb34:
    movs r2, #1
    cmp r1, r8
    bne lbl_0806fb60
    ldr r1, lbl_0806fb5c @ =0x03000c0c
    ldrh r0, [r1, #2]
    cmp r0, #0x70
    bhi lbl_0806fba8
    movs r0, #0x70
    strh r0, [r1, #2]
    b lbl_0806fba0
    .align 2, 0
lbl_0806fb48: .4byte 0x0000ffff
lbl_0806fb4c: .4byte 0x08754bb4
lbl_0806fb50: .4byte 0x08754bc4
lbl_0806fb54: .4byte 0x08760780
lbl_0806fb58: .4byte 0x03000020
lbl_0806fb5c: .4byte 0x03000c0c
lbl_0806fb60:
    movs r3, #0x80
    lsls r3, r3, #8
    adds r0, r3, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0806fb7c
    movs r2, #0xff
    lsls r2, r2, #8
    adds r0, r2, #0
    ands r0, r1
    cmp r0, r6
    bne lbl_0806fb7a
    strb r1, [r5, #6]
lbl_0806fb7a:
    movs r2, #0
lbl_0806fb7c:
    cmp r2, #0
    beq lbl_0806fba0
    ldrh r0, [r4]
    ldr r1, lbl_0806fbb4 @ =0x08754bb4
    ldr r1, [r1]
    movs r3, #0xc0
    lsls r3, r3, #7
    adds r1, r1, r3
    ldrh r2, [r5, #2]
    ldrb r3, [r5, #6]
    bl draw_character_for_message
    ldrh r0, [r4]
    bl get_chararcter_width
    ldrh r1, [r5, #2]
    adds r1, r1, r0
    strh r1, [r5, #2]
lbl_0806fba0:
    adds r4, #2
    ldrh r1, [r4]
    cmp r1, r7
    bne lbl_0806fb34
lbl_0806fba8:
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806fbb4: .4byte 0x08754bb4

    thumb_func_start sub_0806fbb8
sub_0806fbb8: @ 0x0806fbb8
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r5, lbl_0806fbd4 @ =0x08754bc4
    ldr r0, [r5]
    adds r0, #0xe9
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_0806fc02
    cmp r0, #1
    bgt lbl_0806fbd8
    cmp r0, #0
    beq lbl_0806fbe2
    b lbl_0806fce8
    .align 2, 0
lbl_0806fbd4: .4byte 0x08754bc4
lbl_0806fbd8:
    cmp r0, #2
    beq lbl_0806fc80
    cmp r0, #3
    beq lbl_0806fca0
    b lbl_0806fce8
lbl_0806fbe2:
    ldr r4, lbl_0806fc4c @ =0x03000c0c
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r4, #0
    movs r3, #0x10
    bl BitFill
    movs r0, #1
    strb r0, [r4, #0xd]
    ldr r1, [r5]
    adds r1, #0xe9
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_0806fc02:
    movs r5, #3
    ldr r4, lbl_0806fc4c @ =0x03000c0c
    ldr r7, lbl_0806fc50 @ =0x08760780
    ldr r6, lbl_0806fc54 @ =0x08754bb4
lbl_0806fc0a:
    ldr r0, lbl_0806fc58 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r7
    ldr r0, [r0]
    adds r0, #0x90
    ldr r1, [r0]
    ldrb r0, [r4, #7]
    lsls r0, r0, #0xb
    movs r2, #0x80
    lsls r2, r2, #7
    adds r0, r0, r2
    ldr r2, [r6]
    adds r2, r2, r0
    adds r0, r4, #0
    bl process_current_message
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0806fc40
    movs r0, #0
    strh r0, [r4, #2]
    ldrb r0, [r4, #0xe]
    cmp r0, #0
    bne lbl_0806fc5c
lbl_0806fc40:
    subs r5, #1
    movs r0, #1
    rsbs r0, r0, #0
    cmp r5, r0
    bne lbl_0806fc0a
    b lbl_0806fce8
    .align 2, 0
lbl_0806fc4c: .4byte 0x03000c0c
lbl_0806fc50: .4byte 0x08760780
lbl_0806fc54: .4byte 0x08754bb4
lbl_0806fc58: .4byte 0x03000020
lbl_0806fc5c:
    ldr r0, lbl_0806fc6c @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0xe9
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0806fce8
    .align 2, 0
lbl_0806fc6c: .4byte 0x08754bc4
lbl_0806fc70:
    ldr r0, lbl_0806fc7c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xe9
    movs r1, #0x80
    strb r1, [r0]
    b lbl_0806fce8
    .align 2, 0
lbl_0806fc7c: .4byte 0x08754bc4
lbl_0806fc80:
    ldr r4, lbl_0806fcf0 @ =0x03000c0c
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r4, #0
    movs r3, #0x10
    bl BitFill
    movs r0, #1
    strb r0, [r4, #0xd]
    ldr r1, [r5]
    adds r1, #0xe9
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_0806fca0:
    movs r5, #3
    ldr r4, lbl_0806fcf0 @ =0x03000c0c
    ldr r7, lbl_0806fcf4 @ =0x08760780
    ldr r6, lbl_0806fcf8 @ =0x08754bb4
lbl_0806fca8:
    ldr r0, lbl_0806fcfc @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r7
    ldr r0, [r0]
    adds r0, #0x94
    ldr r1, [r0]
    ldrb r0, [r4, #7]
    lsls r0, r0, #0xb
    movs r2, #0xa0
    lsls r2, r2, #7
    adds r0, r0, r2
    ldr r2, [r6]
    adds r2, r2, r0
    adds r0, r4, #0
    bl process_current_message
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0806fcde
    movs r0, #0
    strh r0, [r4, #2]
    ldrb r0, [r4, #0xe]
    cmp r0, #0
    bne lbl_0806fc70
lbl_0806fcde:
    subs r5, #1
    movs r0, #1
    rsbs r0, r0, #0
    cmp r5, r0
    bne lbl_0806fca8
lbl_0806fce8:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806fcf0: .4byte 0x03000c0c
lbl_0806fcf4: .4byte 0x08760780
lbl_0806fcf8: .4byte 0x08754bb4
lbl_0806fcfc: .4byte 0x03000020

    thumb_func_start update_minimap_anim_palette
update_minimap_anim_palette: @ 0x0806fd00
    push {r4, r5, lr}
    ldr r0, lbl_0806fdf4 @ =0x08754bc4
    ldr r3, [r0]
    ldrb r4, [r3, #0x11]
    adds r5, r0, #0
    cmp r4, #0
    bne lbl_0806fd86
    ldrh r0, [r3, #0x18]
    adds r0, #1
    strh r0, [r3, #0x18]
    ldr r2, lbl_0806fdf8 @ =0x0840dcf0
    movs r1, #0x1a
    ldrsb r1, [r3, r1]
    adds r1, r1, r2
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldrb r1, [r1]
    cmp r0, r1
    blo lbl_0806fd86
    strh r4, [r3, #0x18]
    ldrb r0, [r3, #0x1a]
    adds r0, #1
    strb r0, [r3, #0x1a]
    ldr r1, [r5]
    ldrb r0, [r1, #0x1a]
    cmp r0, #3
    bls lbl_0806fd3a
    movs r0, #0
    strb r0, [r1, #0x1a]
lbl_0806fd3a:
    ldr r1, lbl_0806fdfc @ =0x0840dcb0
    ldr r2, [r5]
    movs r0, #0x1a
    ldrsb r0, [r2, r0]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r3, [r0]
    ldr r0, lbl_0806fe00 @ =0x08754bb8
    ldr r0, [r0]
    mov ip, r0
    strh r3, [r0, #0x24]
    strh r3, [r0, #0x26]
    ldr r1, lbl_0806fe04 @ =0x0840dc90
    movs r0, #0x1a
    ldrsb r0, [r2, r0]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r3, [r0]
    mov r0, ip
    adds r0, #0x64
    strh r3, [r0]
    adds r0, #2
    strh r3, [r0]
    ldr r1, lbl_0806fe08 @ =0x0840dcd0
    movs r0, #0x1a
    ldrsb r0, [r2, r0]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r3, [r0]
    mov r0, ip
    adds r0, #0x44
    strh r3, [r0]
    adds r0, #2
    strh r3, [r0]
    adds r0, #0x3e
    strh r3, [r0]
    adds r0, #2
    strh r3, [r0]
lbl_0806fd86:
    adds r4, r5, #0
    ldr r2, [r4]
    ldrb r0, [r2, #0x12]
    cmp r0, #7
    bhi lbl_0806fdee
    ldrh r0, [r2, #0x1c]
    adds r0, #1
    strh r0, [r2, #0x1c]
    movs r3, #0x1e
    ldrsb r3, [r2, r3]
    cmp r3, #0
    bge lbl_0806fda0
    rsbs r3, r3, #0
lbl_0806fda0:
    ldr r1, lbl_0806fe0c @ =0x0840dcf4
    adds r1, r3, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldrb r1, [r1]
    cmp r0, r1
    blo lbl_0806fdee
    movs r0, #0
    strh r0, [r2, #0x1c]
    ldrb r0, [r2, #0x1e]
    adds r0, #1
    strb r0, [r2, #0x1e]
    ldr r1, [r4]
    movs r0, #0x1e
    ldrsb r0, [r1, r0]
    cmp r0, #0x10
    blt lbl_0806fdc8
    movs r0, #0xe
    rsbs r0, r0, #0
    strb r0, [r1, #0x1e]
lbl_0806fdc8:
    ldr r0, [r5]
    movs r3, #0x1e
    ldrsb r3, [r0, r3]
    cmp r3, #0
    bge lbl_0806fdd4
    rsbs r3, r3, #0
lbl_0806fdd4:
    ldr r1, lbl_0806fe10 @ =0x0840dd04
    ldrb r0, [r0, #0x12]
    adds r0, r0, r1
    ldrb r1, [r0]
    ldr r0, lbl_0806fe00 @ =0x08754bb8
    ldr r0, [r0]
    lsls r1, r1, #1
    adds r1, r1, r0
    ldr r2, lbl_0806fe14 @ =0x083fd2f0
    lsls r0, r3, #1
    adds r0, r0, r2
    ldrh r0, [r0]
    strh r0, [r1]
lbl_0806fdee:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806fdf4: .4byte 0x08754bc4
lbl_0806fdf8: .4byte 0x0840dcf0
lbl_0806fdfc: .4byte 0x0840dcb0
lbl_0806fe00: .4byte 0x08754bb8
lbl_0806fe04: .4byte 0x0840dc90
lbl_0806fe08: .4byte 0x0840dcd0
lbl_0806fe0c: .4byte 0x0840dcf4
lbl_0806fe10: .4byte 0x0840dd04
lbl_0806fe14: .4byte 0x083fd2f0

    thumb_func_start sub_0806fe18
sub_0806fe18: @ 0x0806fe18
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r0, lbl_0806fecc @ =0x083fcef0
    adds r0, #0x9e
    ldrh r1, [r0]
    ldr r3, lbl_0806fed0 @ =0x08754bb4
    ldr r0, lbl_0806fed4 @ =0x0840dd04
    ldrb r0, [r0, #8]
    lsls r0, r0, #1
    movs r2, #0xd8
    lsls r2, r2, #7
    adds r0, r0, r2
    ldr r2, [r3]
    adds r2, r2, r0
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x12
    bl BitFill
    movs r3, #0
    ldr r0, lbl_0806fed8 @ =0x08754bc4
    mov ip, r0
    movs r5, #1
lbl_0806fe48:
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0xba
    ldrb r2, [r0]
    asrs r2, r3
    ands r2, r5
    ldr r4, lbl_0806fed0 @ =0x08754bb4
    ldr r6, lbl_0806fed4 @ =0x0840dd04
    cmp r2, #0
    bne lbl_0806fe6e
    ldr r0, [r4]
    adds r1, r3, r6
    ldrb r1, [r1]
    lsls r1, r1, #1
    movs r7, #0xd8
    lsls r7, r7, #7
    adds r0, r0, r7
    adds r0, r0, r1
    strh r2, [r0]
lbl_0806fe6e:
    adds r3, #1
    cmp r3, #6
    ble lbl_0806fe48
    ldr r2, lbl_0806fedc @ =0x03000054
    ldrb r0, [r2]
    cmp r0, #7
    bhi lbl_0806fe92
    ldr r1, [r4]
    adds r0, r0, r6
    ldrb r0, [r0]
    lsls r0, r0, #1
    movs r2, #0xd8
    lsls r2, r2, #7
    adds r1, r1, r2
    adds r1, r1, r0
    ldr r0, lbl_0806fee0 @ =0x083fd2f0
    ldrh r0, [r0]
    strh r0, [r1]
lbl_0806fe92:
    ldr r1, [r4]
    ldrb r0, [r6, #7]
    lsls r0, r0, #1
    movs r4, #0xd8
    lsls r4, r4, #7
    adds r3, r1, r4
    adds r0, r3, r0
    movs r5, #0
    strh r5, [r0]
    ldrb r2, [r6, #8]
    lsls r2, r2, #1
    adds r3, r3, r2
    strh r5, [r3]
    adds r4, r2, r4
    adds r1, r1, r4
    movs r0, #0xa0
    lsls r0, r0, #0x13
    adds r2, r2, r0
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x12
    bl DMATransfer
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0806fecc: .4byte 0x083fcef0
lbl_0806fed0: .4byte 0x08754bb4
lbl_0806fed4: .4byte 0x0840dd04
lbl_0806fed8: .4byte 0x08754bc4
lbl_0806fedc: .4byte 0x03000054
lbl_0806fee0: .4byte 0x083fd2f0

    thumb_func_start update_suitType
update_suitType: @ 0x0806fee4
    push {lr}
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    ldr r2, lbl_0806ff04 @ =0x03001530
    ldrb r0, [r2, #0x12]
    cmp r0, r1
    beq lbl_0806fef4
    strb r1, [r2, #0x12]
lbl_0806fef4:
    ldrb r0, [r2, #0x12]
    cmp r0, #1
    beq lbl_0806ff24
    cmp r0, #1
    bgt lbl_0806ff08
    cmp r0, #0
    beq lbl_0806ff0e
    b lbl_0806ff48
    .align 2, 0
lbl_0806ff04: .4byte 0x03001530
lbl_0806ff08:
    cmp r0, #2
    beq lbl_0806ff3c
    b lbl_0806ff48
lbl_0806ff0e:
    ldrh r0, [r2]
    strh r0, [r2, #6]
    ldrb r1, [r2, #0xc]
    movs r0, #0xf7
    ands r0, r1
    strb r0, [r2, #0xd]
    ldrb r1, [r2, #0xe]
    movs r0, #0xdb
    ands r0, r1
    strb r0, [r2, #0xf]
    b lbl_0806ff48
lbl_0806ff24:
    ldrh r0, [r2]
    movs r1, #0
    strh r0, [r2, #6]
    ldrh r0, [r2, #2]
    strh r0, [r2, #8]
    ldrb r0, [r2, #4]
    strb r0, [r2, #0xa]
    ldrb r0, [r2, #5]
    strb r0, [r2, #0xb]
    strb r1, [r2, #0xd]
    strb r1, [r2, #0xf]
    b lbl_0806ff48
lbl_0806ff3c:
    movs r0, #0x63
    strh r0, [r2, #6]
    movs r0, #0x80
    strb r0, [r2, #0xf]
    movs r0, #0x11
    strb r0, [r2, #0xd]
lbl_0806ff48:
    pop {r0}
    bx r0

    thumb_func_start draw_status_screen_item
draw_status_screen_item: @ 0x0806ff4c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    cmp r7, #7
    bls lbl_0806ff64
    movs r0, #1
    b lbl_0806fff4
lbl_0806ff64:
    movs r4, #0
    ldr r0, lbl_08070004 @ =0x087603d8
    mov sb, r0
    ldr r1, lbl_08070008 @ =0x0840de50
    mov sl, r1
lbl_0806ff6e:
    lsls r1, r4, #1
    cmp r7, #0
    bne lbl_0806ff80
    adds r0, r1, r4
    add r0, sb
    ldrb r0, [r0]
    adds r6, r4, #1
    cmp r0, #2
    beq lbl_0806ffe4
lbl_0806ff80:
    adds r2, r1, r4
    mov r3, sb
    adds r0, r2, r3
    ldrb r0, [r0]
    lsls r1, r0, #2
    adds r1, r1, r0
    mov r5, sl
    adds r0, r1, r5
    ldrb r0, [r0]
    adds r0, r0, r7
    ldr r3, lbl_0807000c @ =0x0840de52
    adds r1, r1, r3
    lsls r0, r0, #5
    ldrb r1, [r1]
    adds r3, r0, r1
    ldr r5, lbl_08070010 @ =0x087603d9
    adds r0, r2, r5
    ldrb r0, [r0]
    adds r6, r4, #1
    cmp r0, r7
    bls lbl_0806ffe4
    movs r4, #0
    ldr r1, lbl_08070014 @ =0x087603da
    adds r0, r2, r1
    ldrb r5, [r0]
    cmp r4, r5
    bge lbl_0806ffe4
    ldr r1, lbl_08070018 @ =0x08754bb4
    mov r8, r1
    movs r5, #0xe0
    lsls r5, r5, #7
    mov ip, r5
    str r0, [sp]
    lsls r0, r3, #1
    ldr r1, lbl_0807001c @ =0x0600c000
    adds r2, r0, r1
lbl_0806ffc8:
    lsls r0, r3, #1
    mov r5, r8
    ldr r1, [r5]
    add r1, ip
    adds r1, r1, r0
    ldrh r0, [r1]
    strh r0, [r2]
    adds r4, #1
    adds r2, #2
    adds r3, #1
    ldr r0, [sp]
    ldrb r0, [r0]
    cmp r4, r0
    blt lbl_0806ffc8
lbl_0806ffe4:
    adds r4, r6, #0
    cmp r4, #5
    ble lbl_0806ff6e
    movs r4, #0
    cmp r7, #6
    bls lbl_0806fff2
    movs r4, #1
lbl_0806fff2:
    adds r0, r4, #0
lbl_0806fff4:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08070004: .4byte 0x087603d8
lbl_08070008: .4byte 0x0840de50
lbl_0807000c: .4byte 0x0840de52
lbl_08070010: .4byte 0x087603d9
lbl_08070014: .4byte 0x087603da
lbl_08070018: .4byte 0x08754bb4
lbl_0807001c: .4byte 0x0600c000

    thumb_func_start sub_08070020
sub_08070020: @ 0x08070020
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov ip, r0
    lsls r1, r1, #0x18
    lsrs r2, r1, #0x18
    cmp r2, #0x15
    bhi lbl_08070062
    mov r0, ip
    cmp r0, #0
    bne lbl_0807004c
    ldr r0, lbl_08070048 @ =0x0840df0c
    lsls r1, r2, #2
    adds r1, r1, r0
    ldrb r0, [r1]
    b lbl_08070172
    .align 2, 0
lbl_08070048: .4byte 0x0840df0c
lbl_0807004c:
    mov r0, ip
    cmp r0, #1
    bne lbl_0807006c
    ldr r1, lbl_08070068 @ =0x0840df0c
    lsls r2, r2, #2
    adds r0, r2, r1
    ldrb r0, [r0]
    mov sb, r1
    adds r7, r2, #0
    cmp r0, #1
    bhi lbl_08070084
lbl_08070062:
    movs r0, #0
    b lbl_08070172
    .align 2, 0
lbl_08070068: .4byte 0x0840df0c
lbl_0807006c:
    ldr r0, lbl_08070080 @ =0x0840df0c
    lsls r1, r2, #2
    adds r3, r1, r0
    ldrb r2, [r3]
    mov sb, r0
    adds r7, r1, #0
    cmp r2, #3
    beq lbl_08070084
    ldrb r0, [r3, #3]
    b lbl_08070172
    .align 2, 0
lbl_08070080: .4byte 0x0840df0c
lbl_08070084:
    movs r5, #0
    mov r0, sb
    adds r2, r7, r0
    ldrb r6, [r2, #3]
    ldrb r0, [r2, #1]
    cmp r0, #1
    beq lbl_080700c8
    cmp r0, #1
    bgt lbl_0807009c
    cmp r0, #0
    beq lbl_080700a6
    b lbl_08070120
lbl_0807009c:
    cmp r0, #2
    beq lbl_080700e8
    cmp r0, #3
    beq lbl_0807010c
    b lbl_08070120
lbl_080700a6:
    ldr r1, lbl_080700bc @ =0x0840d0f0
    ldrb r0, [r2, #2]
    adds r0, r0, r1
    ldrb r5, [r0]
    ldr r0, lbl_080700c0 @ =0x08754bc4
    ldr r0, [r0]
    adds r4, r0, #0
    adds r4, #0xc4
    ldr r2, lbl_080700c4 @ =0x0300153d
    mov r8, r2
    b lbl_08070120
    .align 2, 0
lbl_080700bc: .4byte 0x0840d0f0
lbl_080700c0: .4byte 0x08754bc4
lbl_080700c4: .4byte 0x0300153d
lbl_080700c8:
    ldr r1, lbl_080700dc @ =0x0840d0f5
    ldrb r0, [r2, #2]
    adds r0, r0, r1
    ldrb r5, [r0]
    ldr r0, lbl_080700e0 @ =0x08754bc4
    ldr r0, [r0]
    adds r4, r0, #0
    adds r4, #0xd1
    ldr r0, lbl_080700e4 @ =0x0300153d
    b lbl_0807011e
    .align 2, 0
lbl_080700dc: .4byte 0x0840d0f5
lbl_080700e0: .4byte 0x08754bc4
lbl_080700e4: .4byte 0x0300153d
lbl_080700e8:
    ldr r1, lbl_08070100 @ =0x0840d0f6
    ldrb r0, [r2, #2]
    adds r0, r0, r1
    ldrb r5, [r0]
    ldr r0, lbl_08070104 @ =0x08754bc4
    ldr r0, [r0]
    adds r4, r0, #0
    adds r4, #0xc9
    ldr r2, lbl_08070108 @ =0x0300153f
    mov r8, r2
    b lbl_08070120
    .align 2, 0
lbl_08070100: .4byte 0x0840d0f6
lbl_08070104: .4byte 0x08754bc4
lbl_08070108: .4byte 0x0300153f
lbl_0807010c:
    ldr r1, lbl_0807013c @ =0x0840d0f8
    ldrb r0, [r2, #2]
    adds r0, r0, r1
    ldrb r5, [r0]
    ldr r0, lbl_08070140 @ =0x08754bc4
    ldr r0, [r0]
    adds r4, r0, #0
    adds r4, #0xcb
    ldr r0, lbl_08070144 @ =0x0300153f
lbl_0807011e:
    mov r8, r0
lbl_08070120:
    mov r2, ip
    cmp r2, #1
    bne lbl_08070148
    mov r0, r8
    ldrb r2, [r0]
    adds r1, r5, #0
    ands r1, r2
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r6, r0, #0x1f
    bics r2, r5
    mov r0, r8
    strb r2, [r0]
    b lbl_08070170
    .align 2, 0
lbl_0807013c: .4byte 0x0840d0f8
lbl_08070140: .4byte 0x08754bc4
lbl_08070144: .4byte 0x0300153f
lbl_08070148:
    movs r3, #0
    ldr r1, lbl_08070158 @ =0x0840d0fe
    mov r2, sb
    adds r0, r7, r2
    ldrb r0, [r0, #1]
    adds r0, r0, r1
    ldrb r1, [r0]
    b lbl_08070166
    .align 2, 0
lbl_08070158: .4byte 0x0840d0fe
lbl_0807015c:
    adds r4, #1
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    adds r3, #1
lbl_08070166:
    cmp r3, r1
    bge lbl_08070170
    ldrb r0, [r4]
    cmp r0, r5
    bne lbl_0807015c
lbl_08070170:
    adds r0, r6, #0
lbl_08070172:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start draw_status_screen_tanks_amounts
draw_status_screen_tanks_amounts: @ 0x08070180
    push {r4, r5, r6, r7, lr}
    sub sp, #8
    ldr r6, lbl_080701e0 @ =0x03001530
    ldrb r0, [r6, #0x12]
    cmp r0, #2
    bne lbl_080701ec
    ldr r5, lbl_080701e4 @ =0x08754bb4
    ldr r2, [r5]
    movs r0, #0x80
    lsls r0, r0, #8
    adds r1, r2, r0
    movs r4, #0xe0
    lsls r4, r4, #7
    adds r2, r2, r4
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, lbl_080701e8 @ =0x08754bc4
    ldr r2, [r0]
    adds r2, #0xc0
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x18
    bl BitFill
    ldr r0, [r5]
    adds r0, r0, r4
    bl sub_08070324
    ldrh r1, [r6, #6]
    movs r0, #5
    movs r2, #0xb
    movs r3, #0
    bl draw_status_screen_single_tank_amount
    ldrh r1, [r6]
    movs r0, #6
    movs r2, #0xb
    movs r3, #1
    bl draw_status_screen_single_tank_amount
    b lbl_08070314
    .align 2, 0
lbl_080701e0: .4byte 0x03001530
lbl_080701e4: .4byte 0x08754bb4
lbl_080701e8: .4byte 0x08754bc4
lbl_080701ec:
    ldr r5, lbl_0807031c @ =0x08754bb4
    ldr r2, [r5]
    movs r0, #0xf0
    lsls r0, r0, #7
    adds r1, r2, r0
    movs r4, #0xe0
    lsls r4, r4, #7
    adds r2, r2, r4
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    add r1, sp, #4
    ldr r7, lbl_08070320 @ =0x08754bc4
    ldr r2, [r7]
    adds r0, r2, #0
    adds r0, #0xc1
    ldrb r0, [r0]
    strb r0, [r1]
    adds r0, r2, #0
    adds r0, #0xc2
    ldrb r0, [r0]
    strb r0, [r1, #1]
    adds r0, r2, #0
    adds r0, #0xc3
    ldrb r0, [r0]
    strb r0, [r1, #2]
    adds r2, #0xc0
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x18
    bl BitFill
    ldr r0, [r5]
    adds r0, r0, r4
    bl sub_08070534
    ldr r0, [r5]
    adds r0, r0, r4
    bl sub_080706a4
    ldr r0, [r5]
    adds r0, r0, r4
    bl set_status_screen_bomb_visibilty
    ldr r0, [r5]
    adds r0, r0, r4
    bl sub_08070810
    ldr r0, [r5]
    adds r0, r0, r4
    bl sub_08070c2c
    ldrh r1, [r6, #6]
    movs r0, #5
    movs r2, #0xb
    movs r3, #0
    bl draw_status_screen_single_tank_amount
    ldrh r1, [r6]
    movs r0, #6
    movs r2, #0xb
    movs r3, #1
    bl draw_status_screen_single_tank_amount
    ldrh r0, [r6, #2]
    cmp r0, #0
    beq lbl_08070296
    ldrh r1, [r6, #8]
    movs r0, #7
    movs r2, #0xb
    movs r3, #0
    bl draw_status_screen_single_tank_amount
    ldrh r1, [r6, #2]
    movs r0, #8
    movs r2, #0xb
    movs r3, #1
    bl draw_status_screen_single_tank_amount
lbl_08070296:
    ldrb r0, [r6, #4]
    cmp r0, #0
    beq lbl_080702b4
    ldrb r1, [r6, #0xa]
    movs r0, #9
    movs r2, #0xb
    movs r3, #0
    bl draw_status_screen_single_tank_amount
    ldrb r1, [r6, #4]
    movs r0, #0xa
    movs r2, #0xb
    movs r3, #1
    bl draw_status_screen_single_tank_amount
lbl_080702b4:
    ldrb r0, [r6, #5]
    cmp r0, #0
    beq lbl_080702d2
    ldrb r1, [r6, #0xb]
    movs r0, #0xb
    movs r2, #0xb
    movs r3, #0
    bl draw_status_screen_single_tank_amount
    ldrb r1, [r6, #5]
    movs r0, #0xc
    movs r2, #0xb
    movs r3, #1
    bl draw_status_screen_single_tank_amount
lbl_080702d2:
    add r0, sp, #4
    ldrb r0, [r0]
    bl sub_08071a8c
    cmp r0, #0
    beq lbl_080702e8
    ldr r0, [r7]
    add r1, sp, #4
    ldrb r1, [r1]
    adds r0, #0xc1
    strb r1, [r0]
lbl_080702e8:
    add r0, sp, #4
    ldrb r0, [r0, #1]
    bl sub_08071a8c
    cmp r0, #0
    beq lbl_080702fe
    ldr r0, [r7]
    add r1, sp, #4
    ldrb r1, [r1, #1]
    adds r0, #0xc2
    strb r1, [r0]
lbl_080702fe:
    add r0, sp, #4
    ldrb r0, [r0, #2]
    bl sub_08071a8c
    cmp r0, #0
    beq lbl_08070314
    ldr r0, [r7]
    add r1, sp, #4
    ldrb r1, [r1, #2]
    adds r0, #0xc3
    strb r1, [r0]
lbl_08070314:
    add sp, #8
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807031c: .4byte 0x08754bb4
lbl_08070320: .4byte 0x08754bc4

    thumb_func_start sub_08070324
sub_08070324: @ 0x08070324
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    mov r8, r0
    movs r0, #0
    mov ip, r0
    ldr r5, lbl_08070404 @ =0x08754bc4
    ldr r3, [r5]
    adds r3, #0xc4
    ldr r2, lbl_08070408 @ =0x0840de50
    ldrb r0, [r2]
    adds r0, #1
    lsls r0, r0, #5
    ldrb r4, [r2, #2]
    adds r7, r0, r4
    ldr r1, lbl_0807040c @ =0x0840de91
    ldrb r0, [r1]
    lsls r0, r0, #5
    ldrb r1, [r1, #2]
    adds r6, r0, r1
    ldr r0, lbl_08070410 @ =0x087601dc
    ldr r0, [r0]
    ldrb r0, [r0]
    strb r0, [r3]
    ldrb r0, [r2, #3]
    subs r1, r0, r4
    mov sb, r5
    cmp r1, #0
    blt lbl_0807037a
    lsls r0, r6, #1
    mov r2, r8
    adds r3, r0, r2
    lsls r0, r7, #1
    adds r2, r0, r2
    adds r1, #1
lbl_0807036c:
    ldrh r0, [r3]
    strh r0, [r2]
    adds r3, #2
    adds r2, #2
    subs r1, #1
    cmp r1, #0
    bne lbl_0807036c
lbl_0807037a:
    mov r5, sb
    ldr r0, [r5]
    ldrh r0, [r0]
    lsrs r0, r0, #9
    movs r6, #1
    mov r4, ip
    adds r4, #1
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    adds r2, r6, #0
    bics r2, r0
    movs r0, #0
    movs r3, #0
    bl sub_08070e1c
    mov ip, r4
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0xc0
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_080703aa
    movs r0, #0x80
    strb r0, [r1]
lbl_080703aa:
    mov r3, sb
    ldr r0, [r3]
    adds r5, r0, #0
    adds r5, #0xc1
    ldrb r0, [r5]
    cmp r0, #0
    bne lbl_080703ba
    strb r6, [r5]
lbl_080703ba:
    ldr r2, lbl_08070408 @ =0x0840de50
    mov r0, ip
    adds r0, #1
    ldrb r4, [r2]
    adds r0, r0, r4
    lsls r0, r0, #5
    ldrb r3, [r2, #2]
    adds r7, r0, r3
    ldr r1, lbl_0807040c @ =0x0840de91
    ldrb r0, [r1]
    adds r0, #1
    lsls r0, r0, #5
    ldrb r1, [r1, #2]
    adds r6, r0, r1
    ldrb r0, [r2, #3]
    subs r1, r0, r3
    cmp r1, #0
    blt lbl_080703f8
    lsls r0, r6, #1
    mov r3, r8
    adds r2, r0, r3
    lsls r0, r7, #1
    adds r4, r0, r3
    adds r1, #1
lbl_080703ea:
    ldrh r0, [r2]
    strh r0, [r4]
    adds r2, #2
    adds r4, #2
    subs r1, #1
    cmp r1, #0
    bne lbl_080703ea
lbl_080703f8:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08070404: .4byte 0x08754bc4
lbl_08070408: .4byte 0x0840de50
lbl_0807040c: .4byte 0x0840de91
lbl_08070410: .4byte 0x087601dc

    thumb_func_start draw_status_screen_single_tank_amount
draw_status_screen_single_tank_amount: @ 0x08070414
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r0, #0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    str r1, [sp]
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    mov sb, r2
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    str r3, [sp, #4]
    subs r0, r4, #5
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r1, lbl_080704c0 @ =0x0000b08c
    str r1, [sp, #8]
    cmp r0, #1
    bhi lbl_0807044a
    ldr r2, lbl_080704c4 @ =0x0000b2e0
    str r2, [sp, #8]
lbl_0807044a:
    ldr r0, lbl_080704c8 @ =0x08754bb4
    ldr r0, [r0]
    movs r3, #0xe0
    lsls r3, r3, #7
    adds r7, r0, r3
    ldr r3, lbl_080704cc @ =0x0840de50
    lsls r2, r4, #2
    adds r2, r2, r4
    adds r0, r2, r3
    ldrb r1, [r0]
    lsls r1, r1, #5
    adds r0, r3, #2
    adds r0, r2, r0
    ldrb r4, [r0]
    adds r1, r1, r4
    lsls r1, r1, #1
    adds r7, r7, r1
    adds r3, #3
    adds r2, r2, r3
    ldrb r0, [r2]
    subs r6, r0, r4
    ldr r1, lbl_080704d0 @ =0x0840d102
    lsls r0, r6, #1
    adds r0, r0, r1
    ldrh r4, [r0]
    adds r6, #1
    movs r0, #0
    mov r8, r0
    movs r5, #0
    cmp r4, #0
    ble lbl_08070502
    ldr r2, lbl_080704d4 @ =0x00000fff
    adds r1, r2, #0
    ldr r0, [sp, #8]
    ands r0, r1
    lsls r0, r0, #0x10
    mov sl, r0
lbl_08070494:
    ldr r0, [sp]
    adds r1, r4, #0
    bl __divsi3
    movs r1, #0xa
    bl __modsi3
    adds r2, r0, #0
    cmp r2, #0
    bne lbl_080704d8
    movs r2, #0x80
    cmp r4, #1
    beq lbl_080704de
    mov r3, r8
    cmp r3, #0
    bne lbl_080704de
    ldr r0, [sp, #4]
    cmp r0, #0
    bne lbl_080704f0
    mov r1, sl
    lsrs r2, r1, #0x10
    b lbl_080704de
    .align 2, 0
lbl_080704c0: .4byte 0x0000b08c
lbl_080704c4: .4byte 0x0000b2e0
lbl_080704c8: .4byte 0x08754bb4
lbl_080704cc: .4byte 0x0840de50
lbl_080704d0: .4byte 0x0840d102
lbl_080704d4: .4byte 0x00000fff
lbl_080704d8:
    movs r3, #1
    mov r8, r3
    adds r2, #0x80
lbl_080704de:
    cmp r2, #0
    beq lbl_080704f0
    lsls r1, r5, #1
    adds r1, r1, r7
    mov r3, sb
    lsls r0, r3, #0xc
    orrs r0, r2
    strh r0, [r1]
    b lbl_080704f2
lbl_080704f0:
    subs r5, #1
lbl_080704f2:
    adds r0, r4, #0
    movs r1, #0xa
    bl __divsi3
    adds r4, r0, #0
    adds r5, #1
    cmp r4, #0
    bgt lbl_08070494
lbl_08070502:
    cmp r6, r5
    beq lbl_08070520
    ldr r1, lbl_08070530 @ =0x00000fff
    ldr r0, [sp, #8]
    ands r1, r0
    mov r2, sb
    lsls r0, r2, #0xc
    orrs r1, r0
    lsls r0, r5, #1
    adds r0, r0, r7
lbl_08070516:
    strh r1, [r0]
    adds r0, #2
    adds r5, #1
    cmp r6, r5
    bne lbl_08070516
lbl_08070520:
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08070530: .4byte 0x00000fff

    thumb_func_start sub_08070534
sub_08070534: @ 0x08070534
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    mov sl, r0
    ldr r0, lbl_08070684 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xc4
    mov sb, r0
    movs r4, #0
    ldr r0, lbl_08070688 @ =0x0840d0fe
    ldrb r1, [r0]
    adds r3, r0, #0
    cmp r1, #0
    beq lbl_08070562
    movs r2, #0
lbl_08070556:
    mov r5, sb
    adds r0, r5, r4
    strb r2, [r0]
    adds r4, #1
    cmp r4, r1
    blt lbl_08070556
lbl_08070562:
    movs r4, #0
    mov ip, r4
    ldrb r3, [r3]
    cmp ip, r3
    bge lbl_08070612
lbl_0807056c:
    adds r3, r4, #0
    movs r7, #0
    ldr r0, lbl_0807068c @ =0x087601dc
    ldr r0, [r0]
    adds r0, r0, r3
    ldrb r0, [r0]
    ldr r5, lbl_08070690 @ =0x03001530
    cmp r0, #8
    bne lbl_08070594
    ldrb r0, [r5, #0x12]
    cmp r0, #1
    bne lbl_08070590
    ldr r0, lbl_08070694 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #8
    bne lbl_08070594
lbl_08070590:
    movs r3, #9
    movs r7, #0xa
lbl_08070594:
    ldr r1, lbl_08070698 @ =0x0840de91
    ldrb r0, [r1]
    adds r0, r0, r3
    lsls r0, r0, #5
    ldrb r1, [r1, #2]
    adds r0, r0, r1
    adds r7, r7, r0
    ldr r3, lbl_0807069c @ =0x0840de50
    ldrb r0, [r3]
    adds r0, #1
    add r0, ip
    lsls r0, r0, #5
    ldrb r2, [r3, #2]
    adds r6, r0, r2
    ldr r1, lbl_0807068c @ =0x087601dc
    ldr r0, [r1]
    adds r0, r0, r4
    ldrb r1, [r5, #0xc]
    ldrb r0, [r0]
    ands r1, r0
    adds r4, #1
    mov r8, r4
    cmp r1, #0
    beq lbl_08070608
    mov r1, sb
    add r1, ip
    strb r0, [r1]
    ldrb r0, [r3, #3]
    subs r3, r0, r2
    adds r5, r1, #0
    mov r4, ip
    adds r4, #1
    cmp r3, #0
    blt lbl_080705f2
    lsls r0, r7, #1
    mov r1, sl
    adds r2, r0, r1
    lsls r0, r6, #1
    adds r1, r0, r1
    adds r3, #1
lbl_080705e4:
    ldrh r0, [r2]
    strh r0, [r1]
    adds r2, #2
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bne lbl_080705e4
lbl_080705f2:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    ldr r2, lbl_080706a0 @ =0x0300153d
    ldrb r0, [r2]
    ldrb r2, [r5]
    ands r2, r0
    movs r0, #0
    movs r3, #0
    bl sub_08070e1c
    mov ip, r4
lbl_08070608:
    mov r4, r8
    ldr r0, lbl_08070688 @ =0x0840d0fe
    ldrb r0, [r0]
    cmp r4, r0
    blt lbl_0807056c
lbl_08070612:
    mov r4, ip
    cmp r4, #0
    beq lbl_08070676
    ldr r2, lbl_08070684 @ =0x08754bc4
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc0
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807062a
    movs r0, #0x80
    strb r0, [r1]
lbl_0807062a:
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807063a
    movs r0, #1
    strb r0, [r1]
lbl_0807063a:
    ldr r2, lbl_0807069c @ =0x0840de50
    mov r0, ip
    adds r0, #1
    ldrb r5, [r2]
    adds r0, r0, r5
    lsls r0, r0, #5
    ldrb r3, [r2, #2]
    adds r6, r0, r3
    ldr r1, lbl_08070698 @ =0x0840de91
    ldrb r0, [r1, #1]
    lsls r0, r0, #5
    ldrb r1, [r1, #2]
    adds r7, r0, r1
    ldrb r0, [r2, #3]
    subs r3, r0, r3
    cmp r3, #0
    blt lbl_08070676
    lsls r0, r7, #1
    mov r1, sl
    adds r2, r0, r1
    lsls r0, r6, #1
    adds r1, r0, r1
    adds r3, #1
lbl_08070668:
    ldrh r0, [r2]
    strh r0, [r1]
    adds r2, #2
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bne lbl_08070668
lbl_08070676:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08070684: .4byte 0x08754bc4
lbl_08070688: .4byte 0x0840d0fe
lbl_0807068c: .4byte 0x087601dc
lbl_08070690: .4byte 0x03001530
lbl_08070694: .4byte 0x03000bf0
lbl_08070698: .4byte 0x0840de91
lbl_0807069c: .4byte 0x0840de50
lbl_080706a0: .4byte 0x0300153d

    thumb_func_start sub_080706a4
sub_080706a4: @ 0x080706a4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    mov sl, r0
    ldr r0, lbl_080707f0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xc9
    mov sb, r0
    movs r4, #0
    ldr r0, lbl_080707f4 @ =0x0840d0fe
    ldrb r1, [r0, #2]
    adds r3, r0, #0
    cmp r1, #0
    beq lbl_080706d2
    movs r2, #0
lbl_080706c6:
    mov r5, sb
    adds r0, r5, r4
    strb r2, [r0]
    adds r4, #1
    cmp r4, r1
    blt lbl_080706c6
lbl_080706d2:
    movs r4, #0
    mov ip, r4
    ldrb r3, [r3, #2]
    cmp ip, r3
    bge lbl_0807077c
lbl_080706dc:
    adds r3, r4, #0
    ldr r0, lbl_080707f8 @ =0x087601dc
    ldr r0, [r0, #8]
    adds r0, r0, r3
    ldrb r0, [r0]
    ldr r5, lbl_080707fc @ =0x03001530
    cmp r0, #0x20
    bne lbl_08070700
    ldrb r0, [r5, #0x12]
    cmp r0, #1
    bne lbl_080706fe
    ldr r0, lbl_08070800 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #8
    bne lbl_08070700
lbl_080706fe:
    movs r3, #3
lbl_08070700:
    ldr r1, lbl_08070804 @ =0x0840de91
    ldrb r0, [r1, #0xa]
    adds r0, r0, r3
    lsls r0, r0, #5
    ldrb r1, [r1, #0xc]
    adds r6, r0, r1
    ldr r3, lbl_08070808 @ =0x0840de50
    ldrb r0, [r3, #0xa]
    adds r0, #1
    add r0, ip
    lsls r0, r0, #5
    ldrb r2, [r3, #0xc]
    adds r7, r0, r2
    ldr r1, lbl_080707f8 @ =0x087601dc
    ldr r0, [r1, #8]
    adds r0, r0, r4
    ldrb r1, [r5, #0xe]
    ldrb r0, [r0]
    ands r1, r0
    adds r4, #1
    mov r8, r4
    cmp r1, #0
    beq lbl_08070772
    mov r1, sb
    add r1, ip
    strb r0, [r1]
    ldrb r0, [r3, #0xd]
    subs r3, r0, r2
    adds r5, r1, #0
    mov r4, ip
    adds r4, #1
    cmp r3, #0
    blt lbl_0807075c
    lsls r0, r6, #1
    mov r6, sl
    adds r2, r0, r6
    lsls r0, r7, #1
    adds r1, r0, r6
    adds r3, #1
lbl_0807074e:
    ldrh r0, [r2]
    strh r0, [r1]
    adds r2, #2
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bne lbl_0807074e
lbl_0807075c:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    ldr r2, lbl_0807080c @ =0x0300153f
    ldrb r0, [r2]
    ldrb r2, [r5]
    ands r2, r0
    movs r0, #2
    movs r3, #0
    bl sub_08070e1c
    mov ip, r4
lbl_08070772:
    mov r4, r8
    ldr r0, lbl_080707f4 @ =0x0840d0fe
    ldrb r0, [r0, #2]
    cmp r4, r0
    blt lbl_080706dc
lbl_0807077c:
    mov r4, ip
    cmp r4, #0
    beq lbl_080707e0
    ldr r2, lbl_080707f0 @ =0x08754bc4
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc0
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_08070794
    movs r0, #0x82
    strb r0, [r1]
lbl_08070794:
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_080707a4
    movs r0, #0xa
    strb r0, [r1]
lbl_080707a4:
    ldr r2, lbl_08070808 @ =0x0840de50
    mov r0, ip
    adds r0, #1
    ldrb r5, [r2, #0xa]
    adds r0, r0, r5
    lsls r0, r0, #5
    ldrb r3, [r2, #0xc]
    adds r7, r0, r3
    ldr r1, lbl_08070804 @ =0x0840de91
    ldrb r0, [r1, #0xb]
    lsls r0, r0, #5
    ldrb r1, [r1, #0xc]
    adds r6, r0, r1
    ldrb r0, [r2, #0xd]
    subs r3, r0, r3
    cmp r3, #0
    blt lbl_080707e0
    lsls r0, r6, #1
    mov r6, sl
    adds r2, r0, r6
    lsls r0, r7, #1
    adds r1, r0, r6
    adds r3, #1
lbl_080707d2:
    ldrh r0, [r2]
    strh r0, [r1]
    adds r2, #2
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bne lbl_080707d2
lbl_080707e0:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080707f0: .4byte 0x08754bc4
lbl_080707f4: .4byte 0x0840d0fe
lbl_080707f8: .4byte 0x087601dc
lbl_080707fc: .4byte 0x03001530
lbl_08070800: .4byte 0x03000bf0
lbl_08070804: .4byte 0x0840de91
lbl_08070808: .4byte 0x0840de50
lbl_0807080c: .4byte 0x0300153f

    thumb_func_start sub_08070810
sub_08070810: @ 0x08070810
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    mov sb, r0
    movs r3, #0
    ldr r0, lbl_080709a4 @ =0x0840d0fe
    ldrb r1, [r0, #3]
    adds r5, r0, #0
    cmp r3, r1
    bge lbl_0807083c
    ldr r4, lbl_080709a8 @ =0x08754bc4
    movs r2, #0
lbl_0807082e:
    ldr r0, [r4]
    adds r0, #0xcb
    adds r0, r0, r3
    strb r2, [r0]
    adds r3, #1
    cmp r3, r1
    blt lbl_0807082e
lbl_0807083c:
    movs r3, #0
    mov ip, r3
    ldrb r5, [r5, #3]
    cmp ip, r5
    bge lbl_080708f4
lbl_08070846:
    adds r2, r3, #1
    ldr r0, lbl_080709ac @ =0x087601dc
    ldr r0, [r0, #0xc]
    adds r0, r0, r3
    ldrb r0, [r0]
    str r2, [sp]
    ldr r1, lbl_080709b0 @ =0x03001530
    mov sl, r1
    cmp r0, #4
    bne lbl_08070870
    ldrb r0, [r1, #0x12]
    cmp r0, #1
    bne lbl_0807086c
    ldr r0, lbl_080709b4 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #8
    bne lbl_08070870
lbl_0807086c:
    movs r2, #1
    rsbs r2, r2, #0
lbl_08070870:
    ldr r1, lbl_080709b8 @ =0x0840de91
    ldrb r0, [r1, #0xf]
    adds r0, r0, r2
    lsls r0, r0, #5
    ldrb r1, [r1, #0x11]
    adds r5, r0, r1
    ldr r2, lbl_080709bc @ =0x0840de50
    ldrb r0, [r2, #0xf]
    adds r0, #1
    add r0, ip
    lsls r0, r0, #5
    ldrb r4, [r2, #0x11]
    adds r7, r0, r4
    ldr r1, lbl_080709ac @ =0x087601dc
    ldr r0, [r1, #0xc]
    adds r0, r0, r3
    mov r3, sl
    ldrb r1, [r3, #0xe]
    ldrb r3, [r0]
    ands r1, r3
    cmp r1, #0
    beq lbl_080708ea
    ldr r0, lbl_080709a8 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0xcb
    add r1, ip
    strb r3, [r1]
    ldrb r1, [r2, #0x12]
    subs r2, r1, r4
    adds r6, r0, #0
    mov r4, ip
    adds r4, #1
    cmp r2, #0
    blt lbl_080708ce
    lsls r0, r5, #1
    mov r5, sb
    adds r1, r0, r5
    lsls r0, r7, #1
    adds r3, r0, r5
    adds r2, #1
lbl_080708c0:
    ldrh r0, [r1]
    strh r0, [r3]
    adds r1, #2
    adds r3, #2
    subs r2, #1
    cmp r2, #0
    bne lbl_080708c0
lbl_080708ce:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    ldr r0, [r6]
    adds r0, #0xcb
    add r0, ip
    mov r2, sl
    ldrb r3, [r2, #0xf]
    ldrb r2, [r0]
    ands r2, r3
    movs r0, #3
    movs r3, #0
    bl sub_08070e1c
    mov ip, r4
lbl_080708ea:
    ldr r3, [sp]
    ldr r0, lbl_080709a4 @ =0x0840d0fe
    ldrb r0, [r0, #3]
    cmp r3, r0
    blt lbl_08070846
lbl_080708f4:
    mov r3, ip
    cmp r3, #0
    beq lbl_08070994
    ldr r2, lbl_080709a8 @ =0x08754bc4
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc0
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807090c
    movs r0, #0x83
    strb r0, [r1]
lbl_0807090c:
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807091c
    movs r0, #0xc
    strb r0, [r1]
lbl_0807091c:
    ldr r2, lbl_080709bc @ =0x0840de50
    ldrb r0, [r2, #0xf]
    lsls r0, r0, #5
    ldrb r3, [r2, #0x11]
    adds r7, r0, r3
    ldr r1, lbl_080709b8 @ =0x0840de91
    ldrb r0, [r1, #0xf]
    lsls r0, r0, #5
    ldrb r4, [r1, #0x11]
    adds r5, r0, r4
    ldrb r0, [r2, #0x12]
    subs r6, r0, r3
    mov sl, r1
    mov r8, r2
    mov r4, ip
    adds r4, #1
    cmp r6, #0
    blt lbl_0807095a
    lsls r0, r5, #1
    mov r5, sb
    adds r3, r0, r5
    lsls r0, r7, #1
    adds r1, r0, r5
    adds r2, r6, #1
lbl_0807094c:
    ldrh r0, [r3]
    strh r0, [r1]
    adds r3, #2
    adds r1, #2
    subs r2, #1
    cmp r2, #0
    bne lbl_0807094c
lbl_0807095a:
    mov r1, r8
    ldrb r0, [r1, #0xf]
    adds r0, r0, r4
    lsls r0, r0, #5
    ldrb r1, [r1, #0x11]
    adds r7, r0, r1
    mov r2, sl
    ldrb r0, [r2, #0x10]
    lsls r0, r0, #5
    ldrb r3, [r2, #0x11]
    adds r5, r0, r3
    mov r4, r8
    ldrb r0, [r4, #0x12]
    subs r2, r0, r1
    cmp r2, #0
    blt lbl_08070994
    lsls r0, r5, #1
    mov r5, sb
    adds r3, r0, r5
    lsls r0, r7, #1
    adds r1, r0, r5
    adds r2, #1
lbl_08070986:
    ldrh r0, [r3]
    strh r0, [r1]
    adds r3, #2
    adds r1, #2
    subs r2, #1
    cmp r2, #0
    bne lbl_08070986
lbl_08070994:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080709a4: .4byte 0x0840d0fe
lbl_080709a8: .4byte 0x08754bc4
lbl_080709ac: .4byte 0x087601dc
lbl_080709b0: .4byte 0x03001530
lbl_080709b4: .4byte 0x03000bf0
lbl_080709b8: .4byte 0x0840de91
lbl_080709bc: .4byte 0x0840de50

    thumb_func_start set_status_screen_bomb_visibilty
set_status_screen_bomb_visibilty: @ 0x080709c0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x10
    str r0, [sp]
    str r0, [sp, #4]
    ldr r2, lbl_08070ae8 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xd1
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xd2
    strb r1, [r0]
    movs r7, #0
    ldr r3, lbl_08070aec @ =0x03001530
    ldr r0, lbl_08070af0 @ =0x087601dc
    ldr r0, [r0, #4]
    ldrb r1, [r3, #0xc]
    ldrb r0, [r0]
    ands r0, r1
    mov ip, r2
    cmp r0, #0
    beq lbl_08070a02
    movs r7, #2
    ldr r0, [r2]
    adds r0, #0xd1
    ldrb r1, [r0]
    movs r2, #1
    orrs r1, r2
    strb r1, [r0]
lbl_08070a02:
    cmp r7, #0
    bne lbl_08070a08
    b lbl_08070bfe
lbl_08070a08:
    ldrb r0, [r3, #5]
    cmp r0, #0
    beq lbl_08070a1e
    movs r7, #3
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0xd2
    ldrb r1, [r0]
    movs r2, #1
    orrs r1, r2
    strb r1, [r0]
lbl_08070a1e:
    movs r6, #0
    cmp r6, r7
    blt lbl_08070a26
    b lbl_08070ba6
lbl_08070a26:
    ldr r2, lbl_08070af4 @ =0x0840de50
    mov r8, r2
    ldrb r3, [r2, #7]
    mov sl, r3
    ldrb r0, [r2, #8]
    subs r3, r0, r3
    str r3, [sp, #0xc]
    ldr r4, lbl_08070af8 @ =0x0840de91
    ldrb r4, [r4, #7]
    str r4, [sp, #8]
lbl_08070a3a:
    mov r1, r8
    ldrb r0, [r1, #5]
    adds r0, r0, r6
    lsls r0, r0, #5
    mov r2, sl
    adds r5, r0, r2
    ldr r3, lbl_08070af8 @ =0x0840de91
    ldrb r1, [r3, #5]
    ldr r0, lbl_08070afc @ =0x087603ea
    adds r0, r6, r0
    ldrb r0, [r0]
    adds r1, r1, r0
    lsls r3, r1, #5
    ldr r4, [sp, #8]
    adds r3, r3, r4
    adds r0, r6, #1
    mov sb, r0
    ldr r1, [sp, #0xc]
    cmp r1, #0
    blt lbl_08070a86
    mov r2, r8
    ldrb r1, [r2, #8]
    ldrb r0, [r2, #7]
    subs r1, r1, r0
    lsls r0, r3, #1
    ldr r3, [sp, #4]
    adds r4, r0, r3
    lsls r0, r5, #1
    ldr r2, [sp]
    adds r3, r0, r2
    adds r2, r1, #1
lbl_08070a78:
    ldrh r0, [r4]
    strh r0, [r3]
    adds r4, #2
    adds r3, #2
    subs r2, #1
    cmp r2, #0
    bne lbl_08070a78
lbl_08070a86:
    movs r2, #0
    cmp r6, #1
    bne lbl_08070b00
    ldr r0, lbl_08070ae8 @ =0x08754bc4
    ldr r1, [r0]
    adds r3, r1, #0
    adds r3, #0xd1
    ldrb r2, [r3]
    adds r1, r6, #0
    ands r1, r2
    mov ip, r0
    cmp r1, #0
    beq lbl_08070ade
    ldr r4, lbl_08070aec @ =0x03001530
    ldr r0, lbl_08070af0 @ =0x087601dc
    ldr r0, [r0, #4]
    ldrb r1, [r4, #0xd]
    ldrb r0, [r0]
    ands r0, r1
    cmp r0, #0
    beq lbl_08070ab6
    movs r0, #2
    orrs r0, r2
    strb r0, [r3]
lbl_08070ab6:
    mov r3, ip
    ldr r1, [r3]
    adds r1, #0xd1
    ldrb r2, [r1]
    movs r0, #4
    movs r3, #0
    orrs r0, r2
    strb r0, [r1]
    ldrb r1, [r4, #0xf]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08070ade
    mov r4, ip
    ldr r0, [r4]
    adds r0, #0xd1
    ldrb r1, [r0]
    movs r2, #8
    orrs r1, r2
    strb r1, [r0]
lbl_08070ade:
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0xd1
    b lbl_08070b60
    .align 2, 0
lbl_08070ae8: .4byte 0x08754bc4
lbl_08070aec: .4byte 0x03001530
lbl_08070af0: .4byte 0x087601dc
lbl_08070af4: .4byte 0x0840de50
lbl_08070af8: .4byte 0x0840de91
lbl_08070afc: .4byte 0x087603ea
lbl_08070b00:
    cmp r6, #2
    bne lbl_08070b62
    ldr r0, lbl_08070c10 @ =0x08754bc4
    ldr r1, [r0]
    adds r3, r1, #0
    adds r3, #0xd2
    ldrb r2, [r3]
    movs r1, #1
    ands r1, r2
    mov ip, r0
    cmp r1, #0
    beq lbl_08070b5a
    ldr r4, lbl_08070c14 @ =0x03001530
    ldr r0, lbl_08070c18 @ =0x087601dc
    ldr r0, [r0, #4]
    ldrb r1, [r4, #0xd]
    ldrb r0, [r0]
    ands r0, r1
    cmp r0, #0
    beq lbl_08070b2e
    movs r0, #2
    orrs r0, r2
    strb r0, [r3]
lbl_08070b2e:
    ldrb r0, [r4, #0xb]
    cmp r0, #0
    beq lbl_08070b42
    mov r2, ip
    ldr r0, [r2]
    adds r0, #0xd2
    ldrb r2, [r0]
    movs r1, #4
    orrs r1, r2
    strb r1, [r0]
lbl_08070b42:
    ldrb r1, [r4, #0xf]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08070b5a
    mov r3, ip
    ldr r0, [r3]
    adds r0, #0xd2
    ldrb r2, [r0]
    movs r1, #8
    orrs r1, r2
    strb r1, [r0]
lbl_08070b5a:
    mov r4, ip
    ldr r0, [r4]
    adds r0, #0xd2
lbl_08070b60:
    ldrb r2, [r0]
lbl_08070b62:
    cmp r2, #0
    beq lbl_08070b9e
    movs r0, #0
    cmp r2, #0xf
    bne lbl_08070b6e
    movs r0, #1
lbl_08070b6e:
    adds r2, r0, #0
    ldr r0, lbl_08070c1c @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #6
    bne lbl_08070b8e
    ldr r0, lbl_08070c20 @ =0x03000bf2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #7
    bne lbl_08070b8e
    cmp r6, #2
    bne lbl_08070b8e
    movs r2, #0
lbl_08070b8e:
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r0, #1
    movs r3, #0
    bl sub_08070e1c
lbl_08070b9e:
    mov r6, sb
    cmp r6, r7
    bge lbl_08070ba6
    b lbl_08070a3a
lbl_08070ba6:
    ldr r2, lbl_08070c24 @ =0x0840de50
    ldrb r0, [r2, #5]
    adds r0, r0, r7
    lsls r0, r0, #5
    ldrb r4, [r2, #7]
    adds r5, r0, r4
    cmp r7, #2
    beq lbl_08070bb8
    adds r7, #1
lbl_08070bb8:
    ldr r0, lbl_08070c28 @ =0x0840de91
    ldrb r1, [r0, #5]
    adds r1, r1, r7
    lsls r1, r1, #5
    ldrb r0, [r0, #7]
    adds r3, r1, r0
    ldrb r0, [r2, #8]
    subs r2, r0, r4
    ldr r0, lbl_08070c10 @ =0x08754bc4
    mov ip, r0
    cmp r2, #0
    blt lbl_08070bec
    lsls r0, r3, #1
    ldr r3, [sp, #4]
    adds r1, r0, r3
    lsls r0, r5, #1
    ldr r4, [sp]
    adds r3, r0, r4
    adds r2, #1
lbl_08070bde:
    ldrh r0, [r1]
    strh r0, [r3]
    adds r1, #2
    adds r3, #2
    subs r2, #1
    cmp r2, #0
    bne lbl_08070bde
lbl_08070bec:
    mov r1, ip
    ldr r0, [r1]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_08070bfe
    movs r0, #8
    strb r0, [r1]
lbl_08070bfe:
    add sp, #0x10
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08070c10: .4byte 0x08754bc4
lbl_08070c14: .4byte 0x03001530
lbl_08070c18: .4byte 0x087601dc
lbl_08070c1c: .4byte 0x03000bf0
lbl_08070c20: .4byte 0x03000bf2
lbl_08070c24: .4byte 0x0840de50
lbl_08070c28: .4byte 0x0840de91

    thumb_func_start sub_08070c2c
sub_08070c2c: @ 0x08070c2c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    mov r8, r0
    movs r0, #0
    mov sl, r0
    ldr r3, lbl_08070d08 @ =0x03001530
    ldrh r0, [r3, #2]
    cmp r0, #0
    beq lbl_08070c58
    movs r1, #3
    mov sl, r1
    ldr r0, lbl_08070d0c @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0xd3
    ldrb r2, [r1]
    movs r0, #1
    orrs r0, r2
    strb r0, [r1]
lbl_08070c58:
    ldrb r0, [r3, #4]
    cmp r0, #0
    beq lbl_08070c7a
    movs r3, #5
    mov sl, r3
    ldr r3, lbl_08070d0c @ =0x08754bc4
    ldr r0, [r3]
    adds r0, #0xd4
    ldrb r1, [r0]
    movs r2, #1
    orrs r1, r2
    strb r1, [r0]
    ldr r0, [r3]
    adds r0, #0xd3
    ldrb r1, [r0]
    orrs r2, r1
    strb r2, [r0]
lbl_08070c7a:
    mov r4, sl
    cmp r4, #0
    bne lbl_08070c82
    b lbl_08070e00
lbl_08070c82:
    movs r5, #0
    cmp r5, sl
    blt lbl_08070c8a
    b lbl_08070db2
lbl_08070c8a:
    ldr r7, lbl_08070d10 @ =0x0840de50
    ldrb r0, [r7, #0x16]
    str r0, [sp]
    ldrb r0, [r7, #0x17]
    ldr r1, [sp]
    subs r0, r0, r1
    str r0, [sp, #4]
lbl_08070c98:
    ldrb r0, [r7, #0x14]
    adds r0, r0, r5
    lsls r0, r0, #5
    ldr r3, [sp]
    adds r6, r0, r3
    ldr r1, lbl_08070d14 @ =0x0840de91
    ldrb r0, [r1, #0x14]
    adds r0, r0, r5
    lsls r0, r0, #5
    ldrb r1, [r1, #0x16]
    adds r4, r0, r1
    adds r0, r5, #1
    mov sb, r0
    ldr r1, [sp, #4]
    cmp r1, #0
    blt lbl_08070cd8
    ldrb r1, [r7, #0x17]
    ldrb r0, [r7, #0x16]
    subs r1, r1, r0
    lsls r0, r4, #1
    mov r3, r8
    adds r2, r0, r3
    lsls r0, r6, #1
    adds r3, r0, r3
    adds r4, r1, #1
lbl_08070cca:
    ldrh r0, [r2]
    strh r0, [r3]
    adds r2, #2
    adds r3, #2
    subs r4, #1
    cmp r4, #0
    bne lbl_08070cca
lbl_08070cd8:
    movs r4, #0
    cmp r5, #1
    bne lbl_08070d18
    ldr r0, lbl_08070d0c @ =0x08754bc4
    ldr r1, [r0]
    adds r3, r1, #0
    adds r3, #0xd3
    ldrb r2, [r3]
    adds r1, r5, #0
    ands r1, r2
    mov ip, r0
    cmp r1, #0
    beq lbl_08070d00
    ldr r0, lbl_08070d08 @ =0x03001530
    ldrh r0, [r0, #8]
    cmp r0, #0
    beq lbl_08070d00
    movs r0, #2
    orrs r0, r2
    strb r0, [r3]
lbl_08070d00:
    mov r4, ip
    ldr r0, [r4]
    adds r0, #0xd3
    b lbl_08070d44
    .align 2, 0
lbl_08070d08: .4byte 0x03001530
lbl_08070d0c: .4byte 0x08754bc4
lbl_08070d10: .4byte 0x0840de50
lbl_08070d14: .4byte 0x0840de91
lbl_08070d18:
    cmp r5, #3
    bne lbl_08070d46
    ldr r0, lbl_08070d84 @ =0x08754bc4
    ldr r1, [r0]
    adds r3, r1, #0
    adds r3, #0xd4
    ldrb r2, [r3]
    movs r1, #1
    ands r1, r2
    mov ip, r0
    cmp r1, #0
    beq lbl_08070d3e
    ldr r0, lbl_08070d88 @ =0x03001530
    ldrb r0, [r0, #0xa]
    cmp r0, #0
    beq lbl_08070d3e
    movs r0, #2
    orrs r0, r2
    strb r0, [r3]
lbl_08070d3e:
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0xd4
lbl_08070d44:
    ldrb r4, [r0]
lbl_08070d46:
    cmp r4, #0
    beq lbl_08070daa
    movs r0, #0
    cmp r4, #3
    bne lbl_08070d52
    movs r0, #1
lbl_08070d52:
    adds r4, r0, #0
    ldr r0, lbl_08070d8c @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #6
    bne lbl_08070d94
    cmp r5, #1
    bne lbl_08070d70
    ldr r0, lbl_08070d90 @ =0x03000bf2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #3
    beq lbl_08070d98
lbl_08070d70:
    cmp r5, #3
    bne lbl_08070d9a
    ldr r0, lbl_08070d90 @ =0x03000bf2
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #5
    bne lbl_08070d9a
    b lbl_08070d98
    .align 2, 0
lbl_08070d84: .4byte 0x08754bc4
lbl_08070d88: .4byte 0x03001530
lbl_08070d8c: .4byte 0x03000bf0
lbl_08070d90: .4byte 0x03000bf2
lbl_08070d94:
    cmp r0, #8
    bne lbl_08070d9a
lbl_08070d98:
    movs r4, #0
lbl_08070d9a:
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    lsls r2, r4, #0x18
    lsrs r2, r2, #0x18
    movs r0, #4
    movs r3, #0
    bl sub_08070e1c
lbl_08070daa:
    mov r5, sb
    cmp r5, sl
    bge lbl_08070db2
    b lbl_08070c98
lbl_08070db2:
    ldr r2, lbl_08070e10 @ =0x0840de50
    ldrb r0, [r2, #0x14]
    add r0, sl
    lsls r0, r0, #5
    ldrb r3, [r2, #0x16]
    adds r6, r0, r3
    ldr r1, lbl_08070e14 @ =0x0840de91
    ldrb r0, [r1, #0x15]
    lsls r0, r0, #5
    ldrb r1, [r1, #0x16]
    adds r4, r0, r1
    ldrb r0, [r2, #0x17]
    subs r2, r0, r3
    ldr r3, lbl_08070e18 @ =0x08754bc4
    mov ip, r3
    cmp r2, #0
    blt lbl_08070dee
    lsls r0, r4, #1
    mov r4, r8
    adds r1, r0, r4
    lsls r0, r6, #1
    adds r3, r0, r4
    adds r4, r2, #1
lbl_08070de0:
    ldrh r0, [r1]
    strh r0, [r3]
    adds r1, #2
    adds r3, #2
    subs r4, #1
    cmp r4, #0
    bne lbl_08070de0
lbl_08070dee:
    mov r1, ip
    ldr r0, [r1]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_08070e00
    movs r0, #6
    strb r0, [r1]
lbl_08070e00:
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08070e10: .4byte 0x0840de50
lbl_08070e14: .4byte 0x0840de91
lbl_08070e18: .4byte 0x08754bc4

    thumb_func_start sub_08070e1c
sub_08070e1c: @ 0x08070e1c
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsls r2, r2, #0x18
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    mov ip, r3
    ldr r4, lbl_08070eac @ =0x0840de50
    lsls r3, r0, #2
    adds r3, r3, r0
    adds r0, r3, r4
    lsrs r1, r1, #0x18
    ldrb r0, [r0]
    adds r1, r1, r0
    lsls r1, r1, #5
    adds r0, r4, #2
    adds r0, r3, r0
    ldrb r5, [r0]
    adds r1, r1, r5
    adds r4, #3
    adds r3, r3, r4
    ldrb r0, [r3]
    subs r4, r0, r5
    movs r0, #0xc0
    lsls r0, r0, #8
    cmp r2, #0
    beq lbl_08070e58
    movs r0, #0xb0
    lsls r0, r0, #8
lbl_08070e58:
    adds r5, r0, #0
    ldr r0, lbl_08070eb0 @ =0x08754bb4
    ldr r0, [r0]
    lsls r1, r1, #1
    adds r0, r1, r0
    ldr r3, lbl_08070eb4 @ =0x00007002
    adds r2, r0, r3
    adds r7, r1, #0
    cmp r4, #1
    ble lbl_08070e82
    ldr r6, lbl_08070eb8 @ =0x00000fff
    subs r3, r4, #1
lbl_08070e70:
    ldrh r1, [r2]
    adds r0, r6, #0
    ands r0, r1
    orrs r0, r5
    strh r0, [r2]
    subs r3, #1
    adds r2, #2
    cmp r3, #0
    bne lbl_08070e70
lbl_08070e82:
    mov r0, ip
    cmp r0, #0
    beq lbl_08070ea6
    ldr r3, lbl_08070ebc @ =0x0600c002
    adds r2, r7, r3
    cmp r4, #1
    ble lbl_08070ea6
    ldr r6, lbl_08070eb8 @ =0x00000fff
    subs r3, r4, #1
lbl_08070e94:
    ldrh r1, [r2]
    adds r0, r6, #0
    ands r0, r1
    orrs r0, r5
    strh r0, [r2]
    subs r3, #1
    adds r2, #2
    cmp r3, #0
    bne lbl_08070e94
lbl_08070ea6:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08070eac: .4byte 0x0840de50
lbl_08070eb0: .4byte 0x08754bb4
lbl_08070eb4: .4byte 0x00007002
lbl_08070eb8: .4byte 0x00000fff
lbl_08070ebc: .4byte 0x0600c002

    thumb_func_start sub_08070ec0
sub_08070ec0: @ 0x08070ec0
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r6, r1, #0x18
    cmp r4, #0
    beq lbl_08070eda
    cmp r4, #0
    blt lbl_08070ef8
    cmp r4, #3
    bgt lbl_08070ef8
    cmp r4, #2
    blt lbl_08070ef8
lbl_08070eda:
    ldr r2, lbl_08070ef4 @ =0x0840de91
    lsls r1, r4, #2
    adds r1, r1, r4
    adds r0, r2, #1
    adds r0, r1, r0
    ldrb r0, [r0]
    subs r0, #1
    adds r2, #2
    adds r1, r1, r2
    lsls r0, r0, #5
    ldrb r1, [r1]
    adds r5, r0, r1
    b lbl_08070efa
    .align 2, 0
lbl_08070ef4: .4byte 0x0840de91
lbl_08070ef8:
    movs r5, #0
lbl_08070efa:
    cmp r5, #0
    beq lbl_08070f46
    ldr r3, lbl_08070f4c @ =0x0840de50
    lsls r1, r4, #2
    adds r1, r1, r4
    adds r0, r1, r3
    ldrb r2, [r0]
    adds r2, r2, r6
    lsls r2, r2, #5
    adds r0, r3, #2
    adds r0, r1, r0
    ldrb r4, [r0]
    adds r2, r2, r4
    adds r3, #3
    adds r1, r1, r3
    ldrb r0, [r1]
    subs r1, r0, r4
    lsls r0, r2, #1
    ldr r2, lbl_08070f50 @ =0x0600c002
    adds r3, r0, r2
    adds r5, #1
    cmp r1, #1
    ble lbl_08070f46
    ldr r6, lbl_08070f54 @ =0x08754bb4
    movs r4, #0xe0
    lsls r4, r4, #7
    subs r2, r1, #1
lbl_08070f30:
    ldr r0, [r6]
    lsls r1, r5, #1
    adds r0, r0, r4
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r3]
    subs r2, #1
    adds r3, #2
    adds r5, #1
    cmp r2, #0
    bne lbl_08070f30
lbl_08070f46:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08070f4c: .4byte 0x0840de50
lbl_08070f50: .4byte 0x0600c002
lbl_08070f54: .4byte 0x08754bb4

    thumb_func_start check_select_pressed_on_status_screen
check_select_pressed_on_status_screen: @ 0x08070f58
    ldr r1, lbl_08070f68 @ =0x03001380
    ldrh r1, [r1]
    ands r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r0, r0, #0x1f
    bx lr
    .align 2, 0
lbl_08070f68: .4byte 0x03001380

    thumb_func_start sub_08070f6c
sub_08070f6c: @ 0x08070f6c
    push {r4, lr}
    ldr r4, lbl_08070fac @ =0x08754bc4
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08070fa6
    bl sub_08071a3c
    ldr r2, [r4]
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_08070f9a
    movs r1, #0x84
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r1, #6
    bl sub_08068128
lbl_08070f9a:
    ldr r0, [r4]
    adds r0, #0xc1
    ldrb r0, [r0]
    movs r1, #0
    bl sub_08071b2c
lbl_08070fa6:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08070fac: .4byte 0x08754bc4

    thumb_func_start sub_08070fb0
sub_08070fb0: @ 0x08070fb0
    push {r4, r5, lr}
    movs r5, #0
    ldr r0, lbl_08070fdc @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #8]
    adds r4, r0, #0
    cmp r1, #5
    bls lbl_08070fca
    ldr r0, lbl_08070fe0 @ =0x03005804
    ldrh r1, [r0]
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r5, r0, #0x1f
lbl_08070fca:
    cmp r5, #0
    beq lbl_08070fd0
    b lbl_080711c8
lbl_08070fd0:
    ldrb r0, [r2, #0xc]
    cmp r0, #0
    beq lbl_08070fe4
    bl sub_08068ec0
    b lbl_080711c8
    .align 2, 0
lbl_08070fdc: .4byte 0x08754bc4
lbl_08070fe0: .4byte 0x03005804
lbl_08070fe4:
    ldrb r0, [r2, #8]
    cmp r0, #7
    bls lbl_08070fec
    b lbl_080711c8
lbl_08070fec:
    lsls r0, r0, #2
    ldr r1, lbl_08070ff8 @ =lbl_08070ffc
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08070ff8: .4byte lbl_08070ffc
lbl_08070ffc: @ jump table
    .4byte lbl_0807101c @ case 0
    .4byte lbl_08071098 @ case 1
    .4byte lbl_08071158 @ case 2
    .4byte lbl_0807117a @ case 3
    .4byte lbl_0807119a @ case 4
    .4byte lbl_080711a6 @ case 5
    .4byte lbl_080711c4 @ case 6
    .4byte lbl_080711c8 @ case 7
lbl_0807101c:
    ldr r2, [r4]
    ldrh r0, [r2, #0xa]
    cmp r0, #0x10
    bhi lbl_08071026
    b lbl_080711c8
lbl_08071026:
    adds r0, r2, #0
    adds r0, #0xc1
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08071080
    movs r1, #0x84
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r1, #6
    bl sub_08068128
    ldr r0, [r4]
    adds r0, #0xc1
    ldrb r0, [r0]
    movs r1, #2
    bl sub_08071b2c
    cmp r0, #0
    bge lbl_08071066
    ldr r0, lbl_0807105c @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08071060
    ldr r1, [r4]
    movs r0, #3
    b lbl_0807106a
    .align 2, 0
lbl_0807105c: .4byte 0x030013d2
lbl_08071060:
    ldr r1, [r4]
    movs r0, #5
    b lbl_0807106a
lbl_08071066:
    ldr r1, [r4]
    movs r0, #1
lbl_0807106a:
    strb r0, [r1, #8]
    ldr r1, lbl_08071078 @ =0x03000c0c
    movs r0, #0
    strb r0, [r1, #0xe]
    ldr r4, lbl_0807107c @ =0x08754bc4
    b lbl_0807108a
    .align 2, 0
lbl_08071078: .4byte 0x03000c0c
lbl_0807107c: .4byte 0x08754bc4
lbl_08071080:
    ldr r0, lbl_08071094 @ =0x03000c0c
    movs r1, #1
    strb r1, [r0, #0xe]
    movs r0, #7
    strb r0, [r2, #8]
lbl_0807108a:
    ldr r1, [r4]
    movs r0, #0
    strh r0, [r1, #0xa]
    b lbl_080711c8
    .align 2, 0
lbl_08071094: .4byte 0x03000c0c
lbl_08071098:
    ldr r1, [r4]
    ldrh r0, [r1, #0xa]
    cmp r0, #8
    bhi lbl_080710a2
    b lbl_080711c8
lbl_080710a2:
    adds r0, r1, #0
    adds r0, #0xc1
    ldrb r0, [r0]
    movs r1, #1
    bl sub_08071b2c
    ldr r0, lbl_080710c8 @ =0x03000bf2
    ldrb r0, [r0]
    subs r0, #3
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0x11
    bhi lbl_0807113e
    lsls r0, r0, #2
    ldr r1, lbl_080710cc @ =lbl_080710d0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080710c8: .4byte 0x03000bf2
lbl_080710cc: .4byte lbl_080710d0
lbl_080710d0: @ jump table
    .4byte lbl_08071124 @ case 0
    .4byte lbl_0807113e @ case 1
    .4byte lbl_08071124 @ case 2
    .4byte lbl_0807113e @ case 3
    .4byte lbl_08071124 @ case 4
    .4byte lbl_0807113e @ case 5
    .4byte lbl_0807113e @ case 6
    .4byte lbl_0807113e @ case 7
    .4byte lbl_0807113e @ case 8
    .4byte lbl_08071118 @ case 9
    .4byte lbl_0807113e @ case 10
    .4byte lbl_0807113e @ case 11
    .4byte lbl_08071118 @ case 12
    .4byte lbl_0807113e @ case 13
    .4byte lbl_0807113e @ case 14
    .4byte lbl_0807113e @ case 15
    .4byte lbl_0807113e @ case 16
    .4byte lbl_08071118 @ case 17
lbl_08071118:
    ldr r0, lbl_08071120 @ =0x0000020f
    bl SoundPlay
    b lbl_08071144
    .align 2, 0
lbl_08071120: .4byte 0x0000020f
lbl_08071124:
    ldr r2, lbl_0807114c @ =0x0840dec4
    ldr r0, lbl_08071150 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xc1
    ldrb r1, [r0]
    lsls r1, r1, #2
    adds r1, r1, r2
    ldrb r0, [r1]
    ldrb r1, [r1, #2]
    movs r2, #1
    movs r3, #1
    bl sub_08070e1c
lbl_0807113e:
    ldr r0, lbl_08071154 @ =0x000001f7
    bl SoundPlay
lbl_08071144:
    ldr r0, lbl_08071150 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08071184
    .align 2, 0
lbl_0807114c: .4byte 0x0840dec4
lbl_08071150: .4byte 0x08754bc4
lbl_08071154: .4byte 0x000001f7
lbl_08071158:
    ldr r1, [r4]
    ldrb r0, [r1, #0xc]
    cmp r0, #0
    bne lbl_080711c8
    strh r0, [r1, #0xa]
    ldr r0, lbl_08071170 @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08071174
    movs r0, #3
    strb r0, [r1, #8]
    b lbl_080711c8
    .align 2, 0
lbl_08071170: .4byte 0x030013d2
lbl_08071174:
    movs r0, #5
    strb r0, [r1, #8]
    b lbl_080711c8
lbl_0807117a:
    ldr r0, lbl_08071190 @ =0x03000c0c
    ldrb r0, [r0, #0xe]
    cmp r0, #0
    beq lbl_08071194
    ldr r1, [r4]
lbl_08071184:
    movs r0, #0
    strh r0, [r1, #0xa]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    b lbl_080711c8
    .align 2, 0
lbl_08071190: .4byte 0x03000c0c
lbl_08071194:
    bl sub_0806f680
    b lbl_080711c8
lbl_0807119a:
    ldr r0, [r4]
    ldrh r0, [r0, #0xa]
    cmp r0, #0x1e
    bls lbl_080711c8
    movs r5, #1
    b lbl_080711c8
lbl_080711a6:
    bl sub_0806f680
    ldr r0, lbl_080711bc @ =0x03000c0c
    ldrb r0, [r0, #0xe]
    cmp r0, #0
    beq lbl_080711c8
    ldr r0, lbl_080711c0 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #7
    strb r0, [r1, #8]
    b lbl_080711c8
    .align 2, 0
lbl_080711bc: .4byte 0x03000c0c
lbl_080711c0: .4byte 0x08754bc4
lbl_080711c4:
    bl sub_0806f680
lbl_080711c8:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sub_080711d0
sub_080711d0: @ 0x080711d0
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    ldr r3, lbl_080711e8 @ =0x08754bc4
lbl_080711d8:
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0xc1
    ldrb r0, [r2]
    cmp r0, #0x11
    bls lbl_080711ec
    movs r0, #2
    b lbl_0807128a
    .align 2, 0
lbl_080711e8: .4byte 0x08754bc4
lbl_080711ec:
    ldr r1, lbl_08071208 @ =0x0840dec4
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r0, [r0]
    adds r4, r1, #0
    cmp r0, #4
    bhi lbl_08071256
    lsls r0, r0, #2
    ldr r1, lbl_0807120c @ =lbl_08071210
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08071208: .4byte 0x0840dec4
lbl_0807120c: .4byte lbl_08071210
lbl_08071210: @ jump table
    .4byte lbl_08071224 @ case 0
    .4byte lbl_08071238 @ case 1
    .4byte lbl_08071242 @ case 2
    .4byte lbl_0807124c @ case 3
    .4byte lbl_0807122e @ case 4
lbl_08071224:
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0xc4
    movs r2, #8
    b lbl_0807125a
lbl_0807122e:
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0xd3
    movs r2, #0xff
    b lbl_0807125a
lbl_08071238:
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0xd1
    movs r2, #0xff
    b lbl_0807125a
lbl_08071242:
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0xc9
    movs r2, #0x20
    b lbl_0807125a
lbl_0807124c:
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0xcb
    movs r2, #4
    b lbl_0807125a
lbl_08071256:
    movs r0, #0
    b lbl_0807128a
lbl_0807125a:
    ldr r0, [r3]
    adds r0, #0xc1
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r4
    ldrb r0, [r0, #1]
    adds r0, r1, r0
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807127e
    cmp r5, #0
    bne lbl_0807127a
    cmp r0, r2
    beq lbl_0807127e
lbl_08071276:
    movs r0, #1
    b lbl_0807128a
lbl_0807127a:
    cmp r0, r2
    beq lbl_08071276
lbl_0807127e:
    ldr r1, [r3]
    adds r1, #0xc1
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_080711d8
lbl_0807128a:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sub_08071290
sub_08071290: @ 0x08071290
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    adds r4, r2, #0
    movs r6, #0
    ldr r5, lbl_080712b8 @ =0x08754bc4
    ldr r1, [r5]
    ldrh r0, [r1, #0x20]
    adds r3, r0, #1
    movs r7, #0
    strh r3, [r1, #0x20]
    cmp r2, #1
    beq lbl_080712d8
    cmp r2, #1
    bgt lbl_080712bc
    cmp r2, #0
    beq lbl_080712c8
    b lbl_08071414
    .align 2, 0
lbl_080712b8: .4byte 0x08754bc4
lbl_080712bc:
    cmp r4, #2
    beq lbl_08071368
    cmp r4, #3
    bne lbl_080712c6
    b lbl_080713c8
lbl_080712c6:
    b lbl_08071414
lbl_080712c8:
    strh r6, [r1, #0x20]
    adds r0, r1, #0
    adds r0, #0x22
    strb r7, [r0]
    ldr r0, [r5]
    adds r0, #0x23
    strb r7, [r0]
    b lbl_08071414
lbl_080712d8:
    movs r2, #0
    adds r0, r1, #0
    adds r0, #0x23
    ldrb r0, [r0]
    cmp r0, #1
    bhi lbl_0807131c
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #3
    bls lbl_0807135c
    strh r6, [r1, #0x20]
    adds r0, r1, #0
    adds r0, #0x22
    ldrb r1, [r0]
    adds r1, #1
    strb r1, [r0]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x22
    ldrb r0, [r0]
    cmp r0, #7
    bls lbl_08071314
    adds r0, r1, #0
    adds r0, #0x23
    ldrb r1, [r0]
    adds r1, #1
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x22
    strb r7, [r0]
lbl_08071314:
    ldr r1, lbl_08071318 @ =0x0840df64
    b lbl_0807134c
    .align 2, 0
lbl_08071318: .4byte 0x0840df64
lbl_0807131c:
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #2
    bls lbl_0807135c
    strh r6, [r1, #0x20]
    adds r1, #0x22
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x22
    ldrb r0, [r1]
    cmp r0, #5
    bls lbl_0807134a
    movs r0, #5
    strb r0, [r1]
    ldr r1, [r5]
    adds r1, #0x23
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r6, #1
lbl_0807134a:
    ldr r1, lbl_08071364 @ =0x0840df6c
lbl_0807134c:
    ldr r0, [r5]
    adds r0, #0x22
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r0, r0, r1
    ldrb r0, [r0]
    lsls r2, r0, #4
lbl_0807135c:
    cmp r2, #0
    beq lbl_08071414
    lsls r1, r2, #1
    b lbl_0807139e
    .align 2, 0
lbl_08071364: .4byte 0x0840df6c
lbl_08071368:
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #1
    bls lbl_08071414
    strh r6, [r1, #0x20]
    adds r1, #0x22
    ldrb r0, [r1]
    subs r0, #1
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x22
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r0, #0
    bne lbl_0807138c
    strb r7, [r1]
    movs r6, #1
lbl_0807138c:
    ldr r1, lbl_080713bc @ =0x0840df6c
    ldr r0, [r5]
    adds r0, #0x22
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r0, r0, r1
    ldrb r1, [r0]
    lsls r1, r1, #5
lbl_0807139e:
    ldr r0, lbl_080713c0 @ =0x0840dd10
    adds r1, r1, r0
    ldr r0, lbl_080713c4 @ =0x08754bbc
    ldr r2, [r0]
    movs r0, #0xc0
    lsls r0, r0, #1
    adds r2, r2, r0
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    b lbl_08071414
    .align 2, 0
lbl_080713bc: .4byte 0x0840df6c
lbl_080713c0: .4byte 0x0840dd10
lbl_080713c4: .4byte 0x08754bbc
lbl_080713c8:
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #3
    bls lbl_08071414
    strh r6, [r1, #0x20]
    adds r1, #0x22
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x22
    ldrb r0, [r1]
    cmp r0, #3
    bls lbl_080713e8
    strb r7, [r1]
lbl_080713e8:
    ldr r1, lbl_08071420 @ =0x0840df72
    ldr r0, [r5]
    adds r0, #0x22
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r0, r0, r1
    ldrb r1, [r0]
    lsls r1, r1, #5
    ldr r0, lbl_08071424 @ =0x0840ddd0
    adds r1, r1, r0
    ldr r0, lbl_08071428 @ =0x08754bbc
    ldr r2, [r0]
    movs r0, #0xc0
    lsls r0, r0, #1
    adds r2, r2, r0
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
lbl_08071414:
    adds r0, r6, #0
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08071420: .4byte 0x0840df72
lbl_08071424: .4byte 0x0840ddd0
lbl_08071428: .4byte 0x08754bbc

    thumb_func_start sub_0807142c
sub_0807142c: @ 0x0807142c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    ldr r0, lbl_08071448 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #0xc]
    adds r7, r0, #0
    cmp r1, #0
    beq lbl_0807144c
    bl sub_08068ec0
    b lbl_080717f0
    .align 2, 0
lbl_08071448: .4byte 0x08754bc4
lbl_0807144c:
    ldrb r0, [r2, #8]
    cmp r0, #0xb
    bls lbl_08071454
    b lbl_080717ec
lbl_08071454:
    lsls r0, r0, #2
    ldr r1, lbl_08071460 @ =lbl_08071464
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08071460: .4byte lbl_08071464
lbl_08071464: @ jump table
    .4byte lbl_08071494 @ case 0
    .4byte lbl_080714ac @ case 1
    .4byte lbl_080714d2 @ case 2
    .4byte lbl_0807150c @ case 3
    .4byte lbl_0807159c @ case 4
    .4byte lbl_080715e4 @ case 5
    .4byte lbl_08071680 @ case 6
    .4byte lbl_08071724 @ case 7
    .4byte lbl_08071684 @ case 8
    .4byte lbl_08071744 @ case 9
    .4byte lbl_080717a6 @ case 10
    .4byte lbl_080717ec @ case 11
lbl_08071494:
    ldr r0, [r7]
    ldrh r0, [r0, #0xa]
    cmp r0, #0x32
    bhi lbl_0807149e
    b lbl_080717f0
lbl_0807149e:
    movs r0, #2
    bl sub_08068dbc
    ldr r1, [r7]
    movs r0, #0
    strh r0, [r1, #0xa]
    b lbl_080714ca
lbl_080714ac:
    ldr r1, [r7]
    ldrh r0, [r1, #0xa]
    cmp r0, #0x1e
    bhi lbl_080714b6
    b lbl_080717f0
lbl_080714b6:
    adds r0, r1, #0
    adds r0, #0xc1
    movs r2, #0
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r7]
    adds r0, #0xea
    strb r1, [r0]
    ldr r1, [r7]
    strh r2, [r1, #0xa]
lbl_080714ca:
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    b lbl_080717f0
lbl_080714d2:
    movs r0, #0
    bl sub_080711d0
    adds r5, r0, #0
    cmp r5, #2
    bne lbl_080714fa
    ldr r2, lbl_08071504 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xc1
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0xea
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080714fa
    ldr r0, lbl_08071508 @ =0x00000215
    movs r1, #0xf
    bl SoundFade
lbl_080714fa:
    ldr r3, lbl_08071504 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1, #8]
    adds r0, r0, r5
    b lbl_08071736
    .align 2, 0
lbl_08071504: .4byte 0x08754bc4
lbl_08071508: .4byte 0x00000215
lbl_0807150c:
    ldr r1, [r7]
    ldrh r0, [r1, #0xa]
    cmp r0, #6
    bhi lbl_08071516
    b lbl_080717f0
lbl_08071516:
    ldr r2, lbl_08071558 @ =0x0840dec4
    adds r0, r1, #0
    adds r0, #0xc1
    ldrb r1, [r0]
    lsls r1, r1, #2
    adds r1, r1, r2
    ldrb r0, [r1]
    ldrb r1, [r1, #2]
    movs r2, #1
    movs r3, #1
    bl sub_08070e1c
    ldr r0, [r7]
    adds r0, #0xc1
    ldrb r0, [r0]
    bl sub_08071a3c
    ldr r0, [r7]
    movs r1, #0x84
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0xd
    bl sub_08068128
    ldr r0, [r7]
    adds r2, r0, #0
    adds r2, #0xc1
    ldrb r1, [r2]
    cmp r1, #7
    bls lbl_0807155c
    adds r0, #0xc3
    b lbl_0807155e
    .align 2, 0
lbl_08071558: .4byte 0x0840dec4
lbl_0807155c:
    adds r0, #0xc2
lbl_0807155e:
    strb r1, [r0]
    ldr r4, lbl_08071594 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xea
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807157a
    ldr r0, lbl_08071598 @ =0x00000215
    bl SoundPlay
    ldr r0, [r4]
    adds r0, #0xea
    movs r1, #0
    strb r1, [r0]
lbl_0807157a:
    ldr r1, [r4]
    adds r1, #0xc1
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r1, [r4]
    ldrb r0, [r1, #8]
    subs r0, #1
    strb r0, [r1, #8]
    ldr r0, [r4]
    strh r2, [r0, #0xa]
    b lbl_080717f0
    .align 2, 0
lbl_08071594: .4byte 0x08754bc4
lbl_08071598: .4byte 0x00000215
lbl_0807159c:
    movs r0, #1
    bl sub_080711d0
    adds r5, r0, #0
    cmp r5, #1
    bne lbl_080715cc
    ldr r2, lbl_080715c4 @ =0x06007800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r0, lbl_080715c8 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    adds r0, #1
    b lbl_080715d2
    .align 2, 0
lbl_080715c4: .4byte 0x06007800
lbl_080715c8: .4byte 0x08754bc4
lbl_080715cc:
    ldr r0, lbl_080715e0 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0xa
lbl_080715d2:
    strb r0, [r1, #8]
    ldr r0, lbl_080715e0 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #0xa]
    b lbl_080717f0
    .align 2, 0
lbl_080715e0: .4byte 0x08754bc4
lbl_080715e4:
    ldr r0, lbl_08071678 @ =0x0840dec4
    ldr r1, [r7]
    adds r1, #0xc1
    ldrb r1, [r1]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldrb r0, [r1]
    movs r5, #0x2f
    cmp r0, #0
    beq lbl_08071600
    movs r5, #0x31
    cmp r0, #2
    bne lbl_08071600
    movs r5, #0x33
lbl_08071600:
    ldr r0, [r7]
    movs r4, #0xd4
    lsls r4, r4, #1
    adds r0, r0, r4
    adds r1, r5, #0
    bl sub_08068128
    ldr r5, [r7]
    ldr r3, lbl_0807167c @ =0x0840de50
    ldr r6, lbl_08071678 @ =0x0840dec4
    movs r2, #0xc1
    adds r2, r2, r5
    mov ip, r2
    ldrb r1, [r2]
    lsls r1, r1, #2
    adds r1, r1, r6
    ldrb r2, [r1]
    lsls r0, r2, #2
    adds r0, r0, r2
    adds r0, r0, r3
    ldrb r0, [r0]
    ldrb r1, [r1, #2]
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r4, r5, r4
    movs r1, #0
    mov r8, r1
    strh r0, [r4]
    mov r2, ip
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrb r1, [r0]
    lsls r0, r1, #2
    adds r0, r0, r1
    adds r3, #2
    adds r0, r0, r3
    ldrb r0, [r0]
    adds r0, #1
    lsls r0, r0, #5
    movs r2, #0xd5
    lsls r2, r2, #1
    adds r1, r5, r2
    strh r0, [r1]
    movs r0, #0
    bl sub_08071290
    movs r0, #0x85
    lsls r0, r0, #2
    bl SoundPlay
    ldr r1, [r7]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    ldr r0, [r7]
    mov r1, r8
    strh r1, [r0, #0xa]
    b lbl_080717f0
    .align 2, 0
lbl_08071678: .4byte 0x0840dec4
lbl_0807167c: .4byte 0x0840de50
lbl_08071680:
    movs r0, #1
    b lbl_08071726
lbl_08071684:
    ldr r2, lbl_080716c8 @ =0x0840dec4
    ldr r4, lbl_080716cc @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xc1
    ldrb r1, [r0]
    lsls r1, r1, #2
    adds r1, r1, r2
    ldrb r0, [r1]
    ldrb r1, [r1, #2]
    bl sub_08070ec0
    ldr r0, [r4]
    adds r0, #0xc1
    ldrb r0, [r0]
    bl sub_08071a3c
    ldr r0, [r4]
    movs r2, #0x84
    lsls r2, r2, #1
    adds r0, r0, r2
    movs r1, #6
    bl sub_08068128
    ldr r0, lbl_080716d0 @ =0x000001f7
    bl SoundPlay
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r1, [r1]
    cmp r1, #7
    bls lbl_080716d4
    adds r0, #0xc3
    b lbl_080716d6
    .align 2, 0
lbl_080716c8: .4byte 0x0840dec4
lbl_080716cc: .4byte 0x08754bc4
lbl_080716d0: .4byte 0x000001f7
lbl_080716d4:
    adds r0, #0xc2
lbl_080716d6:
    strb r1, [r0]
    ldr r3, lbl_08071718 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1, #8]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #8]
    ldr r0, [r3]
    strh r2, [r0, #0xa]
    movs r2, #0xd9
    lsls r2, r2, #1
    adds r1, r0, r2
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, lbl_0807171c @ =0x0840dec4
    ldr r0, [r3]
    adds r0, #0xc1
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldrb r0, [r0]
    cmp r0, #2
    bne lbl_080717f0
    ldr r0, lbl_08071720 @ =0x03001530
    ldrb r1, [r0, #0xf]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0, #0xf]
    movs r0, #2
    bl sub_08068dbc
    b lbl_080717f0
    .align 2, 0
lbl_08071718: .4byte 0x08754bc4
lbl_0807171c: .4byte 0x0840dec4
lbl_08071720: .4byte 0x03001530
lbl_08071724:
    movs r0, #2
lbl_08071726:
    bl sub_08071290
    cmp r0, #0
    beq lbl_080717f0
    ldr r3, lbl_08071740 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1, #8]
    adds r0, #1
lbl_08071736:
    movs r2, #0
    strb r0, [r1, #8]
    ldr r0, [r3]
    strh r2, [r0, #0xa]
    b lbl_080717f0
    .align 2, 0
lbl_08071740: .4byte 0x08754bc4
lbl_08071744:
    movs r0, #3
    bl sub_08071290
    ldr r3, lbl_08071794 @ =0x03000c0c
    ldrb r0, [r3, #0xe]
    cmp r0, #0
    beq lbl_080717a0
    ldr r0, lbl_08071798 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080717f0
    ldr r4, lbl_0807179c @ =0x08754bc4
    ldr r1, [r4]
    adds r1, #0xc1
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    strb r2, [r3, #0xe]
    ldr r0, [r4]
    movs r1, #0xd4
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0
    bl sub_08068128
    ldr r0, [r4]
    movs r2, #0x84
    lsls r2, r2, #1
    adds r0, r0, r2
    movs r1, #0
    bl sub_08068128
    ldr r1, [r4]
    movs r0, #4
    strb r0, [r1, #8]
    b lbl_080717f0
    .align 2, 0
lbl_08071794: .4byte 0x03000c0c
lbl_08071798: .4byte 0x03001380
lbl_0807179c: .4byte 0x08754bc4
lbl_080717a0:
    bl sub_0806f680
    b lbl_080717f0
lbl_080717a6:
    ldr r0, lbl_080717c0 @ =0x03001530
    ldrb r1, [r0, #0xc]
    strb r1, [r0, #0xd]
    ldrb r1, [r0, #0xe]
    strb r1, [r0, #0xf]
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0xc3
    ldrb r2, [r0]
    cmp r2, #0
    beq lbl_080717c4
    subs r0, #2
    b lbl_080717da
    .align 2, 0
lbl_080717c0: .4byte 0x03001530
lbl_080717c4:
    adds r0, r1, #0
    adds r0, #0xc2
    ldrb r3, [r0]
    adds r2, r3, #0
    cmp r2, #0
    beq lbl_080717d6
    subs r0, #1
    strb r3, [r0]
    b lbl_080717dc
lbl_080717d6:
    adds r0, r1, #0
    adds r0, #0xc1
lbl_080717da:
    strb r2, [r0]
lbl_080717dc:
    ldr r1, [r7]
    ldrb r0, [r1, #8]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #8]
    ldr r0, [r7]
    strh r2, [r0, #0xa]
    b lbl_080717f0
lbl_080717ec:
    movs r0, #1
    b lbl_080717f2
lbl_080717f0:
    movs r0, #0
lbl_080717f2:
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_08071800
sub_08071800: @ 0x08071800
    push {r4, lr}
    ldr r0, lbl_0807182c @ =0x03001380
    ldrh r1, [r0]
    ldr r0, lbl_08071830 @ =0x00000302
    ands r0, r1
    ldr r4, lbl_08071834 @ =0x08754bc4
    cmp r0, #0
    beq lbl_08071838
    ldr r1, [r4]
    ldrb r0, [r1, #8]
    cmp r0, #0
    bne lbl_08071838
    ldrb r2, [r1, #0xc]
    cmp r2, #0
    bne lbl_08071840
    movs r0, #0xc
    strb r0, [r1, #4]
    ldr r0, [r4]
    movs r1, #0
    strh r2, [r0, #0xa]
    strb r1, [r0, #8]
    b lbl_0807188e
    .align 2, 0
lbl_0807182c: .4byte 0x03001380
lbl_08071830: .4byte 0x00000302
lbl_08071834: .4byte 0x08754bc4
lbl_08071838:
    ldr r1, [r4]
    ldrb r0, [r1, #0xc]
    cmp r0, #0
    beq lbl_08071846
lbl_08071840:
    bl sub_08068ec0
    b lbl_0807188a
lbl_08071846:
    adds r0, r1, #0
    adds r0, #0xc1
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807188a
    movs r0, #4
    bl check_select_pressed_on_status_screen
    cmp r0, #0
    beq lbl_08071886
    ldr r0, [r4]
    adds r0, #0xc1
    ldrb r0, [r0]
    movs r1, #1
    bl sub_08071b2c
    cmp r0, #1
    bne lbl_08071878
    ldr r0, lbl_08071874 @ =0x000001f7
    bl SoundPlay
    b lbl_0807188a
    .align 2, 0
lbl_08071874: .4byte 0x000001f7
lbl_08071878:
    cmp r0, #0
    bne lbl_0807188a
    movs r0, #0xfc
    lsls r0, r0, #1
    bl SoundPlay
    b lbl_0807188a
lbl_08071886:
    bl sub_08071dc0
lbl_0807188a:
    bl sub_0806f680
lbl_0807188e:
    pop {r4}
    pop {r0}
    bx r0

    thumb_func_start get_current_equipment_selected
get_current_equipment_selected: @ 0x08071894
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    movs r3, #0x80
    lsrs r2, r0, #0x18
    movs r1, #0xff
    lsls r1, r1, #0x18
    adds r0, r0, r1
    lsrs r0, r0, #0x18
    cmp r0, #0x10
    bls lbl_080718ac
    movs r0, #0x80
    b lbl_08071a34
lbl_080718ac:
    ldr r0, lbl_080718d4 @ =0x03001530
    ldrb r1, [r0, #0x12]
    adds r5, r0, #0
    cmp r1, #2
    bne lbl_080718b8
    b lbl_08071a30
lbl_080718b8:
    ldr r0, lbl_080718d8 @ =0x0840dec4
    lsls r2, r2, #2
    adds r1, r2, r0
    ldrb r1, [r1]
    adds r4, r0, #0
    cmp r1, #4
    bls lbl_080718c8
    b lbl_08071a32
lbl_080718c8:
    lsls r0, r1, #2
    ldr r1, lbl_080718dc @ =lbl_080718e0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080718d4: .4byte 0x03001530
lbl_080718d8: .4byte 0x0840dec4
lbl_080718dc: .4byte lbl_080718e0
lbl_080718e0: @ jump table
    .4byte lbl_080718f4 @ case 0
    .4byte lbl_08071970 @ case 1
    .4byte lbl_08071990 @ case 2
    .4byte lbl_080719c8 @ case 3
    .4byte lbl_08071950 @ case 4
lbl_080718f4:
    ldr r0, lbl_08071914 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r2, r4
    adds r0, #0xc4
    ldrb r1, [r1, #1]
    adds r0, r0, r1
    ldrb r1, [r0]
    cmp r1, #0
    bne lbl_08071908
    b lbl_08071a32
lbl_08071908:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08071918
    movs r3, #0
    b lbl_08071a32
    .align 2, 0
lbl_08071914: .4byte 0x08754bc4
lbl_08071918:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08071924
    movs r3, #1
    b lbl_08071a32
lbl_08071924:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08071930
    movs r3, #2
    b lbl_08071a32
lbl_08071930:
    movs r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_0807193c
    movs r3, #3
    b lbl_08071a32
lbl_0807193c:
    movs r0, #8
    ands r1, r0
    cmp r1, #0
    beq lbl_08071a32
    ldrb r0, [r5, #0x12]
    movs r3, #0x11
    cmp r0, #1
    bne lbl_08071a32
    movs r3, #4
    b lbl_08071a32
lbl_08071950:
    ldr r0, lbl_0807196c @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r2, r4
    ldrb r2, [r1, #1]
    adds r0, #0xd3
    adds r0, r0, r2
    ldrb r1, [r0]
    cmp r1, #0
    beq lbl_08071a32
    movs r3, #6
    cmp r2, #0
    bne lbl_08071a32
    movs r3, #5
    b lbl_08071a32
    .align 2, 0
lbl_0807196c: .4byte 0x08754bc4
lbl_08071970:
    ldr r0, lbl_0807198c @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r2, r4
    ldrb r2, [r1, #1]
    adds r0, #0xd1
    adds r0, r0, r2
    ldrb r1, [r0]
    cmp r1, #0
    beq lbl_08071a32
    movs r3, #8
    cmp r2, #0
    bne lbl_08071a32
    movs r3, #7
    b lbl_08071a32
    .align 2, 0
lbl_0807198c: .4byte 0x08754bc4
lbl_08071990:
    ldr r0, lbl_080719b0 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r2, r4
    adds r0, #0xc9
    ldrb r1, [r1, #1]
    adds r0, r0, r1
    ldrb r1, [r0]
    cmp r1, #0
    beq lbl_08071a32
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_080719b4
    movs r3, #9
    b lbl_08071a32
    .align 2, 0
lbl_080719b0: .4byte 0x08754bc4
lbl_080719b4:
    movs r0, #0x20
    ands r1, r0
    cmp r1, #0
    beq lbl_08071a32
    ldrb r0, [r5, #0x12]
    movs r3, #0x11
    cmp r0, #1
    bne lbl_08071a32
    movs r3, #0xa
    b lbl_08071a32
lbl_080719c8:
    ldr r0, lbl_080719e8 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r2, r4
    adds r0, #0xcb
    ldrb r1, [r1, #1]
    adds r0, r0, r1
    ldrb r1, [r0]
    cmp r1, #0
    beq lbl_08071a32
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_080719ec
    movs r3, #0xb
    b lbl_08071a32
    .align 2, 0
lbl_080719e8: .4byte 0x08754bc4
lbl_080719ec:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_080719f8
    movs r3, #0xc
    b lbl_08071a32
lbl_080719f8:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08071a04
    movs r3, #0xd
    b lbl_08071a32
lbl_08071a04:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08071a10
    movs r3, #0xe
    b lbl_08071a32
lbl_08071a10:
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_08071a1c
    movs r3, #0xf
    b lbl_08071a32
lbl_08071a1c:
    movs r0, #4
    ands r1, r0
    cmp r1, #0
    beq lbl_08071a32
    ldrb r0, [r5, #0x12]
    movs r3, #0x11
    cmp r0, #1
    bne lbl_08071a32
    movs r3, #0x10
    b lbl_08071a32
lbl_08071a30:
    movs r3, #0x12
lbl_08071a32:
    adds r0, r3, #0
lbl_08071a34:
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_08071a3c
sub_08071a3c: @ 0x08071a3c
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    ldr r3, lbl_08071a80 @ =0x0840de50
    ldr r1, lbl_08071a84 @ =0x0840dec4
    lsrs r0, r0, #0x16
    adds r0, r0, r1
    ldrb r1, [r0]
    lsls r2, r1, #2
    adds r2, r2, r1
    adds r1, r2, r3
    ldrb r4, [r1]
    ldrb r0, [r0, #2]
    adds r4, r4, r0
    adds r3, #2
    adds r2, r2, r3
    ldrb r0, [r2]
    adds r0, #1
    ldr r1, lbl_08071a88 @ =0x08754bc4
    ldr r3, [r1]
    lsls r2, r4, #5
    movs r5, #0x84
    lsls r5, r5, #1
    adds r1, r3, r5
    strh r2, [r1]
    lsls r1, r0, #5
    adds r5, #2
    adds r2, r3, r5
    strh r1, [r2]
    lsls r0, r0, #0x10
    orrs r0, r4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08071a80: .4byte 0x0840de50
lbl_08071a84: .4byte 0x0840dec4
lbl_08071a88: .4byte 0x08754bc4

    thumb_func_start sub_08071a8c
sub_08071a8c: @ 0x08071a8c
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    movs r4, #0
    ldr r1, lbl_08071aac @ =0x0840dec4
    lsls r0, r2, #2
    adds r0, r0, r1
    ldrb r0, [r0]
    adds r3, r1, #0
    cmp r0, #4
    bhi lbl_08071b1e
    lsls r0, r0, #2
    ldr r1, lbl_08071ab0 @ =lbl_08071ab4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08071aac: .4byte 0x0840dec4
lbl_08071ab0: .4byte lbl_08071ab4
lbl_08071ab4: @ jump table
    .4byte lbl_08071ac8 @ case 0
    .4byte lbl_08071ae8 @ case 1
    .4byte lbl_08071af8 @ case 2
    .4byte lbl_08071b08 @ case 3
    .4byte lbl_08071ad8 @ case 4
lbl_08071ac8:
    ldr r0, lbl_08071ad4 @ =0x08754bc4
    ldr r1, [r0]
    lsls r0, r2, #2
    adds r0, r0, r3
    adds r1, #0xc4
    b lbl_08071b12
    .align 2, 0
lbl_08071ad4: .4byte 0x08754bc4
lbl_08071ad8:
    ldr r0, lbl_08071ae4 @ =0x08754bc4
    ldr r1, [r0]
    lsls r0, r2, #2
    adds r0, r0, r3
    adds r1, #0xd3
    b lbl_08071b12
    .align 2, 0
lbl_08071ae4: .4byte 0x08754bc4
lbl_08071ae8:
    ldr r0, lbl_08071af4 @ =0x08754bc4
    ldr r1, [r0]
    lsls r0, r2, #2
    adds r0, r0, r3
    adds r1, #0xd1
    b lbl_08071b12
    .align 2, 0
lbl_08071af4: .4byte 0x08754bc4
lbl_08071af8:
    ldr r0, lbl_08071b04 @ =0x08754bc4
    ldr r1, [r0]
    lsls r0, r2, #2
    adds r0, r0, r3
    adds r1, #0xc9
    b lbl_08071b12
    .align 2, 0
lbl_08071b04: .4byte 0x08754bc4
lbl_08071b08:
    ldr r0, lbl_08071b28 @ =0x08754bc4
    ldr r1, [r0]
    lsls r0, r2, #2
    adds r0, r0, r3
    adds r1, #0xcb
lbl_08071b12:
    ldrb r0, [r0, #1]
    adds r1, r1, r0
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08071b1e
    movs r4, #1
lbl_08071b1e:
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08071b28: .4byte 0x08754bc4

    thumb_func_start sub_08071b2c
sub_08071b2c: @ 0x08071b2c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r7, r1, #0x18
    movs r6, #0
    ldr r1, lbl_08071b58 @ =0x0840dec4
    lsls r0, r4, #2
    adds r0, r0, r1
    ldrb r0, [r0]
    mov ip, r1
    ldr r2, lbl_08071b5c @ =0x08754bc4
    cmp r0, #4
    bhi lbl_08071c1a
    lsls r0, r0, #2
    ldr r1, lbl_08071b60 @ =lbl_08071b64
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08071b58: .4byte 0x0840dec4
lbl_08071b5c: .4byte 0x08754bc4
lbl_08071b60: .4byte lbl_08071b64
lbl_08071b64: @ jump table
    .4byte lbl_08071b78 @ case 0
    .4byte lbl_08071b9c @ case 1
    .4byte lbl_08071bc8 @ case 2
    .4byte lbl_08071bfc @ case 3
    .4byte lbl_08071c1a @ case 4
lbl_08071b78:
    ldr r2, lbl_08071b94 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r4, #2
    add r0, ip
    adds r1, #0xc4
    ldrb r0, [r0, #1]
    adds r1, r1, r0
    ldrb r6, [r1]
    ldr r5, lbl_08071b98 @ =0x0300153d
    cmp r6, #8
    bne lbl_08071c1a
    ldrb r0, [r5, #5]
    b lbl_08071c14
    .align 2, 0
lbl_08071b94: .4byte 0x08754bc4
lbl_08071b98: .4byte 0x0300153d
lbl_08071b9c:
    ldr r2, lbl_08071bc0 @ =0x08754bc4
    cmp r4, #8
    bne lbl_08071c1a
    ldr r3, lbl_08071bc4 @ =0x03001530
    ldrb r1, [r3, #0xf]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08071c1a
    ldrb r1, [r3, #0xd]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    bne lbl_08071c1a
    movs r6, #0x80
    adds r5, r3, #0
    adds r5, #0xd
    b lbl_08071c1a
    .align 2, 0
lbl_08071bc0: .4byte 0x08754bc4
lbl_08071bc4: .4byte 0x03001530
lbl_08071bc8:
    ldr r2, lbl_08071bf4 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r4, #2
    add r0, ip
    adds r1, #0xc9
    ldrb r0, [r0, #1]
    adds r1, r1, r0
    ldrb r6, [r1]
    ldr r5, lbl_08071bf8 @ =0x0300153f
    cmp r6, #0x20
    bne lbl_08071be6
    ldrb r0, [r5, #3]
    cmp r0, #1
    beq lbl_08071be6
    movs r6, #0
lbl_08071be6:
    cmp r6, #0
    beq lbl_08071c1a
    ldrb r0, [r5]
    ands r0, r6
    cmp r0, #0
    beq lbl_08071c1a
    b lbl_08071c18
    .align 2, 0
lbl_08071bf4: .4byte 0x08754bc4
lbl_08071bf8: .4byte 0x0300153f
lbl_08071bfc:
    ldr r2, lbl_08071c40 @ =0x08754bc4
    ldr r1, [r2]
    lsls r0, r4, #2
    add r0, ip
    adds r1, #0xcb
    ldrb r0, [r0, #1]
    adds r1, r1, r0
    ldrb r6, [r1]
    ldr r5, lbl_08071c44 @ =0x0300153f
    cmp r6, #4
    bne lbl_08071c1a
    ldrb r0, [r5, #3]
lbl_08071c14:
    cmp r0, #1
    beq lbl_08071c1a
lbl_08071c18:
    movs r6, #0
lbl_08071c1a:
    ldr r0, [r2]
    ldrh r1, [r0]
    movs r0, #0x80
    lsls r0, r0, #2
    ands r0, r1
    cmp r0, #0
    bne lbl_08071c36
    ldr r0, lbl_08071c48 @ =0x03000bf0
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #6
    beq lbl_08071c36
    movs r6, #0
lbl_08071c36:
    cmp r6, #0
    bne lbl_08071c4c
    movs r3, #0
    movs r7, #0xff
    b lbl_08071d8a
    .align 2, 0
lbl_08071c40: .4byte 0x08754bc4
lbl_08071c44: .4byte 0x0300153f
lbl_08071c48: .4byte 0x03000bf0
lbl_08071c4c:
    cmp r7, #0
    beq lbl_08071c54
    cmp r7, #2
    bne lbl_08071c64
lbl_08071c54:
    ldrb r1, [r5]
    ands r1, r6
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r7, r0, #0x1f
    lsls r4, r4, #2
    mov r8, r4
    b lbl_08071d5a
lbl_08071c64:
    ldrb r1, [r5]
    adds r0, r6, #0
    eors r0, r1
    strb r0, [r5]
    adds r1, r6, #0
    ands r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r7, r0, #0x1f
    lsls r4, r4, #2
    mov r1, ip
    adds r0, r4, r1
    ldrb r5, [r0]
    ldrb r1, [r0, #2]
    adds r0, r5, #0
    adds r2, r7, #0
    movs r3, #1
    bl sub_08070e1c
    mov r8, r4
    cmp r5, #2
    beq lbl_08071cfc
    cmp r5, #2
    bgt lbl_08071c9a
    cmp r5, #1
    beq lbl_08071d04
    b lbl_08071d5a
lbl_08071c9a:
    cmp r5, #3
    bne lbl_08071d5a
    movs r0, #0x40
    ands r0, r6
    cmp r0, #0
    beq lbl_08071d5a
    movs r3, #0
    ldr r4, lbl_08071cf8 @ =0x08754bc4
lbl_08071caa:
    ldr r0, [r4]
    adds r0, #0xd1
    adds r2, r0, r3
    ldrb r1, [r2]
    movs r0, #1
    ands r0, r1
    adds r5, r3, #1
    cmp r0, #0
    beq lbl_08071cec
    movs r0, #7
    ands r0, r1
    strb r0, [r2]
    ldr r2, [r4]
    adds r2, #0xd1
    adds r2, r2, r3
    lsls r0, r7, #3
    ldrb r1, [r2]
    orrs r0, r1
    strb r0, [r2]
    movs r2, #0
    ldr r0, [r4]
    adds r0, #0xd1
    adds r0, r0, r3
    ldrb r0, [r0]
    cmp r0, #0xf
    bne lbl_08071ce0
    movs r2, #1
lbl_08071ce0:
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    movs r0, #1
    movs r3, #1
    bl sub_08070e1c
lbl_08071cec:
    lsls r0, r5, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #1
    bls lbl_08071caa
    b lbl_08071d5a
    .align 2, 0
lbl_08071cf8: .4byte 0x08754bc4
lbl_08071cfc:
    movs r0, #2
    bl sub_08068dbc
    b lbl_08071d5a
lbl_08071d04:
    ldr r3, lbl_08071db4 @ =0x08754bc4
    ldr r1, [r3]
    adds r1, #0xd1
    ldrb r2, [r1]
    movs r0, #0xd
    mov ip, r0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r1, #0xd1
    lsls r4, r7, #1
    ldrb r2, [r1]
    adds r0, r4, #0
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r3]
    adds r2, r0, #0
    adds r2, #0xd2
    ldrb r1, [r2]
    ands r5, r1
    cmp r5, #0
    beq lbl_08071d5a
    mov r0, ip
    ands r0, r1
    strb r0, [r2]
    ldr r1, [r3]
    adds r1, #0xd2
    ldrb r2, [r1]
    adds r0, r4, #0
    orrs r0, r2
    strb r0, [r1]
    movs r2, #0
    ldr r0, [r3]
    adds r0, #0xd2
    ldrb r0, [r0]
    cmp r0, #0xf
    bne lbl_08071d50
    movs r2, #1
lbl_08071d50:
    movs r0, #1
    movs r1, #2
    movs r3, #1
    bl sub_08070e1c
lbl_08071d5a:
    ldr r0, lbl_08071db8 @ =0x0840dec4
    add r0, r8
    ldrb r0, [r0]
    cmp r0, #1
    blt lbl_08071d7a
    cmp r0, #2
    ble lbl_08071d78
    cmp r0, #3
    bne lbl_08071d7a
    cmp r6, #4
    bne lbl_08071d7a
    ldr r0, lbl_08071dbc @ =0x03001530
    ldrb r0, [r0, #0x12]
    cmp r0, #1
    beq lbl_08071d7a
lbl_08071d78:
    movs r7, #0xff
lbl_08071d7a:
    movs r3, #0x11
    ldr r2, lbl_08071db4 @ =0x08754bc4
    cmp r7, #1
    beq lbl_08071d8a
    movs r3, #0
    cmp r7, #0
    bne lbl_08071d8a
    movs r3, #0x12
lbl_08071d8a:
    ldr r2, [r2]
    ldrh r1, [r2]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08071d9a
    movs r3, #0
lbl_08071d9a:
    movs r1, #0x8b
    lsls r1, r1, #3
    adds r0, r2, r1
    adds r1, r3, #0
    bl sub_08068128
    adds r0, r7, #0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08071db4: .4byte 0x08754bc4
lbl_08071db8: .4byte 0x0840dec4
lbl_08071dbc: .4byte 0x03001530

    thumb_func_start sub_08071dc0
sub_08071dc0: @ 0x08071dc0
    push {r4, lr}
    ldr r0, lbl_08071dec @ =0x08754bc4
    ldr r1, [r0]
    movs r2, #0x89
    lsls r2, r2, #1
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #6
    beq lbl_08071e70
    adds r0, r1, #0
    adds r0, #0xc1
    ldrb r2, [r0]
    ldr r0, lbl_08071df0 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08071df4
    movs r3, #1
    rsbs r3, r3, #0
    b lbl_08071e26
    .align 2, 0
lbl_08071dec: .4byte 0x08754bc4
lbl_08071df0: .4byte 0x03001380
lbl_08071df4:
    movs r0, #0x80
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    rsbs r0, r0, #0
    lsrs r3, r0, #0x1f
    cmp r3, #0
    bne lbl_08071e26
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #7
    bhi lbl_08071e18
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08071e22
    movs r3, #2
    b lbl_08071e26
lbl_08071e18:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08071e22
    movs r3, #2
lbl_08071e22:
    cmp r3, #0
    beq lbl_08071e36
lbl_08071e26:
    ldr r0, lbl_08071e78 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xc1
    ldrb r1, [r0]
    adds r0, r3, #0
    bl sub_08071e7c
    adds r2, r0, #0
lbl_08071e36:
    ldr r4, lbl_08071e78 @ =0x08754bc4
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0xc1
    ldrb r0, [r1]
    cmp r0, r2
    beq lbl_08071e70
    strb r2, [r1]
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    bl sub_08071a3c
    ldr r0, [r4]
    adds r0, #0xc1
    ldrb r0, [r0]
    movs r1, #0
    bl sub_08071b2c
    ldr r0, [r4]
    movs r1, #0x84
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #6
    bl sub_08068128
    movs r0, #0xfb
    lsls r0, r0, #1
    bl SoundPlay
lbl_08071e70:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08071e78: .4byte 0x08754bc4

    thumb_func_start sub_08071e7c
sub_08071e7c: @ 0x08071e7c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    lsls r0, r0, #0x18
    asrs r5, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    mov r8, r4
    cmp r5, #0
    beq lbl_08071f62
    cmp r5, #1
    ble lbl_08071f26
    cmp r4, #7
    bls lbl_08071ea8
    ldr r1, lbl_08071ea4 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0xc3
    b lbl_08071eae
    .align 2, 0
lbl_08071ea4: .4byte 0x08754bc4
lbl_08071ea8:
    ldr r1, lbl_08071ed4 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0xc2
lbl_08071eae:
    strb r4, [r0]
    mov r0, r8
    cmp r0, #7
    bls lbl_08071edc
    ldr r0, [r1]
    adds r0, #0xc2
    ldrb r4, [r0]
    cmp r4, #0
    bne lbl_08071f62
    movs r1, #7
    movs r7, #1
    mov r0, r8
    cmp r0, #0xb
    bls lbl_08071ed8
    movs r4, #6
    movs r5, #1
    rsbs r5, r5, #0
    b lbl_08071efc
    .align 2, 0
lbl_08071ed4: .4byte 0x08754bc4
lbl_08071ed8:
    movs r4, #1
    b lbl_08071efa
lbl_08071edc:
    ldr r0, [r1]
    adds r0, #0xc3
    ldrb r4, [r0]
    cmp r4, #0
    bne lbl_08071f62
    movs r1, #0x11
    movs r7, #8
    mov r0, r8
    cmp r0, #5
    bls lbl_08071ef8
    movs r4, #0xc
    movs r5, #1
    rsbs r5, r5, #0
    b lbl_08071efc
lbl_08071ef8:
    movs r4, #8
lbl_08071efa:
    movs r5, #1
lbl_08071efc:
    adds r6, r4, #0
lbl_08071efe:
    lsls r0, r4, #0x18
    lsrs r0, r0, #0x18
    str r1, [sp]
    bl sub_08071a8c
    ldr r1, [sp]
    cmp r0, #0
    bne lbl_08071f62
    adds r4, r4, r5
    cmp r4, r7
    bge lbl_08071f18
    adds r4, r1, #0
    b lbl_08071f1e
lbl_08071f18:
    cmp r4, r1
    ble lbl_08071f1e
    adds r4, r7, #0
lbl_08071f1e:
    cmp r4, r6
    bne lbl_08071efe
lbl_08071f22:
    mov r4, r8
    b lbl_08071f62
lbl_08071f26:
    cmp r4, #7
    bls lbl_08071f30
    movs r1, #0x11
    movs r7, #8
    b lbl_08071f34
lbl_08071f30:
    movs r1, #7
    movs r7, #1
lbl_08071f34:
    cmp r5, #1
    beq lbl_08071f3c
    movs r0, #1
    rsbs r0, r0, #0
lbl_08071f3c:
    adds r6, r4, #0
lbl_08071f3e:
    adds r4, r4, r5
    cmp r4, r7
    bge lbl_08071f48
    adds r4, r1, #0
    b lbl_08071f4e
lbl_08071f48:
    cmp r4, r1
    ble lbl_08071f4e
    adds r4, r7, #0
lbl_08071f4e:
    cmp r4, r6
    beq lbl_08071f22
    lsls r0, r4, #0x18
    lsrs r0, r0, #0x18
    str r1, [sp]
    bl sub_08071a8c
    ldr r1, [sp]
    cmp r0, #0
    beq lbl_08071f3e
lbl_08071f62:
    adds r0, r4, #0
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start easy_sleep_menu_subroutine
easy_sleep_menu_subroutine: @ 0x08071f70
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    movs r7, #0
    ldr r1, lbl_08071f94 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #8]
    adds r2, r1, #0
    cmp r0, #5
    bls lbl_08071f88
    b lbl_08072110
lbl_08071f88:
    lsls r0, r0, #2
    ldr r1, lbl_08071f98 @ =lbl_08071f9c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08071f94: .4byte 0x08754bc4
lbl_08071f98: .4byte lbl_08071f9c
lbl_08071f9c: @ jump table
    .4byte lbl_08071fb4 @ case 0
    .4byte lbl_08072000 @ case 1
    .4byte lbl_08072068 @ case 2
    .4byte lbl_0807207e @ case 3
    .4byte lbl_08072094 @ case 4
    .4byte lbl_08072104 @ case 5
lbl_08071fb4:
    ldr r0, lbl_08071fcc @ =0x03001380
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08071fd4
    ldr r0, lbl_08071fd0 @ =0x00000209
    bl SoundPlay
    movs r7, #2
    b lbl_08072114
    .align 2, 0
lbl_08071fcc: .4byte 0x03001380
lbl_08071fd0: .4byte 0x00000209
lbl_08071fd4:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08072058
    ldr r0, lbl_08071ff8 @ =0x00000207
    bl SoundPlay
    ldr r2, lbl_08071ffc @ =0x08754bc4
    ldr r1, [r2]
    movs r0, #1
    strb r0, [r1, #8]
    ldr r0, [r2]
    movs r2, #0x8d
    lsls r2, r2, #1
    adds r1, r0, r2
    movs r0, #0xd0
    strh r0, [r1]
    b lbl_08072110
    .align 2, 0
lbl_08071ff8: .4byte 0x00000207
lbl_08071ffc: .4byte 0x08754bc4
lbl_08072000:
    ldr r0, lbl_08072024 @ =0x03001380
    ldrh r1, [r0]
    movs r4, #1
    ands r4, r1
    cmp r4, #0
    beq lbl_0807202c
    movs r0, #0x82
    lsls r0, r0, #2
    bl SoundPlay
    ldr r2, lbl_08072028 @ =0x08754bc4
    ldr r1, [r2]
    movs r3, #0
    movs r0, #2
    strb r0, [r1, #8]
    ldr r0, [r2]
    strh r3, [r0, #0xa]
    b lbl_08072110
    .align 2, 0
lbl_08072024: .4byte 0x03001380
lbl_08072028: .4byte 0x08754bc4
lbl_0807202c:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08072058
    ldr r0, lbl_08072050 @ =0x00000207
    bl SoundPlay
    ldr r1, lbl_08072054 @ =0x08754bc4
    ldr r0, [r1]
    strb r4, [r0, #8]
    ldr r0, [r1]
    movs r2, #0x8d
    lsls r2, r2, #1
    adds r1, r0, r2
    movs r0, #0x84
    lsls r0, r0, #2
    strh r0, [r1]
    b lbl_08072110
    .align 2, 0
lbl_08072050: .4byte 0x00000207
lbl_08072054: .4byte 0x08754bc4
lbl_08072058:
    ldr r0, lbl_08072064 @ =0x00000302
    ands r0, r1
    cmp r0, #0
    beq lbl_08072110
    movs r7, #1
    b lbl_08072114
    .align 2, 0
lbl_08072064: .4byte 0x00000302
lbl_08072068:
    ldr r3, [r2]
    ldrh r0, [r3, #0xa]
    cmp r0, #0x1e
    bls lbl_08072110
    ldrb r0, [r3, #8]
    adds r0, #1
    movs r1, #0
    strb r0, [r3, #8]
    ldr r0, [r2]
    strh r1, [r0, #0xa]
    b lbl_08072110
lbl_0807207e:
    ldr r2, [r2]
    adds r3, r2, #0
    adds r3, #0x5c
    ldrh r0, [r3]
    movs r1, #0x80
    eors r0, r1
    strh r0, [r3]
    ldrb r0, [r2, #8]
    adds r0, #1
    strb r0, [r2, #8]
    b lbl_08072110
lbl_08072094:
    ldr r1, lbl_080720f0 @ =0x04000132
    ldr r2, lbl_080720f4 @ =0x0000c304
    adds r0, r2, #0
    strh r0, [r1]
    ldr r6, lbl_080720f8 @ =0x04000208
    movs r0, #0
    mov sb, r0
    strh r0, [r6]
    ldr r5, lbl_080720fc @ =0x04000200
    ldrh r4, [r5]
    movs r1, #0xc0
    lsls r1, r1, #6
    adds r0, r1, #0
    strh r0, [r5]
    movs r2, #1
    mov r8, r2
    strh r2, [r6]
    bl SoundBias0
    svc #3
    bl SoundBias200
    mov r0, sb
    strh r0, [r6]
    strh r4, [r5]
    mov r1, r8
    strh r1, [r6]
    ldr r0, lbl_08072100 @ =0x08754bc4
    ldr r3, [r0]
    adds r2, r3, #0
    adds r2, #0x5c
    ldrh r0, [r2]
    movs r1, #0x80
    eors r0, r1
    strh r0, [r2]
    movs r2, #0x8d
    lsls r2, r2, #1
    adds r1, r3, r2
    movs r0, #0x84
    lsls r0, r0, #2
    strh r0, [r1]
    ldrb r0, [r3, #8]
    adds r0, #1
    strb r0, [r3, #8]
    b lbl_08072110
    .align 2, 0
lbl_080720f0: .4byte 0x04000132
lbl_080720f4: .4byte 0x0000c304
lbl_080720f8: .4byte 0x04000208
lbl_080720fc: .4byte 0x04000200
lbl_08072100: .4byte 0x08754bc4
lbl_08072104:
    ldr r0, lbl_08072138 @ =0x0300137c
    ldrh r1, [r0]
    cmp r1, #0
    bne lbl_08072110
    ldr r0, [r2]
    strb r1, [r0, #8]
lbl_08072110:
    cmp r7, #0
    beq lbl_0807212a
lbl_08072114:
    ldr r2, lbl_0807213c @ =0x08754bc4
    ldr r0, [r2]
    movs r1, #0
    strb r1, [r0, #8]
    ldr r0, [r2]
    strh r1, [r0, #0xa]
    cmp r7, #1
    bne lbl_0807212a
    ldr r0, lbl_08072140 @ =0x00000206
    bl SoundPlay
lbl_0807212a:
    adds r0, r7, #0
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08072138: .4byte 0x0300137c
lbl_0807213c: .4byte 0x08754bc4
lbl_08072140: .4byte 0x00000206

    thumb_func_start sub_08072144
sub_08072144: @ 0x08072144
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0
    movs r7, #0xd
    ldrsb r7, [r4, r7]
    cmp r7, #0
    beq lbl_08072196
    ldrh r0, [r4, #2]
    ldrh r1, [r4, #6]
    cmp r0, r1
    beq lbl_08072192
    movs r0, #0xa
    ldrsh r1, [r4, r0]
    ldrh r0, [r4, #0x10]
    muls r1, r0, r1
    ldrh r0, [r4, #0x12]
    muls r0, r1, r0
    lsls r0, r0, #8
    ldrh r1, [r4, #0xe]
    bl __divsi3
    adds r6, r0, #0
    ldrh r2, [r4, #2]
    cmp r6, #0
    bge lbl_08072176
    adds r0, #0xff
lbl_08072176:
    asrs r0, r0, #8
    movs r1, #0xd
    ldrsb r1, [r4, r1]
    muls r0, r1, r0
    adds r6, r2, r0
    cmp r7, #0
    ble lbl_0807218c
    ldrh r0, [r4, #6]
    cmp r0, r6
    bge lbl_08072196
    b lbl_08072192
lbl_0807218c:
    ldrh r0, [r4, #6]
    cmp r0, r6
    ble lbl_08072196
lbl_08072192:
    movs r0, #0
    strb r0, [r4, #0xd]
lbl_08072196:
    movs r7, #0xc
    ldrsb r7, [r4, r7]
    cmp r7, #0
    beq lbl_080721e4
    ldrh r0, [r4]
    ldrh r1, [r4, #4]
    cmp r0, r1
    beq lbl_080721e0
    movs r0, #8
    ldrsh r1, [r4, r0]
    ldrh r0, [r4, #0x10]
    muls r1, r0, r1
    ldrh r0, [r4, #0x12]
    muls r0, r1, r0
    lsls r0, r0, #8
    ldrh r1, [r4, #0xe]
    bl __divsi3
    adds r5, r0, #0
    ldrh r2, [r4]
    cmp r5, #0
    bge lbl_080721c4
    adds r0, #0xff
lbl_080721c4:
    asrs r0, r0, #8
    movs r1, #0xc
    ldrsb r1, [r4, r1]
    muls r0, r1, r0
    adds r5, r2, r0
    cmp r7, #0
    ble lbl_080721da
    ldrh r0, [r4, #4]
    cmp r0, r5
    bge lbl_080721e4
    b lbl_080721e0
lbl_080721da:
    ldrh r0, [r4, #4]
    cmp r0, r5
    ble lbl_080721e4
lbl_080721e0:
    movs r0, #0
    strb r0, [r4, #0xc]
lbl_080721e4:
    movs r0, #0xd
    ldrsb r0, [r4, r0]
    cmp r0, #0
    bne lbl_080721ee
    ldrh r6, [r4, #6]
lbl_080721ee:
    movs r0, #0xc
    ldrsb r0, [r4, r0]
    cmp r0, #0
    bne lbl_080721f8
    ldrh r5, [r4, #4]
lbl_080721f8:
    lsls r0, r5, #0x10
    orrs r0, r6
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start chozo_statue_hint_movement
chozo_statue_hint_movement: @ 0x08072204
    push {r4, r5, r6, r7, lr}
    ldr r1, lbl_08072220 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x47
    ldrb r0, [r0]
    adds r5, r1, #0
    cmp r0, #6
    bls lbl_08072216
    b lbl_08072664
lbl_08072216:
    lsls r0, r0, #2
    ldr r1, lbl_08072224 @ =lbl_08072228
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08072220: .4byte 0x08754bc4
lbl_08072224: .4byte lbl_08072228
lbl_08072228: @ jump table
    .4byte lbl_08072664 @ case 0
    .4byte lbl_08072244 @ case 1
    .4byte lbl_080723f4 @ case 2
    .4byte lbl_08072414 @ case 3
    .4byte lbl_080725b0 @ case 4
    .4byte lbl_08072600 @ case 5
    .4byte lbl_0807262e @ case 6
lbl_08072244:
    ldr r1, [r5]
    adds r1, #0x46
    ldrb r2, [r1]
    movs r0, #1
    orrs r0, r2
    strb r0, [r1]
    ldr r3, [r5]
    ldrb r0, [r3, #0x13]
    lsls r0, r0, #5
    adds r4, r3, #0
    adds r4, #0x8e
    strh r0, [r4]
    ldrb r0, [r3, #0x14]
    lsls r0, r0, #5
    adds r2, r3, #0
    adds r2, #0x8c
    strh r0, [r2]
    ldrb r0, [r3, #0x15]
    lsls r0, r0, #5
    adds r1, r3, #0
    adds r1, #0x92
    strh r0, [r1]
    ldrb r0, [r3, #0x16]
    lsls r0, r0, #5
    subs r1, #2
    strh r0, [r1]
    ldrh r1, [r2]
    movs r2, #0xea
    lsls r2, r2, #2
    adds r0, r3, r2
    strh r1, [r0]
    ldrh r1, [r4]
    ldr r4, lbl_080722cc @ =0x000003aa
    adds r0, r3, r4
    strh r1, [r0]
    ldr r2, lbl_080722d0 @ =0x0840df78
    adds r0, r3, #0
    adds r0, #0x40
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #2
    adds r0, r0, r2
    ldrb r1, [r0, #5]
    ldr r7, lbl_080722d4 @ =0x000003b2
    adds r0, r3, r7
    strb r1, [r0]
    ldr r3, [r5]
    adds r0, r3, #0
    adds r0, #0x92
    adds r1, r3, #0
    adds r1, #0x8e
    ldrh r0, [r0]
    ldrh r1, [r1]
    subs r0, r0, r1
    adds r2, r3, #0
    adds r2, #0x96
    strh r0, [r2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0
    bne lbl_080722d8
    adds r1, r3, #0
    adds r1, #0x98
    movs r0, #0
    strb r0, [r1]
    b lbl_08072300
    .align 2, 0
lbl_080722cc: .4byte 0x000003aa
lbl_080722d0: .4byte 0x0840df78
lbl_080722d4: .4byte 0x000003b2
lbl_080722d8:
    movs r2, #1
    rsbs r2, r2, #0
    adds r1, r2, #0
    cmp r0, #0
    ble lbl_080722e4
    movs r1, #1
lbl_080722e4:
    adds r0, r3, #0
    adds r0, #0x99
    strb r1, [r0]
    ldr r0, [r5]
    adds r2, r0, #0
    adds r2, #0x96
    adds r0, #0x99
    movs r1, #0
    ldrsb r1, [r0, r1]
    ldrh r0, [r2]
    adds r3, r0, #0
    muls r3, r1, r3
    adds r0, r3, #0
    strh r0, [r2]
lbl_08072300:
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x90
    adds r1, r2, #0
    adds r1, #0x8c
    ldrh r0, [r0]
    ldrh r1, [r1]
    subs r0, r0, r1
    adds r1, r2, #0
    adds r1, #0x94
    strh r0, [r1]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0
    bne lbl_08072326
    adds r1, #4
    movs r0, #0
    strb r0, [r1]
    b lbl_0807234e
lbl_08072326:
    movs r4, #1
    rsbs r4, r4, #0
    adds r1, r4, #0
    cmp r0, #0
    ble lbl_08072332
    movs r1, #1
lbl_08072332:
    adds r0, r2, #0
    adds r0, #0x98
    strb r1, [r0]
    ldr r0, [r5]
    adds r2, r0, #0
    adds r2, #0x94
    adds r0, #0x98
    movs r1, #0
    ldrsb r1, [r0, r1]
    ldrh r0, [r2]
    adds r7, r0, #0
    muls r7, r1, r7
    adds r0, r7, #0
    strh r0, [r2]
lbl_0807234e:
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x96
    movs r2, #0
    ldrsh r0, [r0, r2]
    adds r3, r0, #0
    muls r3, r0, r3
    adds r0, r3, #0
    adds r1, #0x94
    movs r4, #0
    ldrsh r1, [r1, r4]
    adds r7, r1, #0
    muls r7, r1, r7
    adds r1, r7, #0
    adds r0, r0, r1
    lsls r0, r0, #2
    bl Sqrt
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x12
    cmp r4, #0
    bne lbl_08072386
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x99
    strb r4, [r1]
    adds r0, #0x98
    strb r4, [r0]
lbl_08072386:
    ldr r0, [r5]
    mov ip, r0
    adds r0, #0x9a
    movs r3, #0
    movs r2, #0
    strh r4, [r0]
    mov r1, ip
    adds r1, #0x9c
    movs r0, #1
    strh r0, [r1]
    mov r0, ip
    adds r0, #0x9e
    strh r2, [r0]
    subs r0, #0x56
    strb r3, [r0]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x40
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #7
    bgt lbl_080723cc
    ldr r3, lbl_080723c8 @ =0x000003b3
    adds r2, r1, r3
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x80
    orrs r0, r1
    strb r0, [r2]
    b lbl_080725ec
    .align 2, 0
lbl_080723c8: .4byte 0x000003b3
lbl_080723cc:
    adds r0, r1, #0
    adds r0, #0x41
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080723de
    adds r1, #0x47
    movs r0, #6
    strb r0, [r1]
    b lbl_08072664
lbl_080723de:
    ldr r4, lbl_080723f0 @ =0x000003b3
    adds r2, r1, r4
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x80
    orrs r0, r1
    strb r0, [r2]
    b lbl_080725ec
    .align 2, 0
lbl_080723f0: .4byte 0x000003b3
lbl_080723f4:
    ldr r1, [r5]
    adds r1, #0x48
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x48
    ldrb r0, [r0]
    cmp r0, #0x3c
    bhi lbl_0807240c
    b lbl_08072664
lbl_0807240c:
    adds r1, #0x49
    movs r0, #1
    strb r0, [r1]
    b lbl_080725e4
lbl_08072414:
    ldr r1, [r5]
    adds r1, #0x48
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x92
    ldrh r1, [r0]
    ldr r7, lbl_08072470 @ =0x000003aa
    adds r0, r2, r7
    movs r3, #0
    ldrsh r0, [r0, r3]
    subs r1, r1, r0
    adds r0, r2, #0
    adds r0, #0x99
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r4, r1, #0
    muls r4, r0, r4
    adds r0, r2, #0
    adds r0, #0x90
    ldrh r1, [r0]
    subs r7, #2
    adds r0, r2, r7
    movs r3, #0
    ldrsh r0, [r0, r3]
    subs r1, r1, r0
    adds r0, r2, #0
    adds r0, #0x98
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    muls r1, r0, r1
    cmp r1, r4
    bge lbl_08072460
    adds r1, r4, #0
lbl_08072460:
    asrs r4, r1, #2
    cmp r4, #0x20
    bgt lbl_08072474
    adds r1, r2, #0
    adds r1, #0x9e
    ldrh r0, [r1]
    adds r0, #2
    b lbl_08072498
    .align 2, 0
lbl_08072470: .4byte 0x000003aa
lbl_08072474:
    cmp r4, #0x40
    bgt lbl_08072482
    adds r1, r2, #0
    adds r1, #0x9e
    ldrh r0, [r1]
    adds r0, #3
    b lbl_08072498
lbl_08072482:
    cmp r4, #0x60
    bgt lbl_08072490
    adds r1, r2, #0
    adds r1, #0x9e
    ldrh r0, [r1]
    adds r0, #4
    b lbl_08072498
lbl_08072490:
    adds r1, r2, #0
    adds r1, #0x9e
    ldrh r0, [r1]
    adds r0, #5
lbl_08072498:
    strh r0, [r1]
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x48
    ldrb r1, [r0]
    movs r6, #7
    adds r0, r6, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_0807253a
    lsrs r4, r1, #3
    movs r0, #3
    ands r4, r0
    adds r4, #1
    lsls r3, r4, #4
    adds r1, r2, r3
    movs r0, #0xea
    lsls r0, r0, #2
    adds r1, r1, r0
    adds r0, r2, r0
    ldm r0!, {r2, r4, r7}
    stm r1!, {r2, r4, r7}
    ldr r0, [r0]
    str r0, [r1]
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x40
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #7
    bgt lbl_080724fc
    adds r0, r2, r3
    ldr r4, lbl_080724f4 @ =0x000003b2
    adds r0, r0, r4
    strb r6, [r0]
    ldr r2, [r5]
    adds r2, r2, r3
    ldr r7, lbl_080724f8 @ =0x000003b3
    adds r2, r2, r7
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x80
    b lbl_08072536
    .align 2, 0
lbl_080724f4: .4byte 0x000003b2
lbl_080724f8: .4byte 0x000003b3
lbl_080724fc:
    movs r1, #0xf
    cmp r0, #8
    bne lbl_08072504
    movs r1, #0xb
lbl_08072504:
    adds r0, r2, r3
    ldr r2, lbl_0807259c @ =0x000003b2
    adds r0, r0, r2
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, r0, r3
    movs r4, #0xec
    lsls r4, r4, #2
    adds r0, r0, r4
    movs r1, #3
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, r0, r3
    ldr r7, lbl_080725a0 @ =0x000003b1
    adds r0, r0, r7
    movs r1, #5
    strb r1, [r0]
    ldr r2, [r5]
    adds r2, r2, r3
    ldr r0, lbl_080725a4 @ =0x000003b3
    adds r2, r2, r0
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
lbl_08072536:
    orrs r0, r1
    strb r0, [r2]
lbl_0807253a:
    ldr r0, [r5]
    adds r0, #0x8c
    bl sub_08072144
    adds r4, r0, #0
    asrs r1, r4, #0x10
    ldr r0, lbl_080725a8 @ =0x0000ffff
    ands r4, r0
    ldr r2, [r5]
    movs r3, #0xea
    lsls r3, r3, #2
    adds r0, r2, r3
    movs r6, #0
    strh r1, [r0]
    ldr r7, lbl_080725ac @ =0x000003aa
    adds r0, r2, r7
    strh r4, [r0]
    movs r3, #0
    adds r0, r2, #0
    adds r0, #0x90
    ldrh r0, [r0]
    cmp r1, r0
    bne lbl_0807256a
    movs r3, #1
lbl_0807256a:
    adds r1, r3, #0
    movs r3, #0
    adds r0, r2, #0
    adds r0, #0x92
    ldrh r0, [r0]
    cmp r4, r0
    bne lbl_0807257a
    movs r3, #1
lbl_0807257a:
    adds r4, r3, #0
    cmp r1, #0
    beq lbl_08072586
    adds r0, r2, #0
    adds r0, #0x98
    strb r6, [r0]
lbl_08072586:
    cmp r4, #0
    beq lbl_08072664
    ldr r0, [r5]
    adds r0, #0x99
    strb r6, [r0]
    cmp r1, #0
    beq lbl_08072664
    ldr r0, [r5]
    adds r0, #0x48
    strb r6, [r0]
    b lbl_080725ec
    .align 2, 0
lbl_0807259c: .4byte 0x000003b2
lbl_080725a0: .4byte 0x000003b1
lbl_080725a4: .4byte 0x000003b3
lbl_080725a8: .4byte 0x0000ffff
lbl_080725ac: .4byte 0x000003aa
lbl_080725b0:
    ldr r1, [r5]
    adds r1, #0x48
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r3, [r5]
    adds r0, r3, #0
    adds r0, #0x48
    ldrb r0, [r0]
    cmp r0, #0x14
    bls lbl_08072664
    ldr r0, lbl_080725f8 @ =0x00000303
    adds r3, r3, r0
    ldrb r1, [r3]
    movs r2, #0x3f
    adds r0, r2, #0
    ands r0, r1
    movs r1, #0x80
    orrs r0, r1
    strb r0, [r3]
    ldr r0, [r5]
    ldr r1, lbl_080725fc @ =0x000003b3
    adds r0, r0, r1
    ldrb r1, [r0]
    ands r2, r1
    strb r2, [r0]
lbl_080725e4:
    ldr r0, [r5]
    adds r0, #0x48
    movs r1, #0
    strb r1, [r0]
lbl_080725ec:
    ldr r1, [r5]
    adds r1, #0x47
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08072664
    .align 2, 0
lbl_080725f8: .4byte 0x00000303
lbl_080725fc: .4byte 0x000003b3
lbl_08072600:
    ldr r1, [r5]
    adds r1, #0x48
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x48
    ldrb r0, [r1]
    cmp r0, #0x14
    bls lbl_08072664
    strb r2, [r1]
    ldr r0, [r5]
    adds r0, #0x47
    strb r2, [r0]
    ldr r1, [r5]
    adds r1, #0x46
    ldrb r0, [r1]
    movs r2, #1
    eors r0, r2
    strb r0, [r1]
    b lbl_08072664
lbl_0807262e:
    ldr r1, [r5]
    adds r1, #0x48
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x48
    ldrb r0, [r0]
    cmp r0, #0x3c
    bls lbl_08072664
    ldr r3, lbl_0807266c @ =0x000003b3
    adds r2, r2, r3
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x80
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r5]
    adds r0, #0x48
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x47
    movs r1, #2
    strb r1, [r0]
lbl_08072664:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807266c: .4byte 0x000003b3

    thumb_func_start chozo_statue_hint_scrolling
chozo_statue_hint_scrolling: @ 0x08072670
    push {r4, r5, r6, lr}
    ldr r1, lbl_0807268c @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x49
    ldrb r0, [r0]
    adds r5, r1, #0
    cmp r0, #4
    bls lbl_08072682
    b lbl_080728b0
lbl_08072682:
    lsls r0, r0, #2
    ldr r1, lbl_08072690 @ =lbl_08072694
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807268c: .4byte 0x08754bc4
lbl_08072690: .4byte lbl_08072694
lbl_08072694: @ jump table
    .4byte lbl_080728b0 @ case 0
    .4byte lbl_080726a8 @ case 1
    .4byte lbl_080727e2 @ case 2
    .4byte lbl_08072806 @ case 3
    .4byte lbl_08072884 @ case 4
lbl_080726a8:
    ldr r1, [r5]
    adds r1, #0x46
    ldrb r2, [r1]
    movs r0, #2
    orrs r0, r2
    strb r0, [r1]
    ldr r3, [r5]
    ldrb r1, [r3, #0x16]
    movs r0, #0xa
    subs r0, r0, r1
    lsls r0, r0, #3
    movs r2, #0x81
    lsls r2, r2, #2
    subs r0, r2, r0
    lsls r0, r0, #2
    adds r1, r3, #0
    adds r1, #0xa4
    strh r0, [r1]
    ldrb r1, [r3, #0x15]
    movs r0, #0xf
    subs r0, r0, r1
    lsls r0, r0, #3
    subs r2, r2, r0
    lsls r2, r2, #2
    adds r4, r3, #0
    adds r4, #0xa6
    strh r2, [r4]
    ldr r0, lbl_0807270c @ =0x03000c02
    ldrh r1, [r0]
    adds r0, r3, #0
    adds r0, #0xa0
    strh r1, [r0]
    ldr r0, lbl_08072710 @ =0x03000c00
    ldrh r1, [r0]
    adds r0, r3, #0
    adds r0, #0xa2
    strh r1, [r0]
    ldrh r0, [r4]
    subs r0, r0, r1
    adds r1, r3, #0
    adds r1, #0xaa
    strh r0, [r1]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0
    bne lbl_08072714
    adds r1, #2
    movs r0, #0
    strb r0, [r1]
    b lbl_0807273c
    .align 2, 0
lbl_0807270c: .4byte 0x03000c02
lbl_08072710: .4byte 0x03000c00
lbl_08072714:
    movs r2, #1
    rsbs r2, r2, #0
    adds r1, r2, #0
    cmp r0, #0
    ble lbl_08072720
    movs r1, #1
lbl_08072720:
    adds r0, r3, #0
    adds r0, #0xad
    strb r1, [r0]
    ldr r0, [r5]
    adds r2, r0, #0
    adds r2, #0xaa
    adds r0, #0xad
    movs r1, #0
    ldrsb r1, [r0, r1]
    ldrh r0, [r2]
    adds r3, r0, #0
    muls r3, r1, r3
    adds r0, r3, #0
    strh r0, [r2]
lbl_0807273c:
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0xa4
    adds r1, r2, #0
    adds r1, #0xa0
    ldrh r0, [r0]
    ldrh r1, [r1]
    subs r0, r0, r1
    adds r1, r2, #0
    adds r1, #0xa8
    strh r0, [r1]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0
    bne lbl_08072762
    adds r1, #4
    movs r0, #0
    strb r0, [r1]
    b lbl_0807278a
lbl_08072762:
    movs r3, #1
    rsbs r3, r3, #0
    adds r1, r3, #0
    cmp r0, #0
    ble lbl_0807276e
    movs r1, #1
lbl_0807276e:
    adds r0, r2, #0
    adds r0, #0xac
    strb r1, [r0]
    ldr r0, [r5]
    adds r2, r0, #0
    adds r2, #0xa8
    adds r0, #0xac
    movs r1, #0
    ldrsb r1, [r0, r1]
    ldrh r0, [r2]
    adds r3, r0, #0
    muls r3, r1, r3
    adds r0, r3, #0
    strh r0, [r2]
lbl_0807278a:
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0xaa
    movs r2, #0
    ldrsh r0, [r0, r2]
    adds r3, r0, #0
    muls r3, r0, r3
    adds r0, r3, #0
    adds r1, #0xa8
    movs r2, #0
    ldrsh r1, [r1, r2]
    adds r3, r1, #0
    muls r3, r1, r3
    adds r1, r3, #0
    adds r0, r0, r1
    lsls r0, r0, #2
    bl Sqrt
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x12
    cmp r4, #0
    bne lbl_080727c2
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0xad
    strb r4, [r1]
    adds r0, #0xac
    strb r4, [r0]
lbl_080727c2:
    ldr r3, [r5]
    adds r0, r3, #0
    adds r0, #0xae
    movs r2, #0
    strh r4, [r0]
    adds r1, r3, #0
    adds r1, #0xb0
    movs r0, #1
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0xb2
    strh r2, [r0]
    subs r1, #0x67
    ldrb r0, [r1]
    adds r0, #1
    b lbl_080728ae
lbl_080727e2:
    ldr r1, [r5]
    adds r1, #0x4a
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x4a
    ldrb r0, [r1]
    cmp r0, #0x14
    bls lbl_080728b0
    movs r0, #0
    strb r0, [r1]
    ldr r1, [r5]
    adds r1, #0x49
    ldrb r0, [r1]
    adds r0, #1
    b lbl_080728ae
lbl_08072806:
    ldr r0, [r5]
    adds r2, r0, #0
    adds r2, #0xb2
    ldrh r1, [r2]
    adds r1, #4
    movs r6, #0
    strh r1, [r2]
    adds r0, #0xa0
    bl sub_08072144
    adds r4, r0, #0
    asrs r2, r4, #0x10
    ldr r0, lbl_08072878 @ =0x0000ffff
    ands r4, r0
    ldr r0, lbl_0807287c @ =0x03000c02
    strh r2, [r0]
    ldr r0, lbl_08072880 @ =0x03000c00
    strh r4, [r0]
    movs r3, #0
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0xa4
    ldrh r0, [r0]
    cmp r2, r0
    bne lbl_0807283a
    movs r3, #1
lbl_0807283a:
    adds r2, r3, #0
    movs r3, #0
    adds r0, r1, #0
    adds r0, #0xa6
    ldrh r0, [r0]
    cmp r4, r0
    bne lbl_0807284a
    movs r3, #1
lbl_0807284a:
    adds r4, r3, #0
    cmp r2, #0
    beq lbl_08072856
    adds r0, r1, #0
    adds r0, #0xac
    strb r6, [r0]
lbl_08072856:
    cmp r4, #0
    beq lbl_08072860
    ldr r0, [r5]
    adds r0, #0xad
    strb r6, [r0]
lbl_08072860:
    cmp r2, #0
    beq lbl_080728b0
    cmp r4, #0
    beq lbl_080728b0
    ldr r0, [r5]
    adds r0, #0x4a
    strb r6, [r0]
    ldr r1, [r5]
    adds r1, #0x49
    ldrb r0, [r1]
    adds r0, #1
    b lbl_080728ae
    .align 2, 0
lbl_08072878: .4byte 0x0000ffff
lbl_0807287c: .4byte 0x03000c02
lbl_08072880: .4byte 0x03000c00
lbl_08072884:
    ldr r1, [r5]
    adds r1, #0x4a
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x4a
    ldrb r0, [r1]
    cmp r0, #0x14
    bls lbl_080728b0
    strb r2, [r1]
    ldr r0, [r5]
    adds r0, #0x49
    strb r2, [r0]
    ldr r1, [r5]
    adds r1, #0x46
    ldrb r0, [r1]
    movs r2, #2
    eors r0, r2
lbl_080728ae:
    strb r0, [r1]
lbl_080728b0:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start chozo_statue_hint_subroutine
chozo_statue_hint_subroutine: @ 0x080728b8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    movs r0, #0
    mov r8, r0
    bl chozo_statue_hint_movement
    bl chozo_statue_hint_scrolling
    ldr r0, lbl_080728e4 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #8]
    cmp r0, #9
    bls lbl_080728d8
    b lbl_08072afe
lbl_080728d8:
    lsls r0, r0, #2
    ldr r1, lbl_080728e8 @ =lbl_080728ec
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080728e4: .4byte 0x08754bc4
lbl_080728e8: .4byte lbl_080728ec
lbl_080728ec: @ jump table
    .4byte lbl_08072ab8 @ case 0
    .4byte lbl_08072914 @ case 1
    .4byte lbl_08072928 @ case 2
    .4byte lbl_0807294c @ case 3
    .4byte lbl_08072974 @ case 4
    .4byte lbl_080729a0 @ case 5
    .4byte lbl_080729e0 @ case 6
    .4byte lbl_08072a58 @ case 7
    .4byte lbl_08072ab8 @ case 8
    .4byte lbl_08072ad4 @ case 9
lbl_08072914:
    ldr r2, lbl_08072924 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x47
    movs r3, #0
    movs r1, #1
    strb r1, [r0]
    b lbl_080729ce
    .align 2, 0
lbl_08072924: .4byte 0x08754bc4
lbl_08072928:
    ldr r3, lbl_08072948 @ =0x08754bc4
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x46
    ldrb r0, [r0]
    movs r2, #3
    ands r2, r0
    cmp r2, #0
    beq lbl_0807293c
    b lbl_08072afe
lbl_0807293c:
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    ldr r0, [r3]
    strh r2, [r0, #0xa]
    b lbl_08072afe
    .align 2, 0
lbl_08072948: .4byte 0x08754bc4
lbl_0807294c:
    ldr r1, lbl_08072964 @ =0x08754bc4
    ldr r2, [r1]
    adds r0, r2, #0
    adds r0, #0x42
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    blt lbl_08072968
    ldrb r0, [r2, #8]
    adds r0, #1
    b lbl_0807296a
    .align 2, 0
lbl_08072964: .4byte 0x08754bc4
lbl_08072968:
    movs r0, #8
lbl_0807296a:
    strb r0, [r2, #8]
    ldr r1, [r1]
    movs r0, #0
    strh r0, [r1, #0xa]
    b lbl_08072afe
lbl_08072974:
    ldr r5, lbl_0807299c @ =0x08754bc4
    ldr r3, [r5]
    ldrh r0, [r3, #0xa]
    cmp r0, #0x3c
    bhi lbl_08072980
    b lbl_08072afe
lbl_08072980:
    adds r4, r3, #0
    adds r4, #0x66
    ldrh r1, [r4]
    movs r0, #0x18
    movs r2, #0
    orrs r0, r1
    strh r0, [r4]
    ldrb r0, [r3, #8]
    adds r0, #1
    strb r0, [r3, #8]
    ldr r0, [r5]
    strh r2, [r0, #0xa]
    b lbl_08072afe
    .align 2, 0
lbl_0807299c: .4byte 0x08754bc4
lbl_080729a0:
    ldr r4, lbl_080729c4 @ =0x030013b2
    ldrh r1, [r4]
    ldr r2, lbl_080729c8 @ =0x030013b0
    ldrh r0, [r2]
    adds r3, r1, r0
    cmp r3, #0
    beq lbl_080729cc
    cmp r1, #0
    beq lbl_080729b6
    subs r0, r1, #1
    strh r0, [r4]
lbl_080729b6:
    ldrh r0, [r2]
    cmp r0, #0
    bne lbl_080729be
    b lbl_08072afe
lbl_080729be:
    subs r0, #1
    strh r0, [r2]
    b lbl_08072afe
    .align 2, 0
lbl_080729c4: .4byte 0x030013b2
lbl_080729c8: .4byte 0x030013b0
lbl_080729cc:
    ldr r2, lbl_080729dc @ =0x08754bc4
lbl_080729ce:
    ldr r1, [r2]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    ldr r0, [r2]
    strh r3, [r0, #0xa]
    b lbl_08072afe
    .align 2, 0
lbl_080729dc: .4byte 0x08754bc4
lbl_080729e0:
    ldr r4, lbl_08072a4c @ =0x08754bc4
    ldr r1, [r4]
    adds r1, #0x41
    ldrb r0, [r1]
    adds r0, #1
    movs r5, #0
    strb r0, [r1]
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x42
    ldrb r0, [r0]
    strb r0, [r1, #0x12]
    ldr r0, [r4]
    movs r2, #0x82
    lsls r2, r2, #1
    adds r1, r0, r2
    ldrb r0, [r0, #0x12]
    lsls r0, r0, #0xb
    ldr r1, [r1]
    adds r1, r1, r0
    ldr r2, lbl_08072a50 @ =0x0600e000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    movs r0, #1
    bl chozo_statue_hint_determine_path
    movs r0, #1
    bl sub_0806db58
    ldr r1, [r4]
    movs r2, #0x85
    lsls r2, r2, #3
    adds r0, r1, r2
    ldr r2, lbl_08072a54 @ =0x0840d180
    ldrb r1, [r1, #0x12]
    adds r1, r1, r2
    ldrb r1, [r1]
    bl sub_08068128
    bl sub_0806889c
    ldr r1, [r4]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    ldr r0, [r4]
    strh r5, [r0, #0xa]
    b lbl_08072afe
    .align 2, 0
lbl_08072a4c: .4byte 0x08754bc4
lbl_08072a50: .4byte 0x0600e000
lbl_08072a54: .4byte 0x0840d180
lbl_08072a58:
    ldr r0, lbl_08072a8c @ =0x08754bc4
    mov ip, r0
    ldr r3, [r0]
    adds r6, r3, #0
    adds r6, #0x68
    ldrh r4, [r6]
    ldr r7, lbl_08072a90 @ =0x030013b2
    ldrh r2, [r7]
    lsls r0, r2, #8
    ldr r5, lbl_08072a94 @ =0x030013b0
    ldrh r1, [r5]
    orrs r0, r1
    cmp r4, r0
    beq lbl_08072a98
    lsrs r0, r4, #8
    cmp r0, r2
    bls lbl_08072a7e
    adds r0, r2, #1
    strh r0, [r7]
lbl_08072a7e:
    ldrh r1, [r5]
    ldrb r0, [r6]
    cmp r0, r1
    bls lbl_08072afe
    adds r0, r1, #1
    strh r0, [r5]
    b lbl_08072afe
    .align 2, 0
lbl_08072a8c: .4byte 0x08754bc4
lbl_08072a90: .4byte 0x030013b2
lbl_08072a94: .4byte 0x030013b0
lbl_08072a98:
    adds r4, r3, #0
    adds r4, #0x66
    ldrh r1, [r4]
    ldr r0, lbl_08072ab4 @ =0x0000ffe7
    ands r0, r1
    movs r1, #0
    movs r2, #0
    strh r0, [r4]
    strb r1, [r3, #8]
    mov r1, ip
    ldr r0, [r1]
    strh r2, [r0, #0xa]
    b lbl_08072afe
    .align 2, 0
lbl_08072ab4: .4byte 0x0000ffe7
lbl_08072ab8:
    ldr r3, lbl_08072ad0 @ =0x08754bc4
    ldr r2, [r3]
    ldrh r0, [r2, #0xa]
    cmp r0, #0x28
    bls lbl_08072afe
    ldrb r0, [r2, #8]
    adds r0, #1
    movs r1, #0
    strb r0, [r2, #8]
    ldr r0, [r3]
    strh r1, [r0, #0xa]
    b lbl_08072afe
    .align 2, 0
lbl_08072ad0: .4byte 0x08754bc4
lbl_08072ad4:
    ldr r0, lbl_08072ae4 @ =0x030013d2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08072ae8
    movs r2, #1
    mov r8, r2
    b lbl_08072afe
    .align 2, 0
lbl_08072ae4: .4byte 0x030013d2
lbl_08072ae8:
    ldr r2, lbl_08072b0c @ =0x03001380
    ldr r0, lbl_08072b10 @ =0x0300168c
    ldrh r0, [r0, #4]
    movs r1, #1
    orrs r0, r1
    ldrh r1, [r2]
    ands r0, r1
    cmp r0, #0
    beq lbl_08072afe
    movs r0, #1
    mov r8, r0
lbl_08072afe:
    mov r0, r8
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08072b0c: .4byte 0x03001380
lbl_08072b10: .4byte 0x0300168c

    thumb_func_start chozo_statue_hint_change_area
chozo_statue_hint_change_area: @ 0x08072b14
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0
    adds r6, r1, #0
    ldr r7, lbl_08072b70 @ =0x08345934
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    mov ip, r0
    ldr r0, lbl_08072b74 @ =0x08754bc4
    ldr r0, [r0]
    mov r5, ip
    ldrb r1, [r5]
    ldrb r5, [r0, #0x12]
    cmp r1, r5
    bne lbl_08072b78
    mov r5, ip
    ldrb r1, [r5, #4]
    adds r0, #0x42
    strb r1, [r0]
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrb r0, [r0, #2]
    strb r0, [r4]
    ldrb r0, [r4]
    lsls r0, r0, #5
    strh r0, [r2, #2]
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrb r0, [r0, #3]
    strb r0, [r6]
    ldrb r0, [r6]
    adds r0, #4
    lsls r0, r0, #5
    strh r0, [r2]
    movs r0, #1
    ldrsb r0, [r3, r0]
    cmp r0, #0
    bge lbl_08072bae
    movs r0, #2
    b lbl_08072bb0
    .align 2, 0
lbl_08072b70: .4byte 0x08345934
lbl_08072b74: .4byte 0x08754bc4
lbl_08072b78:
    adds r0, #0x42
    strb r1, [r0]
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrb r0, [r0, #6]
    strb r0, [r4]
    ldrb r0, [r4]
    lsls r0, r0, #5
    strh r0, [r2, #2]
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrb r0, [r0, #7]
    strb r0, [r6]
    ldrb r0, [r6]
    subs r0, #3
    lsls r0, r0, #5
    strh r0, [r2]
    movs r0, #1
    ldrsb r0, [r3, r0]
    cmp r0, #0
    bge lbl_08072bae
    movs r0, #2
    b lbl_08072bb0
lbl_08072bae:
    movs r0, #3
lbl_08072bb0:
    strb r0, [r2, #0xa]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start chozo_statue_hint_determine_path
chozo_statue_hint_determine_path: @ 0x08072bb8
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #0x14
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    ldr r1, lbl_08072bf4 @ =0x0840d038
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    add r2, sp, #4
    movs r3, #0x10
    bl DMATransfer
    ldr r0, lbl_08072bf8 @ =0x08754bc4
    ldr r0, [r0]
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08072bfc
    add r2, sp, #4
    ldrb r1, [r2, #0xb]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r2, #0xb]
    b lbl_08072c06
    .align 2, 0
lbl_08072bf4: .4byte 0x0840d038
lbl_08072bf8: .4byte 0x08754bc4
lbl_08072bfc:
    add r0, sp, #4
    ldrb r1, [r0, #0xb]
    movs r2, #3
    orrs r1, r2
    strb r1, [r0, #0xb]
lbl_08072c06:
    cmp r7, #0
    bne lbl_08072c80
    ldr r0, lbl_08072c74 @ =0x08754bc4
    ldr r0, [r0]
    movs r1, #0xba
    lsls r1, r1, #2
    adds r4, r0, r1
    movs r6, #0x20
    movs r5, #0xb
lbl_08072c18:
    str r6, [sp]
    movs r0, #3
    add r1, sp, #4
    adds r2, r4, #0
    movs r3, #0x10
    bl DMATransfer
    subs r5, #1
    adds r4, #0x10
    cmp r5, #0
    bge lbl_08072c18
    ldr r0, lbl_08072c74 @ =0x08754bc4
    ldr r0, [r0]
    movs r1, #0xea
    lsls r1, r1, #2
    adds r4, r0, r1
    movs r6, #0x20
    movs r5, #4
lbl_08072c3c:
    str r6, [sp]
    movs r0, #3
    add r1, sp, #4
    adds r2, r4, #0
    movs r3, #0x10
    bl DMATransfer
    subs r5, #1
    adds r4, #0x10
    cmp r5, #0
    bge lbl_08072c3c
    ldr r2, lbl_08072c74 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x41
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x40
    movs r1, #0xff
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x42
    movs r1, #1
    rsbs r1, r1, #0
    strb r1, [r0]
    bl check_activated_targets
    b lbl_08072cc8
    .align 2, 0
lbl_08072c74: .4byte 0x08754bc4
lbl_08072c78:
    adds r0, r2, #0
    adds r0, #0x40
    strb r5, [r0]
    b lbl_08072d42
lbl_08072c80:
    ldr r0, lbl_08072d9c @ =0x08754bc4
    ldr r0, [r0]
    movs r1, #0xba
    lsls r1, r1, #2
    adds r4, r0, r1
    movs r6, #0x20
    movs r5, #0xb
lbl_08072c8e:
    str r6, [sp]
    movs r0, #3
    add r1, sp, #4
    adds r2, r4, #0
    movs r3, #0x10
    bl DMATransfer
    subs r5, #1
    adds r4, #0x10
    cmp r5, #0
    bge lbl_08072c8e
    ldr r0, lbl_08072d9c @ =0x08754bc4
    ldr r0, [r0]
    movs r1, #0xea
    lsls r1, r1, #2
    adds r4, r0, r1
    movs r6, #0x20
    movs r5, #4
lbl_08072cb2:
    str r6, [sp]
    movs r0, #3
    add r1, sp, #4
    adds r2, r4, #0
    movs r3, #0x10
    bl DMATransfer
    subs r5, #1
    adds r4, #0x10
    cmp r5, #0
    bge lbl_08072cb2
lbl_08072cc8:
    ldr r2, lbl_08072d9c @ =0x08754bc4
    ldr r3, [r2]
    movs r0, #0xba
    lsls r0, r0, #2
    adds r4, r3, r0
    ldr r6, lbl_08072da0 @ =0x0840e02c
    ldrh r1, [r3]
    movs r0, #0x10
    ands r0, r1
    mov r8, r2
    cmp r0, #0
    bne lbl_08072ce2
    b lbl_08072e96
lbl_08072ce2:
    movs r1, #0xbe
    lsls r1, r1, #2
    adds r1, r1, r3
    mov sb, r1
    subs r6, #0xb4
    mov ip, r6
    cmp r7, #0
    bne lbl_08072d42
    movs r5, #0
    movs r0, #0xbe
    lsls r0, r0, #2
    adds r0, r0, r3
    mov sb, r0
    adds r2, r3, #0
    adds r0, r2, #0
    adds r0, #0x44
    ldrh r7, [r0]
    movs r3, #0
lbl_08072d06:
    adds r0, r7, #0
    asrs r0, r5
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08072d3a
    mov r1, ip
    adds r6, r3, r1
    ldrb r0, [r6]
    ldrb r1, [r2, #0x12]
    cmp r0, r1
    bne lbl_08072d3a
    ldrb r0, [r6, #3]
    ldrb r1, [r2, #0x14]
    cmp r0, r1
    bhi lbl_08072d3a
    ldrb r0, [r6, #4]
    cmp r1, r0
    bhi lbl_08072d3a
    ldrb r0, [r6, #1]
    ldrb r1, [r2, #0x13]
    cmp r0, r1
    bhi lbl_08072d3a
    ldrb r6, [r6, #2]
    cmp r1, r6
    bls lbl_08072c78
lbl_08072d3a:
    adds r3, #0xc
    adds r5, #1
    cmp r5, #0xf
    ble lbl_08072d06
lbl_08072d42:
    ldr r1, lbl_08072d9c @ =0x08754bc4
    mov r8, r1
    ldr r2, [r1]
    adds r0, r2, #0
    adds r0, #0x40
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #2
    mov r1, ip
    adds r6, r0, r1
    ldrb r3, [r6]
    ldrb r0, [r6, #6]
    cmp r3, r0
    bne lbl_08072da4
    ldrb r0, [r2, #0x13]
    lsls r0, r0, #5
    strh r0, [r4, #2]
    ldrb r0, [r2, #0x14]
    lsls r0, r0, #5
    strh r0, [r4]
    ldrb r0, [r6, #5]
    strb r0, [r4, #0xa]
    mov r4, sb
    mov r0, r8
    ldr r1, [r0]
    ldrb r0, [r6, #7]
    strb r0, [r1, #0x15]
    mov r0, r8
    ldr r1, [r0]
    ldrb r0, [r6, #8]
    strb r0, [r1, #0x16]
    ldrb r0, [r6, #9]
    strb r0, [r4, #0xa]
    mov r0, r8
    ldr r1, [r0]
    ldrb r0, [r1, #0x15]
    lsls r0, r0, #5
    strh r0, [r4, #2]
    ldrb r0, [r1, #0x16]
    lsls r0, r0, #5
    strh r0, [r4]
    adds r4, #0x10
    b lbl_08072fda
    .align 2, 0
lbl_08072d9c: .4byte 0x08754bc4
lbl_08072da0: .4byte 0x0840e02c
lbl_08072da4:
    ldr r1, lbl_08072de4 @ =0x087603f0
    ldr r0, lbl_08072de8 @ =0x03000054
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r7, [r0]
    ldrb r1, [r6, #6]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    adds r7, r7, r0
    ldrb r0, [r2, #0x12]
    cmp r0, r3
    bne lbl_08072dec
    ldrb r0, [r2, #0x13]
    lsls r0, r0, #5
    strh r0, [r4, #2]
    ldrb r0, [r2, #0x14]
    lsls r0, r0, #5
    strh r0, [r4]
    ldrb r0, [r6, #5]
    strb r0, [r4, #0xa]
    mov r4, sb
    mov r0, r8
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0x15
    adds r1, #0x16
    adds r2, r4, #0
    adds r3, r7, #0
    b lbl_08072e8e
    .align 2, 0
lbl_08072de4: .4byte 0x087603f0
lbl_08072de8: .4byte 0x03000054
lbl_08072dec:
    adds r0, r2, #0
    adds r0, #0x42
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, r1
    bne lbl_08072e50
    adds r0, r2, #0
    adds r0, #0x41
    ldrb r0, [r0]
    subs r0, #1
    lsls r5, r0, #1
    adds r0, r2, #0
    adds r0, #0x13
    adds r1, r2, #0
    adds r1, #0x14
    adds r3, r7, r5
    adds r2, r4, #0
    bl chozo_statue_hint_change_area
    ldrb r1, [r4, #0xb]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r4, #0xb]
    mov r4, sb
    mov r0, r8
    ldr r1, [r0]
    ldrb r0, [r6, #7]
    strb r0, [r1, #0x15]
    mov r0, r8
    ldr r1, [r0]
    ldrb r0, [r6, #8]
    strb r0, [r1, #0x16]
    ldrb r0, [r6, #7]
    lsls r0, r0, #5
    strh r0, [r4, #2]
    ldrb r0, [r6, #8]
    lsls r0, r0, #5
    strh r0, [r4]
    ldrb r0, [r6, #9]
    strb r0, [r4, #0xa]
    adds r4, #0x10
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x42
    movs r1, #0xff
    strb r1, [r0]
    b lbl_08072fda
lbl_08072e50:
    adds r0, r2, #0
    adds r0, #0x41
    ldrb r0, [r0]
    subs r0, #1
    lsls r5, r0, #1
    adds r0, r2, #0
    adds r0, #0x13
    adds r1, r2, #0
    adds r1, #0x14
    adds r3, r7, r5
    adds r2, r4, #0
    bl chozo_statue_hint_change_area
    ldrb r1, [r4, #0xb]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r4, #0xb]
    mov r4, sb
    mov r0, r8
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0x41
    ldrb r0, [r0]
    lsls r5, r0, #1
    adds r0, r1, #0
    adds r0, #0x15
    adds r1, #0x16
    adds r3, r7, r5
    adds r2, r4, #0
lbl_08072e8e:
    bl chozo_statue_hint_change_area
    adds r4, #0x10
    b lbl_08072fda
lbl_08072e96:
    adds r2, r3, #0
    adds r2, #0x44
    ldrh r0, [r2]
    cmp r0, #0
    bne lbl_08072ea2
    b lbl_08072fda
lbl_08072ea2:
    ldr r3, lbl_08072f70 @ =0x03000054
    ldrb r0, [r3]
    cmp r0, #5
    bls lbl_08072eac
    b lbl_08072fda
lbl_08072eac:
    ldr r1, lbl_08072f74 @ =0x087603f0
    ldrb r0, [r3]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r7, [r0]
    cmp r7, #0
    bne lbl_08072ebc
    b lbl_08072fda
lbl_08072ebc:
    movs r5, #0
    ldrh r0, [r2]
    movs r1, #1
    ands r0, r1
    subs r6, #0xb4
    mov ip, r6
    cmp r0, #0
    beq lbl_08072ede
    ldr r6, lbl_08072f78 @ =0x0840e038
    ldrb r0, [r6]
    movs r3, #0
    cmp r0, #0
    beq lbl_08072f04
lbl_08072ed6:
    adds r0, r3, r6
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_08072f04
lbl_08072ede:
    adds r5, #1
    cmp r5, #0xe
    bgt lbl_08072f04
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x44
    ldrh r0, [r0]
    asrs r0, r5
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08072ede
    ldr r6, lbl_08072f78 @ =0x0840e038
    lsls r0, r5, #1
    adds r1, r0, r6
    ldrb r1, [r1]
    adds r3, r0, #0
    cmp r1, #0
    bne lbl_08072ed6
lbl_08072f04:
    lsls r0, r5, #1
    adds r0, r0, r5
    lsls r0, r0, #2
    mov r1, ip
    adds r6, r0, r1
    ldrb r0, [r6, #6]
    cmp r0, #2
    bhi lbl_08072fda
    adds r1, r0, #0
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    adds r7, r7, r0
    ldr r5, lbl_08072f7c @ =0x08345934
    mov ip, r5
    ldr r0, lbl_08072f80 @ =0x08754bc4
    mov r8, r0
    adds r3, r7, #0
    movs r1, #0x3f
    mov sb, r1
    movs r6, #0x40
lbl_08072f2e:
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    mov r1, ip
    adds r2, r0, r1
    mov r0, r8
    ldr r1, [r0]
    ldrb r0, [r2]
    ldrb r1, [r1, #0x12]
    cmp r0, r1
    bne lbl_08072f8a
    ldrb r0, [r2, #2]
    lsls r0, r0, #5
    strh r0, [r4, #2]
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r0, [r0, #3]
    adds r0, #4
    lsls r0, r0, #5
    strh r0, [r4]
    ldrb r1, [r4, #0xb]
    mov r0, sb
    ands r0, r1
    orrs r0, r6
    strb r0, [r4, #0xb]
    movs r0, #1
    ldrsb r0, [r3, r0]
    cmp r0, #0
    bge lbl_08072f84
    movs r0, #2
    b lbl_08072f86
    .align 2, 0
lbl_08072f70: .4byte 0x03000054
lbl_08072f74: .4byte 0x087603f0
lbl_08072f78: .4byte 0x0840e038
lbl_08072f7c: .4byte 0x08345934
lbl_08072f80: .4byte 0x08754bc4
lbl_08072f84:
    movs r0, #3
lbl_08072f86:
    strb r0, [r4, #0xa]
    adds r4, #0x10
lbl_08072f8a:
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    mov r1, ip
    adds r2, r0, r1
    mov r0, r8
    ldr r1, [r0]
    ldrb r0, [r2, #4]
    ldrb r1, [r1, #0x12]
    cmp r0, r1
    bne lbl_08072fd2
    ldrb r0, [r2, #6]
    lsls r0, r0, #5
    strh r0, [r4, #2]
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r0, [r0, #7]
    subs r0, #3
    lsls r0, r0, #5
    strh r0, [r4]
    ldrb r1, [r4, #0xb]
    mov r0, sb
    ands r0, r1
    orrs r0, r6
    strb r0, [r4, #0xb]
    movs r0, #1
    ldrsb r0, [r3, r0]
    cmp r0, #0
    bge lbl_08072fcc
    movs r0, #2
    b lbl_08072fce
lbl_08072fcc:
    movs r0, #3
lbl_08072fce:
    strb r0, [r4, #0xa]
    adds r4, #0x10
lbl_08072fd2:
    adds r3, #2
    adds r0, r7, #5
    cmp r3, r0
    ble lbl_08072f2e
lbl_08072fda:
    movs r5, #0
    ldr r1, lbl_08073048 @ =0x08754bc4
    mov r8, r1
    movs r7, #0
lbl_08072fe2:
    mov r0, r8
    ldr r3, [r0]
    adds r0, r3, #0
    adds r0, #0x40
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r5, r0
    beq lbl_0807302e
    adds r0, r3, #0
    adds r0, #0x44
    ldrh r0, [r0]
    asrs r0, r5
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807302e
    ldr r0, lbl_0807304c @ =0x0840df78
    adds r6, r7, r0
    ldrb r0, [r6, #6]
    ldrb r3, [r3, #0x12]
    cmp r0, r3
    bne lbl_0807302e
    ldrb r0, [r6, #9]
    strb r0, [r4, #0xa]
    ldrb r0, [r6, #7]
    lsls r0, r0, #5
    strh r0, [r4, #2]
    ldrb r0, [r6, #8]
    lsls r0, r0, #5
    strh r0, [r4]
    ldrb r1, [r4, #0xb]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r4, #0xb]
    adds r4, #0x10
lbl_0807302e:
    adds r7, #0xc
    adds r5, #1
    cmp r5, #0xf
    ble lbl_08072fe2
    bl draw_boss_flames
    add sp, #0x14
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08073048: .4byte 0x08754bc4
lbl_0807304c: .4byte 0x0840df78

    thumb_func_start chozo_statue_hint_check_events_flags
chozo_statue_hint_check_events_flags: @ 0x08073050
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    movs r4, #1
    rsbs r4, r4, #0
    ldr r0, lbl_08073080 @ =0x0840e058
    adds r0, r5, r0
    ldrb r1, [r0]
    movs r0, #3
    bl EventFunction
    cmp r0, #0
    beq lbl_080730c4
    ldr r3, lbl_08073084 @ =0x0840e038
    lsls r2, r5, #1
    adds r0, r2, r3
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807308c
    ldr r1, lbl_08073088 @ =0x03001530
    adds r0, r3, #1
    adds r0, r2, r0
    ldrb r2, [r1, #0xc]
    b lbl_08073098
    .align 2, 0
lbl_08073080: .4byte 0x0840e058
lbl_08073084: .4byte 0x0840e038
lbl_08073088: .4byte 0x03001530
lbl_0807308c:
    cmp r0, #1
    bne lbl_080730a8
    ldr r1, lbl_080730a4 @ =0x03001530
    adds r0, r3, #1
    adds r0, r2, r0
    ldrb r2, [r1, #0xe]
lbl_08073098:
    ldrb r1, [r0]
    ands r1, r2
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r4, r0, #0x1f
    b lbl_080730bc
    .align 2, 0
lbl_080730a4: .4byte 0x03001530
lbl_080730a8:
    cmp r0, #2
    bne lbl_080730bc
    adds r0, r3, #1
    adds r0, r2, r0
    ldrb r1, [r0]
    movs r0, #3
    bl EventFunction
    lsls r0, r0, #0x18
    asrs r4, r0, #0x18
lbl_080730bc:
    cmp r4, #0
    blt lbl_080730c4
    movs r0, #1
    eors r4, r0
lbl_080730c4:
    adds r0, r4, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start check_activated_targets
check_activated_targets: @ 0x080730cc
    push {r4, lr}
    ldr r0, lbl_08073104 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x44
    movs r1, #0
    strh r1, [r0]
    movs r4, #0
lbl_080730da:
    lsls r0, r4, #0x18
    lsrs r0, r0, #0x18
    bl chozo_statue_hint_check_events_flags
    lsls r0, r0, #0x18
    cmp r0, #0
    ble lbl_080730f8
    ldr r0, lbl_08073104 @ =0x08754bc4
    ldr r2, [r0]
    adds r2, #0x44
    movs r0, #1
    lsls r0, r4
    ldrh r1, [r2]
    orrs r0, r1
    strh r0, [r2]
lbl_080730f8:
    adds r4, #1
    cmp r4, #0xf
    ble lbl_080730da
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08073104: .4byte 0x08754bc4

    thumb_func_start check_non_explored_area_has_hint
check_non_explored_area_has_hint: @ 0x08073108
    push {r4, r5, lr}
    ldr r0, lbl_08073148 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xb9
    movs r1, #0
    strb r1, [r0]
    movs r4, #0
    ldr r5, lbl_0807314c @ =0x0840df78
lbl_08073118:
    lsls r0, r4, #0x18
    lsrs r0, r0, #0x18
    bl chozo_statue_hint_check_events_flags
    lsls r0, r0, #0x18
    cmp r0, #0
    ble lbl_08073138
    ldr r0, lbl_08073148 @ =0x08754bc4
    ldr r2, [r0]
    adds r2, #0xb9
    movs r0, #1
    ldrb r1, [r5, #6]
    lsls r0, r1
    ldrb r1, [r2]
    orrs r0, r1
    strb r0, [r2]
lbl_08073138:
    adds r5, #0xc
    adds r4, #1
    cmp r4, #0xf
    ble lbl_08073118
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08073148: .4byte 0x08754bc4
lbl_0807314c: .4byte 0x0840df78

    thumb_func_start draw_boss_flames
draw_boss_flames: @ 0x08073150
    push {r4, r5, lr}
    sub sp, #4
    ldr r4, lbl_080731c4 @ =0x08754bc4
    ldr r2, [r4]
    adds r2, #0xec
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x18
    bl BitFill
    ldr r1, [r4]
    ldrb r0, [r1, #0x12]
    adds r5, r4, #0
    cmp r0, #0
    bne lbl_0807323e
    adds r0, r1, #0
    adds r0, #0x44
    ldrh r1, [r0]
    movs r0, #0x80
    lsls r0, r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080731d6
    movs r1, #0
lbl_08073184:
    ldr r2, [r5]
    lsls r4, r1, #4
    adds r0, r2, r4
    ldr r3, lbl_080731c8 @ =0x000002f2
    adds r0, r0, r3
    ldrb r0, [r0]
    cmp r0, #0xa
    bne lbl_080731d0
    adds r0, r2, #0
    adds r0, #0xef
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0xf1
    movs r1, #1
    strb r1, [r0]
    ldr r3, [r5]
    adds r2, r3, r4
    ldr r4, lbl_080731cc @ =0x000002ea
    adds r0, r2, r4
    ldrh r1, [r0]
    subs r1, #8
    strh r1, [r0]
    adds r0, r3, #0
    adds r0, #0xf4
    strh r1, [r0]
    movs r0, #0xba
    lsls r0, r0, #2
    adds r2, r2, r0
    ldrh r0, [r2]
    adds r3, #0xf6
    strh r0, [r3]
    b lbl_080731d6
    .align 2, 0
lbl_080731c4: .4byte 0x08754bc4
lbl_080731c8: .4byte 0x000002f2
lbl_080731cc: .4byte 0x000002ea
lbl_080731d0:
    adds r1, #1
    cmp r1, #0xb
    ble lbl_08073184
lbl_080731d6:
    ldr r0, [r5]
    adds r0, #0x44
    ldrh r1, [r0]
    movs r0, #0x80
    lsls r0, r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807323e
    movs r1, #0
lbl_080731e8:
    ldr r2, [r5]
    lsls r4, r1, #4
    adds r0, r2, r4
    ldr r3, lbl_08073230 @ =0x000002f2
    adds r0, r0, r3
    ldrb r0, [r0]
    cmp r0, #0xe
    bne lbl_08073238
    adds r0, r2, #0
    adds r0, #0xfb
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0xfd
    movs r1, #1
    strb r1, [r0]
    ldr r3, [r5]
    adds r2, r3, r4
    ldr r4, lbl_08073234 @ =0x000002ea
    adds r0, r2, r4
    ldrh r1, [r0]
    adds r1, #8
    strh r1, [r0]
    movs r4, #0x80
    lsls r4, r4, #1
    adds r0, r3, r4
    strh r1, [r0]
    movs r0, #0xba
    lsls r0, r0, #2
    adds r2, r2, r0
    ldrh r0, [r2]
    movs r2, #0x81
    lsls r2, r2, #1
    adds r1, r3, r2
    strh r0, [r1]
    b lbl_0807323e
    .align 2, 0
lbl_08073230: .4byte 0x000002f2
lbl_08073234: .4byte 0x000002ea
lbl_08073238:
    adds r1, #1
    cmp r1, #0xb
    ble lbl_080731e8
lbl_0807323e:
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_08073248
sub_08073248: @ 0x08073248
    push {lr}
    adds r2, r0, #0
    ldrb r0, [r2, #2]
    cmp r0, #0
    beq lbl_08073292
    movs r0, #5
    ldrsb r0, [r2, r0]
    ldrh r3, [r2]
    adds r1, r0, r3
    strh r1, [r2]
    ldrb r3, [r2, #5]
    cmp r0, #0
    ble lbl_0807326e
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x3e
    bls lbl_08073278
    movs r0, #0xff
    b lbl_08073276
lbl_0807326e:
    lsls r0, r1, #0x10
    cmp r0, #0
    bne lbl_08073278
    movs r0, #1
lbl_08073276:
    strb r0, [r2, #5]
lbl_08073278:
    ldr r0, lbl_08073298 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r2, #3]
    lsls r0, r0, #4
    adds r1, r1, r0
    ldrh r0, [r2]
    lsrs r0, r0, #2
    ldrh r2, [r2, #0xa]
    adds r0, r0, r2
    movs r2, #0xba
    lsls r2, r2, #2
    adds r1, r1, r2
    strh r0, [r1]
lbl_08073292:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08073298: .4byte 0x08754bc4

    thumb_func_start read_sram
read_sram: @ 0x0807329c
    push {r4, r5, lr}
    movs r4, #3
    ldr r5, lbl_080732b8 @ =0x03000c1c
lbl_080732a2:
    cmp r4, #0
    beq lbl_080732b2
    bl sub_08074304
    ldrb r0, [r5]
    subs r4, #1
    cmp r0, #0
    bne lbl_080732a2
lbl_080732b2:
    movs r4, #3
    b lbl_080732c2
    .align 2, 0
lbl_080732b8: .4byte 0x03000c1c
lbl_080732bc:
    subs r4, #1
    cmp r4, #0
    beq lbl_080732d2
lbl_080732c2:
    movs r0, #0xe
    bl sub_08000c48
    movs r0, #0x10
    bl sub_08000c48
    cmp r0, #0
    bne lbl_080732bc
lbl_080732d2:
    bl sub_08073394
    bl sub_080743a4
    bl sub_08074a7c
    bl sub_08075010
    bl sub_08074da4
    cmp r0, #0
    beq lbl_080732f4
    ldr r1, lbl_080732fc @ =0x03000020
    movs r0, #2
    strb r0, [r1]
    bl sub_08074cf8
lbl_080732f4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080732fc: .4byte 0x03000020

    thumb_func_start sub_08073300
sub_08073300: @ 0x08073300
    push {r4, r5, r6, lr}
    ldr r2, lbl_08073388 @ =0x08754bc8
    ldr r4, [r2]
    movs r0, #0x30
    strb r0, [r4, #8]
    movs r0, #0x31
    strb r0, [r4, #9]
    ldrh r0, [r4, #0xa]
    adds r0, #1
    strh r0, [r4, #0xa]
    ldr r1, lbl_0807338c @ =0x03000014
    ldrh r0, [r1]
    strh r0, [r4, #0xc]
    ldrb r0, [r1, #4]
    strb r0, [r4, #0xe]
    movs r0, #2
    strb r0, [r4, #0xf]
    movs r0, #0x34
    strb r0, [r4, #0x10]
    ldrb r0, [r1, #5]
    strb r0, [r4, #0x11]
    ldrb r0, [r1, #6]
    strb r0, [r4, #0x12]
    ldrb r0, [r1, #7]
    strb r0, [r4, #0x13]
    ldrh r0, [r1, #2]
    strh r0, [r4, #0x14]
    ldr r0, [r1, #8]
    str r0, [r4, #0x18]
    movs r3, #0
    adds r6, r2, #0
    adds r2, r4, #0
    adds r2, #0x1c
    ldr r5, lbl_08073390 @ =0x08411468
lbl_08073344:
    adds r0, r2, r3
    adds r1, r3, r5
    ldrb r1, [r1]
    strb r1, [r0]
    adds r3, #1
    cmp r3, #0x13
    ble lbl_08073344
    movs r0, #0
    str r0, [r4]
    subs r0, #1
    str r0, [r4, #4]
    ldr r2, [r6]
    movs r1, #0
    movs r3, #3
lbl_08073360:
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    subs r3, #1
    cmp r3, #0
    bge lbl_08073360
    str r1, [r4]
    mvns r0, r1
    str r0, [r4, #4]
    movs r0, #0
    bl sub_08000c48
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08073388: .4byte 0x08754bc8
lbl_0807338c: .4byte 0x03000014
lbl_08073390: .4byte 0x08411468

    thumb_func_start sub_08073394
sub_08073394: @ 0x08073394
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #8
    movs r0, #0
    bl sub_080734e8
    adds r6, r0, #0
    movs r0, #1
    bl sub_080734e8
    mov r8, r0
    movs r0, #2
    bl sub_080734e8
    adds r7, r0, #0
    cmp r6, #0
    beq lbl_08073470
    add r0, sp, #4
    ldr r1, lbl_08073404 @ =0x0000ffff
    adds r5, r1, #0
    strh r5, [r0]
    ldr r1, lbl_08073408 @ =0x040000d4
    str r0, [r1]
    ldr r3, lbl_0807340c @ =0x08754bc8
    mov sb, r3
    ldr r2, [r3]
    str r2, [r1, #4]
    ldr r4, lbl_08073410 @ =0x81000020
    str r4, [r1, #8]
    ldr r0, [r1, #8]
    cmp r7, #0
    beq lbl_08073432
    add r0, sp, #4
    strh r5, [r0]
    str r0, [r1]
    ldr r3, lbl_08073414 @ =0x00006d40
    adds r0, r2, r3
    str r0, [r1, #4]
    str r4, [r1, #8]
    ldr r0, [r1, #8]
    adds r3, r2, #0
    mov r0, r8
    cmp r0, #0
    beq lbl_08073418
    add r0, sp, #4
    strh r5, [r0]
    str r0, [r1]
    adds r0, r3, #0
    adds r0, #0x40
    str r0, [r1, #4]
    str r4, [r1, #8]
    ldr r0, [r1, #8]
    b lbl_080734a4
    .align 2, 0
lbl_08073404: .4byte 0x0000ffff
lbl_08073408: .4byte 0x040000d4
lbl_0807340c: .4byte 0x08754bc8
lbl_08073410: .4byte 0x81000020
lbl_08073414: .4byte 0x00006d40
lbl_08073418:
    adds r1, r2, #0
    adds r1, #0x40
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    movs r6, #0
    movs r0, #0
    bl sub_08000c48
    b lbl_080734a4
lbl_08073432:
    ldr r3, lbl_0807346c @ =0x00006d40
    adds r1, r2, r3
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    movs r6, #0
    movs r0, #0
    bl sub_08000c48
    mov r0, r8
    cmp r0, #0
    beq lbl_080734a4
    mov r3, sb
    ldr r1, [r3]
    adds r2, r1, #0
    adds r2, #0x40
    str r4, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    movs r0, #1
    bl sub_08000c48
    b lbl_080734a4
    .align 2, 0
lbl_0807346c: .4byte 0x00006d40
lbl_08073470:
    ldr r4, lbl_080734b0 @ =0x08754bc8
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x40
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    movs r0, #1
    bl sub_08000c48
    cmp r7, #0
    beq lbl_080734a4
    ldr r1, [r4]
    ldr r0, lbl_080734b4 @ =0x00006d40
    adds r2, r1, r0
    str r5, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    movs r0, #2
    bl sub_08000c48
lbl_080734a4:
    cmp r6, #0
    bne lbl_080734b8
    bl sub_08073584
    b lbl_080734d0
    .align 2, 0
lbl_080734b0: .4byte 0x08754bc8
lbl_080734b4: .4byte 0x00006d40
lbl_080734b8:
    bl sub_08000c04
    ldr r1, lbl_080734e0 @ =0x0841147c
    ldr r2, lbl_080734e4 @ =0x03000014
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0xc
    bl DMATransfer
    bl sub_08073300
lbl_080734d0:
    add sp, #8
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080734e0: .4byte 0x0841147c
lbl_080734e4: .4byte 0x03000014

    thumb_func_start sub_080734e8
sub_080734e8: @ 0x080734e8
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r4, #0
    cmp r0, #2
    bne lbl_08073508
    ldr r0, lbl_08073500 @ =0x08754bc8
    ldr r0, [r0]
    ldr r1, lbl_08073504 @ =0x00006d40
    adds r0, r0, r1
    b lbl_0807351c
    .align 2, 0
lbl_08073500: .4byte 0x08754bc8
lbl_08073504: .4byte 0x00006d40
lbl_08073508:
    cmp r0, #1
    bne lbl_08073518
    ldr r0, lbl_08073514 @ =0x08754bc8
    ldr r0, [r0]
    adds r0, #0x40
    b lbl_0807351c
    .align 2, 0
lbl_08073514: .4byte 0x08754bc8
lbl_08073518:
    ldr r0, lbl_0807357c @ =0x08754bc8
    ldr r0, [r0]
lbl_0807351c:
    movs r2, #0
    adds r1, r0, #0
    ldr r7, [r1]
    adds r5, r1, #0
    adds r5, #0x1c
    ldr r0, [r1, #4]
    mov ip, r0
    movs r3, #3
lbl_0807352c:
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    subs r3, #1
    cmp r3, #0
    bge lbl_0807352c
    cmp r7, r2
    beq lbl_0807354a
    movs r0, #1
    orrs r4, r0
lbl_0807354a:
    movs r3, #0
    adds r2, r5, #0
    ldr r6, lbl_08073580 @ =0x08411468
    movs r5, #2
lbl_08073552:
    adds r0, r2, r3
    adds r1, r3, r6
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_08073560
    orrs r4, r5
lbl_08073560:
    adds r3, #1
    cmp r3, #0x13
    ble lbl_08073552
    mov r1, ip
    mvns r0, r1
    cmp r7, r0
    beq lbl_08073572
    movs r0, #4
    orrs r4, r0
lbl_08073572:
    adds r0, r4, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807357c: .4byte 0x08754bc8
lbl_08073580: .4byte 0x08411468

    thumb_func_start sub_08073584
sub_08073584: @ 0x08073584
    ldr r0, lbl_080735a8 @ =0x08754bc8
    ldr r1, [r0]
    ldr r2, lbl_080735ac @ =0x03000014
    ldrh r0, [r1, #0xc]
    strh r0, [r2]
    ldrb r0, [r1, #0xe]
    strb r0, [r2, #4]
    ldrb r0, [r1, #0x11]
    strb r0, [r2, #5]
    ldrb r0, [r1, #0x12]
    strb r0, [r2, #6]
    ldrb r0, [r1, #0x13]
    strb r0, [r2, #7]
    ldrh r0, [r1, #0x14]
    strh r0, [r2, #2]
    ldr r0, [r1, #0x18]
    str r0, [r2, #8]
    bx lr
    .align 2, 0
lbl_080735a8: .4byte 0x08754bc8
lbl_080735ac: .4byte 0x03000014

    thumb_func_start sub_080735b0
sub_080735b0: @ 0x080735b0
    push {r4, r5, lr}
    sub sp, #4
    ldr r1, lbl_080735d8 @ =0x03000043
    ldrb r0, [r1]
    ldr r2, lbl_080735dc @ =0x03000c21
    cmp r0, #0
    bne lbl_080735c4
    strb r0, [r2]
    movs r0, #1
    strb r0, [r1]
lbl_080735c4:
    ldrb r0, [r2]
    cmp r0, #4
    bls lbl_080735cc
    b lbl_080736bc
lbl_080735cc:
    lsls r0, r0, #2
    ldr r1, lbl_080735e0 @ =lbl_080735e4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080735d8: .4byte 0x03000043
lbl_080735dc: .4byte 0x03000c21
lbl_080735e0: .4byte lbl_080735e4
lbl_080735e4: @ jump table
    .4byte lbl_080735f8 @ case 0
    .4byte lbl_08073658 @ case 1
    .4byte lbl_08073668 @ case 2
    .4byte lbl_08073674 @ case 3
    .4byte lbl_080736bc @ case 4
lbl_080735f8:
    ldr r5, lbl_08073648 @ =0x03000024
    movs r3, #1
    strb r3, [r5, #1]
    ldr r4, lbl_0807364c @ =0x03000c24
    ldr r2, lbl_08073650 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r2, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r4
    strb r3, [r0, #0x12]
    movs r1, #0
    ldrsb r1, [r2, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r4
    ldrb r0, [r0, #0x11]
    strb r0, [r5]
    ldr r3, lbl_08073654 @ =0x08754bc8
    movs r1, #0
    ldrsb r1, [r2, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r2, [r3]
    adds r2, r2, r0
    movs r3, #0xc0
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    b lbl_080736a2
    .align 2, 0
lbl_08073648: .4byte 0x03000024
lbl_0807364c: .4byte 0x03000c24
lbl_08073650: .4byte 0x03000c1e
lbl_08073654: .4byte 0x08754bc8
lbl_08073658:
    bl sub_080736d8
    ldr r1, lbl_08073664 @ =0x03000c20
    movs r0, #0
    strb r0, [r1]
    b lbl_080736a2
    .align 2, 0
lbl_08073664: .4byte 0x03000c20
lbl_08073668:
    movs r0, #0
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_080736c4
    b lbl_080736a2
lbl_08073674:
    ldr r2, lbl_080736ac @ =0x08754bc8
    ldr r0, lbl_080736b0 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r1, r0, #0
    adds r1, #0x80
    ldr r2, [r2]
    adds r1, r2, r1
    ldr r3, lbl_080736b4 @ =0x000036e0
    adds r0, r0, r3
    adds r2, r2, r0
    movs r3, #0x91
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_080736a2:
    ldr r1, lbl_080736b8 @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_080736c4
    .align 2, 0
lbl_080736ac: .4byte 0x08754bc8
lbl_080736b0: .4byte 0x03000c1e
lbl_080736b4: .4byte 0x000036e0
lbl_080736b8: .4byte 0x03000c21
lbl_080736bc:
    ldr r1, lbl_080736d4 @ =0x03000043
    movs r0, #0
    strb r0, [r1]
    strb r0, [r2]
lbl_080736c4:
    ldr r0, lbl_080736d4 @ =0x03000043
    ldrb r1, [r0]
    movs r0, #1
    eors r0, r1
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080736d4: .4byte 0x03000043

    thumb_func_start sub_080736d8
sub_080736d8: @ 0x080736d8
    push {r4, lr}
    ldr r2, lbl_080737a4 @ =0x08754bc8
    ldr r0, lbl_080737a8 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r1, [r2]
    adds r4, r1, r0
    ldr r1, lbl_080737ac @ =0x08411410
    adds r0, r4, #0
    movs r2, #0x10
    bl write_string
    adds r0, r4, #0
    adds r0, #0x4f
    ldr r1, lbl_080737b0 @ =0x08411420
    movs r2, #0x10
    bl write_string
    movs r0, #0
    str r0, [r4, #0x10]
    subs r0, #1
    str r0, [r4, #0x14]
    ldr r1, lbl_080737b4 @ =0x03000024
    ldrb r0, [r1, #1]
    strb r0, [r4, #0x19]
    ldrb r0, [r1]
    strb r0, [r4, #0x18]
    ldr r0, lbl_080737b8 @ =0x0300002c
    ldrb r1, [r0]
    adds r0, r4, #0
    adds r0, #0x3c
    strb r1, [r0]
    ldr r0, lbl_080737bc @ =0x0300002e
    ldrb r0, [r0]
    adds r1, r4, #0
    adds r1, #0x3e
    strb r0, [r1]
    ldr r0, lbl_080737c0 @ =0x03000020
    ldrb r0, [r0]
    strb r0, [r4, #0x1a]
    ldr r2, lbl_080737c4 @ =0x03000154
    movs r0, #0x80
    lsls r0, r0, #2
    adds r1, r4, r0
    movs r3, #0xb
lbl_0807373e:
    ldm r2!, {r0}
    stm r1!, {r0}
    subs r3, #1
    cmp r3, #0
    bge lbl_0807373e
    movs r1, #0x94
    lsls r1, r1, #2
    adds r0, r4, r1
    ldr r1, lbl_080737c8 @ =0x08411430
    movs r2, #0x10
    bl write_string
    ldr r2, lbl_080737a4 @ =0x08754bc8
    ldr r0, lbl_080737a8 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r1, [r2]
    adds r1, r1, r0
    movs r2, #0
    movs r3, #0x90
lbl_08073772:
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    subs r3, #1
    cmp r3, #0
    bge lbl_08073772
    str r2, [r4, #0x10]
    mvns r0, r2
    str r0, [r4, #0x14]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080737a4: .4byte 0x08754bc8
lbl_080737a8: .4byte 0x03000c1e
lbl_080737ac: .4byte 0x08411410
lbl_080737b0: .4byte 0x08411420
lbl_080737b4: .4byte 0x03000024
lbl_080737b8: .4byte 0x0300002c
lbl_080737bc: .4byte 0x0300002e
lbl_080737c0: .4byte 0x03000020
lbl_080737c4: .4byte 0x03000154
lbl_080737c8: .4byte 0x08411430

    thumb_func_start sub_080737cc
sub_080737cc: @ 0x080737cc
    push {r4, r5, lr}
    sub sp, #4
    movs r5, #0
    ldr r0, lbl_080737e8 @ =0x03000c21
    ldrb r1, [r0]
    adds r2, r0, #0
    cmp r1, #5
    bls lbl_080737de
    b lbl_080738e0
lbl_080737de:
    lsls r0, r1, #2
    ldr r1, lbl_080737ec @ =lbl_080737f0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080737e8: .4byte 0x03000c21
lbl_080737ec: .4byte lbl_080737f0
lbl_080737f0: @ jump table
    .4byte lbl_08073808 @ case 0
    .4byte lbl_0807381c @ case 1
    .4byte lbl_08073828 @ case 2
    .4byte lbl_08073868 @ case 3
    .4byte lbl_08073898 @ case 4
    .4byte lbl_080738e0 @ case 5
lbl_08073808:
    ldr r1, lbl_08073818 @ =0x03000c20
    movs r0, #0
    strb r0, [r1]
    ldrb r0, [r2]
    adds r0, #1
    strb r0, [r2]
    b lbl_080738e6
    .align 2, 0
lbl_08073818: .4byte 0x03000c20
lbl_0807381c:
    movs r0, #2
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_080738e6
    b lbl_080738c6
lbl_08073828:
    movs r2, #1
    ldr r0, lbl_08073858 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_08073838
    movs r2, #8
lbl_08073838:
    ldr r1, lbl_0807385c @ =0x03000024
    ldr r0, lbl_08073860 @ =0x0300002c
    ldrb r0, [r0]
    lsls r2, r0
    ldrb r0, [r1]
    orrs r2, r0
    movs r4, #0
    strb r2, [r1]
    bl check_set_new_best_completion_time
    bl sub_080739e8
    ldr r0, lbl_08073864 @ =0x03000c20
    strb r4, [r0]
    b lbl_080738c6
    .align 2, 0
lbl_08073858: .4byte 0x03000020
lbl_0807385c: .4byte 0x03000024
lbl_08073860: .4byte 0x0300002c
lbl_08073864: .4byte 0x03000c20
lbl_08073868:
    movs r0, #0
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_080738e6
    ldr r2, lbl_0807388c @ =0x03000c24
    ldr r0, lbl_08073890 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldr r1, lbl_08073894 @ =0x03000024
    ldrb r1, [r1]
    strb r1, [r0, #0x11]
    b lbl_080738c6
    .align 2, 0
lbl_0807388c: .4byte 0x03000c24
lbl_08073890: .4byte 0x03000c1e
lbl_08073894: .4byte 0x03000024
lbl_08073898:
    ldr r2, lbl_080738d0 @ =0x08754bc8
    ldr r0, lbl_080738d4 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r1, r0, #0
    adds r1, #0x80
    ldr r2, [r2]
    adds r1, r2, r1
    ldr r3, lbl_080738d8 @ =0x000036e0
    adds r0, r0, r3
    adds r2, r2, r0
    movs r3, #0x91
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_080738c6:
    ldr r1, lbl_080738dc @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_080738e6
    .align 2, 0
lbl_080738d0: .4byte 0x08754bc8
lbl_080738d4: .4byte 0x03000c1e
lbl_080738d8: .4byte 0x000036e0
lbl_080738dc: .4byte 0x03000c21
lbl_080738e0:
    movs r0, #0
    strb r0, [r2]
    movs r5, #1
lbl_080738e6:
    adds r0, r5, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start check_set_new_best_completion_time
check_set_new_best_completion_time: @ 0x080738f0
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    ldr r0, lbl_080739cc @ =0x083459a0
    mov r8, r0
    ldrb r4, [r0, #0x1c]
    ldr r7, lbl_080739d0 @ =0x03001530
    ldrh r0, [r7]
    ldr r2, lbl_080739d4 @ =0x083459c4
    ldr r1, lbl_080739d8 @ =0x0300002c
    ldrb r1, [r1]
    mov sb, r1
    lsls r1, r1, #2
    adds r6, r1, r2
    ldrb r1, [r6]
    bl __divsi3
    eors r0, r4
    rsbs r1, r0, #0
    orrs r1, r0
    lsrs r5, r1, #0x1f
    mov r2, r8
    ldrb r4, [r2, #0x1d]
    ldrh r0, [r7, #2]
    ldrb r1, [r6, #1]
    bl __divsi3
    cmp r4, r0
    beq lbl_08073930
    movs r0, #2
    orrs r5, r0
lbl_08073930:
    ldrb r0, [r7, #4]
    ldrb r1, [r6, #2]
    bl __udivsi3
    mov r3, r8
    ldrb r1, [r3, #0x1e]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r1, r0
    beq lbl_08073948
    movs r0, #4
    orrs r5, r0
lbl_08073948:
    ldrb r0, [r7, #5]
    ldrb r1, [r6, #3]
    bl __udivsi3
    mov r2, r8
    ldrb r1, [r2, #0x1f]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r1, r0
    beq lbl_08073960
    movs r0, #8
    orrs r5, r0
lbl_08073960:
    movs r0, #0
    cmp r5, #0
    bne lbl_08073968
    movs r0, #6
lbl_08073968:
    adds r5, r0, #0
    ldr r0, lbl_080739dc @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08073978
    adds r5, #3
lbl_08073978:
    add r5, sb
    ldr r1, lbl_080739e0 @ =0x03000154
    lsls r0, r5, #2
    adds r4, r0, r1
    ldrb r0, [r4]
    lsls r2, r0, #3
    subs r2, r2, r0
    lsls r2, r2, #5
    adds r2, r2, r0
    lsls r2, r2, #4
    ldrb r1, [r4, #1]
    lsls r0, r1, #4
    subs r0, r0, r1
    lsls r0, r0, #2
    adds r2, r2, r0
    ldrb r3, [r4, #2]
    adds r2, r2, r3
    ldr r5, lbl_080739e4 @ =0x03000150
    ldrb r0, [r5]
    lsls r1, r0, #3
    subs r1, r1, r0
    lsls r1, r1, #5
    adds r1, r1, r0
    lsls r1, r1, #4
    ldrb r3, [r5, #1]
    lsls r0, r3, #4
    subs r0, r0, r3
    lsls r0, r0, #2
    adds r1, r1, r0
    ldrb r0, [r5, #2]
    adds r1, r1, r0
    cmp r2, r1
    ble lbl_080739be
    ldr r0, [r5]
    str r0, [r4]
lbl_080739be:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080739cc: .4byte 0x083459a0
lbl_080739d0: .4byte 0x03001530
lbl_080739d4: .4byte 0x083459c4
lbl_080739d8: .4byte 0x0300002c
lbl_080739dc: .4byte 0x03000020
lbl_080739e0: .4byte 0x03000154
lbl_080739e4: .4byte 0x03000150

    thumb_func_start sub_080739e8
sub_080739e8: @ 0x080739e8
    push {r4, r5, r6, lr}
    ldr r2, lbl_08073a74 @ =0x08754bc8
    ldr r3, lbl_08073a78 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r3, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r1, [r2]
    adds r4, r1, r0
    movs r0, #0
    str r0, [r4, #0x10]
    subs r0, #1
    str r0, [r4, #0x14]
    ldr r0, lbl_08073a7c @ =0x03000024
    ldrb r0, [r0]
    strb r0, [r4, #0x18]
    adds r6, r2, #0
    adds r5, r3, #0
    ldr r2, lbl_08073a80 @ =0x03000154
    movs r0, #0x80
    lsls r0, r0, #2
    adds r1, r4, r0
    movs r3, #0xb
lbl_08073a1e:
    ldm r2!, {r0}
    stm r1!, {r0}
    subs r3, #1
    cmp r3, #0
    bge lbl_08073a1e
    movs r0, #0
    ldrsb r0, [r5, r0]
    lsls r1, r0, #3
    adds r1, r1, r0
    lsls r1, r1, #4
    adds r1, r1, r0
    lsls r1, r1, #5
    adds r1, #0x80
    ldr r0, [r6]
    adds r2, r0, r1
    movs r1, #0
    movs r3, #0x90
lbl_08073a40:
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    ldm r2!, {r0}
    adds r1, r1, r0
    subs r3, #1
    cmp r3, #0
    bge lbl_08073a40
    str r1, [r4, #0x10]
    mvns r0, r1
    str r0, [r4, #0x14]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08073a74: .4byte 0x08754bc8
lbl_08073a78: .4byte 0x03000c1e
lbl_08073a7c: .4byte 0x03000024
lbl_08073a80: .4byte 0x03000154

    thumb_func_start sub_08073a84
sub_08073a84: @ 0x08073a84
    push {r4, r5, lr}
    sub sp, #4
    movs r5, #0
    ldr r0, lbl_08073aa0 @ =0x03000c21
    ldrb r1, [r0]
    adds r2, r0, #0
    cmp r1, #5
    bls lbl_08073a96
    b lbl_08073b94
lbl_08073a96:
    lsls r0, r1, #2
    ldr r1, lbl_08073aa4 @ =lbl_08073aa8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08073aa0: .4byte 0x03000c21
lbl_08073aa4: .4byte lbl_08073aa8
lbl_08073aa8: @ jump table
    .4byte lbl_08073ac0 @ case 0
    .4byte lbl_08073ad4 @ case 1
    .4byte lbl_08073ae0 @ case 2
    .4byte lbl_08073b1c @ case 3
    .4byte lbl_08073b4c @ case 4
    .4byte lbl_08073b94 @ case 5
lbl_08073ac0:
    ldr r1, lbl_08073ad0 @ =0x03000c20
    movs r0, #0
    strb r0, [r1]
    ldrb r0, [r2]
    adds r0, #1
    strb r0, [r2]
    b lbl_08073b9a
    .align 2, 0
lbl_08073ad0: .4byte 0x03000c20
lbl_08073ad4:
    movs r0, #2
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_08073b9a
    b lbl_08073b7a
lbl_08073ae0:
    movs r2, #1
    ldr r0, lbl_08073b0c @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_08073af0
    movs r2, #8
lbl_08073af0:
    ldr r1, lbl_08073b10 @ =0x03000024
    ldr r0, lbl_08073b14 @ =0x0300002c
    ldrb r0, [r0]
    lsls r2, r0
    ldrb r0, [r1]
    orrs r2, r0
    movs r4, #0
    strb r2, [r1]
    bl sub_080739e8
    ldr r0, lbl_08073b18 @ =0x03000c20
    strb r4, [r0]
    b lbl_08073b7a
    .align 2, 0
lbl_08073b0c: .4byte 0x03000020
lbl_08073b10: .4byte 0x03000024
lbl_08073b14: .4byte 0x0300002c
lbl_08073b18: .4byte 0x03000c20
lbl_08073b1c:
    movs r0, #0
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_08073b9a
    ldr r2, lbl_08073b40 @ =0x03000c24
    ldr r0, lbl_08073b44 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldr r1, lbl_08073b48 @ =0x03000024
    ldrb r1, [r1]
    strb r1, [r0, #0x11]
    b lbl_08073b7a
    .align 2, 0
lbl_08073b40: .4byte 0x03000c24
lbl_08073b44: .4byte 0x03000c1e
lbl_08073b48: .4byte 0x03000024
lbl_08073b4c:
    ldr r2, lbl_08073b84 @ =0x08754bc8
    ldr r0, lbl_08073b88 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r1, r0, #0
    adds r1, #0x80
    ldr r2, [r2]
    adds r1, r2, r1
    ldr r3, lbl_08073b8c @ =0x000036e0
    adds r0, r0, r3
    adds r2, r2, r0
    movs r3, #0x91
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_08073b7a:
    ldr r1, lbl_08073b90 @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08073b9a
    .align 2, 0
lbl_08073b84: .4byte 0x08754bc8
lbl_08073b88: .4byte 0x03000c1e
lbl_08073b8c: .4byte 0x000036e0
lbl_08073b90: .4byte 0x03000c21
lbl_08073b94:
    movs r0, #0
    strb r0, [r2]
    movs r5, #1
lbl_08073b9a:
    adds r0, r5, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start save_file
save_file: @ 0x08073ba4
    push {lr}
    sub sp, #4
    ldr r1, lbl_08073bd4 @ =0x03000043
    ldrb r2, [r1]
    ldr r3, lbl_08073bd8 @ =0x03000c21
    cmp r2, #0
    bne lbl_08073bc0
    movs r0, #1
    strb r0, [r1]
    ldr r1, lbl_08073bdc @ =0x03000c1f
    strb r0, [r1]
    strb r2, [r3]
    ldr r0, lbl_08073be0 @ =0x03000c20
    strb r2, [r0]
lbl_08073bc0:
    ldrb r0, [r3]
    cmp r0, #5
    bls lbl_08073bc8
    b lbl_08073ccc
lbl_08073bc8:
    lsls r0, r0, #2
    ldr r1, lbl_08073be4 @ =lbl_08073be8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08073bd4: .4byte 0x03000043
lbl_08073bd8: .4byte 0x03000c21
lbl_08073bdc: .4byte 0x03000c1f
lbl_08073be0: .4byte 0x03000c20
lbl_08073be4: .4byte lbl_08073be8
lbl_08073be8: @ jump table
    .4byte lbl_08073c00 @ case 0
    .4byte lbl_08073c18 @ case 1
    .4byte lbl_08073c34 @ case 2
    .4byte lbl_08073c50 @ case 3
    .4byte lbl_08073c84 @ case 4
    .4byte lbl_08073ccc @ case 5
lbl_08073c00:
    movs r0, #4
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_08073cd2
    ldr r1, lbl_08073c14 @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    b lbl_08073cd0
    .align 2, 0
lbl_08073c14: .4byte 0x03000c21
lbl_08073c18:
    bl write_sram_arrays
    ldr r1, lbl_08073c2c @ =0x03000c20
    movs r0, #0
    strb r0, [r1]
    ldr r1, lbl_08073c30 @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    b lbl_08073cd0
    .align 2, 0
lbl_08073c2c: .4byte 0x03000c20
lbl_08073c30: .4byte 0x03000c21
lbl_08073c34:
    bl write_sram
    ldr r1, lbl_08073c48 @ =0x03000c20
    movs r0, #0
    strb r0, [r1]
    ldr r1, lbl_08073c4c @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    b lbl_08073cd0
    .align 2, 0
lbl_08073c48: .4byte 0x03000c20
lbl_08073c4c: .4byte 0x03000c21
lbl_08073c50:
    movs r0, #0
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_08073cd2
    ldr r2, lbl_08073c78 @ =0x03000c24
    ldr r0, lbl_08073c7c @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    movs r1, #1
    strb r1, [r0]
    ldr r1, lbl_08073c80 @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    b lbl_08073cd0
    .align 2, 0
lbl_08073c78: .4byte 0x03000c24
lbl_08073c7c: .4byte 0x03000c1e
lbl_08073c80: .4byte 0x03000c21
lbl_08073c84:
    ldr r2, lbl_08073cbc @ =0x08754bc8
    ldr r0, lbl_08073cc0 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r1, r0, #0
    adds r1, #0x80
    ldr r2, [r2]
    adds r1, r2, r1
    ldr r3, lbl_08073cc4 @ =0x000036e0
    adds r0, r0, r3
    adds r2, r2, r0
    movs r3, #0x91
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_08073cc8 @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    b lbl_08073cd0
    .align 2, 0
lbl_08073cbc: .4byte 0x08754bc8
lbl_08073cc0: .4byte 0x03000c1e
lbl_08073cc4: .4byte 0x000036e0
lbl_08073cc8: .4byte 0x03000c21
lbl_08073ccc:
    ldr r1, lbl_08073ce0 @ =0x03000043
    movs r0, #0
lbl_08073cd0:
    strb r0, [r1]
lbl_08073cd2:
    ldr r0, lbl_08073ce0 @ =0x03000043
    ldrb r1, [r0]
    movs r0, #1
    eors r0, r1
    add sp, #4
    pop {r1}
    bx r1
    .align 2, 0
lbl_08073ce0: .4byte 0x03000043

    thumb_func_start write_sram
write_sram: @ 0x08073ce4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r3, lbl_08073f80 @ =0x03001d00
    ldrh r1, [r3, #0x1c]
    ldr r0, lbl_08073f84 @ =0xffff0000
    ands r0, r5
    orrs r0, r1
    ldrh r1, [r3, #0x1e]
    lsls r1, r1, #0x10
    ldr r2, lbl_08073f88 @ =0x0000ffff
    ands r0, r2
    adds r5, r0, #0
    orrs r5, r1
    adds r0, r3, #0
    adds r0, #0x20
    ldrb r1, [r0]
    ldr r0, lbl_08073f8c @ =0xffffff00
    ands r0, r6
    orrs r0, r1
    adds r3, #0x21
    ldrb r1, [r3]
    lsls r1, r1, #8
    ldr r2, lbl_08073f90 @ =0xffff00ff
    ands r0, r2
    adds r6, r0, #0
    orrs r6, r1
    ldr r2, lbl_08073f94 @ =0x08754bc8
    ldr r0, lbl_08073f98 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r1, [r2]
    adds r4, r1, r0
    ldr r1, lbl_08073f9c @ =0x08411410
    adds r0, r4, #0
    movs r2, #0x10
    bl write_string
    adds r0, r4, #0
    adds r0, #0x4f
    ldr r1, lbl_08073fa0 @ =0x08411420
    movs r2, #0x10
    bl write_string
    movs r0, #0
    str r0, [r4, #0x10]
    subs r0, #1
    str r0, [r4, #0x14]
    ldr r0, lbl_08073fa4 @ =0x03000024
    ldr r0, [r0]
    str r0, [r4, #0x18]
    ldr r0, lbl_08073fa8 @ =0x03000c1f
    ldrb r0, [r0]
    strb r0, [r4, #0x1c]
    ldr r0, lbl_08073fac @ =0x03000054
    ldrb r0, [r0]
    strb r0, [r4, #0x1d]
    ldr r0, lbl_08073fb0 @ =0x03000055
    ldrb r0, [r0]
    strb r0, [r4, #0x1e]
    ldr r0, lbl_08073fb4 @ =0x03000056
    ldrb r0, [r0]
    strb r0, [r4, #0x1f]
    ldr r0, lbl_08073fb8 @ =0x03000059
    ldrb r1, [r0]
    adds r0, r4, #0
    adds r0, #0x20
    strb r1, [r0]
    ldr r0, lbl_08073fbc @ =0x0300005a
    ldrb r0, [r0]
    adds r1, r4, #0
    adds r1, #0x21
    strb r0, [r1]
    ldr r0, lbl_08073fc0 @ =0x03000144
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r4, #0x24]
    str r1, [r4, #0x28]
    ldr r0, lbl_08073fc4 @ =0x030013b4
    ldrh r0, [r0]
    strh r0, [r4, #0x2c]
    ldr r0, lbl_08073fc8 @ =0x030013b6
    ldrh r0, [r0]
    strh r0, [r4, #0x2e]
    ldr r0, lbl_08073fcc @ =0x030013b8
    ldrh r0, [r0]
    strh r0, [r4, #0x30]
    ldr r0, lbl_08073fd0 @ =0x030013ba
    ldrh r0, [r0]
    strh r0, [r4, #0x32]
    ldr r0, lbl_08073fd4 @ =0x030013bc
    ldrh r0, [r0]
    strh r0, [r4, #0x34]
    ldr r0, lbl_08073fd8 @ =0x030013be
    ldrh r0, [r0]
    strh r0, [r4, #0x36]
    ldr r0, lbl_08073fdc @ =0x030013c0
    ldrh r0, [r0]
    strh r0, [r4, #0x38]
    ldr r0, lbl_08073fe0 @ =0x030013c2
    ldrh r0, [r0]
    strh r0, [r4, #0x3a]
    ldr r0, lbl_08073fe4 @ =0x0300002c
    ldrb r1, [r0]
    adds r0, r4, #0
    adds r0, #0x3c
    strb r1, [r0]
    ldr r0, lbl_08073fe8 @ =0x0300002d
    ldrb r0, [r0]
    adds r1, r4, #0
    adds r1, #0x3d
    strb r0, [r1]
    ldr r0, lbl_08073fec @ =0x0300002e
    ldrb r0, [r0]
    adds r1, #1
    strb r0, [r1]
    movs r3, #0
    adds r2, r4, #0
    adds r2, #0x3f
    ldr r7, lbl_08073ff0 @ =0x0300005b
lbl_08073de4:
    adds r0, r2, r3
    adds r1, r3, r7
    ldrb r1, [r1]
    strb r1, [r0]
    adds r3, #1
    cmp r3, #7
    ble lbl_08073de4
    movs r3, #0
    ldr r0, lbl_08073ff4 @ =0x030013d4
    mov sl, r0
    movs r2, #0x60
    adds r2, r2, r4
    mov ip, r2
    movs r7, #0x80
    adds r7, r7, r4
    mov r8, r7
    movs r0, #0x88
    adds r0, r0, r4
    mov sb, r0
    adds r2, r4, #0
    adds r2, #0x47
    ldr r7, lbl_08073ff8 @ =0x03000063
lbl_08073e10:
    adds r0, r2, r3
    adds r1, r3, r7
    ldrb r1, [r1]
    strb r1, [r0]
    adds r3, #1
    cmp r3, #7
    ble lbl_08073e10
    mov r1, ip
    mov r0, sl
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldm r0!, {r2, r3}
    stm r1!, {r2, r3}
    ldr r7, lbl_08073ffc @ =0x03001414
    ldr r0, [r7]
    ldr r1, [r7, #4]
    mov r2, r8
    str r0, [r2]
    str r1, [r2, #4]
    movs r2, #0x86
    lsls r2, r2, #1
    mov r0, sb
    ldr r1, lbl_08074000 @ =0x0300141c
    bl memcpy
    movs r3, #0xca
    lsls r3, r3, #1
    adds r2, r4, r3
    ldr r0, lbl_08074004 @ =0x03001528
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    movs r7, #0xce
    lsls r7, r7, #1
    adds r1, r4, r7
    ldr r0, lbl_08074008 @ =0x03001530
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldm r0!, {r2, r3}
    stm r1!, {r2, r3}
    movs r7, #0xd8
    lsls r7, r7, #1
    adds r2, r4, r7
    ldr r0, lbl_0807400c @ =0x03001544
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    movs r0, #0xdc
    lsls r0, r0, #1
    adds r1, r4, r0
    ldr r0, lbl_08074010 @ =0x0300154c
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    movs r2, #0xe2
    lsls r2, r2, #1
    adds r1, r4, r2
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    movs r3, #0xe8
    lsls r3, r3, #1
    adds r1, r4, r3
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    movs r7, #0xee
    lsls r7, r7, #1
    adds r1, r4, r7
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    movs r2, #0xf4
    lsls r2, r2, #1
    adds r1, r4, r2
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldr r0, lbl_08074014 @ =0x03001606
    ldrh r1, [r0]
    movs r3, #0xfa
    lsls r3, r3, #1
    adds r0, r4, r3
    strh r1, [r0]
    ldr r0, lbl_08074018 @ =0x03001608
    ldrb r0, [r0]
    movs r7, #0xfb
    lsls r7, r7, #1
    adds r1, r4, r7
    strb r0, [r1]
    ldr r0, lbl_0807401c @ =0x030001a8
    ldrh r1, [r0]
    movs r2, #0xfc
    lsls r2, r2, #1
    adds r0, r4, r2
    strh r1, [r0]
    adds r3, #8
    adds r1, r4, r3
    ldr r0, lbl_08074020 @ =0x03000150
    ldr r0, [r0]
    str r0, [r1]
    ldr r2, lbl_08074024 @ =0x03000154
    adds r7, #0xa
    adds r1, r4, r7
    movs r3, #0xb
lbl_08073ee0:
    ldm r2!, {r0}
    stm r1!, {r0}
    subs r3, #1
    cmp r3, #0
    bge lbl_08073ee0
    ldr r1, lbl_08074028 @ =0x08411430
    ldr r7, lbl_0807402c @ =0x03000184
    movs r0, #0x8c
    lsls r0, r0, #2
    adds r2, r4, r0
    movs r3, #4
lbl_08073ef6:
    ldm r7!, {r0}
    stm r2!, {r0}
    subs r3, #1
    cmp r3, #0
    bge lbl_08073ef6
    movs r2, #0x91
    lsls r2, r2, #2
    adds r0, r4, r2
    str r5, [r0]
    str r6, [r0, #4]
    ldr r5, lbl_08074030 @ =0x03000050
    movs r3, #0x93
    lsls r3, r3, #2
    adds r2, r4, r3
    movs r3, #0
lbl_08073f14:
    ldm r5!, {r0}
    stm r2!, {r0}
    subs r3, #1
    cmp r3, #0
    bge lbl_08073f14
    movs r7, #0x94
    lsls r7, r7, #2
    adds r0, r4, r7
    movs r2, #0x10
    bl write_string
    ldr r2, lbl_08073f94 @ =0x08754bc8
    ldr r0, lbl_08073f98 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r1, [r2]
    adds r1, r1, r0
    movs r2, #0
    movs r3, #0x90
lbl_08073f46:
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    subs r3, #1
    cmp r3, #0
    bge lbl_08073f46
    str r2, [r4, #0x10]
    mvns r0, r2
    str r0, [r4, #0x14]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08073f80: .4byte 0x03001d00
lbl_08073f84: .4byte 0xffff0000
lbl_08073f88: .4byte 0x0000ffff
lbl_08073f8c: .4byte 0xffffff00
lbl_08073f90: .4byte 0xffff00ff
lbl_08073f94: .4byte 0x08754bc8
lbl_08073f98: .4byte 0x03000c1e
lbl_08073f9c: .4byte 0x08411410
lbl_08073fa0: .4byte 0x08411420
lbl_08073fa4: .4byte 0x03000024
lbl_08073fa8: .4byte 0x03000c1f
lbl_08073fac: .4byte 0x03000054
lbl_08073fb0: .4byte 0x03000055
lbl_08073fb4: .4byte 0x03000056
lbl_08073fb8: .4byte 0x03000059
lbl_08073fbc: .4byte 0x0300005a
lbl_08073fc0: .4byte 0x03000144
lbl_08073fc4: .4byte 0x030013b4
lbl_08073fc8: .4byte 0x030013b6
lbl_08073fcc: .4byte 0x030013b8
lbl_08073fd0: .4byte 0x030013ba
lbl_08073fd4: .4byte 0x030013bc
lbl_08073fd8: .4byte 0x030013be
lbl_08073fdc: .4byte 0x030013c0
lbl_08073fe0: .4byte 0x030013c2
lbl_08073fe4: .4byte 0x0300002c
lbl_08073fe8: .4byte 0x0300002d
lbl_08073fec: .4byte 0x0300002e
lbl_08073ff0: .4byte 0x0300005b
lbl_08073ff4: .4byte 0x030013d4
lbl_08073ff8: .4byte 0x03000063
lbl_08073ffc: .4byte 0x03001414
lbl_08074000: .4byte 0x0300141c
lbl_08074004: .4byte 0x03001528
lbl_08074008: .4byte 0x03001530
lbl_0807400c: .4byte 0x03001544
lbl_08074010: .4byte 0x0300154c
lbl_08074014: .4byte 0x03001606
lbl_08074018: .4byte 0x03001608
lbl_0807401c: .4byte 0x030001a8
lbl_08074020: .4byte 0x03000150
lbl_08074024: .4byte 0x03000154
lbl_08074028: .4byte 0x08411430
lbl_0807402c: .4byte 0x03000184
lbl_08074030: .4byte 0x03000050

    thumb_func_start load_sram_data
load_sram_data: @ 0x08074034
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r2, lbl_08074248 @ =0x08754bc8
    ldr r0, lbl_0807424c @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r1, [r2]
    adds r4, r1, r0
    ldr r1, lbl_08074250 @ =0x03000024
    ldr r0, [r4, #0x18]
    str r0, [r1]
    ldr r1, lbl_08074254 @ =0x03000c1f
    ldrb r0, [r4, #0x1c]
    strb r0, [r1]
    ldr r1, lbl_08074258 @ =0x03000054
    ldrb r0, [r4, #0x1d]
    strb r0, [r1]
    ldr r1, lbl_0807425c @ =0x03000055
    ldrb r0, [r4, #0x1e]
    strb r0, [r1]
    ldr r1, lbl_08074260 @ =0x03000056
    ldrb r0, [r4, #0x1f]
    strb r0, [r1]
    ldr r1, lbl_08074264 @ =0x03000059
    adds r0, r4, #0
    adds r0, #0x20
    ldrb r0, [r0]
    strb r0, [r1]
    ldr r1, lbl_08074268 @ =0x0300005a
    adds r0, r4, #0
    adds r0, #0x21
    ldrb r0, [r0]
    strb r0, [r1]
    ldr r2, lbl_0807426c @ =0x03000144
    ldr r0, [r4, #0x24]
    ldr r1, [r4, #0x28]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r1, lbl_08074270 @ =0x030013b4
    ldrh r0, [r4, #0x2c]
    strh r0, [r1]
    ldr r1, lbl_08074274 @ =0x030013b6
    ldrh r0, [r4, #0x2e]
    strh r0, [r1]
    ldr r1, lbl_08074278 @ =0x030013b8
    ldrh r0, [r4, #0x30]
    strh r0, [r1]
    ldr r1, lbl_0807427c @ =0x030013ba
    ldrh r0, [r4, #0x32]
    strh r0, [r1]
    ldr r1, lbl_08074280 @ =0x030013bc
    ldrh r0, [r4, #0x34]
    strh r0, [r1]
    ldr r1, lbl_08074284 @ =0x030013be
    ldrh r0, [r4, #0x36]
    strh r0, [r1]
    ldr r1, lbl_08074288 @ =0x030013c0
    ldrh r0, [r4, #0x38]
    strh r0, [r1]
    ldr r1, lbl_0807428c @ =0x030013c2
    ldrh r0, [r4, #0x3a]
    strh r0, [r1]
    ldr r1, lbl_08074290 @ =0x0300002c
    adds r0, r4, #0
    adds r0, #0x3c
    ldrb r0, [r0]
    strb r0, [r1]
    ldr r1, lbl_08074294 @ =0x0300002d
    adds r0, r4, #0
    adds r0, #0x3d
    ldrb r0, [r0]
    strb r0, [r1]
    ldr r1, lbl_08074298 @ =0x0300002e
    adds r0, r4, #0
    adds r0, #0x3e
    ldrb r0, [r0]
    strb r0, [r1]
    movs r2, #0
    ldr r0, lbl_0807429c @ =0x030013d4
    mov r8, r0
    ldr r1, lbl_080742a0 @ =0x03001414
    mov sb, r1
    ldr r3, lbl_080742a4 @ =0x0300141c
    mov sl, r3
    ldr r5, lbl_080742a8 @ =0x0300005b
    adds r3, r4, #0
    adds r3, #0x3f
lbl_080740f4:
    adds r0, r2, r5
    adds r1, r3, r2
    ldrb r1, [r1]
    strb r1, [r0]
    adds r2, #1
    cmp r2, #7
    ble lbl_080740f4
    movs r2, #0
    adds r6, r4, #0
    adds r6, #0x60
    adds r7, r4, #0
    adds r7, #0x80
    movs r5, #0x88
    adds r5, r5, r4
    mov ip, r5
    ldr r5, lbl_080742ac @ =0x03000063
    adds r3, r4, #0
    adds r3, #0x47
lbl_08074118:
    adds r0, r2, r5
    adds r1, r3, r2
    ldrb r1, [r1]
    strb r1, [r0]
    adds r2, #1
    cmp r2, #7
    ble lbl_08074118
    mov r1, r8
    adds r0, r6, #0
    ldm r0!, {r2, r3, r5}
    stm r1!, {r2, r3, r5}
    ldm r0!, {r2, r3, r5}
    stm r1!, {r2, r3, r5}
    ldm r0!, {r2, r3}
    stm r1!, {r2, r3}
    ldr r0, [r7]
    ldr r1, [r7, #4]
    mov r5, sb
    str r0, [r5]
    str r1, [r5, #4]
    movs r2, #0x86
    lsls r2, r2, #1
    mov r0, sl
    mov r1, ip
    bl memcpy
    ldr r2, lbl_080742b0 @ =0x03001528
    movs r1, #0xca
    lsls r1, r1, #1
    adds r0, r4, r1
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r1, lbl_080742b4 @ =0x03001530
    movs r2, #0xce
    lsls r2, r2, #1
    adds r0, r4, r2
    ldm r0!, {r2, r3, r5}
    stm r1!, {r2, r3, r5}
    ldm r0!, {r3, r5}
    stm r1!, {r3, r5}
    ldr r2, lbl_080742b8 @ =0x03001544
    movs r1, #0xd8
    lsls r1, r1, #1
    adds r0, r4, r1
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r0, lbl_080742bc @ =0x0300154c
    movs r2, #0xdc
    lsls r2, r2, #1
    adds r1, r4, r2
    ldm r1!, {r2, r3, r5}
    stm r0!, {r2, r3, r5}
    movs r3, #0xe2
    lsls r3, r3, #1
    adds r1, r4, r3
    ldm r1!, {r2, r3, r5}
    stm r0!, {r2, r3, r5}
    movs r5, #0xe8
    lsls r5, r5, #1
    adds r1, r4, r5
    ldm r1!, {r2, r3, r5}
    stm r0!, {r2, r3, r5}
    movs r2, #0xee
    lsls r2, r2, #1
    adds r1, r4, r2
    ldm r1!, {r2, r3, r5}
    stm r0!, {r2, r3, r5}
    movs r3, #0xf4
    lsls r3, r3, #1
    adds r1, r4, r3
    ldm r1!, {r2, r3, r5}
    stm r0!, {r2, r3, r5}
    ldr r1, lbl_080742c0 @ =0x03001606
    movs r5, #0xfa
    lsls r5, r5, #1
    adds r0, r4, r5
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_080742c4 @ =0x03001608
    movs r2, #0xfb
    lsls r2, r2, #1
    adds r0, r4, r2
    ldrb r0, [r0]
    strb r0, [r1]
    ldr r1, lbl_080742c8 @ =0x030001a8
    movs r3, #0xfc
    lsls r3, r3, #1
    adds r0, r4, r3
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_080742cc @ =0x03000150
    adds r5, #8
    adds r0, r4, r5
    ldr r0, [r0]
    str r0, [r1]
    movs r0, #0x80
    lsls r0, r0, #2
    adds r1, r4, r0
    ldr r3, lbl_080742d0 @ =0x03000154
    movs r2, #0xb
lbl_080741e8:
    ldm r1!, {r0}
    stm r3!, {r0}
    subs r2, #1
    cmp r2, #0
    bge lbl_080741e8
    ldr r7, lbl_080742d4 @ =0x03001d00
    movs r2, #0x8c
    lsls r2, r2, #2
    adds r1, r4, r2
    ldr r3, lbl_080742d8 @ =0x03000184
    movs r2, #4
lbl_080741fe:
    ldm r1!, {r0}
    stm r3!, {r0}
    subs r2, #1
    cmp r2, #0
    bge lbl_080741fe
    movs r3, #0x91
    lsls r3, r3, #2
    adds r0, r4, r3
    ldr r5, [r0]
    ldr r6, [r0, #4]
    movs r0, #0x93
    lsls r0, r0, #2
    adds r1, r4, r0
    ldr r3, lbl_080742dc @ =0x03000050
    movs r2, #0
lbl_0807421c:
    ldm r1!, {r0}
    stm r3!, {r0}
    subs r2, #1
    cmp r2, #0
    bge lbl_0807421c
    strh r5, [r7, #0x1c]
    lsrs r0, r5, #0x10
    strh r0, [r7, #0x1e]
    adds r0, r7, #0
    adds r0, #0x20
    strb r6, [r0]
    lsrs r1, r6, #8
    adds r0, #1
    strb r1, [r0]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074248: .4byte 0x08754bc8
lbl_0807424c: .4byte 0x03000c1e
lbl_08074250: .4byte 0x03000024
lbl_08074254: .4byte 0x03000c1f
lbl_08074258: .4byte 0x03000054
lbl_0807425c: .4byte 0x03000055
lbl_08074260: .4byte 0x03000056
lbl_08074264: .4byte 0x03000059
lbl_08074268: .4byte 0x0300005a
lbl_0807426c: .4byte 0x03000144
lbl_08074270: .4byte 0x030013b4
lbl_08074274: .4byte 0x030013b6
lbl_08074278: .4byte 0x030013b8
lbl_0807427c: .4byte 0x030013ba
lbl_08074280: .4byte 0x030013bc
lbl_08074284: .4byte 0x030013be
lbl_08074288: .4byte 0x030013c0
lbl_0807428c: .4byte 0x030013c2
lbl_08074290: .4byte 0x0300002c
lbl_08074294: .4byte 0x0300002d
lbl_08074298: .4byte 0x0300002e
lbl_0807429c: .4byte 0x030013d4
lbl_080742a0: .4byte 0x03001414
lbl_080742a4: .4byte 0x0300141c
lbl_080742a8: .4byte 0x0300005b
lbl_080742ac: .4byte 0x03000063
lbl_080742b0: .4byte 0x03001528
lbl_080742b4: .4byte 0x03001530
lbl_080742b8: .4byte 0x03001544
lbl_080742bc: .4byte 0x0300154c
lbl_080742c0: .4byte 0x03001606
lbl_080742c4: .4byte 0x03001608
lbl_080742c8: .4byte 0x030001a8
lbl_080742cc: .4byte 0x03000150
lbl_080742d0: .4byte 0x03000154
lbl_080742d4: .4byte 0x03001d00
lbl_080742d8: .4byte 0x03000184
lbl_080742dc: .4byte 0x03000050

    thumb_func_start write_string
write_string: @ 0x080742e0
    push {r4, r5, lr}
    adds r5, r0, #0
    adds r4, r1, #0
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r3, #0
    cmp r3, r2
    bge lbl_080742fe
lbl_080742f0:
    adds r0, r5, r3
    adds r1, r4, r3
    ldrb r1, [r1]
    strb r1, [r0]
    adds r3, #1
    cmp r3, r2
    blt lbl_080742f0
lbl_080742fe:
    pop {r4, r5}
    pop {r0}
    bx r0

    thumb_func_start sub_08074304
sub_08074304: @ 0x08074304
    push {r4, r5, lr}
    sub sp, #0x10
    movs r5, #0
    ldr r0, lbl_08074364 @ =0x03000c1c
    strb r5, [r0]
    ldr r0, lbl_08074368 @ =0x08411400
    ldr r4, lbl_0807436c @ =0x0e007f80
    adds r1, r4, #0
    movs r2, #0x10
    bl SRAMWriteChecked
    rsbs r1, r0, #0
    orrs r1, r0
    lsrs r5, r1, #0x1f
    adds r0, r4, #0
    mov r1, sp
    movs r2, #0x10
    bl SRAMWriteUnchecked
    movs r2, #0
lbl_0807432c:
    mov r0, sp
    adds r1, r0, r2
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    adds r2, #1
    cmp r2, #0xf
    ble lbl_0807432c
    ldr r4, lbl_0807436c @ =0x0e007f80
    mov r0, sp
    adds r1, r4, #0
    movs r2, #0x10
    bl SRAMWriteChecked
    cmp r0, #0
    beq lbl_08074350
    movs r0, #2
    orrs r5, r0
lbl_08074350:
    adds r0, r4, #0
    mov r1, sp
    movs r2, #0x10
    bl SRAMWriteUnchecked
    movs r2, #0
    mov r0, sp
    ldrb r1, [r0]
    ldr r0, lbl_08074368 @ =0x08411400
    b lbl_08074380
    .align 2, 0
lbl_08074364: .4byte 0x03000c1c
lbl_08074368: .4byte 0x08411400
lbl_0807436c: .4byte 0x0e007f80
lbl_08074370:
    adds r2, #1
    cmp r2, #0xf
    bgt lbl_0807438c
    mov r1, sp
    adds r0, r1, r2
    ldrb r1, [r0]
    ldr r0, lbl_0807439c @ =0x08411400
    adds r0, r2, r0
lbl_08074380:
    ldrb r0, [r0]
    adds r0, #1
    cmp r1, r0
    beq lbl_08074370
    movs r0, #4
    orrs r5, r0
lbl_0807438c:
    cmp r5, #0
    beq lbl_08074394
    ldr r0, lbl_080743a0 @ =0x03000c1c
    strb r5, [r0]
lbl_08074394:
    add sp, #0x10
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807439c: .4byte 0x08411400
lbl_080743a0: .4byte 0x03000c1c

    thumb_func_start sub_080743a4
sub_080743a4: @ 0x080743a4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    ldr r0, lbl_08074440 @ =0x03000c1e
    mov r8, r0
    ldr r1, lbl_08074444 @ =0x03000c1d
    mov sb, r1
    ldr r3, lbl_08074448 @ =0x08760408
    ldr r2, lbl_0807444c @ =0x03000c24
    movs r5, #2
lbl_080743be:
    adds r1, r2, #0
    adds r0, r3, #0
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    adds r2, #0x18
    subs r5, #1
    cmp r5, #0
    bge lbl_080743be
    movs r0, #0
    mov r1, r8
    strb r0, [r1]
    mov r2, sb
    strb r0, [r2]
    movs r5, #0
    ldr r7, lbl_08074450 @ =0x08754bc8
    movs r6, #0x10
    ldr r3, lbl_0807444c @ =0x03000c24
    str r3, [sp, #4]
    ldr r4, lbl_08074454 @ =0x0000ffff
    mov sl, r4
    movs r0, #0x91
    lsls r0, r0, #5
    mov sb, r0
lbl_080743f0:
    mov r1, r8
    strb r5, [r1]
    bl sub_08074574
    mov r2, r8
    movs r1, #0
    ldrsb r1, [r2, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    ldr r3, lbl_0807444c @ =0x03000c24
    adds r0, r0, r3
    ldrb r4, [r0, #1]
    cmp r4, #0
    bne lbl_0807445c
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r1, r0, #0
    adds r1, #0x80
    ldr r2, [r7]
    adds r1, r2, r1
    ldr r4, lbl_08074458 @ =0x000036e0
    adds r0, r0, r4
    adds r2, r2, r0
    str r6, [sp]
    movs r0, #3
    movs r3, #0x91
    lsls r3, r3, #5
    bl DMATransfer
    movs r0, #4
    bl sub_08000c48
    movs r0, #1
    ldr r1, [sp, #4]
    strb r0, [r1]
    b lbl_0807454a
    .align 2, 0
lbl_08074440: .4byte 0x03000c1e
lbl_08074444: .4byte 0x03000c1d
lbl_08074448: .4byte 0x08760408
lbl_0807444c: .4byte 0x03000c24
lbl_08074450: .4byte 0x08754bc8
lbl_08074454: .4byte 0x0000ffff
lbl_08074458: .4byte 0x000036e0
lbl_0807445c:
    cmp r4, #1
    bne lbl_0807448c
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    ldr r2, lbl_08074488 @ =0x000036e0
    adds r1, r0, r2
    ldr r2, [r7]
    adds r1, r2, r1
    adds r0, #0x80
    adds r2, r2, r0
    str r6, [sp]
    movs r0, #3
    movs r3, #0x91
    lsls r3, r3, #5
    bl DMATransfer
    ldr r3, [sp, #4]
    strb r4, [r3]
    b lbl_0807454a
    .align 2, 0
lbl_08074488: .4byte 0x000036e0
lbl_0807448c:
    cmp r4, #2
    bne lbl_080744d8
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r2, [r7]
    adds r2, r2, r0
    str r6, [sp]
    movs r0, #3
    mov r1, sl
    mov r3, sb
    bl BitFill
    mov r4, r8
    movs r1, #0
    ldrsb r1, [r4, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    ldr r1, lbl_080744d4 @ =0x000036e0
    adds r0, r0, r1
    ldr r2, [r7]
    adds r2, r2, r0
    str r6, [sp]
    movs r0, #3
    mov r1, sl
    mov r3, sb
    bl BitFill
    b lbl_0807454a
    .align 2, 0
lbl_080744d4: .4byte 0x000036e0
lbl_080744d8:
    cmp r4, #2
    bls lbl_08074548
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r2, [r7]
    adds r2, r2, r0
    str r6, [sp]
    movs r0, #3
    mov r1, sl
    mov r3, sb
    bl BitFill
    movs r0, #3
    bl sub_08000c48
    mov r2, r8
    movs r1, #0
    ldrsb r1, [r2, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    ldr r3, lbl_08074540 @ =0x000036e0
    adds r0, r0, r3
    ldr r2, [r7]
    adds r2, r2, r0
    str r6, [sp]
    movs r0, #3
    mov r1, sl
    mov r3, sb
    bl BitFill
    movs r0, #4
    bl sub_08000c48
    mov r4, r8
    movs r1, #0
    ldrsb r1, [r4, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    ldr r1, lbl_08074544 @ =0x03000c24
    adds r0, r0, r1
    movs r1, #0
    strb r1, [r0, #1]
    b lbl_0807454a
    .align 2, 0
lbl_08074540: .4byte 0x000036e0
lbl_08074544: .4byte 0x03000c24
lbl_08074548:
    b lbl_08074548
lbl_0807454a:
    ldr r2, [sp, #4]
    adds r2, #0x18
    str r2, [sp, #4]
    adds r5, #1
    cmp r5, #2
    bgt lbl_08074558
    b lbl_080743f0
lbl_08074558:
    movs r1, #0
    ldr r0, lbl_08074570 @ =0x03000c1e
    strb r1, [r0]
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074570: .4byte 0x03000c1e

    thumb_func_start sub_08074574
sub_08074574: @ 0x08074574
    push {r4, r5, lr}
    movs r0, #0
    bl sub_08074624
    adds r4, r0, #0
    movs r0, #1
    bl sub_08074624
    adds r2, r0, #0
    cmp r4, #0
    bne lbl_080745a8
    ldr r2, lbl_080745a0 @ =0x03000c24
    ldr r0, lbl_080745a4 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    strb r4, [r0, #1]
    b lbl_0807461c
    .align 2, 0
lbl_080745a0: .4byte 0x03000c24
lbl_080745a4: .4byte 0x03000c1e
lbl_080745a8:
    cmp r4, #1
    bne lbl_080745d8
    ldr r5, lbl_080745d0 @ =0x03000c24
    ldr r3, lbl_080745d4 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r3, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r5
    strb r4, [r0, #1]
    cmp r2, #0
    beq lbl_0807461c
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    adds r1, r1, r5
    b lbl_08074618
    .align 2, 0
lbl_080745d0: .4byte 0x03000c24
lbl_080745d4: .4byte 0x03000c1e
lbl_080745d8:
    ldr r4, lbl_08074600 @ =0x03000c24
    ldr r3, lbl_08074604 @ =0x03000c1e
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    adds r1, r1, r4
    movs r0, #3
    strb r0, [r1, #1]
    cmp r2, #0
    bne lbl_08074608
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    adds r1, r1, r4
    movs r0, #1
    b lbl_0807461a
    .align 2, 0
lbl_08074600: .4byte 0x03000c24
lbl_08074604: .4byte 0x03000c1e
lbl_08074608:
    cmp r2, #1
    bne lbl_0807461c
    movs r0, #0
    ldrsb r0, [r3, r0]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    adds r1, r1, r4
lbl_08074618:
    movs r0, #2
lbl_0807461a:
    strb r0, [r1, #1]
lbl_0807461c:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_08074624
sub_08074624: @ 0x08074624
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_08074654
    ldr r2, lbl_0807464c @ =0x08754bc8
    ldr r0, lbl_08074650 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    b lbl_0807466a
    .align 2, 0
lbl_0807464c: .4byte 0x08754bc8
lbl_08074650: .4byte 0x03000c1e
lbl_08074654:
    ldr r2, lbl_080746d8 @ =0x08754bc8
    ldr r0, lbl_080746dc @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    ldr r1, lbl_080746e0 @ =0x000036e0
    adds r0, r0, r1
lbl_0807466a:
    ldr r1, [r2]
    adds r4, r1, r0
    adds r1, r4, #0
    movs r2, #0
    ldr r6, [r4, #0x10]
    mov ip, r6
    ldr r7, lbl_080746e4 @ =0x08411410
    ldrb r0, [r4]
    mov sb, r0
    ldr r6, lbl_080746e8 @ =0x08411420
    mov r8, r6
    adds r6, r4, #0
    adds r6, #0x4f
    ldr r0, lbl_080746ec @ =0x08411430
    mov sl, r0
    movs r0, #0x94
    lsls r0, r0, #2
    adds r0, r4, r0
    str r0, [sp, #4]
    movs r3, #0x90
lbl_08074692:
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    ldm r1!, {r0}
    adds r2, r2, r0
    subs r3, #1
    cmp r3, #0
    bge lbl_08074692
    movs r5, #0
    cmp ip, r2
    bne lbl_080746c6
    ldr r0, [r4, #0x14]
    mvns r0, r0
    cmp r2, r0
    beq lbl_080746c8
lbl_080746c6:
    movs r5, #1
lbl_080746c8:
    movs r2, #0
    movs r3, #0
    ldrb r0, [r7]
    cmp r0, sb
    beq lbl_080746f0
    movs r2, #1
    b lbl_08074706
    .align 2, 0
lbl_080746d8: .4byte 0x08754bc8
lbl_080746dc: .4byte 0x03000c1e
lbl_080746e0: .4byte 0x000036e0
lbl_080746e4: .4byte 0x08411410
lbl_080746e8: .4byte 0x08411420
lbl_080746ec: .4byte 0x08411430
lbl_080746f0:
    adds r3, #1
    cmp r3, #0xf
    bgt lbl_08074706
    adds r0, r3, r7
    adds r1, r4, r3
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_080746f0
    movs r0, #1
    orrs r2, r0
lbl_08074706:
    movs r3, #0
    mov r1, r8
    ldrb r0, [r1]
    ldrb r1, [r6]
    b lbl_08074720
lbl_08074710:
    adds r3, #1
    cmp r3, #0xf
    bgt lbl_08074728
    mov r1, r8
    adds r0, r3, r1
    adds r1, r6, r3
    ldrb r0, [r0]
    ldrb r1, [r1]
lbl_08074720:
    cmp r0, r1
    beq lbl_08074710
    movs r0, #2
    orrs r2, r0
lbl_08074728:
    movs r3, #0
    mov r6, sl
    ldrb r0, [r6]
    ldr r1, [sp, #4]
    b lbl_08074746
lbl_08074732:
    adds r3, #1
    cmp r3, #0xf
    bgt lbl_08074750
    mov r6, sl
    adds r0, r3, r6
    movs r6, #0x94
    lsls r6, r6, #2
    adds r1, r4, r6
    adds r1, r1, r3
    ldrb r0, [r0]
lbl_08074746:
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_08074732
    movs r0, #4
    orrs r2, r0
lbl_08074750:
    cmp r2, #0
    beq lbl_08074760
    cmp r2, #7
    bne lbl_0807475c
    movs r0, #2
    b lbl_0807475e
lbl_0807475c:
    movs r0, #1
lbl_0807475e:
    orrs r5, r0
lbl_08074760:
    cmp r5, #1
    ble lbl_08074776
    ldr r1, lbl_08074788 @ =0x0000ffff
    movs r3, #0x91
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl BitFill
lbl_08074776:
    adds r0, r5, #0
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08074788: .4byte 0x0000ffff

    thumb_func_start sub_0807478c
sub_0807478c: @ 0x0807478c
    push {lr}
    ldr r0, lbl_080747a8 @ =0x03000c1d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_080747a2
    bl load_sram_data
    bl load_sram_arrays
lbl_080747a2:
    pop {r0}
    bx r0
    .align 2, 0
lbl_080747a8: .4byte 0x03000c1d

    thumb_func_start sub_080747ac
sub_080747ac: @ 0x080747ac
    push {lr}
    bl load_sram_data
    bl load_sram_arrays
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start write_sram_arrays
write_sram_arrays: @ 0x080747bc
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    ldr r2, lbl_08074898 @ =0x08754bc8
    ldr r0, lbl_0807489c @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r4, [r2]
    adds r4, r4, r0
    movs r0, #0xc0
    lsls r0, r0, #2
    adds r0, r0, r4
    mov r8, r0
    ldr r1, lbl_080748a0 @ =0x02037400
    movs r3, #0x80
    lsls r3, r3, #3
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    mov r2, r8
    bl DMATransfer
    ldr r1, lbl_080748a4 @ =0x02037c00
    movs r0, #0x88
    lsls r0, r0, #5
    adds r2, r4, r0
    movs r3, #0x80
    lsls r3, r3, #1
    str r5, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_080748a8 @ =0x02037e00
    movs r0, #0x90
    lsls r0, r0, #5
    adds r4, r4, r0
    str r5, [sp]
    movs r0, #3
    adds r2, r4, #0
    movs r3, #0x20
    bl DMATransfer
    movs r6, #0
    movs r5, #0
    ldr r7, lbl_080748ac @ =0x02035c00
lbl_08074824:
    ldr r0, lbl_080748b0 @ =0x0300005b
    adds r1, r5, r0
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08074848
    lsls r4, r0, #1
    movs r0, #0x80
    lsls r0, r0, #3
    adds r2, r6, r0
    add r2, r8
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r1, r7, #0
    adds r3, r4, #0
    bl DMATransfer
    adds r6, r6, r4
lbl_08074848:
    movs r0, #0x80
    lsls r0, r0, #2
    adds r7, r7, r0
    adds r5, #1
    cmp r5, #7
    ble lbl_08074824
    movs r6, #0
    movs r5, #0
    ldr r7, lbl_080748b4 @ =0x02036c00
lbl_0807485a:
    ldr r0, lbl_080748b8 @ =0x03000063
    adds r0, r5, r0
    ldrb r0, [r0]
    lsls r4, r0, #2
    cmp r4, #0
    beq lbl_0807487e
    movs r0, #0xc0
    lsls r0, r0, #4
    adds r2, r6, r0
    add r2, r8
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r1, r7, #0
    adds r3, r4, #0
    bl DMATransfer
    adds r6, r6, r4
lbl_0807487e:
    movs r0, #0x80
    lsls r0, r0, #1
    adds r7, r7, r0
    adds r5, #1
    cmp r5, #7
    ble lbl_0807485a
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074898: .4byte 0x08754bc8
lbl_0807489c: .4byte 0x03000c1e
lbl_080748a0: .4byte 0x02037400
lbl_080748a4: .4byte 0x02037c00
lbl_080748a8: .4byte 0x02037e00
lbl_080748ac: .4byte 0x02035c00
lbl_080748b0: .4byte 0x0300005b
lbl_080748b4: .4byte 0x02036c00
lbl_080748b8: .4byte 0x03000063

    thumb_func_start load_sram_arrays
load_sram_arrays: @ 0x080748bc
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    ldr r2, lbl_080749bc @ =0x08754bc8
    ldr r0, lbl_080749c0 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #3
    adds r0, r0, r1
    lsls r0, r0, #4
    adds r0, r0, r1
    lsls r0, r0, #5
    adds r0, #0x80
    ldr r4, [r2]
    adds r4, r4, r0
    movs r0, #0xc0
    lsls r0, r0, #2
    adds r0, r0, r4
    mov r8, r0
    ldr r2, lbl_080749c4 @ =0x02037400
    movs r3, #0x80
    lsls r3, r3, #3
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    mov r1, r8
    bl DMATransfer
    movs r0, #0x88
    lsls r0, r0, #5
    adds r1, r4, r0
    ldr r2, lbl_080749c8 @ =0x02037c00
    movs r3, #0x80
    lsls r3, r3, #1
    str r5, [sp]
    movs r0, #3
    bl DMATransfer
    movs r0, #0x90
    lsls r0, r0, #5
    adds r4, r4, r0
    ldr r2, lbl_080749cc @ =0x02037e00
    str r5, [sp]
    movs r0, #3
    adds r1, r4, #0
    movs r3, #0x20
    bl DMATransfer
    ldr r4, lbl_080749d0 @ =0x0000ffff
    ldr r6, lbl_080749d4 @ =0x02035c00
    movs r3, #0x80
    lsls r3, r3, #5
    str r5, [sp]
    movs r0, #3
    adds r1, r4, #0
    adds r2, r6, #0
    bl BitFill
    ldr r2, lbl_080749d8 @ =0x02036c00
    movs r3, #0x80
    lsls r3, r3, #4
    str r5, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl BitFill
    movs r7, #0
    movs r5, #0
lbl_08074946:
    ldr r0, lbl_080749dc @ =0x0300005b
    adds r1, r5, r0
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807496a
    lsls r4, r0, #1
    movs r0, #0x80
    lsls r0, r0, #3
    adds r1, r7, r0
    add r1, r8
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r6, #0
    adds r3, r4, #0
    bl DMATransfer
    adds r7, r7, r4
lbl_0807496a:
    movs r0, #0x80
    lsls r0, r0, #2
    adds r6, r6, r0
    adds r5, #1
    cmp r5, #7
    ble lbl_08074946
    movs r7, #0
    movs r5, #0
    ldr r6, lbl_080749d8 @ =0x02036c00
lbl_0807497c:
    ldr r0, lbl_080749e0 @ =0x03000063
    adds r0, r5, r0
    ldrb r0, [r0]
    lsls r4, r0, #2
    cmp r4, #0
    beq lbl_080749a0
    movs r0, #0xc0
    lsls r0, r0, #4
    adds r1, r7, r0
    add r1, r8
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r6, #0
    adds r3, r4, #0
    bl DMATransfer
    adds r7, r7, r4
lbl_080749a0:
    movs r0, #0x80
    lsls r0, r0, #1
    adds r6, r6, r0
    adds r5, #1
    cmp r5, #7
    ble lbl_0807497c
    bl load_minimap_tiles_with_obtained_items
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080749bc: .4byte 0x08754bc8
lbl_080749c0: .4byte 0x03000c1e
lbl_080749c4: .4byte 0x02037400
lbl_080749c8: .4byte 0x02037c00
lbl_080749cc: .4byte 0x02037e00
lbl_080749d0: .4byte 0x0000ffff
lbl_080749d4: .4byte 0x02035c00
lbl_080749d8: .4byte 0x02036c00
lbl_080749dc: .4byte 0x0300005b
lbl_080749e0: .4byte 0x03000063

    thumb_func_start sub_080749e4
sub_080749e4: @ 0x080749e4
    push {r4, r5, lr}
    ldr r0, lbl_08074a68 @ =0x08754bc8
    ldr r2, [r0]
    movs r0, #0xdb
    lsls r0, r0, #7
    adds r5, r2, r0
    adds r3, r5, #0
    movs r1, #0
    movs r0, #0x1e
    strb r0, [r5]
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
    strh r1, [r5, #2]
    ldr r0, lbl_08074a6c @ =0x0000ffff
    strh r0, [r5, #4]
    ldr r0, lbl_08074a70 @ =0x03000c1e
    ldrb r0, [r0]
    strb r0, [r5, #0x16]
    ldr r1, lbl_08074a74 @ =0x08411488
    ldr r0, lbl_08074a78 @ =0x00006d86
    adds r2, r2, r0
    movs r4, #0xf
lbl_08074a12:
    ldrb r0, [r1]
    strb r0, [r2]
    ldrb r0, [r1, #0x10]
    strb r0, [r2, #0x11]
    adds r1, #1
    adds r2, #1
    subs r4, #1
    cmp r4, #0
    bge lbl_08074a12
    movs r1, #0
    movs r4, #7
lbl_08074a28:
    ldrh r0, [r3]
    adds r0, r1, r0
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r3, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_08074a28
    strh r1, [r5, #2]
    mvns r0, r1
    strh r0, [r5, #4]
    movs r0, #5
    bl sub_08000c48
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074a68: .4byte 0x08754bc8
lbl_08074a6c: .4byte 0x0000ffff
lbl_08074a70: .4byte 0x03000c1e
lbl_08074a74: .4byte 0x08411488
lbl_08074a78: .4byte 0x00006d86

    thumb_func_start sub_08074a7c
sub_08074a7c: @ 0x08074a7c
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r2, lbl_08074b28 @ =0x08754bc8
    ldr r0, [r2]
    movs r1, #0xdb
    lsls r1, r1, #7
    adds r1, r1, r0
    mov ip, r1
    ldrb r1, [r1]
    movs r0, #0x1e
    eors r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r4, r0, #0x1f
    adds r7, r2, #0
    ldr r6, lbl_08074b2c @ =0x03000c1e
    cmp r4, #0
    bne lbl_08074b34
    mov r1, ip
    movs r2, #0
    ldrh r5, [r1, #2]
    movs r3, #7
lbl_08074aa8:
    ldrh r0, [r1]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    adds r1, #2
    lsrs r0, r0, #0x10
    ldrh r2, [r1]
    adds r0, r0, r2
    lsls r0, r0, #0x10
    adds r1, #2
    lsrs r0, r0, #0x10
    ldrh r2, [r1]
    adds r0, r0, r2
    lsls r0, r0, #0x10
    adds r1, #2
    lsrs r0, r0, #0x10
    ldrh r2, [r1]
    adds r0, r0, r2
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_08074aa8
    cmp r5, r2
    beq lbl_08074adc
    movs r4, #2
lbl_08074adc:
    cmp r4, #0
    bne lbl_08074b34
    movs r3, #0
    ldr r0, lbl_08074b30 @ =0x08411488
    mov r2, ip
    ldrb r1, [r2, #6]
    adds r2, r0, #0
    ldrb r0, [r2]
    cmp r1, r0
    bne lbl_08074b34
lbl_08074af0:
    mov r0, ip
    adds r0, #0x17
    adds r0, r0, r3
    adds r1, r2, #0
    adds r1, #0x10
    adds r1, r3, r1
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_08074b34
    adds r3, #1
    cmp r3, #0xf
    bgt lbl_08074b1c
    mov r0, ip
    adds r0, #6
    adds r0, r0, r3
    adds r1, r3, r2
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_08074af0
    movs r4, #3
lbl_08074b1c:
    cmp r4, #0
    bne lbl_08074b34
    mov r1, ip
    ldrb r0, [r1, #0x16]
    b lbl_08074b54
    .align 2, 0
lbl_08074b28: .4byte 0x08754bc8
lbl_08074b2c: .4byte 0x03000c1e
lbl_08074b30: .4byte 0x08411488
lbl_08074b34:
    mov r1, sp
    ldr r2, lbl_08074b60 @ =0x0000ffff
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_08074b64 @ =0x040000d4
    mov r0, sp
    str r0, [r1]
    ldr r0, [r7]
    movs r2, #0xdb
    lsls r2, r2, #7
    adds r0, r0, r2
    str r0, [r1, #4]
    ldr r0, lbl_08074b68 @ =0x81000020
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r0, #0
lbl_08074b54:
    strb r0, [r6]
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074b60: .4byte 0x0000ffff
lbl_08074b64: .4byte 0x040000d4
lbl_08074b68: .4byte 0x81000020

    thumb_func_start sub_08074b6c
sub_08074b6c: @ 0x08074b6c
    push {r4, r5, lr}
    ldr r0, lbl_08074bf0 @ =0x08754bc8
    ldr r2, [r0]
    ldr r0, lbl_08074bf4 @ =0x00006e40
    adds r5, r2, r0
    adds r3, r5, #0
    movs r1, #0
    movs r0, #0x1f
    strb r0, [r5]
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
    strh r1, [r5, #2]
    ldr r0, lbl_08074bf8 @ =0x0000ffff
    strh r0, [r5, #4]
    ldr r0, lbl_08074bfc @ =0x03000004
    ldrb r0, [r0]
    strb r0, [r5, #0x16]
    ldr r1, lbl_08074c00 @ =0x084114a8
    ldr r0, lbl_08074c04 @ =0x00006e46
    adds r2, r2, r0
    movs r4, #0xf
lbl_08074b98:
    ldrb r0, [r1]
    strb r0, [r2]
    ldrb r0, [r1, #0x10]
    strb r0, [r2, #0x11]
    adds r1, #1
    adds r2, #1
    subs r4, #1
    cmp r4, #0
    bge lbl_08074b98
    movs r1, #0
    movs r4, #7
lbl_08074bae:
    ldrh r0, [r3]
    adds r0, r1, r0
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r3, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_08074bae
    strh r1, [r5, #2]
    mvns r0, r1
    strh r0, [r5, #4]
    movs r0, #8
    bl sub_08000c48
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074bf0: .4byte 0x08754bc8
lbl_08074bf4: .4byte 0x00006e40
lbl_08074bf8: .4byte 0x0000ffff
lbl_08074bfc: .4byte 0x03000004
lbl_08074c00: .4byte 0x084114a8
lbl_08074c04: .4byte 0x00006e46

    thumb_func_start sub_08074c08
sub_08074c08: @ 0x08074c08
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r2, lbl_08074cb0 @ =0x08754bc8
    ldr r0, [r2]
    ldr r1, lbl_08074cb4 @ =0x00006e40
    adds r1, r1, r0
    mov ip, r1
    ldrb r1, [r1]
    movs r0, #0x1f
    eors r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r4, r0, #0x1f
    adds r7, r2, #0
    ldr r6, lbl_08074cb8 @ =0x03000004
    cmp r4, #0
    bne lbl_08074cc0
    mov r1, ip
    movs r2, #0
    ldrh r5, [r1, #2]
    movs r3, #7
lbl_08074c32:
    ldrh r0, [r1]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    adds r1, #2
    lsrs r0, r0, #0x10
    ldrh r2, [r1]
    adds r0, r0, r2
    lsls r0, r0, #0x10
    adds r1, #2
    lsrs r0, r0, #0x10
    ldrh r2, [r1]
    adds r0, r0, r2
    lsls r0, r0, #0x10
    adds r1, #2
    lsrs r0, r0, #0x10
    ldrh r2, [r1]
    adds r0, r0, r2
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_08074c32
    cmp r5, r2
    beq lbl_08074c66
    movs r4, #2
lbl_08074c66:
    cmp r4, #0
    bne lbl_08074cc0
    movs r3, #0
    ldr r0, lbl_08074cbc @ =0x084114a8
    mov r2, ip
    ldrb r1, [r2, #6]
    adds r2, r0, #0
    ldrb r0, [r2]
    cmp r1, r0
    bne lbl_08074cc0
lbl_08074c7a:
    mov r0, ip
    adds r0, #0x17
    adds r0, r0, r3
    adds r1, r2, #0
    adds r1, #0x10
    adds r1, r3, r1
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_08074cc0
    adds r3, #1
    cmp r3, #0xf
    bgt lbl_08074ca6
    mov r0, ip
    adds r0, #6
    adds r0, r0, r3
    adds r1, r3, r2
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_08074c7a
    movs r4, #3
lbl_08074ca6:
    cmp r4, #0
    bne lbl_08074cc0
    mov r1, ip
    ldrb r0, [r1, #0x16]
    b lbl_08074cde
    .align 2, 0
lbl_08074cb0: .4byte 0x08754bc8
lbl_08074cb4: .4byte 0x00006e40
lbl_08074cb8: .4byte 0x03000004
lbl_08074cbc: .4byte 0x084114a8
lbl_08074cc0:
    mov r1, sp
    ldr r2, lbl_08074ce8 @ =0x0000ffff
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_08074cec @ =0x040000d4
    mov r0, sp
    str r0, [r1]
    ldr r0, [r7]
    ldr r2, lbl_08074cf0 @ =0x00006e40
    adds r0, r0, r2
    str r0, [r1, #4]
    ldr r0, lbl_08074cf4 @ =0x81000020
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r0, #0
lbl_08074cde:
    strb r0, [r6]
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074ce8: .4byte 0x0000ffff
lbl_08074cec: .4byte 0x040000d4
lbl_08074cf0: .4byte 0x00006e40
lbl_08074cf4: .4byte 0x81000020

    thumb_func_start sub_08074cf8
sub_08074cf8: @ 0x08074cf8
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_08074d88 @ =0x08754bc8
    ldr r4, [r0]
    ldr r0, lbl_08074d8c @ =0x00006dc0
    adds r5, r4, r0
    adds r3, r5, #0
    movs r1, #0
    movs r0, #0x1f
    strb r0, [r5]
    ldrb r0, [r5, #1]
    adds r0, #1
    strb r0, [r5, #1]
    strh r1, [r5, #2]
    ldr r0, lbl_08074d90 @ =0x0000ffff
    strh r0, [r5, #4]
    ldr r0, lbl_08074d94 @ =0x03000020
    movs r2, #0
    ldrsb r2, [r0, r2]
    cmp r2, #6
    bls lbl_08074d22
    movs r2, #2
lbl_08074d22:
    strb r2, [r5, #0x16]
    movs r2, #0
    ldr r1, lbl_08074d98 @ =0x00006dc6
    adds r7, r4, r1
    ldr r0, lbl_08074d9c @ =0x00006dd7
    adds r6, r4, r0
    ldr r4, lbl_08074da0 @ =0x084114c8
lbl_08074d30:
    adds r1, r7, r2
    ldrb r0, [r4]
    strb r0, [r1]
    adds r1, r6, r2
    ldrb r0, [r4, #0x10]
    strb r0, [r1]
    adds r4, #1
    adds r2, #1
    cmp r2, #0xf
    ble lbl_08074d30
    movs r1, #0
    movs r2, #7
lbl_08074d48:
    ldrh r0, [r3]
    adds r0, r1, r0
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r3, #2
    subs r2, #1
    cmp r2, #0
    bge lbl_08074d48
    strh r1, [r5, #2]
    mvns r0, r1
    strh r0, [r5, #4]
    movs r0, #6
    bl sub_08000c48
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074d88: .4byte 0x08754bc8
lbl_08074d8c: .4byte 0x00006dc0
lbl_08074d90: .4byte 0x0000ffff
lbl_08074d94: .4byte 0x03000020
lbl_08074d98: .4byte 0x00006dc6
lbl_08074d9c: .4byte 0x00006dd7
lbl_08074da0: .4byte 0x084114c8

    thumb_func_start sub_08074da4
sub_08074da4: @ 0x08074da4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    movs r0, #0
    mov r8, r0
    ldr r1, lbl_08074e2c @ =0x08754bc8
    mov sb, r1
    ldr r6, lbl_08074e30 @ =0x040000d4
    ldr r2, lbl_08074e34 @ =0x81000020
    mov sl, r2
lbl_08074dbe:
    mov r1, r8
    lsls r0, r1, #6
    ldr r2, lbl_08074e38 @ =0x00006dc0
    adds r0, r0, r2
    mov r2, sb
    ldr r1, [r2]
    adds r5, r1, r0
    adds r2, r5, #0
    ldrb r1, [r5]
    movs r0, #0x1f
    eors r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r4, r0, #0x1f
    cmp r4, #0
    bne lbl_08074e6e
    movs r1, #0
    ldrh r7, [r5, #2]
    movs r3, #7
lbl_08074de4:
    ldrh r0, [r2]
    adds r0, r1, r0
    lsls r0, r0, #0x10
    adds r2, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r2]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r2, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r2]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r2, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r2]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r2, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_08074de4
    cmp r7, r1
    beq lbl_08074e18
    movs r4, #2
lbl_08074e18:
    cmp r4, #0
    bne lbl_08074e6e
    movs r3, #0
    ldr r0, lbl_08074e3c @ =0x084114c8
    ldrb r1, [r5, #6]
    adds r2, r0, #0
    ldrb r0, [r2]
    cmp r1, r0
    beq lbl_08074e44
    b lbl_08074e6c
    .align 2, 0
lbl_08074e2c: .4byte 0x08754bc8
lbl_08074e30: .4byte 0x040000d4
lbl_08074e34: .4byte 0x81000020
lbl_08074e38: .4byte 0x00006dc0
lbl_08074e3c: .4byte 0x084114c8
lbl_08074e40:
    movs r4, #4
    b lbl_08074e6e
lbl_08074e44:
    adds r0, r5, #0
    adds r0, #0x17
    adds r0, r0, r3
    adds r1, r2, #0
    adds r1, #0x10
    adds r1, r3, r1
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_08074e40
    adds r3, #1
    cmp r3, #0xf
    bgt lbl_08074e6e
    adds r0, r5, #6
    adds r0, r0, r3
    adds r1, r3, r2
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_08074e44
lbl_08074e6c:
    movs r4, #3
lbl_08074e6e:
    mov r1, r8
    cmp r1, #0
    bne lbl_08074ea0
    cmp r4, #0
    bne lbl_08074ee2
    mov r2, sb
    ldr r1, [r2]
    ldr r2, lbl_08074e98 @ =0x00006dc0
    adds r0, r1, r2
    str r0, [r6]
    movs r0, #0xdc
    lsls r0, r0, #7
    adds r1, r1, r0
    str r1, [r6, #4]
    ldr r0, lbl_08074e9c @ =0x80000020
    str r0, [r6, #8]
    ldr r0, [r6, #8]
    movs r0, #7
    bl sub_08000c48
    b lbl_08074eee
    .align 2, 0
lbl_08074e98: .4byte 0x00006dc0
lbl_08074e9c: .4byte 0x80000020
lbl_08074ea0:
    cmp r4, #0
    beq lbl_08074f04
    mov r0, sp
    movs r1, #0
    strh r1, [r0]
    str r0, [r6]
    mov r2, sb
    ldr r0, [r2]
    ldr r1, lbl_08074efc @ =0x00006dc0
    adds r0, r0, r1
    str r0, [r6, #4]
    mov r2, sl
    str r2, [r6, #8]
    ldr r0, [r6, #8]
    movs r0, #6
    bl sub_08000c48
    mov r0, sp
    movs r1, #0
    strh r1, [r0]
    str r0, [r6]
    mov r2, sb
    ldr r0, [r2]
    movs r1, #0xdc
    lsls r1, r1, #7
    adds r0, r0, r1
    str r0, [r6, #4]
    mov r2, sl
    str r2, [r6, #8]
    ldr r0, [r6, #8]
    movs r0, #7
    bl sub_08000c48
lbl_08074ee2:
    movs r0, #1
    add r8, r0
    mov r1, r8
    cmp r1, #1
    bgt lbl_08074eee
    b lbl_08074dbe
lbl_08074eee:
    cmp r4, #0
    beq lbl_08074f3c
    ldr r1, lbl_08074f00 @ =0x03000020
    movs r0, #0
    strb r0, [r1]
    movs r0, #1
    b lbl_08074f44
    .align 2, 0
lbl_08074efc: .4byte 0x00006dc0
lbl_08074f00: .4byte 0x03000020
lbl_08074f04:
    ldr r1, lbl_08074f2c @ =0x040000d4
    ldr r2, lbl_08074f30 @ =0x08754bc8
    ldr r0, [r2]
    movs r2, #0xdc
    lsls r2, r2, #7
    adds r0, r0, r2
    str r0, [r1]
    ldr r2, lbl_08074f30 @ =0x08754bc8
    ldr r0, [r2]
    ldr r2, lbl_08074f34 @ =0x00006dc0
    adds r0, r0, r2
    str r0, [r1, #4]
    ldr r0, lbl_08074f38 @ =0x80000020
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r0, #6
    bl sub_08000c48
    b lbl_08074eee
    .align 2, 0
lbl_08074f2c: .4byte 0x040000d4
lbl_08074f30: .4byte 0x08754bc8
lbl_08074f34: .4byte 0x00006dc0
lbl_08074f38: .4byte 0x80000020
lbl_08074f3c:
    ldr r1, lbl_08074f54 @ =0x03000020
    ldrb r0, [r5, #0x16]
    strb r0, [r1]
    movs r0, #0
lbl_08074f44:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08074f54: .4byte 0x03000020

    thumb_func_start backup_time_attack_for_sram
backup_time_attack_for_sram: @ 0x08074f58
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_08074ff4 @ =0x08754bc8
    ldr r2, [r0]
    movs r0, #0xdd
    lsls r0, r0, #7
    adds r5, r2, r0
    adds r3, r5, #0
    movs r1, #0
    movs r0, #0x40
    strb r0, [r5]
    ldrb r0, [r5, #0x16]
    adds r0, #1
    strb r0, [r5, #0x16]
    strh r1, [r5, #0x12]
    ldr r0, lbl_08074ff8 @ =0x0000ffff
    strh r0, [r5, #0x14]
    ldr r4, lbl_08074ffc @ =0x00006ea8
    adds r1, r2, r4
    ldr r0, lbl_08075000 @ =0x03001694
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    movs r4, #0
    ldr r6, lbl_08075004 @ =0x00006e97
    adds r7, r2, r6
    ldr r0, lbl_08075008 @ =0x00006ed8
    adds r6, r2, r0
    ldr r2, lbl_0807500c @ =0x084114e8
lbl_08074f9a:
    adds r1, r7, r4
    ldrb r0, [r2]
    strb r0, [r1]
    adds r1, r6, r4
    ldrb r0, [r2, #0x10]
    strb r0, [r1]
    adds r2, #1
    adds r4, #1
    cmp r4, #0xf
    ble lbl_08074f9a
    movs r1, #0
    movs r4, #0x1f
lbl_08074fb2:
    ldrh r0, [r3]
    adds r0, r1, r0
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r3]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r6, [r3]
    adds r0, r0, r6
    lsls r0, r0, #0x10
    adds r3, #2
    lsrs r0, r0, #0x10
    ldrh r7, [r3]
    adds r0, r0, r7
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r3, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_08074fb2
    strh r1, [r5, #0x12]
    mvns r0, r1
    strh r0, [r5, #0x14]
    movs r0, #9
    bl sub_08000c48
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08074ff4: .4byte 0x08754bc8
lbl_08074ff8: .4byte 0x0000ffff
lbl_08074ffc: .4byte 0x00006ea8
lbl_08075000: .4byte 0x03001694
lbl_08075004: .4byte 0x00006e97
lbl_08075008: .4byte 0x00006ed8
lbl_0807500c: .4byte 0x084114e8

    thumb_func_start sub_08075010
sub_08075010: @ 0x08075010
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    movs r0, #0
    mov r8, r0
    ldr r1, lbl_08075098 @ =0x08754bc8
    mov sb, r1
    ldr r2, lbl_0807509c @ =0x040000d4
    mov sl, r2
lbl_08075028:
    mov r3, r8
    lsls r0, r3, #8
    movs r4, #0xdd
    lsls r4, r4, #7
    adds r0, r0, r4
    mov r2, sb
    ldr r1, [r2]
    adds r7, r1, r0
    adds r2, r7, #0
    ldrb r1, [r7]
    movs r0, #0x40
    eors r1, r0
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r6, r0, #0x1f
    cmp r6, #0
    bne lbl_080750d4
    movs r1, #0
    ldrh r4, [r7, #0x12]
    movs r3, #0x1f
lbl_08075050:
    ldrh r0, [r2]
    adds r0, r1, r0
    lsls r0, r0, #0x10
    adds r2, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r2]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r2, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r2]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    adds r2, #2
    lsrs r0, r0, #0x10
    ldrh r1, [r2]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r2, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_08075050
    cmp r4, r1
    beq lbl_08075084
    movs r6, #2
lbl_08075084:
    cmp r6, #0
    bne lbl_080750d4
    movs r3, #0
    ldr r0, lbl_080750a0 @ =0x084114e8
    ldrb r1, [r7, #0x17]
    adds r2, r0, #0
    ldrb r4, [r2]
    cmp r1, r4
    beq lbl_080750a8
    b lbl_080750d2
    .align 2, 0
lbl_08075098: .4byte 0x08754bc8
lbl_0807509c: .4byte 0x040000d4
lbl_080750a0: .4byte 0x084114e8
lbl_080750a4:
    movs r6, #4
    b lbl_080750d4
lbl_080750a8:
    adds r0, r7, #0
    adds r0, #0x58
    adds r0, r0, r3
    adds r1, r2, #0
    adds r1, #0x10
    adds r1, r3, r1
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_080750a4
    adds r3, #1
    cmp r3, #0xf
    bgt lbl_080750d4
    adds r0, r7, #0
    adds r0, #0x17
    adds r0, r0, r3
    adds r1, r3, r2
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    beq lbl_080750a8
lbl_080750d2:
    movs r6, #3
lbl_080750d4:
    mov r0, r8
    cmp r0, #0
    bne lbl_08075108
    cmp r6, #0
    bne lbl_0807514a
    mov r2, sb
    ldr r1, [r2]
    movs r3, #0xdd
    lsls r3, r3, #7
    adds r0, r1, r3
    mov r4, sl
    str r0, [r4]
    movs r0, #0xdf
    lsls r0, r0, #7
    adds r1, r1, r0
    str r1, [r4, #4]
    ldr r0, lbl_08075104 @ =0x80000080
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    movs r0, #0xa
    bl sub_08000c48
    b lbl_08075156
    .align 2, 0
lbl_08075104: .4byte 0x80000080
lbl_08075108:
    cmp r6, #0
    beq lbl_0807517c
    mov r1, sb
    ldr r2, [r1]
    movs r3, #0xdd
    lsls r3, r3, #7
    adds r2, r2, r3
    movs r5, #0x80
    lsls r5, r5, #1
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    ldr r1, lbl_08075174 @ =0x0000ffff
    adds r3, r5, #0
    bl BitFill
    movs r0, #9
    bl sub_08000c48
    mov r0, sb
    ldr r2, [r0]
    movs r1, #0xdf
    lsls r1, r1, #7
    adds r2, r2, r1
    str r4, [sp]
    movs r0, #3
    ldr r1, lbl_08075174 @ =0x0000ffff
    adds r3, r5, #0
    bl BitFill
    movs r0, #0xa
    bl sub_08000c48
lbl_0807514a:
    movs r2, #1
    add r8, r2
    mov r3, r8
    cmp r3, #1
    bgt lbl_08075156
    b lbl_08075028
lbl_08075156:
    cmp r6, #0
    bne lbl_080751b0
    ldr r1, lbl_08075178 @ =0x03001694
    adds r0, r7, #0
    adds r0, #0x28
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    b lbl_080751c0
    .align 2, 0
lbl_08075174: .4byte 0x0000ffff
lbl_08075178: .4byte 0x03001694
lbl_0807517c:
    ldr r1, lbl_080751a4 @ =0x040000d4
    ldr r4, lbl_080751a8 @ =0x08754bc8
    ldr r0, [r4]
    movs r2, #0xdf
    lsls r2, r2, #7
    adds r0, r0, r2
    str r0, [r1]
    ldr r0, [r4]
    movs r3, #0xdd
    lsls r3, r3, #7
    adds r0, r0, r3
    str r0, [r1, #4]
    ldr r0, lbl_080751ac @ =0x80000080
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r0, #9
    bl sub_08000c48
    b lbl_08075156
    .align 2, 0
lbl_080751a4: .4byte 0x040000d4
lbl_080751a8: .4byte 0x08754bc8
lbl_080751ac: .4byte 0x80000080
lbl_080751b0:
    ldr r1, lbl_080751d0 @ =0x0000ffff
    ldr r2, lbl_080751d4 @ =0x03001694
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x30
    bl BitFill
lbl_080751c0:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080751d0: .4byte 0x0000ffff
lbl_080751d4: .4byte 0x03001694

    thumb_func_start sub_080751d8
sub_080751d8: @ 0x080751d8
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r1, lbl_08075314 @ =0x0000ffff
    ldr r4, lbl_08075318 @ =0x0203f800
    movs r3, #0xa0
    lsls r3, r3, #2
    movs r6, #0x10
    str r6, [sp]
    movs r0, #3
    adds r2, r4, #0
    bl BitFill
    ldr r5, lbl_0807531c @ =0x03000054
    ldrb r0, [r5]
    strb r0, [r4]
    ldr r0, lbl_08075320 @ =0x03000056
    ldrb r0, [r0]
    strb r0, [r4, #1]
    adds r1, r4, #4
    ldr r0, lbl_08075324 @ =0x030013d4
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldm r0!, {r2, r3}
    stm r1!, {r2, r3}
    ldr r0, lbl_08075328 @ =0x03001414
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r4, #0x24]
    str r1, [r4, #0x28]
    ldr r1, lbl_0807532c @ =0x0300141c
    adds r0, r4, #0
    adds r0, #0x2c
    movs r2, #0x86
    lsls r2, r2, #1
    bl memcpy
    movs r2, #0x9c
    lsls r2, r2, #1
    adds r2, r4, r2
    ldr r0, lbl_08075330 @ =0x03001528
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    movs r1, #0xa0
    lsls r1, r1, #1
    orrs r1, r4
    ldr r0, lbl_08075334 @ =0x03001530
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldm r0!, {r2, r7}
    stm r1!, {r2, r7}
    movs r2, #0xaa
    lsls r2, r2, #1
    adds r2, r4, r2
    ldr r0, lbl_08075338 @ =0x03001544
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    movs r1, #0xae
    lsls r1, r1, #1
    orrs r1, r4
    ldr r0, lbl_0807533c @ =0x0300154c
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    movs r1, #0xb4
    lsls r1, r1, #1
    orrs r1, r4
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    movs r1, #0xba
    lsls r1, r1, #1
    orrs r1, r4
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    movs r1, #0xc0
    lsls r1, r1, #1
    orrs r1, r4
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    movs r1, #0xc6
    lsls r1, r1, #1
    orrs r1, r4
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldrb r1, [r5]
    lsls r1, r1, #7
    ldr r3, lbl_08075340 @ =0x02037400
    adds r1, r1, r3
    movs r2, #0xcc
    lsls r2, r2, #1
    adds r2, r4, r2
    str r6, [sp]
    movs r0, #3
    movs r3, #0x80
    bl DMATransfer
    ldrb r1, [r5]
    lsls r1, r1, #5
    ldr r7, lbl_08075344 @ =0x02037c00
    adds r1, r1, r7
    movs r2, #0x86
    lsls r2, r2, #2
    adds r2, r4, r2
    str r6, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    movs r0, #0x8e
    lsls r0, r0, #2
    adds r0, r4, r0
    movs r1, #0x41
    strb r1, [r0]
    ldr r0, lbl_08075348 @ =0x00000239
    adds r0, r4, r0
    movs r1, #0x54
    strb r1, [r0]
    ldr r0, lbl_0807534c @ =0x0000023a
    adds r0, r4, r0
    movs r1, #0x52
    strb r1, [r0]
    ldr r0, lbl_08075350 @ =0x0000023b
    adds r0, r4, r0
    movs r1, #0x55
    strb r1, [r0]
    movs r0, #0x8f
    lsls r0, r0, #2
    adds r0, r4, r0
    movs r2, #0x4e
    strb r2, [r0]
    ldr r0, lbl_08075354 @ =0x0000023d
    adds r0, r4, r0
    movs r1, #0x45
    strb r1, [r0]
    ldr r0, lbl_08075358 @ =0x0000023e
    adds r0, r4, r0
    strb r2, [r0]
    ldr r0, lbl_0807535c @ =0x0000023f
    adds r0, r4, r0
    movs r1, #0x44
    strb r1, [r0]
    ldr r0, lbl_08075360 @ =0x0300002d
    ldrb r1, [r0]
    movs r0, #0x90
    lsls r0, r0, #2
    adds r4, r4, r0
    strb r1, [r4]
    movs r0, #0xd
    bl sub_08000c48
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08075314: .4byte 0x0000ffff
lbl_08075318: .4byte 0x0203f800
lbl_0807531c: .4byte 0x03000054
lbl_08075320: .4byte 0x03000056
lbl_08075324: .4byte 0x030013d4
lbl_08075328: .4byte 0x03001414
lbl_0807532c: .4byte 0x0300141c
lbl_08075330: .4byte 0x03001528
lbl_08075334: .4byte 0x03001530
lbl_08075338: .4byte 0x03001544
lbl_0807533c: .4byte 0x0300154c
lbl_08075340: .4byte 0x02037400
lbl_08075344: .4byte 0x02037c00
lbl_08075348: .4byte 0x00000239
lbl_0807534c: .4byte 0x0000023a
lbl_08075350: .4byte 0x0000023b
lbl_08075354: .4byte 0x0000023d
lbl_08075358: .4byte 0x0000023e
lbl_0807535c: .4byte 0x0000023f
lbl_08075360: .4byte 0x0300002d

    thumb_func_start load_demo_ram_values
load_demo_ram_values: @ 0x08075364
    push {r4, r5, r6, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    lsls r1, r1, #0x18
    ldr r0, lbl_080753c8 @ =0x0875fdfc
    lsrs r1, r1, #0x16
    adds r1, r1, r0
    ldr r6, [r1]
    cmp r2, #0
    bne lbl_080753e0
    ldr r4, lbl_080753cc @ =0x03000054
    ldrb r0, [r6]
    strb r0, [r4]
    ldr r1, lbl_080753d0 @ =0x03000056
    ldrb r0, [r6, #1]
    strb r0, [r1]
    ldr r1, lbl_080753d4 @ =0x0300002d
    movs r2, #0x90
    lsls r2, r2, #2
    adds r0, r6, r2
    ldrb r0, [r0]
    strb r0, [r1]
    movs r3, #0xcc
    lsls r3, r3, #1
    adds r1, r6, r3
    ldrb r2, [r4]
    lsls r2, r2, #7
    ldr r0, lbl_080753d8 @ =0x02037400
    adds r2, r2, r0
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    movs r3, #0x80
    bl DMATransfer
    movs r2, #0x86
    lsls r2, r2, #2
    adds r1, r6, r2
    ldrb r2, [r4]
    lsls r2, r2, #5
    ldr r3, lbl_080753dc @ =0x02037c00
    adds r2, r2, r3
    str r5, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    b lbl_08075470
    .align 2, 0
lbl_080753c8: .4byte 0x0875fdfc
lbl_080753cc: .4byte 0x03000054
lbl_080753d0: .4byte 0x03000056
lbl_080753d4: .4byte 0x0300002d
lbl_080753d8: .4byte 0x02037400
lbl_080753dc: .4byte 0x02037c00
lbl_080753e0:
    cmp r2, #1
    bne lbl_08075470
    ldr r1, lbl_08075478 @ =0x030013d4
    adds r0, r6, #4
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldm r0!, {r2, r4}
    stm r1!, {r2, r4}
    ldr r2, lbl_0807547c @ =0x03001414
    ldr r0, [r6, #0x24]
    ldr r1, [r6, #0x28]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r0, lbl_08075480 @ =0x0300141c
    adds r1, r6, #0
    adds r1, #0x2c
    movs r2, #0x86
    lsls r2, r2, #1
    bl memcpy
    ldr r2, lbl_08075484 @ =0x03001528
    movs r3, #0x9c
    lsls r3, r3, #1
    adds r0, r6, r3
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r1, lbl_08075488 @ =0x03001530
    movs r4, #0xa0
    lsls r4, r4, #1
    adds r0, r6, r4
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldm r0!, {r2, r3}
    stm r1!, {r2, r3}
    ldr r2, lbl_0807548c @ =0x03001544
    movs r4, #0xaa
    lsls r4, r4, #1
    adds r0, r6, r4
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r0, lbl_08075490 @ =0x0300154c
    movs r2, #0xae
    lsls r2, r2, #1
    adds r1, r6, r2
    ldm r1!, {r2, r3, r4}
    stm r0!, {r2, r3, r4}
    movs r3, #0xb4
    lsls r3, r3, #1
    adds r1, r6, r3
    ldm r1!, {r2, r3, r4}
    stm r0!, {r2, r3, r4}
    movs r4, #0xba
    lsls r4, r4, #1
    adds r1, r6, r4
    ldm r1!, {r2, r3, r4}
    stm r0!, {r2, r3, r4}
    movs r2, #0xc0
    lsls r2, r2, #1
    adds r1, r6, r2
    ldm r1!, {r2, r3, r4}
    stm r0!, {r2, r3, r4}
    movs r3, #0xc6
    lsls r3, r3, #1
    adds r1, r6, r3
    ldm r1!, {r2, r3, r4}
    stm r0!, {r2, r3, r4}
lbl_08075470:
    add sp, #4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08075478: .4byte 0x030013d4
lbl_0807547c: .4byte 0x03001414
lbl_08075480: .4byte 0x0300141c
lbl_08075484: .4byte 0x03001528
lbl_08075488: .4byte 0x03001530
lbl_0807548c: .4byte 0x03001544
lbl_08075490: .4byte 0x0300154c

    thumb_func_start sub_08075494
sub_08075494: @ 0x08075494
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldr r5, lbl_080754c0 @ =0x02038000
    ldr r2, lbl_080754c4 @ =0x03000043
    ldrb r1, [r2]
    ldr r4, lbl_080754c8 @ =0x03000c21
    cmp r1, #0
    bne lbl_080754ae
    movs r0, #1
    strb r0, [r2]
    strb r1, [r4]
lbl_080754ae:
    ldrb r0, [r4]
    cmp r0, #4
    bhi lbl_08075588
    lsls r0, r0, #2
    ldr r1, lbl_080754cc @ =lbl_080754d0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080754c0: .4byte 0x02038000
lbl_080754c4: .4byte 0x03000043
lbl_080754c8: .4byte 0x03000c21
lbl_080754cc: .4byte lbl_080754d0
lbl_080754d0: @ jump table
    .4byte lbl_080754e4 @ case 0
    .4byte lbl_08075530 @ case 1
    .4byte lbl_0807553c @ case 2
    .4byte lbl_08075568 @ case 3
    .4byte lbl_08075588 @ case 4
lbl_080754e4:
    ldr r0, lbl_08075520 @ =0x03000c24
    lsls r2, r3, #1
    adds r2, r2, r3
    lsls r2, r2, #3
    adds r2, r2, r0
    adds r1, r2, #0
    ldr r0, lbl_08075524 @ =0x08760408
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    ldm r0!, {r4, r6, r7}
    stm r1!, {r4, r6, r7}
    ldr r0, lbl_08075528 @ =0x03000020
    ldrb r0, [r0]
    strb r0, [r2, #0x13]
    ldr r1, lbl_0807552c @ =0x0000ffff
    lsls r2, r3, #3
    adds r2, r2, r3
    lsls r2, r2, #4
    adds r2, r2, r3
    lsls r2, r2, #5
    adds r2, #0x80
    adds r2, r5, r2
    movs r3, #0x91
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl BitFill
    b lbl_08075576
    .align 2, 0
lbl_08075520: .4byte 0x03000c24
lbl_08075524: .4byte 0x08760408
lbl_08075528: .4byte 0x03000020
lbl_0807552c: .4byte 0x0000ffff
lbl_08075530:
    ldr r0, lbl_08075538 @ =0x03000c1e
    strb r3, [r0]
    movs r0, #0
    b lbl_0807556e
    .align 2, 0
lbl_08075538: .4byte 0x03000c1e
lbl_0807553c:
    ldr r1, lbl_08075560 @ =0x0000ffff
    lsls r2, r3, #3
    adds r2, r2, r3
    lsls r2, r2, #4
    adds r2, r2, r3
    lsls r2, r2, #5
    ldr r0, lbl_08075564 @ =0x000036e0
    adds r2, r2, r0
    adds r2, r5, r2
    movs r3, #0x91
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl BitFill
    b lbl_08075576
    .align 2, 0
lbl_08075560: .4byte 0x0000ffff
lbl_08075564: .4byte 0x000036e0
lbl_08075568:
    ldr r0, lbl_08075580 @ =0x03000c1e
    strb r3, [r0]
    movs r0, #1
lbl_0807556e:
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_08075590
lbl_08075576:
    ldr r1, lbl_08075584 @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08075590
    .align 2, 0
lbl_08075580: .4byte 0x03000c1e
lbl_08075584: .4byte 0x03000c21
lbl_08075588:
    ldr r1, lbl_080755a0 @ =0x03000043
    movs r0, #0
    strb r0, [r1]
    strb r0, [r4]
lbl_08075590:
    ldr r0, lbl_080755a0 @ =0x03000043
    ldrb r1, [r0]
    movs r0, #1
    eors r0, r1
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080755a0: .4byte 0x03000043

    thumb_func_start sub_080755a4
sub_080755a4: @ 0x080755a4
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r3, r1, #0x18
    ldr r6, lbl_080755d4 @ =0x02038000
    ldr r2, lbl_080755d8 @ =0x03000043
    ldrb r1, [r2]
    ldr r5, lbl_080755dc @ =0x03000c21
    cmp r1, #0
    bne lbl_080755c2
    movs r0, #1
    strb r0, [r2]
    strb r1, [r5]
lbl_080755c2:
    ldrb r0, [r5]
    cmp r0, #4
    bhi lbl_080756a4
    lsls r0, r0, #2
    ldr r1, lbl_080755e0 @ =lbl_080755e4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080755d4: .4byte 0x02038000
lbl_080755d8: .4byte 0x03000043
lbl_080755dc: .4byte 0x03000c21
lbl_080755e0: .4byte lbl_080755e4
lbl_080755e4: @ jump table
    .4byte lbl_080755f8 @ case 0
    .4byte lbl_08075634 @ case 1
    .4byte lbl_08075640 @ case 2
    .4byte lbl_08075680 @ case 3
    .4byte lbl_080756a4 @ case 4
lbl_080755f8:
    ldr r2, lbl_08075630 @ =0x03000c24
    lsls r1, r3, #1
    adds r1, r1, r3
    lsls r1, r1, #3
    lsls r0, r4, #1
    adds r0, r0, r4
    lsls r0, r0, #3
    adds r1, r1, r2
    adds r0, r0, r2
    ldm r0!, {r2, r5, r7}
    stm r1!, {r2, r5, r7}
    ldm r0!, {r2, r5, r7}
    stm r1!, {r2, r5, r7}
    lsls r1, r4, #3
    adds r1, r1, r4
    lsls r1, r1, #4
    adds r1, r1, r4
    lsls r1, r1, #5
    adds r1, #0x80
    adds r1, r6, r1
    lsls r2, r3, #3
    adds r2, r2, r3
    lsls r2, r2, #4
    adds r2, r2, r3
    lsls r2, r2, #5
    adds r2, #0x80
    b lbl_0807565c
    .align 2, 0
lbl_08075630: .4byte 0x03000c24
lbl_08075634:
    ldr r5, lbl_0807563c @ =0x03000c1e
    strb r3, [r5]
    movs r0, #0
    b lbl_08075686
    .align 2, 0
lbl_0807563c: .4byte 0x03000c1e
lbl_08075640:
    lsls r1, r4, #3
    adds r1, r1, r4
    lsls r1, r1, #4
    adds r1, r1, r4
    lsls r1, r1, #5
    ldr r0, lbl_08075678 @ =0x000036e0
    adds r1, r1, r0
    adds r1, r6, r1
    lsls r2, r3, #3
    adds r2, r2, r3
    lsls r2, r2, #4
    adds r2, r2, r3
    lsls r2, r2, #5
    adds r2, r2, r0
lbl_0807565c:
    adds r2, r6, r2
    movs r3, #0x91
    lsls r3, r3, #5
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, lbl_0807567c @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_080756ac
    .align 2, 0
lbl_08075678: .4byte 0x000036e0
lbl_0807567c: .4byte 0x03000c21
lbl_08075680:
    ldr r5, lbl_0807569c @ =0x03000c1e
    strb r3, [r5]
    movs r0, #1
lbl_08075686:
    bl sub_08000fbc
    cmp r0, #0
    beq lbl_08075696
    ldr r1, lbl_080756a0 @ =0x03000c21
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_08075696:
    strb r4, [r5]
    b lbl_080756ac
    .align 2, 0
lbl_0807569c: .4byte 0x03000c1e
lbl_080756a0: .4byte 0x03000c21
lbl_080756a4:
    ldr r1, lbl_080756bc @ =0x03000043
    movs r0, #0
    strb r0, [r1]
    strb r0, [r5]
lbl_080756ac:
    ldr r0, lbl_080756bc @ =0x03000043
    ldrb r1, [r0]
    movs r0, #1
    eors r0, r1
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080756bc: .4byte 0x03000043

    thumb_func_start sub_080756c0
sub_080756c0: @ 0x080756c0
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r0, lbl_0807574c @ =0x02038000
    movs r6, #0
    ldr r1, lbl_08075750 @ =0x03000c24
    adds r5, r0, #0
    adds r5, #0xbc
    adds r4, r0, #0
    adds r4, #0x98
    adds r3, r0, #0
    adds r3, #0x80
    movs r0, #0x91
    lsls r0, r0, #5
    mov ip, r0
    movs r7, #2
    mov r8, r7
lbl_080756e2:
    ldrb r0, [r4, #5]
    strb r0, [r1, #2]
    ldrb r2, [r1]
    cmp r2, #1
    bne lbl_08075756
    movs r7, #0xd1
    lsls r7, r7, #1
    adds r0, r3, r7
    ldrh r0, [r0]
    strh r0, [r1, #4]
    subs r7, #6
    adds r0, r3, r7
    ldrh r0, [r0]
    strh r0, [r1, #6]
    adds r7, #8
    adds r0, r3, r7
    ldrh r0, [r0]
    strh r0, [r1, #8]
    subs r7, #6
    adds r0, r3, r7
    ldrh r0, [r0]
    strh r0, [r1, #0xa]
    adds r7, #0x10
    adds r0, r3, r7
    ldrb r0, [r0]
    strb r0, [r1, #0xc]
    adds r7, #0x4e
    adds r0, r3, r7
    ldrb r0, [r0]
    strb r0, [r1, #0xd]
    adds r7, #1
    adds r0, r3, r7
    ldrb r0, [r0]
    strb r0, [r1, #0xe]
    adds r7, #1
    adds r0, r3, r7
    ldrb r0, [r0]
    strb r0, [r1, #0xf]
    ldrb r0, [r4, #4]
    strb r0, [r1, #0x10]
    ldrb r0, [r4]
    strb r0, [r1, #0x11]
    ldrb r0, [r4, #1]
    strb r0, [r1, #0x12]
    ldrb r0, [r4, #2]
    strb r0, [r1, #0x13]
    ldrb r0, [r5, #2]
    strb r0, [r1, #0x15]
    ldrb r0, [r5]
    cmp r0, #2
    bls lbl_08075754
    strb r2, [r1, #0x14]
    b lbl_08075756
    .align 2, 0
lbl_0807574c: .4byte 0x02038000
lbl_08075750: .4byte 0x03000c24
lbl_08075754:
    strb r0, [r1, #0x14]
lbl_08075756:
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08075762
    ldrb r0, [r1, #0x10]
    cmp r0, #0
    bne lbl_080757a4
lbl_08075762:
    strb r6, [r1]
    strb r6, [r1, #2]
    movs r2, #0
    strh r6, [r1, #4]
    strh r6, [r1, #6]
    strh r6, [r1, #8]
    strh r6, [r1, #0xa]
    strb r2, [r1, #0xc]
    strb r2, [r1, #0xd]
    strb r2, [r1, #0xe]
    strb r2, [r1, #0xf]
    ldr r0, lbl_080757c4 @ =0x03000020
    ldrb r0, [r0]
    strb r0, [r1, #0x13]
    movs r0, #0x12
    ldrsb r0, [r1, r0]
    cmp r0, #0
    beq lbl_080757a4
    movs r0, #5
    strb r0, [r1, #2]
    movs r0, #0x63
    strh r0, [r1, #4]
    strh r0, [r1, #6]
    strb r2, [r1, #0x14]
    ldrb r0, [r5]
    cmp r0, #2
    bls lbl_0807579a
    movs r0, #1
lbl_0807579a:
    strb r0, [r1, #0x14]
    ldrb r0, [r4, #2]
    strb r0, [r1, #0x13]
    ldrb r0, [r5, #2]
    strb r0, [r1, #0x15]
lbl_080757a4:
    adds r1, #0x18
    add r5, ip
    add r4, ip
    add r3, ip
    movs r0, #1
    rsbs r0, r0, #0
    add r8, r0
    mov r7, r8
    cmp r7, #0
    bge lbl_080756e2
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080757c4: .4byte 0x03000020

    thumb_func_start sub_080757c8
sub_080757c8: @ 0x080757c8
    push {r4, lr}
    ldr r1, lbl_080757f4 @ =0x03000c1e
    movs r4, #0
    ldrsb r4, [r1, r4]
    strb r0, [r1]
    ldr r2, lbl_080757f8 @ =0x03000c24
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #1]
    cmp r0, #4
    bhi lbl_08075828
    lsls r0, r0, #2
    ldr r1, lbl_080757fc @ =lbl_08075800
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080757f4: .4byte 0x03000c1e
lbl_080757f8: .4byte 0x03000c24
lbl_080757fc: .4byte lbl_08075800
lbl_08075800: @ jump table
    .4byte lbl_08075828 @ case 0
    .4byte lbl_08075814 @ case 1
    .4byte lbl_0807581c @ case 2
    .4byte lbl_08075828 @ case 3
    .4byte lbl_08075828 @ case 4
lbl_08075814:
    movs r0, #3
    bl sub_08000c48
    b lbl_08075828
lbl_0807581c:
    movs r0, #3
    bl sub_08000c48
    movs r0, #4
    bl sub_08000c48
lbl_08075828:
    ldr r3, lbl_08075844 @ =0x03000c24
    ldr r2, lbl_08075848 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r2, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r3
    movs r1, #0
    strb r1, [r0, #1]
    strb r4, [r2]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08075844: .4byte 0x03000c24
lbl_08075848: .4byte 0x03000c1e

    thumb_func_start sub_0807584c
sub_0807584c: @ 0x0807584c
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldr r2, lbl_08075880 @ =0x0300168c
    ldr r0, lbl_08075884 @ =0x08411510
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2]
    str r1, [r2, #4]
    ldr r7, lbl_08075888 @ =0x0300014c
    movs r1, #0
    strb r1, [r7]
    ldr r0, lbl_0807588c @ =0x0300004b
    strb r1, [r0]
    ldr r0, lbl_08075890 @ =0x03005520
    movs r5, #0
    movs r6, #2
    strb r6, [r0]
    cmp r4, #1
    beq lbl_080758b4
    cmp r4, #1
    bgt lbl_08075894
    cmp r4, #0
    beq lbl_0807589e
    b lbl_08075918
    .align 2, 0
lbl_08075880: .4byte 0x0300168c
lbl_08075884: .4byte 0x08411510
lbl_08075888: .4byte 0x0300014c
lbl_0807588c: .4byte 0x0300004b
lbl_08075890: .4byte 0x03005520
lbl_08075894:
    cmp r4, #2
    beq lbl_08075918
    cmp r4, #3
    beq lbl_080758f4
    b lbl_08075918
lbl_0807589e:
    ldr r1, lbl_080758ac @ =0x03000c6c
    ldr r0, lbl_080758b0 @ =0x08411524
    ldr r0, [r0]
    str r0, [r1]
    bl check_load_save_file
    b lbl_08075914
    .align 2, 0
lbl_080758ac: .4byte 0x03000c6c
lbl_080758b0: .4byte 0x08411524
lbl_080758b4:
    ldr r1, lbl_080758d8 @ =0x03000c6c
    ldr r0, lbl_080758dc @ =0x08411524
    ldr r0, [r0]
    str r0, [r1]
    bl init_save_file
    ldr r0, lbl_080758e0 @ =0x03000055
    strb r5, [r0]
    ldr r0, lbl_080758e4 @ =0x03000056
    strb r5, [r0]
    strb r4, [r7]
    ldr r0, lbl_080758e8 @ =0x03000042
    strb r5, [r0]
    ldr r0, lbl_080758ec @ =0x03000000
    strb r5, [r0]
    ldr r0, lbl_080758f0 @ =0x03000020
    strb r6, [r0]
    b lbl_08075914
    .align 2, 0
lbl_080758d8: .4byte 0x03000c6c
lbl_080758dc: .4byte 0x08411524
lbl_080758e0: .4byte 0x03000055
lbl_080758e4: .4byte 0x03000056
lbl_080758e8: .4byte 0x03000042
lbl_080758ec: .4byte 0x03000000
lbl_080758f0: .4byte 0x03000020
lbl_080758f4:
    ldr r3, lbl_08075940 @ =0x03000c1d
    ldr r2, lbl_08075944 @ =0x03000c24
    ldr r0, lbl_08075948 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0]
    strb r0, [r3]
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_08075914
    bl sub_0807478c
lbl_08075914:
    ldr r0, lbl_0807594c @ =0x0300007d
    strb r5, [r0]
lbl_08075918:
    ldr r0, lbl_08075950 @ =0x03000c75
    movs r1, #0
    strb r1, [r0]
    ldr r0, lbl_08075954 @ =0x03000029
    strb r1, [r0]
    ldr r0, lbl_08075958 @ =0x03000043
    strb r1, [r0]
    ldr r0, lbl_0807595c @ =0x03000005
    strb r1, [r0]
    ldr r0, lbl_08075960 @ =0x03000bf0
    strb r1, [r0]
    ldr r0, lbl_08075964 @ =0x03000049
    strb r1, [r0]
    ldr r1, lbl_08075968 @ =0x0300550c
    movs r0, #0
    strh r0, [r1]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08075940: .4byte 0x03000c1d
lbl_08075944: .4byte 0x03000c24
lbl_08075948: .4byte 0x03000c1e
lbl_0807594c: .4byte 0x0300007d
lbl_08075950: .4byte 0x03000c75
lbl_08075954: .4byte 0x03000029
lbl_08075958: .4byte 0x03000043
lbl_0807595c: .4byte 0x03000005
lbl_08075960: .4byte 0x03000bf0
lbl_08075964: .4byte 0x03000049
lbl_08075968: .4byte 0x0300550c

    thumb_func_start check_load_save_file
check_load_save_file: @ 0x0807596c
    push {r4, r5, r6, lr}
    ldr r2, lbl_08075a10 @ =0x03000c1d
    ldr r6, lbl_08075a14 @ =0x03000c24
    ldr r5, lbl_08075a18 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r5, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0]
    strb r0, [r2]
    lsls r0, r0, #0x18
    asrs r4, r0, #0x18
    cmp r4, #0
    bne lbl_08075a4c
    bl init_save_file
    ldr r1, lbl_08075a1c @ =0x03005520
    movs r0, #0x15
    strb r0, [r1]
    ldr r0, lbl_08075a20 @ =0x03001530
    strb r4, [r0, #0x10]
    ldr r2, lbl_08075a24 @ =0x03000054
    ldr r0, lbl_08075a28 @ =0x03000c6c
    ldrb r1, [r0]
    strb r1, [r2]
    ldr r0, lbl_08075a2c @ =0x03000bf1
    strb r1, [r0]
    ldr r0, lbl_08075a30 @ =0x03000055
    strb r4, [r0]
    ldr r0, lbl_08075a34 @ =0x03000056
    strb r4, [r0]
    ldr r2, lbl_08075a38 @ =0x03000024
    movs r1, #0
    ldrsb r1, [r5, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #0x11]
    strb r0, [r2]
    movs r1, #0
    ldrsb r1, [r5, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #0x12]
    strb r0, [r2, #1]
    movs r1, #0
    ldrsb r1, [r5, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #0x13]
    strb r0, [r2, #2]
    ldr r2, lbl_08075a3c @ =0x0300002c
    movs r1, #0
    ldrsb r1, [r5, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #0x14]
    strb r0, [r2]
    ldr r2, lbl_08075a40 @ =0x0300002e
    movs r1, #0
    ldrsb r1, [r5, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #0x15]
    strb r0, [r2]
    ldr r0, lbl_08075a44 @ =0x0300002d
    strb r4, [r0]
    ldr r1, lbl_08075a48 @ =0x0300004b
    movs r0, #1
    strb r0, [r1]
    b lbl_08075a50
    .align 2, 0
lbl_08075a10: .4byte 0x03000c1d
lbl_08075a14: .4byte 0x03000c24
lbl_08075a18: .4byte 0x03000c1e
lbl_08075a1c: .4byte 0x03005520
lbl_08075a20: .4byte 0x03001530
lbl_08075a24: .4byte 0x03000054
lbl_08075a28: .4byte 0x03000c6c
lbl_08075a2c: .4byte 0x03000bf1
lbl_08075a30: .4byte 0x03000055
lbl_08075a34: .4byte 0x03000056
lbl_08075a38: .4byte 0x03000024
lbl_08075a3c: .4byte 0x0300002c
lbl_08075a40: .4byte 0x0300002e
lbl_08075a44: .4byte 0x0300002d
lbl_08075a48: .4byte 0x0300004b
lbl_08075a4c:
    bl sub_0807478c
lbl_08075a50:
    ldr r3, lbl_08075a7c @ =0x03000024
    ldr r2, lbl_08075a80 @ =0x03000c24
    ldr r0, lbl_08075a84 @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r1, [r0, #0x13]
    movs r2, #0
    strb r1, [r3, #2]
    ldr r0, lbl_08075a88 @ =0x03000020
    strb r1, [r0]
    ldr r0, lbl_08075a8c @ =0x03000042
    strb r2, [r0]
    ldr r0, lbl_08075a90 @ =0x03000000
    strb r2, [r0]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08075a7c: .4byte 0x03000024
lbl_08075a80: .4byte 0x03000c24
lbl_08075a84: .4byte 0x03000c1e
lbl_08075a88: .4byte 0x03000020
lbl_08075a8c: .4byte 0x03000042
lbl_08075a90: .4byte 0x03000000

    thumb_func_start init_save_file
init_save_file: @ 0x08075a94
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r2, lbl_08075ba8 @ =0x02037400
    movs r6, #0x80
    lsls r6, r6, #4
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    adds r3, r6, #0
    bl BitFill
    ldr r4, lbl_08075bac @ =0x0000ffff
    ldr r2, lbl_08075bb0 @ =0x02035c00
    movs r3, #0x80
    lsls r3, r3, #5
    str r5, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl BitFill
    ldr r2, lbl_08075bb4 @ =0x02036c00
    str r5, [sp]
    movs r0, #3
    adds r1, r4, #0
    adds r3, r6, #0
    bl BitFill
    ldr r2, lbl_08075bb8 @ =0x02037c00
    movs r3, #0x80
    lsls r3, r3, #2
    str r5, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl BitFill
    ldr r2, lbl_08075bbc @ =0x02037e00
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0x20
    bl BitFill
    ldr r2, lbl_08075bc0 @ =0x02033800
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    adds r3, r6, #0
    bl BitFill
    movs r1, #0
    ldr r4, lbl_08075bc4 @ =0x0300005b
    movs r2, #0
    ldr r3, lbl_08075bc8 @ =0x03000063
lbl_08075b08:
    adds r0, r1, r4
    strb r2, [r0]
    adds r0, r1, r3
    strb r2, [r0]
    adds r1, #1
    cmp r1, #7
    ble lbl_08075b08
    ldr r1, lbl_08075bcc @ =0x03000150
    ldr r0, lbl_08075bd0 @ =0x08411518
    ldr r0, [r0]
    str r0, [r1]
    ldr r0, lbl_08075bd4 @ =0x03001608
    mov r8, r0
    ldr r1, lbl_08075bd8 @ =0x0300002c
    mov sl, r1
    ldr r2, lbl_08075bdc @ =0x03000c1d
    mov sb, r2
    ldr r2, lbl_08075be0 @ =0x03000154
    ldr r0, lbl_08075be4 @ =0x0841151c
    ldr r0, [r0]
    adds r1, r2, #0
    adds r1, #0x2c
lbl_08075b34:
    str r0, [r1]
    subs r1, #4
    cmp r1, r2
    bge lbl_08075b34
    ldr r2, lbl_08075be8 @ =0x03000184
    ldr r0, lbl_08075bd0 @ =0x08411518
    ldr r0, [r0]
    adds r1, r2, #0
    adds r1, #0x10
lbl_08075b46:
    str r0, [r1]
    subs r1, #4
    cmp r1, r2
    bge lbl_08075b46
    movs r1, #0
    ldr r0, lbl_08075bec @ =0x083602e8
    mov ip, r0
    ldr r7, lbl_08075bf0 @ =0x03000050
lbl_08075b56:
    movs r3, #0
    movs r4, #0
    adds r6, r1, #1
    lsls r5, r1, #2
    lsls r0, r1, #8
    mov r1, ip
    adds r2, r0, r1
lbl_08075b64:
    ldrb r1, [r2]
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r0, r0, #0x1f
    lsls r0, r3
    orrs r4, r0
    adds r2, #8
    adds r3, #1
    cmp r3, #0x1f
    ble lbl_08075b64
    adds r0, r5, r7
    str r4, [r0]
    adds r1, r6, #0
    cmp r1, #0
    ble lbl_08075b56
    movs r1, #0
    mov r2, r8
    strb r1, [r2]
    movs r0, #1
    mov r2, sl
    strb r0, [r2]
    ldr r0, lbl_08075bf4 @ =0x0300002e
    strb r1, [r0]
    mov r2, sb
    strb r1, [r2]
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08075ba8: .4byte 0x02037400
lbl_08075bac: .4byte 0x0000ffff
lbl_08075bb0: .4byte 0x02035c00
lbl_08075bb4: .4byte 0x02036c00
lbl_08075bb8: .4byte 0x02037c00
lbl_08075bbc: .4byte 0x02037e00
lbl_08075bc0: .4byte 0x02033800
lbl_08075bc4: .4byte 0x0300005b
lbl_08075bc8: .4byte 0x03000063
lbl_08075bcc: .4byte 0x03000150
lbl_08075bd0: .4byte 0x08411518
lbl_08075bd4: .4byte 0x03001608
lbl_08075bd8: .4byte 0x0300002c
lbl_08075bdc: .4byte 0x03000c1d
lbl_08075be0: .4byte 0x03000154
lbl_08075be4: .4byte 0x0841151c
lbl_08075be8: .4byte 0x03000184
lbl_08075bec: .4byte 0x083602e8
lbl_08075bf0: .4byte 0x03000050
lbl_08075bf4: .4byte 0x0300002e
lbl_08075bf8:
    .byte 0x81, 0xB0, 0x69, 0x46, 0x00, 0x20, 0x08, 0x70
    .byte 0x01, 0xB0, 0x70, 0x47

    thumb_func_start sub_08075c04
sub_08075c04: @ 0x08075c04
    push {r4, lr}
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    ldr r0, lbl_08075c28 @ =0x08075bf9
    bl CallbackSetVBlank
    adds r0, r4, #0
    bl sub_0807584c
    ldr r0, lbl_08075c2c @ =0x03000c1d
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08075c28: .4byte 0x08075bf9
lbl_08075c2c: .4byte 0x03000c1d

    thumb_func_start erase_sram_main
erase_sram_main: @ 0x08075c30
    push {r4, r5, r6, lr}
    movs r6, #0
    ldr r2, lbl_08075c58 @ =0x08754bc4
    ldr r1, [r2]
    ldrh r0, [r1, #4]
    adds r0, #1
    strh r0, [r1, #4]
    ldr r0, lbl_08075c5c @ =0x03000c72
    movs r3, #0
    ldrsh r1, [r0, r3]
    adds r5, r2, #0
    adds r4, r0, #0
    cmp r1, #7
    bls lbl_08075c4e
    b lbl_08075d6c
lbl_08075c4e:
    lsls r0, r1, #2
    ldr r1, lbl_08075c60 @ =lbl_08075c64
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08075c58: .4byte 0x08754bc4
lbl_08075c5c: .4byte 0x03000c72
lbl_08075c60: .4byte lbl_08075c64
lbl_08075c64: @ jump table
    .4byte lbl_08075c84 @ case 0
    .4byte lbl_08075c94 @ case 1
    .4byte lbl_08075cbc @ case 2
    .4byte lbl_08075cfc @ case 3
    .4byte lbl_08075d0a @ case 4
    .4byte lbl_08075d28 @ case 5
    .4byte lbl_08075d40 @ case 6
    .4byte lbl_08075d62 @ case 7
lbl_08075c84:
    bl erase_sram_menu_init
    ldr r1, lbl_08075c90 @ =0x03000c72
    ldrh r0, [r1]
    b lbl_08075d48
    .align 2, 0
lbl_08075c90: .4byte 0x03000c72
lbl_08075c94:
    ldr r1, lbl_08075ca4 @ =0x030013ae
    ldrh r3, [r1]
    adds r2, r3, #0
    cmp r2, #0
    beq lbl_08075ca8
    subs r0, r3, #1
    strh r0, [r1]
    b lbl_08075d6c
    .align 2, 0
lbl_08075ca4: .4byte 0x030013ae
lbl_08075ca8:
    ldr r1, [r5]
    movs r0, #0xef
    strh r0, [r1, #0xa]
    strb r3, [r1, #6]
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    ldr r0, [r5]
    strh r2, [r0, #4]
    b lbl_08075d6c
lbl_08075cbc:
    ldr r4, lbl_08075ce4 @ =0x03000c74
    bl erase_sram_menu_process_input
    strb r0, [r4]
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_08075d6c
    ldr r0, lbl_08075ce8 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #4]
    movs r0, #0
    ldrsb r0, [r4, r0]
    cmp r0, #1
    bne lbl_08075cf0
    ldr r1, lbl_08075cec @ =0x03000c72
    movs r0, #5
    strh r0, [r1]
    b lbl_08075d6c
    .align 2, 0
lbl_08075ce4: .4byte 0x03000c74
lbl_08075ce8: .4byte 0x08754bc4
lbl_08075cec: .4byte 0x03000c72
lbl_08075cf0:
    ldr r1, lbl_08075cf8 @ =0x03000c72
    movs r0, #3
    strh r0, [r1]
    b lbl_08075d6c
    .align 2, 0
lbl_08075cf8: .4byte 0x03000c72
lbl_08075cfc:
    ldr r2, [r5]
    ldrh r0, [r2, #4]
    cmp r0, #0x28
    bls lbl_08075d6c
    movs r1, #0
    movs r0, #0xff
    b lbl_08075d34
lbl_08075d0a:
    ldr r1, lbl_08075d20 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bls lbl_08075d48
    ldr r2, [r5]
    ldrh r1, [r2, #8]
    ldr r0, lbl_08075d24 @ =0x0000e0ff
    ands r0, r1
    strh r0, [r2, #8]
    movs r6, #1
    b lbl_08075d74
    .align 2, 0
lbl_08075d20: .4byte 0x030013ae
lbl_08075d24: .4byte 0x0000e0ff
lbl_08075d28:
    ldr r2, [r5]
    ldrh r0, [r2, #4]
    cmp r0, #0x28
    bls lbl_08075d6c
    movs r1, #0
    movs r0, #0xbf
lbl_08075d34:
    strh r0, [r2, #0xa]
    strh r1, [r2, #4]
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    b lbl_08075d6c
lbl_08075d40:
    ldr r1, lbl_08075d50 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08075d54
lbl_08075d48:
    adds r0, #1
    strh r0, [r1]
    b lbl_08075d6c
    .align 2, 0
lbl_08075d50: .4byte 0x030013ae
lbl_08075d54:
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    ldr r1, [r5]
    movs r0, #0x80
    strh r0, [r1, #8]
    b lbl_08075d6c
lbl_08075d62:
    bl sub_080033dc
    bl sub_08000c04
    movs r6, #1
lbl_08075d6c:
    cmp r6, #0
    bne lbl_08075d74
    bl erase_sram_menu_process_oam
lbl_08075d74:
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start erase_sram_menu_process_input
erase_sram_menu_process_input: @ 0x08075d7c
    push {r4, lr}
    movs r4, #0
    ldr r0, lbl_08075d94 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r1, [r0, #1]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_08075d98
    bl sub_08075dd0
    b lbl_08075d9e
    .align 2, 0
lbl_08075d94: .4byte 0x08754bc4
lbl_08075d98:
    bl erase_sram_menu_check_for_input
    adds r4, r0, #0
lbl_08075d9e:
    ldr r0, lbl_08075db8 @ =0x08754bc4
    ldr r0, [r0]
    ldr r3, lbl_08075dbc @ =0x030013ae
    ldrh r1, [r3]
    ldrb r2, [r0, #6]
    adds r0, r1, #0
    cmp r2, r0
    beq lbl_08075dc4
    cmp r2, r0
    bls lbl_08075dc0
    adds r0, r1, #1
    b lbl_08075dc2
    .align 2, 0
lbl_08075db8: .4byte 0x08754bc4
lbl_08075dbc: .4byte 0x030013ae
lbl_08075dc0:
    subs r0, r1, #1
lbl_08075dc2:
    strh r0, [r3]
lbl_08075dc4:
    bl sub_08076298
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start sub_08075dd0
sub_08075dd0: @ 0x08075dd0
    push {r4, r5, lr}
    ldr r0, lbl_08075e00 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #0x1a]
    adds r5, r0, #0
    cmp r1, #2
    beq lbl_08075e72
    ldrb r1, [r2, #1]
    movs r0, #0x7f
    ands r0, r1
    movs r3, #0
    strb r0, [r2, #1]
    ldr r1, [r5]
    ldrb r0, [r1, #1]
    strb r0, [r1]
    ldr r2, [r5]
    ldrb r0, [r2, #1]
    cmp r0, #1
    beq lbl_08075e18
    cmp r0, #1
    bgt lbl_08075e04
    cmp r0, #0
    beq lbl_08075e0e
    b lbl_08075e42
    .align 2, 0
lbl_08075e00: .4byte 0x08754bc4
lbl_08075e04:
    cmp r0, #2
    beq lbl_08075e30
    cmp r0, #3
    beq lbl_08075e38
    b lbl_08075e42
lbl_08075e0e:
    ldr r0, lbl_08075e14 @ =0x08415400
    b lbl_08075e1a
    .align 2, 0
lbl_08075e14: .4byte 0x08415400
lbl_08075e18:
    ldr r0, lbl_08075e2c @ =0x08415401
lbl_08075e1a:
    ldrb r1, [r0]
    adds r0, r2, #0
    adds r0, #0x3a
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x2a
    strb r3, [r0]
    b lbl_08075e42
    .align 2, 0
lbl_08075e2c: .4byte 0x08415401
lbl_08075e30:
    ldr r0, lbl_08075e34 @ =0x08415402
    b lbl_08075e3a
    .align 2, 0
lbl_08075e34: .4byte 0x08415402
lbl_08075e38:
    ldr r0, lbl_08075e78 @ =0x08415403
lbl_08075e3a:
    ldrb r1, [r0]
    adds r0, r2, #0
    adds r0, #0x2a
    strb r1, [r0]
lbl_08075e42:
    ldr r1, [r5]
    adds r1, #0x2b
    ldrb r3, [r1]
    movs r2, #0x3f
    adds r0, r2, #0
    ands r0, r3
    movs r4, #0x80
    orrs r0, r4
    strb r0, [r1]
    ldr r1, [r5]
    adds r1, #0x3b
    ldrb r3, [r1]
    adds r0, r2, #0
    ands r0, r3
    orrs r0, r4
    strb r0, [r1]
    ldr r1, [r5]
    movs r0, #1
    strb r0, [r1, #0x1a]
    ldr r1, [r5]
    ldrb r0, [r1, #0x1b]
    ands r2, r0
    orrs r2, r4
    strb r2, [r1, #0x1b]
lbl_08075e72:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08075e78: .4byte 0x08415403

    thumb_func_start erase_sram_menu_check_for_input
erase_sram_menu_check_for_input: @ 0x08075e7c
    push {r4, r5, r6, lr}
    movs r6, #0
    movs r4, #0
    ldr r0, lbl_08075e98 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r3, [r2]
    adds r5, r0, #0
    cmp r3, #1
    beq lbl_08075ec8
    cmp r3, #1
    bgt lbl_08075e9c
    cmp r3, #0
    beq lbl_08075ea6
    b lbl_08075f4e
    .align 2, 0
lbl_08075e98: .4byte 0x08754bc4
lbl_08075e9c:
    cmp r3, #2
    beq lbl_08075ef0
    cmp r3, #3
    beq lbl_08075f18
    b lbl_08075f4e
lbl_08075ea6:
    ldr r0, lbl_08075eb8 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08075ebc
    movs r0, #0x81
    b lbl_08075f26
    .align 2, 0
lbl_08075eb8: .4byte 0x03001380
lbl_08075ebc:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08075f4e
    movs r6, #2
    b lbl_08075f54
lbl_08075ec8:
    ldr r0, lbl_08075ed8 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08075edc
    movs r0, #0x80
    b lbl_08075f26
    .align 2, 0
lbl_08075ed8: .4byte 0x03001380
lbl_08075edc:
    ands r3, r1
    cmp r3, #0
    beq lbl_08075f4e
    movs r0, #0x82
    strb r0, [r2, #1]
    movs r4, #2
    ldr r1, [r5]
    movs r0, #4
    strb r0, [r1, #6]
    b lbl_08075f4e
lbl_08075ef0:
    ldr r0, lbl_08075f00 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08075f04
    movs r0, #0x83
    b lbl_08075f26
    .align 2, 0
lbl_08075f00: .4byte 0x03001380
lbl_08075f04:
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    beq lbl_08075f4e
    movs r0, #0x80
    strb r0, [r2, #1]
    ldr r0, [r5]
    strb r6, [r0, #6]
    movs r4, #3
    b lbl_08075f4e
lbl_08075f18:
    ldr r0, lbl_08075f2c @ =0x03001380
    ldrh r1, [r0]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08075f30
    movs r0, #0x82
lbl_08075f26:
    strb r0, [r2, #1]
    movs r4, #4
    b lbl_08075f4e
    .align 2, 0
lbl_08075f2c: .4byte 0x03001380
lbl_08075f30:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08075f3c
    movs r6, #1
    b lbl_08075f54
lbl_08075f3c:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08075f4e
    movs r0, #0x80
    strb r0, [r2, #1]
    movs r4, #3
    ldr r0, [r5]
    strb r6, [r0, #6]
lbl_08075f4e:
    movs r0, #0
    cmp r0, #0
    beq lbl_08075f6a
lbl_08075f54:
    ldr r1, [r5]
    movs r0, #2
    strb r0, [r1, #0x1a]
    ldr r2, [r5]
    ldrb r1, [r2, #0x1b]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x80
    orrs r0, r1
    strb r0, [r2, #0x1b]
    movs r4, #1
lbl_08075f6a:
    ldr r0, lbl_08075f84 @ =0x08415404
    lsls r1, r4, #1
    adds r1, r1, r0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08075f7a
    bl SoundPlay
lbl_08075f7a:
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08075f84: .4byte 0x08415404

    thumb_func_start erase_sram_menu_init
erase_sram_menu_init: @ 0x08075f88
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r3, lbl_08076110 @ =0x04000208
    movs r4, #0
    strh r4, [r3]
    ldr r2, lbl_08076114 @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_08076118 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_0807611c @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_08076120 @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r0, lbl_08076124 @ =0x04000202
    movs r5, #2
    strh r5, [r0]
    movs r0, #1
    strh r0, [r3]
    ldr r0, lbl_08076128 @ =sub_08076358
    bl CallbackSetVBlank
    ldr r1, lbl_0807612c @ =0x04000050
    movs r0, #0xbf
    strh r0, [r1]
    ldr r2, lbl_08076130 @ =0x04000054
    ldr r1, lbl_08076134 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strh r0, [r2]
    movs r0, #0
    str r0, [sp]
    ldr r1, lbl_08076138 @ =0x040000d4
    mov r0, sp
    str r0, [r1]
    ldr r0, lbl_0807613c @ =0x030016c4
    str r0, [r1, #4]
    ldr r0, lbl_08076140 @ =0x8500018a
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    bl ClearGFXRAM
    ldr r0, lbl_08076144 @ =0x03001382
    strb r4, [r0]
    bl ResetFreeOAM
    ldr r2, lbl_08076148 @ =0x08754bc4
    ldr r1, [r2]
    ldr r0, lbl_0807614c @ =0x03000020
    ldrb r0, [r0]
    strb r0, [r1, #2]
    ldr r2, [r2]
    ldrb r0, [r2, #2]
    subs r0, #2
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #4
    bls lbl_08076000
    strb r5, [r2, #2]
lbl_08076000:
    ldr r1, lbl_08076150 @ =0x04000006
    ldrh r0, [r1]
    subs r0, #0x15
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r2, lbl_08076154 @ =0x08411608
    ldr r3, lbl_08076158 @ =0x08411528
    ldr r5, lbl_0807615c @ =0x084122d8
    cmp r0, #0x8b
    bhi lbl_08076020
lbl_08076014:
    ldrh r0, [r1]
    subs r0, #0x15
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x8b
    bls lbl_08076014
lbl_08076020:
    ldr r0, lbl_08076138 @ =0x040000d4
    str r2, [r0]
    movs r2, #0xa0
    lsls r2, r2, #0x13
    str r2, [r0, #4]
    ldr r1, lbl_08076160 @ =0x800000d0
    str r1, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_08076164 @ =0x05000200
    str r1, [r0, #4]
    ldr r1, lbl_08076168 @ =0x80000070
    str r1, [r0, #8]
    ldr r0, [r0, #8]
    movs r4, #0
    strh r4, [r2]
    ldr r1, lbl_0807616c @ =0x06001000
    adds r0, r5, #0
    bl LZ77UncompVRAM
    ldr r0, lbl_08076170 @ =0x08411b64
    ldr r1, lbl_08076174 @ =0x06012000
    bl LZ77UncompVRAM
    ldr r0, lbl_08076178 @ =0x0844b808
    ldr r1, lbl_0807617c @ =0x06001800
    bl LZ77UncompVRAM
    ldr r0, lbl_08076180 @ =0x0844c47c
    ldr r1, lbl_08076184 @ =0x06003400
    bl LZ77UncompVRAM
    ldr r5, lbl_08076188 @ =0x08760420
    ldr r6, lbl_08076148 @ =0x08754bc4
    ldr r0, [r6]
    ldrb r0, [r0, #2]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldr r0, [r0]
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, [r6]
    ldrb r0, [r0, #2]
    lsls r0, r0, #3
    adds r1, r5, #4
    adds r0, r0, r1
    ldr r0, [r0]
    ldr r1, lbl_0807618c @ =0x06011000
    bl LZ77UncompVRAM
    ldr r0, [r6]
    ldrb r0, [r0, #2]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldr r0, [r0]
    ldr r1, lbl_08076190 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, lbl_08076194 @ =0x08414c1c
    ldr r1, lbl_08076198 @ =0x0600d000
    bl LZ77UncompVRAM
    ldr r0, lbl_0807619c @ =0x08414e40
    ldr r1, lbl_080761a0 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r0, lbl_080761a4 @ =0x04000008
    strh r4, [r0]
    adds r0, #4
    strh r4, [r0]
    ldr r1, lbl_080761a8 @ =0x0400000a
    ldr r2, lbl_080761ac @ =0x00001a01
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #4
    ldr r2, lbl_080761b0 @ =0x00001e03
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_080761b4 @ =0x030013b2
    strh r4, [r0]
    ldr r0, lbl_080761b8 @ =0x04000052
    strh r4, [r0]
    ldr r0, lbl_080761bc @ =0x03000c75
    strb r4, [r0]
    ldr r0, lbl_080761c0 @ =0x03000bf8
    strh r4, [r0]
    ldr r0, lbl_080761c4 @ =0x03000bfa
    strh r4, [r0]
    ldr r0, lbl_080761c8 @ =0x03000c00
    strh r4, [r0]
    ldr r0, lbl_080761cc @ =0x03000c02
    strh r4, [r0]
    bl sub_080761d4
    bl sub_08076298
    bl erase_sram_menu_process_oam
    bl sub_080762e0
    ldr r2, [r6]
    ldr r0, lbl_0807612c @ =0x04000050
    ldrh r0, [r0]
    strh r0, [r2, #0xa]
    movs r1, #0xd0
    lsls r1, r1, #5
    strh r1, [r2, #8]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r1, [r0]
    ldr r0, lbl_080761d0 @ =sub_080762e0
    bl CallbackSetVBlank
    add sp, #4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08076110: .4byte 0x04000208
lbl_08076114: .4byte 0x04000004
lbl_08076118: .4byte 0x0000ffef
lbl_0807611c: .4byte 0x04000200
lbl_08076120: .4byte 0x0000fffd
lbl_08076124: .4byte 0x04000202
lbl_08076128: .4byte sub_08076358
lbl_0807612c: .4byte 0x04000050
lbl_08076130: .4byte 0x04000054
lbl_08076134: .4byte 0x030013ae
lbl_08076138: .4byte 0x040000d4
lbl_0807613c: .4byte 0x030016c4
lbl_08076140: .4byte 0x8500018a
lbl_08076144: .4byte 0x03001382
lbl_08076148: .4byte 0x08754bc4
lbl_0807614c: .4byte 0x03000020
lbl_08076150: .4byte 0x04000006
lbl_08076154: .4byte 0x08411608
lbl_08076158: .4byte 0x08411528
lbl_0807615c: .4byte 0x084122d8
lbl_08076160: .4byte 0x800000d0
lbl_08076164: .4byte 0x05000200
lbl_08076168: .4byte 0x80000070
lbl_0807616c: .4byte 0x06001000
lbl_08076170: .4byte 0x08411b64
lbl_08076174: .4byte 0x06012000
lbl_08076178: .4byte 0x0844b808
lbl_0807617c: .4byte 0x06001800
lbl_08076180: .4byte 0x0844c47c
lbl_08076184: .4byte 0x06003400
lbl_08076188: .4byte 0x08760420
lbl_0807618c: .4byte 0x06011000
lbl_08076190: .4byte 0x06010000
lbl_08076194: .4byte 0x08414c1c
lbl_08076198: .4byte 0x0600d000
lbl_0807619c: .4byte 0x08414e40
lbl_080761a0: .4byte 0x0600f000
lbl_080761a4: .4byte 0x04000008
lbl_080761a8: .4byte 0x0400000a
lbl_080761ac: .4byte 0x00001a01
lbl_080761b0: .4byte 0x00001e03
lbl_080761b4: .4byte 0x030013b2
lbl_080761b8: .4byte 0x04000052
lbl_080761bc: .4byte 0x03000c75
lbl_080761c0: .4byte 0x03000bf8
lbl_080761c4: .4byte 0x03000bfa
lbl_080761c8: .4byte 0x03000c00
lbl_080761cc: .4byte 0x03000c02
lbl_080761d0: .4byte sub_080762e0

    thumb_func_start sub_080761d4
sub_080761d4: @ 0x080761d4
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    ldr r0, lbl_08076280 @ =0x03005806
    movs r1, #0
    strb r1, [r0]
    ldr r0, lbl_08076284 @ =0x03005807
    strb r1, [r0]
    ldr r1, lbl_08076288 @ =0x08754bc4
    ldr r2, [r1]
    movs r0, #0
    strb r0, [r2]
    ldr r2, [r1]
    movs r0, #0x80
    strb r0, [r2, #1]
    movs r2, #0
    adds r6, r1, #0
    ldr r0, lbl_0807628c @ =0x08415400
    mov r8, r0
    ldr r3, lbl_08076290 @ =0x0841540e
    mov sb, r3
    mov ip, r6
    ldr r3, lbl_08076294 @ =0x0840d048
lbl_08076204:
    mov r4, ip
    ldr r1, [r4]
    lsls r0, r2, #4
    adds r1, r1, r0
    adds r1, #0x10
    adds r0, r3, #0
    ldm r0!, {r4, r5, r7}
    stm r1!, {r4, r5, r7}
    ldr r0, [r0]
    str r0, [r1]
    adds r2, #1
    cmp r2, #2
    ble lbl_08076204
    ldr r0, [r6]
    mov r5, r8
    ldrb r1, [r5]
    adds r0, #0x3a
    strb r1, [r0]
    ldr r1, [r6]
    mov r7, sb
    ldrh r0, [r7, #2]
    movs r5, #0
    strh r0, [r1, #0x30]
    ldrh r0, [r7]
    strh r0, [r1, #0x32]
    adds r1, #0x3b
    ldrb r3, [r1]
    movs r2, #0x3f
    adds r0, r2, #0
    ands r0, r3
    movs r4, #0x40
    orrs r0, r4
    strb r0, [r1]
    ldr r0, [r6]
    adds r0, #0x2a
    strb r5, [r0]
    ldr r1, [r6]
    ldrh r0, [r7, #6]
    strh r0, [r1, #0x20]
    ldrh r0, [r7, #4]
    strh r0, [r1, #0x22]
    adds r1, #0x2b
    ldrb r3, [r1]
    adds r0, r2, #0
    ands r0, r3
    orrs r0, r4
    strb r0, [r1]
    ldr r1, [r6]
    movs r0, #1
    strb r0, [r1, #0x1a]
    ldr r1, [r6]
    ldrb r0, [r1, #0x1b]
    ands r2, r0
    orrs r2, r4
    strb r2, [r1, #0x1b]
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08076280: .4byte 0x03005806
lbl_08076284: .4byte 0x03005807
lbl_08076288: .4byte 0x08754bc4
lbl_0807628c: .4byte 0x08415400
lbl_08076290: .4byte 0x0841540e
lbl_08076294: .4byte 0x0840d048

    thumb_func_start sub_08076298
sub_08076298: @ 0x08076298
    push {r4, r5, r6, lr}
    ldr r0, lbl_080762d4 @ =0x08754bc4
    ldr r4, [r0]
    ldr r6, lbl_080762d8 @ =0x0841540e
    ldrb r2, [r4]
    lsrs r2, r2, #1
    lsls r2, r2, #2
    adds r3, r6, #2
    adds r3, r2, r3
    ldr r5, lbl_080762dc @ =0x08415416
    ldrb r0, [r4]
    lsls r0, r0, #2
    adds r1, r5, #2
    adds r0, r0, r1
    ldrh r0, [r0]
    ldrh r3, [r3]
    adds r0, r0, r3
    strh r0, [r4, #0x10]
    adds r2, r2, r6
    ldrb r0, [r4]
    lsls r0, r0, #2
    adds r0, r0, r5
    ldrh r0, [r0]
    ldrh r2, [r2]
    adds r0, r0, r2
    strh r0, [r4, #0x12]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080762d4: .4byte 0x08754bc4
lbl_080762d8: .4byte 0x0841540e
lbl_080762dc: .4byte 0x08415416

    thumb_func_start sub_080762e0
sub_080762e0: @ 0x080762e0
    ldr r1, lbl_08076334 @ =0x040000d4
    ldr r0, lbl_08076338 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0807633c @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0x80
    ldr r0, lbl_08076340 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    subs r1, #0x40
    ldr r0, lbl_08076344 @ =0x03000bf8
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08076348 @ =0x03000bfa
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #6
    ldr r0, lbl_0807634c @ =0x03000c00
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08076350 @ =0x03000c02
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #0x32
    ldr r0, lbl_08076354 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0xa]
    strh r0, [r1]
    subs r1, #0x50
    ldrh r0, [r2, #8]
    strh r0, [r1]
    bx lr
    .align 2, 0
lbl_08076334: .4byte 0x040000d4
lbl_08076338: .4byte 0x03000e7c
lbl_0807633c: .4byte 0x84000100
lbl_08076340: .4byte 0x030013ae
lbl_08076344: .4byte 0x03000bf8
lbl_08076348: .4byte 0x03000bfa
lbl_0807634c: .4byte 0x03000c00
lbl_08076350: .4byte 0x03000c02
lbl_08076354: .4byte 0x08754bc4

    thumb_func_start sub_08076358
sub_08076358: @ 0x08076358
    sub sp, #4
    mov r1, sp
    movs r0, #0
    strb r0, [r1]
    add sp, #4
    bx lr

    thumb_func_start erase_sram_menu_process_oam
erase_sram_menu_process_oam: @ 0x08076364
    push {lr}
    ldr r1, lbl_08076384 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r0, lbl_08076388 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x10
    ldr r2, lbl_0807638c @ =0x08415428
    movs r0, #3
    bl sub_080696ac
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_08076384: .4byte 0x03001382
lbl_08076388: .4byte 0x08754bc4
lbl_0807638c: .4byte 0x08415428

    thumb_func_start sub_08076390
sub_08076390: @ 0x08076390
    push {lr}
    ldrb r2, [r0, #2]
    ldrh r1, [r0, #4]
    orrs r2, r1
    ldrb r1, [r0]
    lsls r1, r1, #8
    orrs r2, r1
    ldrb r1, [r0, #1]
    lsls r1, r1, #2
    orrs r2, r1
    adds r3, r2, #0
    ldrh r1, [r0, #6]
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_080763bc
    ldr r0, lbl_080763b8 @ =0x04000008
    strh r2, [r0]
    b lbl_080763e8
    .align 2, 0
lbl_080763b8: .4byte 0x04000008
lbl_080763bc:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_080763d0
    ldr r0, lbl_080763cc @ =0x0400000a
    strh r2, [r0]
    b lbl_080763e8
    .align 2, 0
lbl_080763cc: .4byte 0x0400000a
lbl_080763d0:
    movs r0, #0x80
    lsls r0, r0, #3
    cmp r1, r0
    bne lbl_080763e4
    ldr r0, lbl_080763e0 @ =0x0400000c
    strh r2, [r0]
    b lbl_080763e8
    .align 2, 0
lbl_080763e0: .4byte 0x0400000c
lbl_080763e4:
    ldr r0, lbl_080763ec @ =0x0400000e
    strh r3, [r0]
lbl_080763e8:
    pop {r0}
    bx r0
    .align 2, 0
lbl_080763ec: .4byte 0x0400000e

    thumb_func_start load_special_graphics_data
load_special_graphics_data: @ 0x080763f0
    push {lr}
    ldr r2, [r0, #8]
    ldrb r1, [r0]
    lsls r1, r1, #0xb
    movs r0, #0xc0
    lsls r0, r0, #0x13
    adds r1, r1, r0
    adds r0, r2, #0
    bl LZ77UncompVRAM
    pop {r0}
    bx r0

    thumb_func_start load_special_graphics_data_copy
load_special_graphics_data_copy: @ 0x08076408
    push {lr}
    ldr r2, [r0, #8]
    ldrb r1, [r0]
    lsls r1, r1, #0xb
    movs r0, #0xc0
    lsls r0, r0, #0x13
    adds r1, r1, r0
    adds r0, r2, #0
    bl LZ77UncompVRAM
    pop {r0}
    bx r0

    thumb_func_start sub_08076420
sub_08076420: @ 0x08076420
    push {r4, lr}
    lsls r0, r0, #0x18
    ldr r3, lbl_08076448 @ =0x08754bc4
    ldr r2, [r3]
    lsrs r0, r0, #0x14
    adds r2, r2, r0
    adds r2, #0x56
    movs r4, #0
    strb r1, [r2]
    ldr r1, [r3]
    adds r1, r1, r0
    adds r1, #0x54
    strb r4, [r1]
    ldr r1, [r3]
    adds r1, r1, r0
    adds r1, #0x55
    strb r4, [r1]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08076448: .4byte 0x08754bc4

    thumb_func_start title_screen_process_oam
title_screen_process_oam: @ 0x0807644c
    push {lr}
    ldr r1, lbl_0807646c @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r0, lbl_08076470 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x4c
    ldr r2, lbl_08076474 @ =0x0844f0e4
    movs r0, #7
    bl sub_080696ac
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807646c: .4byte 0x03001382
lbl_08076470: .4byte 0x08754bc4
lbl_08076474: .4byte 0x0844f0e4

    thumb_func_start sub_08076478
sub_08076478: @ 0x08076478
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_080764bc @ =0x08754bc4
    ldr r0, [r0]
    adds r2, r0, #0
    adds r2, #0x4c
    ldr r4, lbl_080764c0 @ =0x0840d028
    movs r3, #6
lbl_08076486:
    adds r0, r2, #0
    adds r1, r4, #0
    ldm r1!, {r5, r6, r7}
    stm r0!, {r5, r6, r7}
    ldr r1, [r1]
    str r1, [r0]
    subs r3, #1
    adds r2, #0x10
    cmp r3, #0
    bge lbl_08076486
    movs r0, #0
    movs r1, #0
    bl sub_08076420
    ldr r0, lbl_080764bc @ =0x08754bc4
    ldr r1, [r0]
    ldr r3, lbl_080764c4 @ =0x0844f090
    ldrb r2, [r3]
    adds r0, r1, #0
    adds r0, #0x4c
    strh r2, [r0]
    ldrb r0, [r3, #1]
    adds r1, #0x4e
    strh r0, [r1]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080764bc: .4byte 0x08754bc4
lbl_080764c0: .4byte 0x0840d028
lbl_080764c4: .4byte 0x0844f090

    thumb_func_start title_screen_fading_in
title_screen_fading_in: @ 0x080764c8
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #0xc
    movs r0, #0
    mov sb, r0
    ldr r1, lbl_080764ec @ =0x08754bc4
    mov r8, r1
    ldr r2, [r1]
    ldrb r7, [r2, #0x10]
    cmp r7, #1
    beq lbl_08076508
    cmp r7, #1
    bgt lbl_080764f0
    cmp r7, #0
    beq lbl_080764f6
    b lbl_080765d0
    .align 2, 0
lbl_080764ec: .4byte 0x08754bc4
lbl_080764f0:
    cmp r7, #2
    beq lbl_080765bc
    b lbl_080765d0
lbl_080764f6:
    mov r3, sb
    strb r3, [r2, #0x11]
    mov r1, r8
    ldr r0, [r1]
    strb r3, [r0, #0x12]
    ldr r1, [r1]
    mov r2, sb
    strh r2, [r1, #0x14]
    b lbl_080765ae
lbl_08076508:
    ldrb r0, [r2, #0x12]
    cmp r0, #0
    bne lbl_080765d0
    ldrb r0, [r2, #0x11]
    cmp r0, #0x1f
    bhi lbl_08076588
    ldr r5, lbl_08076574 @ =0x08754bb4
    ldr r0, [r5]
    movs r3, #0x80
    lsls r3, r3, #8
    adds r1, r0, r3
    str r1, [sp, #4]
    movs r1, #0x84
    lsls r1, r1, #8
    adds r0, r0, r1
    str r0, [sp, #8]
    ldrb r1, [r2, #0x11]
    add r6, sp, #8
    ldr r4, lbl_08076578 @ =0x0000ffff
    str r4, [sp]
    movs r0, #0
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r5]
    movs r2, #0x82
    lsls r2, r2, #8
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r3, #0x86
    lsls r3, r3, #8
    adds r0, r0, r3
    str r0, [sp, #8]
    mov r1, r8
    ldr r0, [r1]
    ldrb r1, [r0, #0x11]
    str r4, [sp]
    movs r0, #0
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    mov r2, r8
    ldr r0, [r2]
    strb r7, [r0, #0x12]
    ldr r1, [r2]
    ldrb r0, [r1, #0x11]
    cmp r0, #0x1f
    bne lbl_0807657c
    adds r0, #1
lbl_0807656e:
    strb r0, [r1, #0x11]
    b lbl_080765d0
    .align 2, 0
lbl_08076574: .4byte 0x08754bb4
lbl_08076578: .4byte 0x0000ffff
lbl_0807657c:
    ldrb r0, [r1, #0x11]
    adds r0, #4
    cmp r0, #0x1f
    ble lbl_0807656e
    movs r0, #0x1f
    b lbl_0807656e
lbl_08076588:
    ldr r0, lbl_080765b8 @ =0x08754bb4
    ldr r2, [r0]
    movs r3, #0x80
    lsls r3, r3, #8
    adds r1, r2, r3
    movs r0, #0x84
    lsls r0, r0, #8
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    mov r1, r8
    ldr r0, [r1]
    strb r7, [r0, #0x12]
    ldr r1, [r1]
lbl_080765ae:
    ldrb r0, [r1, #0x10]
    adds r0, #1
    strb r0, [r1, #0x10]
    b lbl_080765d0
    .align 2, 0
lbl_080765b8: .4byte 0x08754bb4
lbl_080765bc:
    ldrb r0, [r2, #0x12]
    cmp r0, #0
    bne lbl_080765d0
    mov r3, sb
    strb r3, [r2, #0x11]
    mov r1, r8
    ldr r0, [r1]
    strb r3, [r0, #0x10]
    movs r2, #1
    mov sb, r2
lbl_080765d0:
    mov r0, sb
    add sp, #0xc
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_080765e0
sub_080765e0: @ 0x080765e0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov sl, r0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    movs r0, #0
    mov sb, r0
    ldr r2, lbl_08076618 @ =0x08754bc4
    mov r8, r2
    ldr r2, [r2]
    ldrh r0, [r2, #0x14]
    adds r3, r0, #1
    movs r4, #0
    strh r3, [r2, #0x14]
    ldrb r7, [r2, #0x10]
    cmp r7, #1
    beq lbl_08076632
    cmp r7, #1
    bgt lbl_0807661c
    cmp r7, #0
    beq lbl_08076622
    b lbl_080766fe
    .align 2, 0
lbl_08076618: .4byte 0x08754bc4
lbl_0807661c:
    cmp r7, #2
    beq lbl_080766ec
    b lbl_080766fe
lbl_08076622:
    strb r4, [r2, #0x11]
    mov r3, r8
    ldr r0, [r3]
    strb r4, [r0, #0x12]
    ldr r1, [r3]
    mov r0, sb
    strh r0, [r1, #0x14]
    b lbl_080766de
lbl_08076632:
    ldrb r0, [r2, #0x12]
    cmp r0, #0
    bne lbl_080766fe
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r1
    blo lbl_080766fe
    mov r1, sb
    strh r1, [r2, #0x14]
    ldrb r0, [r2, #0x11]
    cmp r0, #0x1f
    bhi lbl_080766bc
    ldr r5, lbl_080766a8 @ =0x08754bb4
    ldr r0, [r5]
    movs r3, #0x80
    lsls r3, r3, #8
    adds r1, r0, r3
    str r1, [sp, #4]
    movs r1, #0x84
    lsls r1, r1, #8
    adds r0, r0, r1
    str r0, [sp, #8]
    ldrb r1, [r2, #0x11]
    add r6, sp, #8
    ldr r4, lbl_080766ac @ =0x0000ffff
    str r4, [sp]
    movs r0, #2
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r5]
    movs r2, #0x82
    lsls r2, r2, #8
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r3, #0x86
    lsls r3, r3, #8
    adds r0, r0, r3
    str r0, [sp, #8]
    mov r1, r8
    ldr r0, [r1]
    ldrb r1, [r0, #0x11]
    str r4, [sp]
    movs r0, #2
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    mov r2, r8
    ldr r0, [r2]
    strb r7, [r0, #0x12]
    ldr r1, [r2]
    ldrb r0, [r1, #0x11]
    cmp r0, #0x1f
    bne lbl_080766b0
    adds r0, #1
lbl_080766a4:
    strb r0, [r1, #0x11]
    b lbl_080766fe
    .align 2, 0
lbl_080766a8: .4byte 0x08754bb4
lbl_080766ac: .4byte 0x0000ffff
lbl_080766b0:
    ldrb r0, [r1, #0x11]
    add r0, sl
    cmp r0, #0x1f
    ble lbl_080766a4
    movs r0, #0x1f
    b lbl_080766a4
lbl_080766bc:
    ldr r0, lbl_080766e8 @ =0x08754bb4
    ldr r2, [r0]
    movs r3, #0x84
    lsls r3, r3, #8
    adds r2, r2, r3
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    mov r1, r8
    ldr r0, [r1]
    strb r7, [r0, #0x12]
    ldr r1, [r1]
lbl_080766de:
    ldrb r0, [r1, #0x10]
    adds r0, #1
    strb r0, [r1, #0x10]
    b lbl_080766fe
    .align 2, 0
lbl_080766e8: .4byte 0x08754bb4
lbl_080766ec:
    ldrb r0, [r2, #0x12]
    cmp r0, #0
    bne lbl_080766fe
    strb r4, [r2, #0x11]
    mov r2, r8
    ldr r0, [r2]
    strb r4, [r0, #0x10]
    movs r3, #1
    mov sb, r3
lbl_080766fe:
    mov r0, sb
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_08076710
sub_08076710: @ 0x08076710
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    sub sp, #4
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_0807676c
    movs r6, #0xa0
    lsls r6, r6, #0x13
    ldr r0, lbl_08076768 @ =0x08754bb4
    mov r8, r0
    ldr r2, [r0]
    movs r0, #0x80
    lsls r0, r0, #8
    adds r2, r2, r0
    movs r5, #0x80
    lsls r5, r5, #3
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r6, #0
    adds r3, r5, #0
    bl BitFill
    mov r0, r8
    ldr r2, [r0]
    movs r0, #0x84
    lsls r0, r0, #8
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    b lbl_08076788
    .align 2, 0
lbl_08076768: .4byte 0x08754bb4
lbl_0807676c:
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r0, lbl_0807679c @ =0x08754bb4
    ldr r2, [r0]
    movs r0, #0x80
    lsls r0, r0, #8
    adds r2, r2, r0
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_08076788:
    ldr r0, lbl_080767a0 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strb r0, [r1, #0x10]
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807679c: .4byte 0x08754bb4
lbl_080767a0: .4byte 0x08754bc4

    thumb_func_start sub_080767a4
sub_080767a4: @ 0x080767a4
    push {r4, lr}
    sub sp, #4
    ldr r4, lbl_080767dc @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0, #0x12]
    cmp r0, #0
    beq lbl_080767d4
    ldr r0, lbl_080767e0 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0x84
    lsls r0, r0, #8
    adds r1, r1, r0
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, [r4]
    movs r0, #0
    strb r0, [r1, #0x12]
lbl_080767d4:
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080767dc: .4byte 0x08754bc4
lbl_080767e0: .4byte 0x08754bb4

    thumb_func_start sub_080767e4
sub_080767e4: @ 0x080767e4
    push {lr}
    sub sp, #4
    ldr r0, lbl_08076860 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #0xa]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08076838
    adds r3, r2, #0
    adds r3, #0x28
    ldrh r0, [r3, #2]
    subs r0, #1
    strh r0, [r3, #2]
    lsls r0, r0, #0x10
    cmp r0, #0
    bne lbl_08076838
    ldrb r0, [r3, #1]
    strh r0, [r3, #2]
    ldrb r0, [r3]
    adds r0, #1
    strb r0, [r3]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #5
    bls lbl_0807681c
    movs r0, #0
    strb r0, [r3]
lbl_0807681c:
    ldr r1, lbl_08076864 @ =0x08760ad4
    ldrb r0, [r3]
    adds r0, r0, r1
    ldrb r1, [r0]
    lsls r1, r1, #5
    ldr r0, lbl_08076868 @ =0x08446d68
    adds r1, r1, r0
    ldr r2, lbl_0807686c @ =0x05000100
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
lbl_08076838:
    ldr r2, lbl_08076860 @ =0x08754bc4
    ldr r3, [r2]
    ldrb r1, [r3, #0xa]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_080768b6
    adds r3, #0x30
    ldrb r1, [r3, #4]
    cmp r1, #0
    bne lbl_08076874
    ldr r0, lbl_08076870 @ =0x08760aa0
    ldrb r0, [r0, #0xc]
    strb r0, [r3, #4]
    ldr r2, [r2]
    ldrb r0, [r2, #0xa]
    movs r1, #2
    eors r0, r1
    strb r0, [r2, #0xa]
    b lbl_080768b6
    .align 2, 0
lbl_08076860: .4byte 0x08754bc4
lbl_08076864: .4byte 0x08760ad4
lbl_08076868: .4byte 0x08446d68
lbl_0807686c: .4byte 0x05000100
lbl_08076870: .4byte 0x08760aa0
lbl_08076874:
    ldrh r0, [r3, #2]
    subs r0, #1
    strh r0, [r3, #2]
    lsls r0, r0, #0x10
    cmp r0, #0
    bne lbl_080768b6
    ldrb r0, [r3, #1]
    strh r0, [r3, #2]
    ldrb r0, [r3]
    adds r0, #1
    strb r0, [r3]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xd
    bls lbl_0807689a
    movs r0, #0
    strb r0, [r3]
    subs r0, r1, #1
    strb r0, [r3, #4]
lbl_0807689a:
    ldr r1, lbl_08076910 @ =0x08760ada
    ldrb r0, [r3]
    adds r0, r0, r1
    ldrb r1, [r0]
    lsls r1, r1, #5
    ldr r0, lbl_08076914 @ =0x08446d6a
    adds r1, r1, r0
    ldr r2, lbl_08076918 @ =0x05000002
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x1e
    bl DMATransfer
lbl_080768b6:
    ldr r0, lbl_0807691c @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #0xa]
    movs r0, #4
    ands r0, r1
    cmp r0, #0
    beq lbl_08076966
    adds r3, r2, #0
    adds r3, #0x38
    ldrb r0, [r3, #4]
    cmp r0, #0
    beq lbl_08076928
    ldrh r0, [r3, #2]
    subs r0, #1
    strh r0, [r3, #2]
    lsls r0, r0, #0x10
    cmp r0, #0
    bne lbl_080768f6
    ldrb r0, [r3, #1]
    strh r0, [r3, #2]
    ldrb r0, [r3]
    adds r0, #1
    strb r0, [r3]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bls lbl_080768f0
    movs r0, #0
    strb r0, [r3]
lbl_080768f0:
    ldrb r0, [r3]
    lsls r0, r0, #2
    strb r0, [r3]
lbl_080768f6:
    ldrb r1, [r3]
    lsls r1, r1, #5
    ldr r0, lbl_08076920 @ =0x08446f48
    adds r1, r1, r0
    ldr r2, lbl_08076924 @ =0x050001a0
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x18
    bl DMATransfer
    b lbl_08076966
    .align 2, 0
lbl_08076910: .4byte 0x08760ada
lbl_08076914: .4byte 0x08446d6a
lbl_08076918: .4byte 0x05000002
lbl_0807691c: .4byte 0x08754bc4
lbl_08076920: .4byte 0x08446f48
lbl_08076924: .4byte 0x050001a0
lbl_08076928:
    ldrh r0, [r3, #2]
    subs r0, #1
    strh r0, [r3, #2]
    lsls r0, r0, #0x10
    cmp r0, #0
    bne lbl_0807694a
    ldrb r0, [r3, #1]
    strh r0, [r3, #2]
    ldrb r0, [r3]
    adds r0, #1
    strb r0, [r3]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #5
    bls lbl_0807694a
    movs r0, #0
    strb r0, [r3]
lbl_0807694a:
    ldr r1, lbl_0807696c @ =0x08760ae8
    ldrb r0, [r3]
    adds r0, r0, r1
    ldrb r1, [r0]
    lsls r1, r1, #5
    ldr r0, lbl_08076970 @ =0x08446f48
    adds r1, r1, r0
    ldr r2, lbl_08076974 @ =0x050001a0
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x18
    bl DMATransfer
lbl_08076966:
    add sp, #4
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807696c: .4byte 0x08760ae8
lbl_08076970: .4byte 0x08446f48
lbl_08076974: .4byte 0x050001a0

    thumb_func_start sub_08076978
sub_08076978: @ 0x08076978
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    mov r8, r7
    movs r0, #1
    ands r0, r7
    cmp r0, #0
    beq lbl_080769be
    ldr r5, lbl_08076a70 @ =0x08754bb4
    ldr r1, [r5]
    movs r0, #0x80
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r2, lbl_08076a74 @ =0x06004000
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, [r5]
    movs r3, #0x90
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_08076a78 @ =0x06004800
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
lbl_080769be:
    movs r0, #2
    ands r0, r7
    cmp r0, #0
    beq lbl_080769f6
    ldr r5, lbl_08076a70 @ =0x08754bb4
    ldr r1, [r5]
    movs r0, #0xa0
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r2, lbl_08076a7c @ =0x06005000
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, [r5]
    movs r3, #0xb0
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_08076a80 @ =0x06005800
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
lbl_080769f6:
    movs r0, #4
    ands r0, r7
    cmp r0, #0
    beq lbl_08076a2e
    ldr r5, lbl_08076a70 @ =0x08754bb4
    ldr r1, [r5]
    movs r0, #0xc0
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r2, lbl_08076a84 @ =0x06006000
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r1, [r5]
    movs r3, #0xd0
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_08076a88 @ =0x06006800
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
lbl_08076a2e:
    movs r0, #8
    mov r1, r8
    ands r1, r0
    cmp r1, #0
    beq lbl_08076a64
    ldr r0, lbl_08076a70 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0xe0
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_08076a8c @ =0x06007000
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, lbl_08076a90 @ =0x08754bc4
    ldr r2, [r0]
    ldr r1, lbl_08076a94 @ =0x03000c02
    movs r3, #0xc8
    lsls r3, r3, #2
    adds r0, r3, #0
    strh r0, [r1]
    adds r0, r3, #0
    strh r0, [r2, #0x24]
lbl_08076a64:
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08076a70: .4byte 0x08754bb4
lbl_08076a74: .4byte 0x06004000
lbl_08076a78: .4byte 0x06004800
lbl_08076a7c: .4byte 0x06005000
lbl_08076a80: .4byte 0x06005800
lbl_08076a84: .4byte 0x06006000
lbl_08076a88: .4byte 0x06006800
lbl_08076a8c: .4byte 0x06007000
lbl_08076a90: .4byte 0x08754bc4
lbl_08076a94: .4byte 0x03000c02

    thumb_func_start sub_08076a98
sub_08076a98: @ 0x08076a98
    push {r4, r5, lr}
    movs r5, #0
    ldr r1, lbl_08076ab4 @ =0x08754bc4
    ldr r0, [r1]
    ldrb r0, [r0, #0xe]
    adds r4, r1, #0
    cmp r0, #7
    bhi lbl_08076b56
    lsls r0, r0, #2
    ldr r1, lbl_08076ab8 @ =lbl_08076abc
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08076ab4: .4byte 0x08754bc4
lbl_08076ab8: .4byte lbl_08076abc
lbl_08076abc: @ jump table
    .4byte lbl_08076b56 @ case 0
    .4byte lbl_08076adc @ case 1
    .4byte lbl_08076b00 @ case 2
    .4byte lbl_08076b1c @ case 3
    .4byte lbl_08076b1c @ case 4
    .4byte lbl_08076b1c @ case 5
    .4byte lbl_08076b1c @ case 6
    .4byte lbl_08076b38 @ case 7
lbl_08076adc:
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #0x10
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0x44
    strb r1, [r0]
    ldr r1, [r4]
    ldr r0, lbl_08076afc @ =0x0844f0ac
    ldrh r2, [r0, #6]
    ldrh r0, [r1, #0x18]
    bics r0, r2
    strh r0, [r1, #0x18]
    movs r0, #0xff
    strh r0, [r1, #0x22]
    b lbl_08076b30
    .align 2, 0
lbl_08076afc: .4byte 0x0844f0ac
lbl_08076b00:
    ldr r1, lbl_08076b18 @ =0x030013ae
    ldrh r0, [r1]
    adds r0, #4
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0xf
    bls lbl_08076b56
    movs r0, #0x10
    strh r0, [r1]
    b lbl_08076b2e
    .align 2, 0
lbl_08076b18: .4byte 0x030013ae
lbl_08076b1c:
    ldr r0, [r4]
    ldrb r1, [r0, #0xe]
    subs r1, #3
    movs r0, #0x80
    lsls r0, r0, #0x11
    lsls r0, r1
    lsrs r0, r0, #0x18
    bl sub_08076978
lbl_08076b2e:
    ldr r1, [r4]
lbl_08076b30:
    ldrb r0, [r1, #0xe]
    adds r0, #1
    strb r0, [r1, #0xe]
    b lbl_08076b56
lbl_08076b38:
    ldr r2, lbl_08076b48 @ =0x030013ae
    ldrh r0, [r2]
    cmp r0, #8
    bls lbl_08076b4c
    subs r0, #8
    strh r0, [r2]
    b lbl_08076b56
    .align 2, 0
lbl_08076b48: .4byte 0x030013ae
lbl_08076b4c:
    movs r1, #0
    strh r1, [r2]
    ldr r0, [r4]
    strb r1, [r0, #0xe]
    movs r5, #1
lbl_08076b56:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_08076b60
sub_08076b60: @ 0x08076b60
    push {r4, r5, r6, r7, lr}
    movs r6, #0
    movs r7, #0
    ldr r0, lbl_08076b84 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #8]
    adds r0, #1
    strh r0, [r2, #8]
    ldr r0, lbl_08076b88 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #9
    ands r0, r1
    cmp r0, #0
    beq lbl_08076b8c
    movs r0, #1
    strb r0, [r2, #0xe]
    movs r0, #0
    b lbl_08076ce6
    .align 2, 0
lbl_08076b84: .4byte 0x08754bc4
lbl_08076b88: .4byte 0x03001380
lbl_08076b8c:
    ldrb r0, [r2, #6]
    cmp r0, #4
    bls lbl_08076b94
    b lbl_08076caa
lbl_08076b94:
    lsls r0, r0, #2
    ldr r1, lbl_08076ba0 @ =lbl_08076ba4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08076ba0: .4byte lbl_08076ba4
lbl_08076ba4: @ jump table
    .4byte lbl_08076bb8 @ case 0
    .4byte lbl_08076bd8 @ case 1
    .4byte lbl_08076c08 @ case 2
    .4byte lbl_08076c44 @ case 3
    .4byte lbl_08076c68 @ case 4
lbl_08076bb8:
    ldr r3, lbl_08076bd0 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1, #6]
    adds r0, #1
    movs r2, #0
    strb r0, [r1, #6]
    ldr r0, [r3]
    strh r2, [r0, #8]
    ldr r0, lbl_08076bd4 @ =0x03000c02
    mov ip, r0
    b lbl_08076cb0
    .align 2, 0
lbl_08076bd0: .4byte 0x08754bc4
lbl_08076bd4: .4byte 0x03000c02
lbl_08076bd8:
    ldr r5, lbl_08076c00 @ =0x08754bc4
    ldr r4, [r5]
    ldrh r0, [r4, #8]
    ldr r1, lbl_08076c04 @ =0x03000c02
    mov ip, r1
    cmp r0, #0x3c
    bls lbl_08076cb0
    ldrh r1, [r4, #0xc]
    movs r0, #1
    movs r2, #0
    movs r3, #0
    orrs r0, r1
    strh r0, [r4, #0xc]
    adds r0, r4, #0
    adds r0, #0x40
    strb r2, [r0]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x42
    b lbl_08076c2e
    .align 2, 0
lbl_08076c00: .4byte 0x08754bc4
lbl_08076c04: .4byte 0x03000c02
lbl_08076c08:
    ldr r5, lbl_08076c3c @ =0x08754bc4
    ldr r4, [r5]
    ldrh r0, [r4, #8]
    ldr r1, lbl_08076c40 @ =0x03000c02
    mov ip, r1
    cmp r0, #0x78
    bls lbl_08076cb0
    ldrh r1, [r4, #0xc]
    movs r0, #4
    movs r2, #0
    movs r3, #0
    orrs r0, r1
    strh r0, [r4, #0xc]
    adds r0, r4, #0
    adds r0, #0x44
    strb r2, [r0]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x46
lbl_08076c2e:
    strh r3, [r0]
    ldrb r0, [r1, #6]
    adds r0, #1
    strb r0, [r1, #6]
    ldr r0, [r5]
    strh r3, [r0, #8]
    b lbl_08076cb0
    .align 2, 0
lbl_08076c3c: .4byte 0x08754bc4
lbl_08076c40: .4byte 0x03000c02
lbl_08076c44:
    ldr r3, lbl_08076c60 @ =0x08754bc4
    ldr r2, [r3]
    ldrh r0, [r2, #8]
    ldr r1, lbl_08076c64 @ =0x03000c02
    mov ip, r1
    cmp r0, #0x1e
    bls lbl_08076cb0
    ldrb r0, [r2, #6]
    adds r0, #1
    movs r1, #0
    strb r0, [r2, #6]
    ldr r0, [r3]
    strh r1, [r0, #8]
    b lbl_08076cb0
    .align 2, 0
lbl_08076c60: .4byte 0x08754bc4
lbl_08076c64: .4byte 0x03000c02
lbl_08076c68:
    ldr r0, lbl_08076c88 @ =0x03000c02
    ldrh r2, [r0]
    ldr r1, lbl_08076c8c @ =0x0000031f
    mov ip, r0
    cmp r2, r1
    bls lbl_08076c94
    adds r1, #1
    adds r0, r1, #0
    mov r1, ip
    strh r0, [r1]
    ldr r0, lbl_08076c90 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #6]
    adds r0, #1
    strb r0, [r1, #6]
    b lbl_08076cb0
    .align 2, 0
lbl_08076c88: .4byte 0x03000c02
lbl_08076c8c: .4byte 0x0000031f
lbl_08076c90: .4byte 0x08754bc4
lbl_08076c94:
    mov r0, ip
    ldrh r1, [r0]
    movs r0, #0xc8
    lsls r0, r0, #2
    subs r0, r0, r1
    cmp r0, #8
    bgt lbl_08076ca6
    adds r6, #2
    b lbl_08076cb0
lbl_08076ca6:
    adds r6, #4
    b lbl_08076cb0
lbl_08076caa:
    movs r7, #1
    ldr r1, lbl_08076cc8 @ =0x03000c02
    mov ip, r1
lbl_08076cb0:
    cmp r7, #0
    bne lbl_08076cda
    mov r1, ip
    ldrh r0, [r1]
    adds r6, r6, r0
    movs r0, #0xc8
    lsls r0, r0, #2
    cmp r6, r0
    ble lbl_08076ccc
    adds r6, r0, #0
    b lbl_08076cd2
    .align 2, 0
lbl_08076cc8: .4byte 0x03000c02
lbl_08076ccc:
    cmp r6, #0
    bge lbl_08076cd2
    movs r6, #0
lbl_08076cd2:
    ldr r0, lbl_08076cec @ =0x03000c02
    strh r6, [r0]
    bl sub_08076cf4
lbl_08076cda:
    ldr r0, lbl_08076cf0 @ =0x08754bc4
    ldr r1, [r0]
    ldr r0, lbl_08076cec @ =0x03000c02
    ldrh r0, [r0]
    strh r0, [r1, #0x24]
    adds r0, r7, #0
lbl_08076ce6:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08076cec: .4byte 0x03000c02
lbl_08076cf0: .4byte 0x08754bc4

    thumb_func_start sub_08076cf4
sub_08076cf4: @ 0x08076cf4
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    movs r4, #1
    rsbs r4, r4, #0
    adds r6, r4, #0
    ldr r0, lbl_08076d30 @ =0x08754bc4
    ldr r5, [r0]
    ldr r1, lbl_08076d34 @ =0x03000c02
    ldrh r0, [r5, #0x24]
    ldrh r3, [r1]
    cmp r0, r3
    beq lbl_08076d62
    cmp r0, r3
    bhs lbl_08076d44
    ldr r0, lbl_08076d38 @ =0x0000015f
    cmp r3, r0
    bls lbl_08076d62
    adds r0, r3, #0
    ldr r1, lbl_08076d3c @ =0xfffffea0
    adds r0, r0, r1
    asrs r4, r0, #5
    ldrh r0, [r5, #0x24]
    adds r0, r0, r1
    asrs r6, r0, #5
    ldr r0, lbl_08076d40 @ =0x08754bb4
    ldr r0, [r0]
    movs r1, #0x80
    lsls r1, r1, #7
    adds r7, r0, r1
    b lbl_08076d62
    .align 2, 0
lbl_08076d30: .4byte 0x08754bc4
lbl_08076d34: .4byte 0x03000c02
lbl_08076d38: .4byte 0x0000015f
lbl_08076d3c: .4byte 0xfffffea0
lbl_08076d40: .4byte 0x08754bb4
lbl_08076d44:
    movs r2, #0xf0
    lsls r2, r2, #1
    cmp r3, r2
    bhi lbl_08076d62
    ldrh r0, [r1]
    subs r0, r2, r0
    asrs r0, r0, #5
    movs r1, #0xd
    subs r4, r1, r0
    ldrh r0, [r5, #0x24]
    subs r0, r2, r0
    asrs r0, r0, #5
    subs r6, r1, r0
    ldr r0, lbl_08076d88 @ =0x08754bb4
    ldr r7, [r0]
lbl_08076d62:
    cmp r4, #0xd
    bhi lbl_08076d80
    cmp r4, r6
    beq lbl_08076d80
    lsls r4, r4, #0xa
    adds r1, r7, r4
    ldr r0, lbl_08076d8c @ =0x06004000
    adds r2, r4, r0
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_08076d80:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08076d88: .4byte 0x08754bb4
lbl_08076d8c: .4byte 0x06004000

    thumb_func_start sub_08076d90
sub_08076d90: @ 0x08076d90
    push {r4, lr}
    ldr r0, lbl_08076dac @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1, #0xc]
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0
    beq lbl_08076db0
    adds r0, r1, #0
    adds r0, #0x40
    adds r1, #0x9c
    bl sub_08076f8c
    b lbl_08076dc4
    .align 2, 0
lbl_08076dac: .4byte 0x08754bc4
lbl_08076db0:
    movs r0, #1
    ands r0, r2
    cmp r0, #0
    beq lbl_08076dc4
    adds r0, r1, #0
    adds r0, #0x40
    adds r1, #0x9c
    movs r2, #0
    bl sub_08076e18
lbl_08076dc4:
    ldr r4, lbl_08076df8 @ =0x08754bc4
    ldr r1, [r4]
    ldrh r2, [r1, #0xc]
    movs r0, #0x40
    ands r0, r2
    cmp r0, #0
    beq lbl_08076dfc
    adds r0, r1, #0
    adds r0, #0x44
    adds r1, #0xac
    bl sub_08077014
    cmp r0, #0
    beq lbl_08076e10
    ldr r0, [r4]
    adds r0, #0x9c
    movs r1, #5
    bl sub_08068128
    ldr r0, [r4]
    adds r0, #0xac
    movs r1, #5
    bl sub_08068128
    b lbl_08076e10
    .align 2, 0
lbl_08076df8: .4byte 0x08754bc4
lbl_08076dfc:
    movs r0, #4
    ands r0, r2
    cmp r0, #0
    beq lbl_08076e10
    adds r0, r1, #0
    adds r0, #0x44
    adds r1, #0xac
    movs r2, #1
    bl sub_08076e18
lbl_08076e10:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_08076e18
sub_08076e18: @ 0x08076e18
    push {r4, r5, lr}
    adds r5, r0, #0
    adds r4, r1, #0
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    ldrh r0, [r5, #2]
    adds r0, #1
    strh r0, [r5, #2]
    ldrb r0, [r5]
    cmp r0, #4
    bls lbl_08076e30
    b lbl_08076f64
lbl_08076e30:
    lsls r0, r0, #2
    ldr r1, lbl_08076e3c @ =lbl_08076e40
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08076e3c: .4byte lbl_08076e40
lbl_08076e40: @ jump table
    .4byte lbl_08076e54 @ case 0
    .4byte lbl_08076ea0 @ case 1
    .4byte lbl_08076eb2 @ case 2
    .4byte lbl_08076ec4 @ case 3
    .4byte lbl_08076f3c @ case 4
lbl_08076e54:
    cmp r3, #0
    bne lbl_08076e62
    movs r0, #0x80
    strh r0, [r4]
    movs r0, #0x80
    lsls r0, r0, #2
    b lbl_08076e6a
lbl_08076e62:
    movs r0, #0xa0
    strh r0, [r4]
    movs r0, #0xd2
    lsls r0, r0, #2
lbl_08076e6a:
    strh r0, [r4, #2]
    movs r3, #0
    strb r3, [r4, #8]
    strb r3, [r4, #9]
    movs r0, #1
    strb r0, [r4, #0xa]
    ldrb r0, [r4, #0xb]
    movs r1, #0x3f
    ands r1, r0
    movs r0, #0x40
    orrs r1, r0
    ldrb r2, [r4, #0xc]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    movs r2, #3
    orrs r0, r2
    strb r0, [r4, #0xc]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r1, r0
    strb r1, [r4, #0xb]
    ldrb r0, [r5]
    adds r0, #1
    strb r0, [r5]
    strh r3, [r5, #2]
    b lbl_08076f7e
lbl_08076ea0:
    ldrh r0, [r5, #2]
    cmp r0, #0x14
    bls lbl_08076f7e
    movs r1, #0
    movs r0, #2
    strb r0, [r4, #0xa]
    ldrb r0, [r5]
    adds r0, #1
    b lbl_08076ebe
lbl_08076eb2:
    ldrb r0, [r4, #0xa]
    cmp r0, #3
    bne lbl_08076f7e
    ldrb r0, [r5]
    adds r0, #1
    movs r1, #0
lbl_08076ebe:
    strb r0, [r5]
    strh r1, [r5, #2]
    b lbl_08076f7e
lbl_08076ec4:
    ldrh r1, [r5, #2]
    adds r1, #8
    ldrh r0, [r4, #2]
    subs r0, r0, r1
    strh r0, [r4, #2]
    ldrh r0, [r4]
    adds r0, r0, r1
    strh r0, [r4]
    movs r0, #0
    ldrsh r1, [r4, r0]
    ldr r0, lbl_08076f34 @ =0x03000c02
    movs r2, #0
    ldrsh r0, [r0, r2]
    subs r1, r1, r0
    movs r3, #2
    ldrsh r2, [r4, r3]
    ldr r0, lbl_08076f38 @ =0x03000c00
    movs r3, #0
    ldrsh r0, [r0, r3]
    subs r2, r2, r0
    ldrb r0, [r4, #0xb]
    movs r3, #0x21
    rsbs r3, r3, #0
    ands r3, r0
    strb r3, [r4, #0xb]
    adds r1, #0x80
    movs r0, #0xe0
    lsls r0, r0, #2
    cmp r1, r0
    bls lbl_08076f08
    movs r1, #0x20
    adds r0, r3, #0
    orrs r0, r1
    strb r0, [r4, #0xb]
lbl_08076f08:
    adds r1, r2, #0
    adds r1, #0x80
    movs r0, #0x98
    lsls r0, r0, #3
    cmp r1, r0
    bls lbl_08076f1c
    ldrb r0, [r4, #0xb]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r4, #0xb]
lbl_08076f1c:
    ldrb r1, [r4, #0xb]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08076f7e
    ldrb r0, [r5]
    adds r0, #1
    strb r0, [r5]
    movs r0, #0
    strh r0, [r5, #2]
    b lbl_08076f7e
    .align 2, 0
lbl_08076f34: .4byte 0x03000c02
lbl_08076f38: .4byte 0x03000c00
lbl_08076f3c:
    ldr r0, lbl_08076f5c @ =0x08754bc4
    ldr r4, [r0]
    ldr r2, lbl_08076f60 @ =0x08760ad0
    lsls r3, r3, #1
    adds r0, r3, r2
    ldrb r1, [r0]
    ldrh r0, [r4, #0xc]
    eors r1, r0
    strh r1, [r4, #0xc]
    adds r2, #1
    adds r3, r3, r2
    ldrb r0, [r3]
    orrs r1, r0
    strh r1, [r4, #0xc]
    b lbl_08076f7e
    .align 2, 0
lbl_08076f5c: .4byte 0x08754bc4
lbl_08076f60: .4byte 0x08760ad0
lbl_08076f64:
    ldr r0, lbl_08076f84 @ =0x08754bc4
    ldr r2, [r0]
    ldr r1, lbl_08076f88 @ =0x08760ad0
    lsls r0, r3, #1
    adds r0, r0, r1
    ldrb r1, [r0]
    ldrh r0, [r2, #0xc]
    bics r0, r1
    strh r0, [r2, #0xc]
    ldrb r0, [r4, #0xb]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r4, #0xb]
lbl_08076f7e:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08076f84: .4byte 0x08754bc4
lbl_08076f88: .4byte 0x08760ad0

    thumb_func_start sub_08076f8c
sub_08076f8c: @ 0x08076f8c
    push {r4, r5, lr}
    sub sp, #4
    adds r4, r0, #0
    adds r2, r1, #0
    ldrh r0, [r4, #2]
    adds r0, #1
    movs r5, #0
    strh r0, [r4, #2]
    ldrb r1, [r4]
    cmp r1, #1
    beq lbl_08076fd0
    cmp r1, #1
    bgt lbl_08076fac
    cmp r1, #0
    beq lbl_08076fb6
    b lbl_08077006
lbl_08076fac:
    cmp r1, #2
    beq lbl_08076fe0
    cmp r1, #3
    beq lbl_08076ff6
    b lbl_08077006
lbl_08076fb6:
    ldr r1, lbl_08076fcc @ =0x0844f0c4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x10
    bl DMATransfer
    ldrb r0, [r4]
    adds r0, #1
    b lbl_08076fda
    .align 2, 0
lbl_08076fcc: .4byte 0x0844f0c4
lbl_08076fd0:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x16
    bls lbl_08077006
    movs r0, #2
lbl_08076fda:
    strb r0, [r4]
    strh r5, [r4, #2]
    b lbl_08077006
lbl_08076fe0:
    ldrh r0, [r2, #2]
    adds r0, #0xc
    strh r0, [r2, #2]
    ldrb r1, [r2, #0xa]
    cmp r1, #0
    bne lbl_08077006
    ldrb r0, [r4]
    adds r0, #1
    strb r0, [r4]
    strh r1, [r4, #2]
    b lbl_08077006
lbl_08076ff6:
    ldr r0, lbl_08077010 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0xc]
    movs r1, #0x10
    eors r0, r1
    movs r1, #0x20
    orrs r0, r1
    strh r0, [r2, #0xc]
lbl_08077006:
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08077010: .4byte 0x08754bc4

    thumb_func_start sub_08077014
sub_08077014: @ 0x08077014
    push {r4, r5, lr}
    sub sp, #4
    adds r4, r0, #0
    adds r2, r1, #0
    movs r5, #0
    ldrh r0, [r4, #2]
    adds r0, #1
    strh r0, [r4, #2]
    ldrb r0, [r4]
    cmp r0, #6
    bhi lbl_080770e8
    lsls r0, r0, #2
    ldr r1, lbl_08077034 @ =lbl_08077038
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08077034: .4byte lbl_08077038
lbl_08077038: @ jump table
    .4byte lbl_08077054 @ case 0
    .4byte lbl_08077070 @ case 1
    .4byte lbl_0807707e @ case 2
    .4byte lbl_08077090 @ case 3
    .4byte lbl_080770a4 @ case 4
    .4byte lbl_080770c2 @ case 5
    .4byte lbl_080770d8 @ case 6
lbl_08077054:
    ldr r1, lbl_0807706c @ =0x0844f0d4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x10
    bl DMATransfer
    ldrb r0, [r4]
    adds r0, #1
    movs r1, #0
    b lbl_080770d2
    .align 2, 0
lbl_0807706c: .4byte 0x0844f0d4
lbl_08077070:
    ldrh r0, [r4, #2]
    cmp r0, #0x16
    bls lbl_080770e8
    ldrb r0, [r4]
    adds r0, #1
    movs r1, #0
    b lbl_080770d2
lbl_0807707e:
    ldrh r0, [r2, #2]
    subs r0, #0xc
    strh r0, [r2, #2]
    lsls r0, r0, #0x10
    movs r1, #0xb8
    lsls r1, r1, #0x12
    cmp r0, r1
    bgt lbl_080770e8
    b lbl_080770b6
lbl_08077090:
    ldrh r0, [r2]
    adds r0, #8
    strh r0, [r2]
    lsls r0, r0, #0x10
    ldr r1, lbl_080770a0 @ =0x016f0000
    cmp r0, r1
    ble lbl_080770e8
    b lbl_080770b6
    .align 2, 0
lbl_080770a0: .4byte 0x016f0000
lbl_080770a4:
    ldrh r0, [r2, #2]
    subs r0, #0xc
    strh r0, [r2, #2]
    lsls r0, r0, #0x10
    movs r1, #0xa0
    lsls r1, r1, #0x12
    cmp r0, r1
    bgt lbl_080770e8
    movs r5, #1
lbl_080770b6:
    ldrb r0, [r4]
    adds r0, #1
    strb r0, [r4]
    movs r0, #0
    strh r0, [r4, #2]
    b lbl_080770e8
lbl_080770c2:
    ldrh r0, [r2, #2]
    subs r0, #0xc
    strh r0, [r2, #2]
    ldrb r1, [r2, #0xa]
    cmp r1, #0
    bne lbl_080770e8
    ldrb r0, [r4]
    adds r0, #1
lbl_080770d2:
    strb r0, [r4]
    strh r1, [r4, #2]
    b lbl_080770e8
lbl_080770d8:
    ldr r0, lbl_080770f4 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0xc]
    movs r1, #0x40
    eors r0, r1
    movs r1, #0x80
    orrs r0, r1
    strh r0, [r2, #0xc]
lbl_080770e8:
    adds r0, r5, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080770f4: .4byte 0x08754bc4

    thumb_func_start title_screen_check_play_demo
title_screen_check_play_demo: @ 0x080770f8
    push {r4, r5, r6, lr}
    ldr r0, lbl_08077118 @ =0x08754bc4
    ldr r3, [r0]
    ldrh r1, [r3, #2]
    adds r1, #1
    movs r6, #0
    movs r4, #0
    strh r1, [r3, #2]
    lsls r1, r1, #0x10
    movs r2, #0xff
    lsls r2, r2, #0x12
    adds r5, r0, #0
    cmp r1, r2
    bls lbl_0807711c
    movs r0, #2
    b lbl_08077198
    .align 2, 0
lbl_08077118: .4byte 0x08754bc4
lbl_0807711c:
    ldrh r0, [r3, #4]
    adds r1, r0, #1
    strh r1, [r3, #4]
    ldrh r2, [r3, #0xc]
    movs r0, #0xa0
    ands r0, r2
    cmp r0, #0xa0
    bne lbl_08077136
    strh r4, [r3, #4]
    movs r0, #0xa0
    eors r0, r2
    strh r0, [r3, #0xc]
    b lbl_0807716e
lbl_08077136:
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0xf0
    bne lbl_08077148
    ldrb r1, [r3, #0xa]
    movs r0, #2
    orrs r0, r1
    strb r0, [r3, #0xa]
    b lbl_0807716e
lbl_08077148:
    movs r0, #0xb4
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_0807716e
    movs r0, #0x50
    orrs r0, r2
    strh r0, [r3, #0xc]
    adds r0, r3, #0
    adds r0, #0x40
    strb r6, [r0]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x42
    strh r4, [r1]
    adds r0, #0x44
    strb r6, [r0]
    ldr r0, [r5]
    adds r0, #0x46
    strh r4, [r0]
lbl_0807716e:
    ldr r1, [r5]
    ldrb r0, [r1, #0xf]
    cmp r0, #0
    beq lbl_0807718c
    ldr r0, lbl_08077188 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #9
    ands r0, r1
    cmp r0, #0
    beq lbl_08077196
    movs r0, #1
    b lbl_08077198
    .align 2, 0
lbl_08077188: .4byte 0x03001380
lbl_0807718c:
    ldrh r0, [r1]
    cmp r0, #0x1e
    bls lbl_08077196
    movs r0, #1
    strb r0, [r1, #0xf]
lbl_08077196:
    movs r0, #0
lbl_08077198:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start titlescreen_main
titlescreen_main: @ 0x080771a0
    push {r4, r5, r6, lr}
    movs r6, #0
    ldr r0, lbl_080771c4 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    ldr r0, lbl_080771c8 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #5
    bls lbl_080771ba
    b lbl_08077306
lbl_080771ba:
    lsls r0, r0, #2
    ldr r1, lbl_080771cc @ =lbl_080771d0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080771c4: .4byte 0x08754bc4
lbl_080771c8: .4byte 0x03000c72
lbl_080771cc: .4byte lbl_080771d0
lbl_080771d0: @ jump table
    .4byte lbl_080771e8 @ case 0
    .4byte lbl_08077204 @ case 1
    .4byte lbl_0807723c @ case 2
    .4byte lbl_080772bc @ case 3
    .4byte lbl_080772f4 @ case 4
    .4byte lbl_08077306 @ case 5
lbl_080771e8:
    bl title_screen_init
    ldr r1, lbl_080771fc @ =0x03000c72
    movs r0, #1
    strh r0, [r1]
    ldr r0, lbl_08077200 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1]
    b lbl_08077306
    .align 2, 0
lbl_080771fc: .4byte 0x03000c72
lbl_08077200: .4byte 0x08754bc4
lbl_08077204:
    bl sub_080767a4
    bl title_screen_fading_in
    cmp r0, #0
    bne lbl_08077212
    b lbl_08077306
lbl_08077212:
    movs r0, #2
    bl UpdateMusicPriority
    movs r0, #2
    movs r1, #2
    bl PlayMusic
    ldr r0, lbl_08077234 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1]
    ldr r1, lbl_08077238 @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    b lbl_08077306
    .align 2, 0
lbl_08077234: .4byte 0x08754bc4
lbl_08077238: .4byte 0x03000c72
lbl_0807723c:
    bl title_screen_idle
    ldr r2, lbl_08077264 @ =0x03000c74
    strb r0, [r2]
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807729c
    ldr r4, lbl_08077268 @ =0x08754bc4
    ldr r0, [r4]
    movs r1, #0
    strh r1, [r0]
    movs r0, #0
    ldrsb r0, [r2, r0]
    cmp r0, #2
    bne lbl_0807726c
    movs r0, #4
    bl UpdateMusicPriority
    b lbl_0807727e
    .align 2, 0
lbl_08077264: .4byte 0x03000c74
lbl_08077268: .4byte 0x08754bc4
lbl_0807726c:
    ldr r0, lbl_080772a8 @ =0x00000213
    bl SoundPlay
    ldr r2, [r4]
    ldr r0, lbl_080772ac @ =0x08760aa0
    ldr r1, [r0, #0x1c]
    ldr r0, [r0, #0x18]
    str r0, [r2, #0x38]
    str r1, [r2, #0x3c]
lbl_0807727e:
    ldr r1, lbl_080772b0 @ =0x03000c72
    movs r0, #3
    strh r0, [r1]
    ldr r0, lbl_080772b4 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r0, #0
    adds r1, #0x34
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08077296
    movs r0, #1
    strb r0, [r1]
lbl_08077296:
    ldr r1, lbl_080772b8 @ =0x030013d2
    movs r0, #0
    strb r0, [r1]
lbl_0807729c:
    bl sub_080767e4
    bl sub_08076d90
    b lbl_08077306
    .align 2, 0
lbl_080772a8: .4byte 0x00000213
lbl_080772ac: .4byte 0x08760aa0
lbl_080772b0: .4byte 0x03000c72
lbl_080772b4: .4byte 0x08754bc4
lbl_080772b8: .4byte 0x030013d2
lbl_080772bc:
    bl sub_080767e4
    bl sub_08076d90
    ldr r5, lbl_080772ec @ =0x08754bc4
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x38
    ldrb r4, [r0]
    cmp r4, #0
    bne lbl_08077306
    ldrh r0, [r1]
    cmp r0, #0x28
    bls lbl_08077306
    movs r0, #1
    bl sub_08076710
    ldr r0, lbl_080772f0 @ =0x03000c72
    ldrh r1, [r0]
    adds r1, #1
    strh r1, [r0]
    ldr r0, [r5]
    strh r4, [r0]
    b lbl_08077306
    .align 2, 0
lbl_080772ec: .4byte 0x08754bc4
lbl_080772f0: .4byte 0x03000c72
lbl_080772f4:
    bl sub_080767a4
    movs r0, #1
    movs r1, #1
    bl sub_080765e0
    cmp r0, #0
    beq lbl_08077306
    movs r6, #1
lbl_08077306:
    cmp r6, #0
    bne lbl_0807730e
    bl title_screen_process_oam
lbl_0807730e:
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start title_screen_idle
title_screen_idle: @ 0x08077318
    push {r4, lr}
    movs r4, #0
    ldr r0, lbl_08077334 @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0x48
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_0807735e
    cmp r0, #1
    bgt lbl_08077338
    cmp r0, #0
    beq lbl_0807733e
    b lbl_080773c0
    .align 2, 0
lbl_08077334: .4byte 0x08754bc4
lbl_08077338:
    cmp r0, #2
    beq lbl_080773b8
    b lbl_080773c0
lbl_0807733e:
    ldrb r0, [r1, #0xe]
    cmp r0, #0
    beq lbl_0807734e
    bl sub_08076a98
    cmp r0, #0
    beq lbl_080773c0
    b lbl_080773a8
lbl_0807734e:
    bl sub_08076b60
    cmp r0, #0
    beq lbl_080773c0
    movs r0, #1
    bl sub_080773c8
    b lbl_080773c0
lbl_0807735e:
    ldr r0, lbl_08077374 @ =0x03001380
    ldrh r0, [r0]
    cmp r0, #0
    beq lbl_08077380
    ldr r0, lbl_08077378 @ =0x030013b0
    movs r1, #0x10
    strh r1, [r0]
    ldr r1, lbl_0807737c @ =0x030013b2
    strh r4, [r1]
    adds r3, r0, #0
    b lbl_080773a2
    .align 2, 0
lbl_08077374: .4byte 0x03001380
lbl_08077378: .4byte 0x030013b0
lbl_0807737c: .4byte 0x030013b2
lbl_08077380:
    ldrh r0, [r1]
    movs r1, #0xa
    bl __umodsi3
    lsls r0, r0, #0x10
    ldr r3, lbl_080773b0 @ =0x030013b0
    cmp r0, #0
    bne lbl_080773a2
    ldrh r0, [r3]
    cmp r0, #0xf
    bhi lbl_080773a8
    adds r0, #1
    strh r0, [r3]
    ldr r2, lbl_080773b4 @ =0x030013b2
    movs r1, #0x10
    subs r1, r1, r0
    strh r1, [r2]
lbl_080773a2:
    ldrh r0, [r3]
    cmp r0, #0xf
    bls lbl_080773c0
lbl_080773a8:
    movs r0, #2
    bl sub_080773c8
    b lbl_080773c0
    .align 2, 0
lbl_080773b0: .4byte 0x030013b0
lbl_080773b4: .4byte 0x030013b2
lbl_080773b8:
    bl title_screen_check_play_demo
    lsls r0, r0, #0x18
    asrs r4, r0, #0x18
lbl_080773c0:
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start sub_080773c8
sub_080773c8: @ 0x080773c8
    push {r4, r5, lr}
    ldr r4, lbl_080773e8 @ =0x08754bc4
    ldr r1, [r4]
    adds r1, #0x48
    movs r5, #0
    strb r0, [r1]
    ldr r3, [r4]
    adds r0, r3, #0
    adds r0, #0x48
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_080773ec
    cmp r0, #2
    beq lbl_0807741c
    b lbl_08077444
    .align 2, 0
lbl_080773e8: .4byte 0x08754bc4
lbl_080773ec:
    ldr r1, lbl_0807740c @ =0x0844f0ac
    ldrh r0, [r1, #0x12]
    ldrh r1, [r1, #6]
    orrs r0, r1
    ldrh r1, [r3, #0x18]
    orrs r0, r1
    strh r0, [r3, #0x18]
    ldr r0, lbl_08077410 @ =0x00003f42
    strh r0, [r3, #0x22]
    strh r5, [r3]
    ldr r0, lbl_08077414 @ =0x030013b0
    strh r5, [r0]
    ldr r1, lbl_08077418 @ =0x030013b2
    movs r0, #0x10
    strh r0, [r1]
    b lbl_08077444
    .align 2, 0
lbl_0807740c: .4byte 0x0844f0ac
lbl_08077410: .4byte 0x00003f42
lbl_08077414: .4byte 0x030013b0
lbl_08077418: .4byte 0x030013b2
lbl_0807741c:
    ldr r1, lbl_0807744c @ =0x0844f0ac
    ldrh r0, [r1, #0x12]
    ldrh r1, [r1, #6]
    orrs r0, r1
    ldrh r1, [r3, #0x18]
    orrs r0, r1
    movs r2, #0
    strh r0, [r3, #0x18]
    ldr r0, lbl_08077450 @ =0x00003f42
    strh r0, [r3, #0x22]
    ldr r1, lbl_08077454 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08077458 @ =0x030013b2
    strh r5, [r0]
    movs r0, #0xd2
    strh r0, [r3, #4]
    strb r2, [r3, #0xf]
    ldr r0, [r4]
    strh r5, [r0]
lbl_08077444:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807744c: .4byte 0x0844f0ac
lbl_08077450: .4byte 0x00003f42
lbl_08077454: .4byte 0x030013b0
lbl_08077458: .4byte 0x030013b2

    thumb_func_start title_screen_init
title_screen_init: @ 0x0807745c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    ldr r0, lbl_080775bc @ =sub_080777cc
    bl CallbackSetVBlank
    movs r7, #0
    str r7, [sp, #4]
    ldr r4, lbl_080775c0 @ =0x040000d4
    add r0, sp, #4
    str r0, [r4]
    ldr r0, lbl_080775c4 @ =0x030016c4
    str r0, [r4, #4]
    ldr r0, lbl_080775c8 @ =0x8500018a
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r1, lbl_080775cc @ =0x08754bc4
    ldr r3, [r1]
    movs r2, #0
    mov sl, r2
    movs r1, #0xff
    strh r1, [r3, #0x22]
    ldr r0, lbl_080775d0 @ =0x04000050
    strh r1, [r0]
    ldr r2, lbl_080775d4 @ =0x04000054
    ldr r1, lbl_080775d8 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strh r0, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r7, [r3, #0x18]
    strh r7, [r0]
    ldr r0, lbl_080775dc @ =0x03001382
    mov r5, sl
    strb r5, [r0]
    bl ClearGFXRAM
    bl ResetFreeOAM
    ldr r1, lbl_080775e0 @ =0x03005806
    ldr r0, lbl_080775e4 @ =0x03005807
    strb r5, [r0]
    strb r5, [r1]
    str r7, [sp, #4]
    add r0, sp, #4
    str r0, [r4]
    ldr r0, lbl_080775e8 @ =0x03001588
    str r0, [r4, #4]
    ldr r0, lbl_080775ec @ =0x8500001e
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r0, lbl_080775f0 @ =0x03000001
    strb r5, [r0]
    ldr r0, lbl_080775f4 @ =0x03000000
    strb r5, [r0]
    bl StopAllMusicsAndSounds
    ldr r4, lbl_080775f8 @ =0x08446d68
    movs r6, #0xa0
    lsls r6, r6, #0x13
    movs r5, #0xf0
    lsls r5, r5, #1
    movs r1, #0x10
    str r1, [sp]
    movs r0, #3
    adds r1, r4, #0
    adds r2, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    ldr r2, lbl_080775fc @ =0x05000200
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r1, r4, #0
    adds r3, r5, #0
    bl DMATransfer
    strh r7, [r6]
    ldr r6, lbl_08077600 @ =0x0844f0ac
    adds r0, r6, #0
    bl load_special_graphics_data
    movs r1, #0xc
    adds r1, r1, r6
    mov sb, r1
    mov r0, sb
    bl load_special_graphics_data
    movs r0, #2
    bl sub_080777d8
    ldr r0, lbl_08077604 @ =0x084470e0
    ldr r1, lbl_08077608 @ =0x0600c000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0807760c @ =0x084485fc
    ldr r2, lbl_08077610 @ =0x06004000
    mov r8, r2
    mov r1, r8
    bl CallLZ77UncompVRAM
    ldr r0, lbl_08077614 @ =0x0844b808
    ldr r1, lbl_08077618 @ =0x0600a400
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0807761c @ =0x0844c47c
    ldr r4, lbl_08077620 @ =0x08754bb4
    ldr r1, [r4]
    movs r5, #0x80
    lsls r5, r5, #7
    adds r1, r1, r5
    bl CallLZ77UncompWRAM
    ldr r2, [r4]
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    mov r1, r8
    adds r3, r5, #0
    bl DMATransfer
    ldr r0, lbl_08077624 @ =0x084481fc
    ldr r1, lbl_08077628 @ =0x06010000
    bl CallLZ77UncompVRAM
    adds r0, r6, #0
    bl sub_08076390
    mov r0, sb
    bl sub_08076390
    ldr r0, lbl_0807762c @ =0x03000c75
    mov r1, sl
    strb r1, [r0]
    ldr r1, lbl_08077630 @ =0x03000bf4
    ldr r0, lbl_08077634 @ =0x03000bf6
    strh r7, [r0]
    strh r7, [r1]
    ldr r1, lbl_08077638 @ =0x03000bf8
    ldr r0, lbl_0807763c @ =0x03000bfa
    strh r7, [r0]
    strh r7, [r1]
    ldr r1, lbl_08077640 @ =0x03000bfc
    ldr r0, lbl_08077644 @ =0x03000bfe
    strh r7, [r0]
    strh r7, [r1]
    ldr r1, lbl_08077648 @ =0x03000c00
    ldr r0, lbl_0807764c @ =0x03000c02
    strh r7, [r0]
    strh r7, [r1]
    ldr r6, lbl_08077650 @ =0x030013b2
    movs r2, #0x10
    strh r2, [r6]
    ldr r5, lbl_08077654 @ =0x030013b0
    strh r7, [r5]
    ldr r0, lbl_080775cc @ =0x08754bc4
    ldr r1, [r0]
    ldr r4, lbl_08077658 @ =0x00003f42
    strh r4, [r1, #0x22]
    strh r7, [r1, #2]
    ldr r0, lbl_0807765c @ =0x03000c74
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08077660
    adds r0, r1, #0
    adds r0, #0x48
    mov r1, sl
    strb r1, [r0]
    b lbl_08077688
    .align 2, 0
lbl_080775bc: .4byte sub_080777cc
lbl_080775c0: .4byte 0x040000d4
lbl_080775c4: .4byte 0x030016c4
lbl_080775c8: .4byte 0x8500018a
lbl_080775cc: .4byte 0x08754bc4
lbl_080775d0: .4byte 0x04000050
lbl_080775d4: .4byte 0x04000054
lbl_080775d8: .4byte 0x030013ae
lbl_080775dc: .4byte 0x03001382
lbl_080775e0: .4byte 0x03005806
lbl_080775e4: .4byte 0x03005807
lbl_080775e8: .4byte 0x03001588
lbl_080775ec: .4byte 0x8500001e
lbl_080775f0: .4byte 0x03000001
lbl_080775f4: .4byte 0x03000000
lbl_080775f8: .4byte 0x08446d68
lbl_080775fc: .4byte 0x05000200
lbl_08077600: .4byte 0x0844f0ac
lbl_08077604: .4byte 0x084470e0
lbl_08077608: .4byte 0x0600c000
lbl_0807760c: .4byte 0x084485fc
lbl_08077610: .4byte 0x06004000
lbl_08077614: .4byte 0x0844b808
lbl_08077618: .4byte 0x0600a400
lbl_0807761c: .4byte 0x0844c47c
lbl_08077620: .4byte 0x08754bb4
lbl_08077624: .4byte 0x084481fc
lbl_08077628: .4byte 0x06010000
lbl_0807762c: .4byte 0x03000c75
lbl_08077630: .4byte 0x03000bf4
lbl_08077634: .4byte 0x03000bf6
lbl_08077638: .4byte 0x03000bf8
lbl_0807763c: .4byte 0x03000bfa
lbl_08077640: .4byte 0x03000bfc
lbl_08077644: .4byte 0x03000bfe
lbl_08077648: .4byte 0x03000c00
lbl_0807764c: .4byte 0x03000c02
lbl_08077650: .4byte 0x030013b2
lbl_08077654: .4byte 0x030013b0
lbl_08077658: .4byte 0x00003f42
lbl_0807765c: .4byte 0x03000c74
lbl_08077660:
    movs r0, #0xff
    bl sub_08076978
    ldr r2, lbl_080776ec @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x48
    movs r1, #2
    strb r1, [r0]
    ldr r1, [r2]
    strh r4, [r1, #0x22]
    movs r0, #0x10
    strh r0, [r5]
    strh r7, [r6]
    movs r0, #0xd2
    strh r0, [r1, #4]
    mov r2, sl
    strb r2, [r1, #0xf]
    ldr r5, lbl_080776ec @ =0x08754bc4
    ldr r0, [r5]
    strh r7, [r0]
lbl_08077688:
    bl sub_08076478
    bl title_screen_process_oam
    bl sub_080776fc
    movs r0, #0
    bl sub_08076710
    ldr r2, lbl_080776ec @ =0x08754bc4
    ldr r1, [r2]
    movs r0, #5
    strb r0, [r1, #0xa]
    ldr r3, [r2]
    ldr r2, lbl_080776f0 @ =0x08760aa0
    ldr r0, [r2]
    ldr r1, [r2, #4]
    str r0, [r3, #0x28]
    str r1, [r3, #0x2c]
    ldr r0, [r2, #8]
    ldr r1, [r2, #0xc]
    str r0, [r3, #0x30]
    str r1, [r3, #0x34]
    ldr r0, [r2, #0x10]
    ldr r1, [r2, #0x14]
    str r0, [r3, #0x38]
    str r1, [r3, #0x3c]
    movs r4, #0x80
    lsls r4, r4, #0x13
    ldr r2, lbl_080776f4 @ =0x0844f0ac
    ldrh r0, [r2, #6]
    movs r5, #0x80
    lsls r5, r5, #5
    adds r1, r5, #0
    orrs r0, r1
    ldrh r1, [r2, #0x12]
    orrs r0, r1
    strh r0, [r3, #0x18]
    strh r0, [r4]
    ldr r0, lbl_080776f8 @ =sub_080776fc
    bl CallbackSetVBlank
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080776ec: .4byte 0x08754bc4
lbl_080776f0: .4byte 0x08760aa0
lbl_080776f4: .4byte 0x0844f0ac
lbl_080776f8: .4byte sub_080776fc

    thumb_func_start sub_080776fc
sub_080776fc: @ 0x080776fc
    ldr r1, lbl_08077788 @ =0x040000d4
    ldr r0, lbl_0807778c @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08077790 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xc4
    ldr r0, lbl_08077794 @ =0x03000bf4
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08077798 @ =0x03000bf6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0807779c @ =0x03000bf8
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080777a0 @ =0x03000bfa
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080777a4 @ =0x03000bfc
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080777a8 @ =0x03000bfe
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080777ac @ =0x03000c00
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080777b0 @ =0x03000c02
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    subs r1, #0x1e
    ldr r0, lbl_080777b4 @ =0x08754bc4
    ldr r3, [r0]
    ldrh r0, [r3, #0x18]
    strh r0, [r1]
    adds r1, #0x54
    ldr r0, lbl_080777b8 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r2, lbl_080777bc @ =0x04000052
    ldr r0, lbl_080777c0 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_080777c4 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_080777c8 @ =0x04000050
    ldrh r0, [r3, #0x22]
    strh r0, [r1]
    bx lr
    .align 2, 0
lbl_08077788: .4byte 0x040000d4
lbl_0807778c: .4byte 0x03000e7c
lbl_08077790: .4byte 0x84000100
lbl_08077794: .4byte 0x03000bf4
lbl_08077798: .4byte 0x03000bf6
lbl_0807779c: .4byte 0x03000bf8
lbl_080777a0: .4byte 0x03000bfa
lbl_080777a4: .4byte 0x03000bfc
lbl_080777a8: .4byte 0x03000bfe
lbl_080777ac: .4byte 0x03000c00
lbl_080777b0: .4byte 0x03000c02
lbl_080777b4: .4byte 0x08754bc4
lbl_080777b8: .4byte 0x030013ae
lbl_080777bc: .4byte 0x04000052
lbl_080777c0: .4byte 0x030013b2
lbl_080777c4: .4byte 0x030013b0
lbl_080777c8: .4byte 0x04000050

    thumb_func_start sub_080777cc
sub_080777cc: @ 0x080777cc
    sub sp, #4
    mov r1, sp
    movs r0, #0
    strb r0, [r1]
    add sp, #4
    bx lr

    thumb_func_start sub_080777d8
sub_080777d8: @ 0x080777d8
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    ldr r0, lbl_08077818 @ =0x0844f0ac
    ldrb r0, [r0]
    lsls r2, r0, #0xb
    cmp r1, #0
    beq lbl_08077810
    ldr r0, lbl_0807781c @ =0x0000010d
    cmp r1, #2
    bne lbl_080777f0
    adds r0, #0x20
lbl_080777f0:
    adds r4, r0, #0
    movs r3, #0
    movs r5, #0xfc
    lsls r5, r5, #8
    ldr r0, lbl_08077820 @ =0x06000178
    adds r2, r2, r0
lbl_080777fc:
    ldrh r0, [r2]
    adds r1, r5, #0
    ands r1, r0
    adds r0, r4, r3
    orrs r1, r0
    strh r1, [r2]
    adds r2, #2
    adds r3, #1
    cmp r3, #1
    ble lbl_080777fc
lbl_08077810:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08077818: .4byte 0x0844f0ac
lbl_0807781c: .4byte 0x0000010d
lbl_08077820: .4byte 0x06000178

    thumb_func_start sub_08077824
sub_08077824: @ 0x08077824
    push {r4, r5, r6, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    lsls r2, r2, #0x18
    lsrs r0, r2, #0x18
    ldrb r1, [r4]
    cmp r1, #0
    beq lbl_080778bc
    movs r6, #0x80
    lsls r6, r6, #8
    lsls r2, r0, #0xc
lbl_0807783a:
    adds r3, r1, #0
    cmp r3, #0x20
    beq lbl_080778a0
    adds r0, r1, #0
    subs r0, #0x30
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #9
    bhi lbl_08077852
    ldrb r0, [r4]
    subs r0, #0x30
    b lbl_08077894
lbl_08077852:
    adds r0, r1, #0
    subs r0, #0x41
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x19
    bhi lbl_08077868
    ldr r1, lbl_08077864 @ =0x0000ffc9
    b lbl_0807788e
    .align 2, 0
lbl_08077864: .4byte 0x0000ffc9
lbl_08077868:
    cmp r3, #0x3a
    bne lbl_08077870
    movs r0, #0x24
    b lbl_080778a4
lbl_08077870:
    cmp r3, #0x5f
    bne lbl_08077878
    movs r0, #0x25
    b lbl_080778a4
lbl_08077878:
    cmp r3, #0x2f
    bne lbl_08077880
    movs r0, #0x26
    b lbl_080778a4
lbl_08077880:
    adds r0, r1, #0
    subs r0, #0x61
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x19
    bhi lbl_080778a0
    ldr r1, lbl_0807789c @ =0x0000ffa9
lbl_0807788e:
    adds r0, r1, #0
    ldrb r1, [r4]
    adds r0, r0, r1
lbl_08077894:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    b lbl_080778a4
    .align 2, 0
lbl_0807789c: .4byte 0x0000ffa9
lbl_080778a0:
    movs r0, #0x80
    lsls r0, r0, #8
lbl_080778a4:
    cmp r0, r6
    beq lbl_080778b2
    movs r1, #0xe0
    lsls r1, r1, #1
    adds r0, r0, r1
    orrs r0, r2
    strh r0, [r5]
lbl_080778b2:
    adds r5, #2
    adds r4, #1
    ldrb r1, [r4]
    cmp r1, #0
    bne lbl_0807783a
lbl_080778bc:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start gameover_main
gameover_main: @ 0x080778c4
    push {r4, r5, lr}
    movs r5, #0
    ldr r2, lbl_080778ec @ =0x08754bc4
    ldr r1, [r2]
    ldrh r0, [r1, #2]
    adds r0, #1
    strh r0, [r1, #2]
    ldr r0, lbl_080778f0 @ =0x03000c72
    movs r3, #0
    ldrsh r1, [r0, r3]
    adds r3, r0, #0
    cmp r1, #9
    bls lbl_080778e0
    b lbl_08077ac4
lbl_080778e0:
    lsls r0, r1, #2
    ldr r1, lbl_080778f4 @ =lbl_080778f8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080778ec: .4byte 0x08754bc4
lbl_080778f0: .4byte 0x03000c72
lbl_080778f4: .4byte lbl_080778f8
lbl_080778f8: @ jump table
    .4byte lbl_08077920 @ case 0
    .4byte lbl_0807797c @ case 1
    .4byte lbl_080779a4 @ case 2
    .4byte lbl_080779dc @ case 3
    .4byte lbl_08077a00 @ case 4
    .4byte lbl_08077a20 @ case 5
    .4byte lbl_08077a58 @ case 6
    .4byte lbl_08077a68 @ case 7
    .4byte lbl_08077a90 @ case 8
    .4byte lbl_08077aa8 @ case 9
lbl_08077920:
    ldr r1, lbl_08077954 @ =0x03000038
    ldrb r4, [r1, #1]
    cmp r4, #0
    beq lbl_08077964
    ldrb r0, [r1]
    adds r0, #1
    movs r4, #0
    strb r0, [r1]
    strb r4, [r1, #1]
    ldr r0, lbl_08077958 @ =0x0194f780
    bl sub_080027f8
    movs r0, #0xa
    bl sub_08002acc
    movs r0, #0xa
    bl FadeMusic
    ldr r0, lbl_0807795c @ =0x030013d2
    strb r4, [r0]
    ldr r1, lbl_08077960 @ =0x03000c74
    movs r0, #2
    strb r0, [r1]
    movs r0, #1
    b lbl_08077aca
    .align 2, 0
lbl_08077954: .4byte 0x03000038
lbl_08077958: .4byte 0x0194f780
lbl_0807795c: .4byte 0x030013d2
lbl_08077960: .4byte 0x03000c74
lbl_08077964:
    bl game_over_menu_init
    ldr r0, lbl_08077974 @ =0x08754bc4
    ldr r0, [r0]
    strh r4, [r0, #2]
    ldr r1, lbl_08077978 @ =0x03000c72
    ldrh r0, [r1]
    b lbl_08077ab0
    .align 2, 0
lbl_08077974: .4byte 0x08754bc4
lbl_08077978: .4byte 0x03000c72
lbl_0807797c:
    ldr r1, lbl_0807798c @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #2
    bls lbl_08077990
    subs r0, #1
    strh r0, [r1]
    b lbl_08077ac4
    .align 2, 0
lbl_0807798c: .4byte 0x030013ae
lbl_08077990:
    ldr r1, [r2]
    ldrh r2, [r1, #0xc]
    movs r4, #0x80
    lsls r4, r4, #7
    adds r0, r4, #0
    orrs r0, r2
    strh r0, [r1, #0xc]
    movs r0, #0xc4
    strh r0, [r1, #0xe]
    b lbl_08077a82
lbl_080779a4:
    ldr r1, lbl_080779c0 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #5
    bhi lbl_080779c4
    adds r0, #2
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #6
    bhi lbl_080779ba
    b lbl_08077ac4
lbl_080779ba:
    movs r0, #6
    strh r0, [r1]
    b lbl_08077ac4
    .align 2, 0
lbl_080779c0: .4byte 0x030013ae
lbl_080779c4:
    ldr r1, [r2]
    movs r0, #0x81
    strb r0, [r1, #0x1e]
    movs r0, #0x53
    movs r1, #0
    bl PlayMusic
    ldr r1, lbl_080779d8 @ =0x03000c72
    ldrh r0, [r1]
    b lbl_08077ab0
    .align 2, 0
lbl_080779d8: .4byte 0x03000c72
lbl_080779dc:
    bl game_over_menu_detect_input
    cmp r0, #0
    beq lbl_08077a1a
    ldr r0, lbl_080779f8 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #2]
    ldr r1, lbl_080779fc @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    b lbl_08077a1a
    .align 2, 0
lbl_080779f8: .4byte 0x08754bc4
lbl_080779fc: .4byte 0x03000c72
lbl_08077a00:
    ldr r2, [r2]
    adds r0, r2, #0
    adds r0, #0x43
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08077a1a
    movs r0, #0
    strh r0, [r2, #2]
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
lbl_08077a1a:
    bl game_over_menu_letters_anim
    b lbl_08077ac4
lbl_08077a20:
    bl game_over_menu_letters_anim
    ldr r1, lbl_08077a4c @ =0x030013ae
    movs r0, #4
    strh r0, [r1]
    ldr r0, lbl_08077a50 @ =0x08754bc4
    ldr r2, [r0]
    movs r0, #0xff
    strh r0, [r2, #0xe]
    ldrh r0, [r2, #0xc]
    movs r3, #0x80
    lsls r3, r3, #7
    adds r1, r3, #0
    eors r0, r1
    strh r0, [r2, #0xc]
    movs r0, #0x14
    bl FadeMusic
    ldr r1, lbl_08077a54 @ =0x03000c72
    ldrh r0, [r1]
    b lbl_08077ab0
    .align 2, 0
lbl_08077a4c: .4byte 0x030013ae
lbl_08077a50: .4byte 0x08754bc4
lbl_08077a54: .4byte 0x03000c72
lbl_08077a58:
    ldr r1, lbl_08077a64 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bls lbl_08077ab0
    b lbl_08077a82
    .align 2, 0
lbl_08077a64: .4byte 0x030013ae
lbl_08077a68:
    ldr r0, [r2]
    ldrb r1, [r0, #8]
    cmp r1, #1
    bne lbl_08077a7c
    ldr r0, lbl_08077a78 @ =0x03000c74
    strb r1, [r0]
    b lbl_08077ac2
    .align 2, 0
lbl_08077a78: .4byte 0x03000c74
lbl_08077a7c:
    ldr r1, lbl_08077a8c @ =0x03000c74
    movs r0, #4
    strb r0, [r1]
lbl_08077a82:
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    b lbl_08077ac4
    .align 2, 0
lbl_08077a8c: .4byte 0x03000c74
lbl_08077a90:
    movs r0, #0
    bl sub_08075c04
    ldr r0, lbl_08077aa0 @ =0x03000020
    ldr r1, lbl_08077aa4 @ =0x03000024
    ldrb r1, [r1, #2]
    strb r1, [r0]
    b lbl_08077ac2
    .align 2, 0
lbl_08077aa0: .4byte 0x03000020
lbl_08077aa4: .4byte 0x03000024
lbl_08077aa8:
    ldr r1, lbl_08077ab8 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08077abc
lbl_08077ab0:
    adds r0, #1
    strh r0, [r1]
    b lbl_08077ac4
    .align 2, 0
lbl_08077ab8: .4byte 0x030013ae
lbl_08077abc:
    ldr r1, lbl_08077ad0 @ =0x03000c74
    movs r0, #0x10
    strb r0, [r1]
lbl_08077ac2:
    movs r5, #1
lbl_08077ac4:
    bl game_over_menu_process_oam
    adds r0, r5, #0
lbl_08077aca:
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08077ad0: .4byte 0x03000c74

    thumb_func_start game_over_menu_detect_input
game_over_menu_detect_input: @ 0x08077ad4
    push {lr}
    movs r2, #0
    ldr r0, lbl_08077af4 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #9
    ands r0, r1
    cmp r0, #0
    beq lbl_08077af8
    movs r0, #0xc
    bl sub_0807ef7c
    movs r0, #2
    bl game_over_menu_samus_head
    movs r0, #1
    b lbl_08077b42
    .align 2, 0
lbl_08077af4: .4byte 0x03001380
lbl_08077af8:
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08077b14
    ldr r0, lbl_08077b10 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    cmp r0, #0
    beq lbl_08077b2c
    strb r2, [r1, #8]
    b lbl_08077b30
    .align 2, 0
lbl_08077b10: .4byte 0x08754bc4
lbl_08077b14:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_08077b2c
    ldr r0, lbl_08077b48 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    cmp r0, #1
    beq lbl_08077b2c
    movs r0, #1
    strb r0, [r1, #8]
    movs r2, #1
lbl_08077b2c:
    cmp r2, #0
    beq lbl_08077b40
lbl_08077b30:
    movs r0, #0xb
    bl sub_0807ef7c
    bl game_over_menu_update_text_gfx
    movs r0, #1
    bl game_over_menu_samus_head
lbl_08077b40:
    movs r0, #0
lbl_08077b42:
    pop {r1}
    bx r1
    .align 2, 0
lbl_08077b48: .4byte 0x08754bc4

    thumb_func_start game_over_menu_update_text_gfx
game_over_menu_update_text_gfx: @ 0x08077b4c
    push {r4, r5, r6, lr}
    ldr r3, lbl_08077b9c @ =0x06000340
    ldr r0, lbl_08077ba0 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #8]
    movs r5, #3
    cmp r0, #0
    bne lbl_08077b5e
    movs r5, #2
lbl_08077b5e:
    ldr r6, lbl_08077ba4 @ =0x00000fff
    lsls r4, r5, #0xc
    movs r2, #0x3f
lbl_08077b64:
    ldrh r1, [r3]
    adds r0, r6, #0
    ands r0, r1
    orrs r0, r4
    strh r0, [r3]
    subs r2, #1
    adds r3, #2
    cmp r2, #0
    bge lbl_08077b64
    movs r0, #1
    eors r5, r0
    adds r3, #0x40
    ldr r6, lbl_08077ba4 @ =0x00000fff
    lsls r4, r5, #0xc
    movs r2, #0x3f
lbl_08077b82:
    ldrh r1, [r3]
    adds r0, r6, #0
    ands r0, r1
    orrs r0, r4
    strh r0, [r3]
    subs r2, #1
    adds r3, #2
    cmp r2, #0
    bge lbl_08077b82
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08077b9c: .4byte 0x06000340
lbl_08077ba0: .4byte 0x08754bc4
lbl_08077ba4: .4byte 0x00000fff

    thumb_func_start game_over_menu_init
game_over_menu_init: @ 0x08077ba8
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #8
    ldr r0, lbl_08077d28 @ =sub_08077fe8
    bl CallbackSetVBlank
    movs r6, #0
    str r6, [sp, #4]
    ldr r4, lbl_08077d2c @ =0x040000d4
    add r0, sp, #4
    str r0, [r4]
    ldr r0, lbl_08077d30 @ =0x030016c4
    str r0, [r4, #4]
    ldr r0, lbl_08077d34 @ =0x8500018a
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r2, lbl_08077d38 @ =0x04000050
    ldr r1, lbl_08077d3c @ =0x08754bc4
    mov sb, r1
    ldr r1, [r1]
    movs r3, #0
    mov r8, r3
    movs r0, #0xbf
    strh r0, [r1, #0xe]
    strh r0, [r2]
    adds r2, #4
    ldr r1, lbl_08077d40 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strh r0, [r2]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r6, [r0]
    ldr r0, lbl_08077d44 @ =0x03001382
    mov r1, r8
    strb r1, [r0]
    bl ClearGFXRAM
    bl ResetFreeOAM
    ldr r1, lbl_08077d48 @ =0x03005806
    ldr r0, lbl_08077d4c @ =0x03005807
    mov r2, r8
    strb r2, [r0]
    strb r2, [r1]
    movs r0, #0x80
    bl sub_080027f8
    bl StopAllMusicsAndSounds
    ldr r1, lbl_08077d50 @ =0x0844f11c
    movs r5, #0xa0
    lsls r5, r5, #0x13
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0xa0
    bl DMATransfer
    strh r6, [r5]
    ldr r0, lbl_08077d54 @ =0x08454938
    str r0, [r4]
    ldr r0, lbl_08077d58 @ =0x05000200
    str r0, [r4, #4]
    ldr r0, lbl_08077d5c @ =0x80000060
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r0, lbl_08077d60 @ =0x08453d88
    ldr r4, lbl_08077d64 @ =0x06001800
    adds r1, r4, #0
    bl LZ77UncompVRAM
    ldr r0, lbl_08077d68 @ =0x08454350
    ldr r1, lbl_08077d6c @ =0x06000800
    bl LZ77UncompVRAM
    ldr r0, lbl_08077d70 @ =0x08454520
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r2, lbl_08077d74 @ =0x06001000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    adds r1, r4, #0
    bl DMATransfer
    ldr r0, lbl_08077d78 @ =0x0844f1bc
    ldr r1, lbl_08077d7c @ =0x06004000
    bl LZ77UncompVRAM
    ldr r0, lbl_08077d80 @ =0x0845c0f4
    ldr r1, lbl_08077d84 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r1, lbl_08077d88 @ =0x08760af0
    ldr r0, lbl_08077d8c @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    ldr r1, lbl_08077d90 @ =0x0600a800
    bl LZ77UncompVRAM
    ldr r1, lbl_08077d94 @ =0x04000008
    movs r0, #4
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_08077d98 @ =0x00000105
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    ldr r4, lbl_08077d9c @ =0x00000206
    adds r0, r4, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08077da0 @ =0x00000307
    adds r0, r2, #0
    strh r0, [r1]
    mov r3, sb
    ldr r1, [r3]
    movs r0, #0xf8
    lsls r0, r0, #5
    strh r0, [r1, #0xc]
    ldr r2, lbl_08077da4 @ =0x0400004a
    movs r0, #0x1f
    strb r0, [r2]
    subs r2, #1
    movs r0, #0x3f
    strb r0, [r2]
    adds r1, #0x1c
    ldr r0, lbl_08077da8 @ =0x084547a0
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldm r0!, {r2, r4}
    stm r1!, {r2, r4}
    ldr r0, lbl_08077dac @ =0x03000c75
    mov r3, r8
    strb r3, [r0]
    ldr r1, lbl_08077db0 @ =0x03000bf4
    ldr r0, lbl_08077db4 @ =0x03000bf6
    strh r6, [r0]
    strh r6, [r1]
    ldr r1, lbl_08077db8 @ =0x03000bf8
    ldr r0, lbl_08077dbc @ =0x03000bfa
    strh r6, [r0]
    strh r6, [r1]
    ldr r1, lbl_08077dc0 @ =0x03000c00
    ldr r0, lbl_08077dc4 @ =0x03000c02
    strh r6, [r0]
    strh r6, [r1]
    ldr r1, lbl_08077dc8 @ =0x03000bfc
    ldr r0, lbl_08077dcc @ =0x03000bfe
    strh r6, [r0]
    strh r6, [r1]
    mov r4, sb
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0x35
    strb r3, [r1]
    strb r3, [r0, #8]
    bl game_over_menu_update_text_gfx
    ldr r1, [r4]
    adds r1, #0x38
    ldr r0, lbl_08077dd0 @ =0x0840d028
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldr r0, [r0]
    str r0, [r1]
    movs r0, #0
    bl game_over_menu_samus_head
    ldr r0, lbl_08077dd4 @ =sub_08077f0c
    bl CallbackSetVBlank
    add sp, #8
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08077d28: .4byte sub_08077fe8
lbl_08077d2c: .4byte 0x040000d4
lbl_08077d30: .4byte 0x030016c4
lbl_08077d34: .4byte 0x8500018a
lbl_08077d38: .4byte 0x04000050
lbl_08077d3c: .4byte 0x08754bc4
lbl_08077d40: .4byte 0x030013ae
lbl_08077d44: .4byte 0x03001382
lbl_08077d48: .4byte 0x03005806
lbl_08077d4c: .4byte 0x03005807
lbl_08077d50: .4byte 0x0844f11c
lbl_08077d54: .4byte 0x08454938
lbl_08077d58: .4byte 0x05000200
lbl_08077d5c: .4byte 0x80000060
lbl_08077d60: .4byte 0x08453d88
lbl_08077d64: .4byte 0x06001800
lbl_08077d68: .4byte 0x08454350
lbl_08077d6c: .4byte 0x06000800
lbl_08077d70: .4byte 0x08454520
lbl_08077d74: .4byte 0x06001000
lbl_08077d78: .4byte 0x0844f1bc
lbl_08077d7c: .4byte 0x06004000
lbl_08077d80: .4byte 0x0845c0f4
lbl_08077d84: .4byte 0x06010000
lbl_08077d88: .4byte 0x08760af0
lbl_08077d8c: .4byte 0x03000020
lbl_08077d90: .4byte 0x0600a800
lbl_08077d94: .4byte 0x04000008
lbl_08077d98: .4byte 0x00000105
lbl_08077d9c: .4byte 0x00000206
lbl_08077da0: .4byte 0x00000307
lbl_08077da4: .4byte 0x0400004a
lbl_08077da8: .4byte 0x084547a0
lbl_08077dac: .4byte 0x03000c75
lbl_08077db0: .4byte 0x03000bf4
lbl_08077db4: .4byte 0x03000bf6
lbl_08077db8: .4byte 0x03000bf8
lbl_08077dbc: .4byte 0x03000bfa
lbl_08077dc0: .4byte 0x03000c00
lbl_08077dc4: .4byte 0x03000c02
lbl_08077dc8: .4byte 0x03000bfc
lbl_08077dcc: .4byte 0x03000bfe
lbl_08077dd0: .4byte 0x0840d028
lbl_08077dd4: .4byte sub_08077f0c

    thumb_func_start sub_08077dd8
sub_08077dd8: @ 0x08077dd8
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    sub sp, #4
    ldr r0, lbl_08077eb0 @ =sub_08077fe8
    bl CallbackSetVBlank
    movs r4, #0
    str r4, [sp]
    ldr r1, lbl_08077eb4 @ =0x040000d4
    mov r0, sp
    str r0, [r1]
    ldr r0, lbl_08077eb8 @ =0x030016c4
    str r0, [r1, #4]
    ldr r0, lbl_08077ebc @ =0x8500018a
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0x84
    ldr r6, lbl_08077ec0 @ =0x08754bc4
    ldr r2, [r6]
    movs r5, #0
    movs r0, #0xbf
    strh r0, [r2, #0xe]
    strh r0, [r1]
    adds r1, #4
    ldr r3, lbl_08077ec4 @ =0x030013ae
    mov r8, r3
    movs r0, #0x10
    strh r0, [r3]
    strh r0, [r1]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r4, [r2, #0xc]
    strh r4, [r0]
    ldr r0, lbl_08077ec8 @ =0x03001382
    strb r5, [r0]
    bl ClearGFXRAM
    bl ResetFreeOAM
    ldr r1, lbl_08077ecc @ =0x03005806
    ldr r0, lbl_08077ed0 @ =0x03005807
    strb r5, [r0]
    strb r5, [r1]
    ldr r0, lbl_08077ed4 @ =0x0194f780
    bl sub_080027f8
    bl StopAllMusicsAndSounds
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r2, lbl_08077ed8 @ =0x00007fff
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08077edc @ =0x04000008
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    ldr r0, lbl_08077ee0 @ =0x03000c75
    strb r5, [r0]
    ldr r1, lbl_08077ee4 @ =0x03000bf4
    ldr r0, lbl_08077ee8 @ =0x03000bf6
    strh r4, [r0]
    strh r4, [r1]
    ldr r1, lbl_08077eec @ =0x03000bf8
    ldr r0, lbl_08077ef0 @ =0x03000bfa
    strh r4, [r0]
    strh r4, [r1]
    ldr r1, lbl_08077ef4 @ =0x03000bfc
    ldr r0, lbl_08077ef8 @ =0x03000bfe
    strh r4, [r0]
    strh r4, [r1]
    ldr r1, lbl_08077efc @ =0x03000c00
    ldr r0, lbl_08077f00 @ =0x03000c02
    strh r4, [r0]
    strh r4, [r1]
    ldr r1, [r6]
    movs r0, #0xff
    strh r0, [r1, #0xe]
    mov r3, r8
    strh r4, [r3]
    adds r0, r1, #0
    adds r0, #0x35
    strb r5, [r0]
    strb r5, [r1, #8]
    bl game_over_menu_update_text_gfx
    ldr r1, [r6]
    adds r1, #0x38
    ldr r0, lbl_08077f04 @ =0x0840d028
    ldm r0!, {r2, r3, r4}
    stm r1!, {r2, r3, r4}
    ldr r0, [r0]
    str r0, [r1]
    ldr r0, lbl_08077f08 @ =sub_08077f0c
    bl CallbackSetVBlank
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08077eb0: .4byte sub_08077fe8
lbl_08077eb4: .4byte 0x040000d4
lbl_08077eb8: .4byte 0x030016c4
lbl_08077ebc: .4byte 0x8500018a
lbl_08077ec0: .4byte 0x08754bc4
lbl_08077ec4: .4byte 0x030013ae
lbl_08077ec8: .4byte 0x03001382
lbl_08077ecc: .4byte 0x03005806
lbl_08077ed0: .4byte 0x03005807
lbl_08077ed4: .4byte 0x0194f780
lbl_08077ed8: .4byte 0x00007fff
lbl_08077edc: .4byte 0x04000008
lbl_08077ee0: .4byte 0x03000c75
lbl_08077ee4: .4byte 0x03000bf4
lbl_08077ee8: .4byte 0x03000bf6
lbl_08077eec: .4byte 0x03000bf8
lbl_08077ef0: .4byte 0x03000bfa
lbl_08077ef4: .4byte 0x03000bfc
lbl_08077ef8: .4byte 0x03000bfe
lbl_08077efc: .4byte 0x03000c00
lbl_08077f00: .4byte 0x03000c02
lbl_08077f04: .4byte 0x0840d028
lbl_08077f08: .4byte sub_08077f0c

    thumb_func_start sub_08077f0c
sub_08077f0c: @ 0x08077f0c
    ldr r1, lbl_08077fa4 @ =0x040000d4
    ldr r0, lbl_08077fa8 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08077fac @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xc4
    ldr r0, lbl_08077fb0 @ =0x03000bf4
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08077fb4 @ =0x03000bf6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08077fb8 @ =0x03000bf8
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08077fbc @ =0x03000bfa
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08077fc0 @ =0x03000bfc
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08077fc4 @ =0x03000bfe
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08077fc8 @ =0x03000c00
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08077fcc @ =0x03000c02
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    subs r1, #0x1e
    ldr r0, lbl_08077fd0 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0xc]
    strh r0, [r1]
    adds r1, #0x54
    ldr r0, lbl_08077fd4 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r3, lbl_08077fd8 @ =0x04000052
    ldr r0, lbl_08077fdc @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_08077fe0 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r3]
    ldr r1, lbl_08077fe4 @ =0x04000050
    ldrh r0, [r2, #0xe]
    strh r0, [r1]
    subs r1, #0xe
    ldrh r0, [r2, #0x18]
    strh r0, [r1]
    adds r1, #4
    ldrh r0, [r2, #0x1a]
    strh r0, [r1]
    bx lr
    .align 2, 0
lbl_08077fa4: .4byte 0x040000d4
lbl_08077fa8: .4byte 0x03000e7c
lbl_08077fac: .4byte 0x84000100
lbl_08077fb0: .4byte 0x03000bf4
lbl_08077fb4: .4byte 0x03000bf6
lbl_08077fb8: .4byte 0x03000bf8
lbl_08077fbc: .4byte 0x03000bfa
lbl_08077fc0: .4byte 0x03000bfc
lbl_08077fc4: .4byte 0x03000bfe
lbl_08077fc8: .4byte 0x03000c00
lbl_08077fcc: .4byte 0x03000c02
lbl_08077fd0: .4byte 0x08754bc4
lbl_08077fd4: .4byte 0x030013ae
lbl_08077fd8: .4byte 0x04000052
lbl_08077fdc: .4byte 0x030013b2
lbl_08077fe0: .4byte 0x030013b0
lbl_08077fe4: .4byte 0x04000050

    thumb_func_start sub_08077fe8
sub_08077fe8: @ 0x08077fe8
    sub sp, #4
    mov r1, sp
    movs r0, #0
    strb r0, [r1]
    add sp, #4
    bx lr

    thumb_func_start game_over_menu_letters_anim
game_over_menu_letters_anim: @ 0x08077ff4
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r0, lbl_08078048 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r3, [r2, #0x1e]
    adds r6, r0, #0
    cmp r3, #0
    bne lbl_08078006
    b lbl_08078164
lbl_08078006:
    movs r0, #0x80
    ands r0, r3
    cmp r0, #0
    beq lbl_08078050
    movs r1, #0x7f
    ands r1, r3
    adds r0, r2, #0
    adds r0, #0x20
    ldrb r2, [r0]
    cmp r1, r2
    beq lbl_08078040
    movs r2, #0
    strb r1, [r0]
    ldr r0, [r6]
    movs r1, #0
    strh r2, [r0, #0x1c]
    strb r1, [r0, #0x1f]
    ldr r0, [r6]
    adds r0, #0x2f
    strb r1, [r0]
    ldr r1, [r6]
    ldr r2, lbl_0807804c @ =0x08760b0c
    adds r0, r1, #0
    adds r0, #0x20
    ldrb r0, [r0]
    adds r0, r0, r2
    ldrb r0, [r0]
    adds r1, #0x2e
    strb r0, [r1]
lbl_08078040:
    ldr r1, [r6]
    movs r0, #1
    strb r0, [r1, #0x1e]
    b lbl_08078164
    .align 2, 0
lbl_08078048: .4byte 0x08754bc4
lbl_0807804c: .4byte 0x08760b0c
lbl_08078050:
    ldrh r0, [r2, #0x1c]
    adds r0, #1
    movs r3, #0
    strh r0, [r2, #0x1c]
    adds r1, r2, #0
    adds r1, #0x2e
    ldrb r1, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r1, r0
    bls lbl_08078068
    b lbl_08078164
lbl_08078068:
    ldr r4, lbl_0807807c @ =0x0844f124
    adds r0, r2, #0
    adds r0, #0x20
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08078080
    cmp r0, #1
    beq lbl_080780b8
    b lbl_0807814e
    .align 2, 0
lbl_0807807c: .4byte 0x0844f124
lbl_08078080:
    ldrb r0, [r2, #0x1f]
    adds r0, #1
    strb r0, [r2, #0x1f]
    ldr r1, [r6]
    ldrb r0, [r1, #0x1f]
    cmp r0, #5
    bls lbl_08078090
    strb r3, [r1, #0x1f]
lbl_08078090:
    ldr r0, [r6]
    ldrb r2, [r0, #0x1f]
    movs r3, #0
    adds r5, r6, #0
lbl_08078098:
    cmp r2, #5
    ble lbl_0807809e
    movs r2, #0
lbl_0807809e:
    ldr r1, [r5]
    lsls r0, r3, #1
    adds r1, #0x22
    adds r1, r1, r0
    lsls r0, r2, #1
    adds r0, r0, r4
    ldrh r0, [r0]
    strh r0, [r1]
    adds r3, #1
    adds r2, #1
    cmp r3, #5
    ble lbl_08078098
    b lbl_0807814e
lbl_080780b8:
    ldrb r0, [r2, #0x1f]
    adds r0, #1
    strb r0, [r2, #0x1f]
    ldr r1, [r6]
    ldrb r0, [r1, #0x1f]
    cmp r0, #8
    bls lbl_080780c8
    strb r3, [r1, #0x1f]
lbl_080780c8:
    ldr r1, lbl_08078110 @ =0x08760b0f
    ldr r0, [r6]
    ldrb r0, [r0, #0x1f]
    adds r0, r0, r1
    movs r2, #0
    ldrsb r2, [r0, r2]
    cmp r2, #0
    blt lbl_08078118
    movs r3, #0
    cmp r3, r2
    bge lbl_080780f2
    adds r5, r6, #0
lbl_080780e0:
    ldr r0, [r5]
    lsls r1, r3, #1
    adds r0, #0x22
    adds r0, r0, r1
    ldrh r1, [r4]
    strh r1, [r0]
    adds r3, #1
    cmp r3, r2
    blt lbl_080780e0
lbl_080780f2:
    cmp r3, #5
    bgt lbl_0807814e
    ldr r5, lbl_08078114 @ =0x08754bc4
    adds r2, r4, #0
lbl_080780fa:
    ldr r0, [r5]
    lsls r1, r3, #1
    adds r0, #0x22
    adds r0, r0, r1
    ldrh r1, [r2]
    strh r1, [r0]
    adds r3, #1
    adds r2, #2
    cmp r3, #5
    ble lbl_080780fa
    b lbl_0807814e
    .align 2, 0
lbl_08078110: .4byte 0x08760b0f
lbl_08078114: .4byte 0x08754bc4
lbl_08078118:
    movs r3, #5
    adds r5, r6, #0
lbl_0807811c:
    ldr r0, [r5]
    lsls r1, r3, #1
    adds r0, #0x22
    adds r0, r0, r1
    ldrh r1, [r4, #0xa]
    strh r1, [r0]
    adds r2, #1
    subs r3, #1
    cmp r2, #0
    blt lbl_0807811c
    cmp r3, #0
    blt lbl_0807814e
    ldr r5, lbl_0807816c @ =0x08754bc4
    adds r2, r4, #0
    adds r2, #8
lbl_0807813a:
    ldr r0, [r5]
    lsls r1, r3, #1
    adds r0, #0x22
    adds r0, r0, r1
    ldrh r1, [r2]
    strh r1, [r0]
    subs r3, #1
    subs r2, #2
    cmp r3, #0
    bge lbl_0807813a
lbl_0807814e:
    ldr r1, [r6]
    movs r0, #0
    strh r0, [r1, #0x1c]
    adds r1, #0x22
    ldr r2, lbl_08078170 @ =0x05000008
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0xc
    bl DMATransfer
lbl_08078164:
    add sp, #4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807816c: .4byte 0x08754bc4
lbl_08078170: .4byte 0x05000008

    thumb_func_start game_over_menu_samus_head
game_over_menu_samus_head: @ 0x08078174
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r5, lbl_080781c4 @ =0x08754bc4
    ldr r3, [r5]
    adds r3, #0x38
    ldr r4, lbl_080781c8 @ =0x084547c6
    ldr r1, lbl_080781cc @ =0x03001530
    ldrb r2, [r1, #0x12]
    lsls r1, r2, #1
    adds r1, r1, r2
    adds r0, r0, r1
    adds r0, r0, r4
    ldrb r1, [r0]
    adds r0, r3, #0
    bl sub_08068128
    ldr r5, [r5]
    ldr r1, lbl_080781d0 @ =0x084547b4
    ldr r0, lbl_080781d4 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    movs r2, #0
    strh r0, [r5, #0x3a]
    ldr r1, lbl_080781d8 @ =0x084547c2
    ldrb r0, [r5, #8]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r5, #0x38]
    ldrb r0, [r5, #8]
    cmp r0, #0
    beq lbl_080781e0
    ldr r0, lbl_080781dc @ =0x00007e92
    b lbl_080781e2
    .align 2, 0
lbl_080781c4: .4byte 0x08754bc4
lbl_080781c8: .4byte 0x084547c6
lbl_080781cc: .4byte 0x03001530
lbl_080781d0: .4byte 0x084547b4
lbl_080781d4: .4byte 0x03000020
lbl_080781d8: .4byte 0x084547c2
lbl_080781dc: .4byte 0x00007e92
lbl_080781e0:
    ldr r0, lbl_080781f4 @ =0x0000667a
lbl_080781e2:
    strh r0, [r5, #0x1a]
    ldr r0, lbl_080781f8 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0xf0
    strh r0, [r1, #0x18]
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080781f4: .4byte 0x0000667a
lbl_080781f8: .4byte 0x08754bc4

    thumb_func_start game_over_menu_process_oam
game_over_menu_process_oam: @ 0x080781fc
    push {lr}
    ldr r1, lbl_0807821c @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    ldr r0, lbl_08078220 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x38
    ldr r2, lbl_08078224 @ =0x084547d0
    movs r0, #1
    bl sub_08069a10
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807821c: .4byte 0x03001382
lbl_08078220: .4byte 0x08754bc4
lbl_08078224: .4byte 0x084547d0

    thumb_func_start sub_08078228
sub_08078228: @ 0x08078228
    push {lr}
    ldr r0, lbl_08078248 @ =0x03000004
    ldrb r1, [r0]
    cmp r1, #1
    bhi lbl_08078242
    movs r0, #0x80
    lsls r0, r0, #0x11
    cmp r1, #0
    beq lbl_0807823e
    movs r0, #0x80
    lsls r0, r0, #0x12
lbl_0807823e:
    bl sub_080027f8
lbl_08078242:
    pop {r0}
    bx r0
    .align 2, 0
lbl_08078248: .4byte 0x03000004

    thumb_func_start file_select_menu_process_oam
file_select_menu_process_oam: @ 0x0807824c
    push {lr}
    ldr r0, lbl_08078278 @ =0x03001382
    movs r1, #0
    strb r1, [r0]
    ldr r0, lbl_0807827c @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #0
    blt lbl_08078266
    cmp r0, #8
    ble lbl_08078266
    cmp r0, #0xb
    ble lbl_08078288
lbl_08078266:
    ldr r0, lbl_08078280 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x74
    ldr r2, lbl_08078284 @ =0x0845f1dc
    movs r0, #0xf
    bl sub_080696ac
    b lbl_0807829a
    .align 2, 0
lbl_08078278: .4byte 0x03001382
lbl_0807827c: .4byte 0x03000c72
lbl_08078280: .4byte 0x08754bc4
lbl_08078284: .4byte 0x0845f1dc
lbl_08078288:
    ldr r0, lbl_080782a4 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0xda
    lsls r0, r0, #1
    adds r1, r1, r0
    ldr r2, lbl_080782a8 @ =0x0845f31c
    movs r0, #0xb
    bl sub_080696ac
lbl_0807829a:
    bl ResetFreeOAM
    pop {r0}
    bx r0
    .align 2, 0
lbl_080782a4: .4byte 0x08754bc4
lbl_080782a8: .4byte 0x0845f31c

    thumb_func_start sub_080782ac
sub_080782ac: @ 0x080782ac
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    ldr r0, lbl_080784e0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x74
    mov sb, r0
    ldr r4, lbl_080784e4 @ =0x08760b40
    ldr r0, lbl_080784e8 @ =0x0845f1bc
    mov r8, r0
    mov r2, sb
    movs r3, #0xe
lbl_080782c6:
    adds r0, r2, #0
    mov r1, r8
    ldm r1!, {r5, r6, r7}
    stm r0!, {r5, r6, r7}
    ldr r1, [r1]
    str r1, [r0]
    adds r2, #0x10
    subs r3, #1
    cmp r3, #0
    bge lbl_080782c6
    ldrh r0, [r4]
    mov r1, sb
    adds r1, #0x82
    strh r0, [r1]
    ldrh r1, [r4, #2]
    mov r0, sb
    adds r0, #0x80
    strh r1, [r0]
    ldrb r1, [r4, #4]
    bl sub_08068128
    mov r0, sb
    adds r0, #0x90
    ldrh r1, [r4, #8]
    strh r1, [r0, #2]
    ldrh r1, [r4, #0xa]
    strh r1, [r0]
    ldrb r1, [r4, #0xc]
    bl sub_08068128
    mov r0, sb
    adds r0, #0xa0
    ldrh r1, [r4, #0x10]
    strh r1, [r0, #2]
    ldrh r1, [r4, #0x12]
    strh r1, [r0]
    ldrb r1, [r4, #0x14]
    bl sub_08068128
    ldr r6, lbl_080784e0 @ =0x08754bc4
    ldr r1, [r6]
    movs r0, #0x98
    lsls r0, r0, #1
    adds r1, r1, r0
    ldrb r2, [r1]
    movs r3, #0x10
    rsbs r3, r3, #0
    adds r0, r3, #0
    ands r0, r2
    movs r5, #1
    orrs r0, r5
    strb r0, [r1]
    ldr r0, [r6]
    ldr r1, lbl_080784ec @ =0x0000012f
    adds r2, r0, r1
    ldrb r1, [r2]
    movs r4, #4
    rsbs r4, r4, #0
    adds r0, r4, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    ldr r1, [r6]
    adds r1, #0xc0
    ldrb r2, [r1]
    adds r0, r3, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r6]
    adds r1, #0xbf
    ldrb r2, [r1]
    adds r0, r4, #0
    ands r0, r2
    orrs r0, r5
    strb r0, [r1]
    ldr r1, [r6]
    adds r1, #0x80
    ldrb r2, [r1]
    adds r0, r3, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r6]
    adds r1, #0x90
    ldrb r2, [r1]
    adds r0, r3, #0
    ands r0, r2
    strb r0, [r1]
    ldr r0, [r6]
    adds r0, #0xa0
    ldrb r1, [r0]
    ands r3, r1
    strb r3, [r0]
    ldr r1, [r6]
    adds r1, #0x7f
    ldrb r2, [r1]
    adds r0, r4, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r6]
    adds r1, #0x8f
    ldrb r2, [r1]
    adds r0, r4, #0
    ands r0, r2
    strb r0, [r1]
    ldr r0, [r6]
    adds r0, #0x9f
    ldrb r1, [r0]
    ands r4, r1
    strb r4, [r0]
    ldr r1, [r6]
    ldr r7, lbl_080784f0 @ =0x0000013f
    adds r1, r1, r7
    ldrb r0, [r1]
    movs r2, #3
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r6]
    ldr r4, lbl_080784f4 @ =0x0000014f
    adds r1, r1, r4
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r6]
    ldr r5, lbl_080784f8 @ =0x0000015f
    adds r1, r1, r5
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r6]
    movs r2, #0x9f
    lsls r2, r2, #1
    adds r0, r0, r2
    movs r1, #0x21
    strb r1, [r0]
    ldr r0, [r6]
    movs r3, #0xa7
    lsls r3, r3, #1
    adds r0, r0, r3
    strb r1, [r0]
    ldr r0, [r6]
    adds r2, #0x20
    adds r0, r0, r2
    strb r1, [r0]
    ldr r3, lbl_080784fc @ =0x03000c24
    movs r0, #0x11
    ldrsb r0, [r3, r0]
    cmp r0, #0
    beq lbl_08078402
    ldr r0, [r6]
    adds r1, r7, #0
    adds r2, r0, r1
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
lbl_08078402:
    adds r0, r3, #0
    adds r0, #0x29
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08078420
    ldr r2, [r6]
    adds r2, r2, r4
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
lbl_08078420:
    adds r0, r3, #0
    adds r0, #0x41
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807843e
    ldr r2, [r6]
    adds r2, r2, r5
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
lbl_0807843e:
    ldrb r0, [r3, #1]
    cmp r0, #0
    beq lbl_08078450
    ldr r0, [r6]
    adds r0, r0, r7
    ldrb r1, [r0]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0]
lbl_08078450:
    ldrb r0, [r3, #0x19]
    cmp r0, #0
    beq lbl_08078462
    ldr r0, [r6]
    adds r0, r0, r4
    ldrb r1, [r0]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0]
lbl_08078462:
    adds r0, r3, #0
    adds r0, #0x31
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08078478
    ldr r0, [r6]
    adds r0, r0, r5
    ldrb r1, [r0]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0]
lbl_08078478:
    ldr r2, [r6]
    movs r3, #0x9b
    lsls r3, r3, #1
    adds r1, r2, r3
    movs r0, #0xe0
    lsls r0, r0, #2
    strh r0, [r1]
    movs r5, #0xa3
    lsls r5, r5, #1
    adds r1, r2, r5
    strh r0, [r1]
    movs r6, #0xab
    lsls r6, r6, #1
    adds r1, r2, r6
    strh r0, [r1]
    movs r7, #0x9a
    lsls r7, r7, #1
    adds r1, r2, r7
    movs r0, #0x80
    strh r0, [r1]
    adds r0, #0xc4
    adds r1, r2, r0
    movs r0, #0xe0
    strh r0, [r1]
    adds r3, #0x1e
    adds r1, r2, r3
    adds r0, #0x60
    strh r0, [r1]
    mov r4, r8
    adds r5, #0x6e
    adds r2, r2, r5
    movs r3, #0xa
lbl_080784b8:
    adds r0, r2, #0
    adds r1, r4, #0
    ldm r1!, {r5, r6, r7}
    stm r0!, {r5, r6, r7}
    ldr r1, [r1]
    str r1, [r0]
    adds r2, #0x10
    subs r3, #1
    cmp r3, #0
    bge lbl_080784b8
    ldr r0, lbl_08078500 @ =0x0000ffff
    bl sub_08078ca0
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080784e0: .4byte 0x08754bc4
lbl_080784e4: .4byte 0x08760b40
lbl_080784e8: .4byte 0x0845f1bc
lbl_080784ec: .4byte 0x0000012f
lbl_080784f0: .4byte 0x0000013f
lbl_080784f4: .4byte 0x0000014f
lbl_080784f8: .4byte 0x0000015f
lbl_080784fc: .4byte 0x03000c24
lbl_08078500: .4byte 0x0000ffff

    thumb_func_start sub_08078504
sub_08078504: @ 0x08078504
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r5, r1, #0x18
    cmp r5, #2
    bhi lbl_08078524
    ldr r1, lbl_08078520 @ =0x03000c24
    lsls r0, r5, #1
    adds r0, r0, r5
    lsls r0, r0, #3
    adds r0, r0, r1
    ldrb r3, [r0, #0xc]
    b lbl_08078526
    .align 2, 0
lbl_08078520: .4byte 0x03000c24
lbl_08078524:
    movs r3, #0
lbl_08078526:
    ldr r0, lbl_08078544 @ =0x08760b40
    lsls r2, r5, #3
    adds r1, r3, r2
    adds r0, #5
    adds r1, r1, r0
    ldrb r3, [r1]
    adds r6, r2, #0
    cmp r4, #8
    bls lbl_0807853a
    b lbl_08078746
lbl_0807853a:
    lsls r0, r4, #2
    ldr r1, lbl_08078548 @ =lbl_0807854c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08078544: .4byte 0x08760b40
lbl_08078548: .4byte lbl_0807854c
lbl_0807854c: @ jump table
    .4byte lbl_08078570 @ case 0
    .4byte lbl_08078572 @ case 1
    .4byte lbl_080785f8 @ case 2
    .4byte lbl_08078746 @ case 3
    .4byte lbl_08078746 @ case 4
    .4byte lbl_08078608 @ case 5
    .4byte lbl_080786a8 @ case 6
    .4byte lbl_08078724 @ case 7
    .4byte lbl_0807873c @ case 8
lbl_08078570:
    adds r3, #1
lbl_08078572:
    ldr r4, lbl_080785b4 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xe4
    lsls r1, r3, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    ldr r2, [r4]
    ldr r4, lbl_080785b8 @ =0x08760b40
    adds r1, r6, r4
    ldrh r0, [r1]
    adds r3, r2, #0
    adds r3, #0xe6
    strh r0, [r3]
    ldrh r1, [r1, #2]
    adds r0, r2, #0
    adds r0, #0xe4
    strh r1, [r0]
    movs r3, #0x10
    cmp r5, #0
    beq lbl_0807859e
    ldrb r3, [r4, #4]
lbl_0807859e:
    adds r0, r2, #0
    adds r0, #0xf4
    lsls r1, r3, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    cmp r5, #1
    beq lbl_080785bc
    ldrb r3, [r4, #0xc]
    b lbl_080785be
    .align 2, 0
lbl_080785b4: .4byte 0x08754bc4
lbl_080785b8: .4byte 0x08760b40
lbl_080785bc:
    movs r3, #0x11
lbl_080785be:
    ldr r0, lbl_080785dc @ =0x08754bc4
    ldr r0, [r0]
    movs r1, #0x82
    lsls r1, r1, #1
    adds r0, r0, r1
    lsls r1, r3, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    cmp r5, #2
    beq lbl_080785e4
    ldr r0, lbl_080785e0 @ =0x08760b40
    ldrb r3, [r0, #0x14]
    b lbl_080785e6
    .align 2, 0
lbl_080785dc: .4byte 0x08754bc4
lbl_080785e0: .4byte 0x08760b40
lbl_080785e4:
    movs r3, #0x12
lbl_080785e6:
    ldr r0, lbl_080785f4 @ =0x08754bc4
    ldr r0, [r0]
    movs r4, #0x8a
    lsls r4, r4, #1
    adds r0, r0, r4
    lsls r1, r3, #0x18
    b lbl_0807872e
    .align 2, 0
lbl_080785f4: .4byte 0x08754bc4
lbl_080785f8:
    ldr r0, lbl_08078604 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xe4
    adds r1, r3, #2
    b lbl_0807872c
    .align 2, 0
lbl_08078604: .4byte 0x08754bc4
lbl_08078608:
    ldr r4, lbl_08078690 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xe4
    adds r1, r3, #2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    cmp r5, #0
    beq lbl_0807863e
    ldr r2, [r4]
    adds r2, #0xff
    ldrb r3, [r2]
    movs r1, #0xd
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r3
    movs r3, #4
    orrs r0, r3
    strb r0, [r2]
    ldr r0, [r4]
    ldr r6, lbl_08078694 @ =0x0000013f
    adds r2, r0, r6
    ldrb r0, [r2]
    ands r1, r0
    orrs r1, r3
    strb r1, [r2]
lbl_0807863e:
    cmp r5, #1
    beq lbl_08078666
    ldr r0, [r4]
    ldr r1, lbl_08078698 @ =0x0000010f
    adds r3, r0, r1
    ldrb r2, [r3]
    movs r1, #0xd
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r2
    movs r2, #4
    orrs r0, r2
    strb r0, [r3]
    ldr r0, [r4]
    ldr r6, lbl_0807869c @ =0x0000014f
    adds r3, r0, r6
    ldrb r0, [r3]
    ands r1, r0
    orrs r1, r2
    strb r1, [r3]
lbl_08078666:
    cmp r5, #2
    beq lbl_08078746
    ldr r0, [r4]
    ldr r1, lbl_080786a0 @ =0x0000011f
    adds r3, r0, r1
    ldrb r2, [r3]
    movs r1, #0xd
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r2
    movs r2, #4
    orrs r0, r2
    strb r0, [r3]
    ldr r0, [r4]
    ldr r4, lbl_080786a4 @ =0x0000015f
    adds r3, r0, r4
    ldrb r0, [r3]
    ands r1, r0
    orrs r1, r2
    strb r1, [r3]
    b lbl_08078746
    .align 2, 0
lbl_08078690: .4byte 0x08754bc4
lbl_08078694: .4byte 0x0000013f
lbl_08078698: .4byte 0x0000010f
lbl_0807869c: .4byte 0x0000014f
lbl_080786a0: .4byte 0x0000011f
lbl_080786a4: .4byte 0x0000015f
lbl_080786a8:
    ldr r4, lbl_08078710 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xe4
    adds r3, #1
    lsls r1, r3, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    ldr r1, [r4]
    adds r1, #0xff
    ldrb r3, [r1]
    movs r2, #0xd
    rsbs r2, r2, #0
    adds r0, r2, #0
    ands r0, r3
    strb r0, [r1]
    ldr r0, [r4]
    ldr r6, lbl_08078714 @ =0x0000010f
    adds r3, r0, r6
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r4]
    ldr r1, lbl_08078718 @ =0x0000011f
    adds r3, r0, r1
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r4]
    adds r6, #0x30
    adds r3, r0, r6
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r4]
    ldr r1, lbl_0807871c @ =0x0000014f
    adds r3, r0, r1
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r4]
    ldr r3, lbl_08078720 @ =0x0000015f
    adds r1, r0, r3
    ldrb r0, [r1]
    ands r2, r0
    strb r2, [r1]
    b lbl_08078746
    .align 2, 0
lbl_08078710: .4byte 0x08754bc4
lbl_08078714: .4byte 0x0000010f
lbl_08078718: .4byte 0x0000011f
lbl_0807871c: .4byte 0x0000014f
lbl_08078720: .4byte 0x0000015f
lbl_08078724:
    ldr r0, lbl_08078738 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xe4
    adds r1, r3, #5
lbl_0807872c:
    lsls r1, r1, #0x18
lbl_0807872e:
    lsrs r1, r1, #0x18
    bl sub_08068128
    b lbl_08078746
    .align 2, 0
lbl_08078738: .4byte 0x08754bc4
lbl_0807873c:
    ldr r0, lbl_0807874c @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r3, #4
    adds r0, #0xee
    strb r1, [r0]
lbl_08078746:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807874c: .4byte 0x08754bc4

    thumb_func_start sub_08078750
sub_08078750: @ 0x08078750
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r5, r1, #0x18
    cmp r5, #2
    bhi lbl_08078770
    ldr r1, lbl_0807876c @ =0x03000c24
    lsls r0, r5, #1
    adds r0, r0, r5
    lsls r0, r0, #3
    adds r0, r0, r1
    ldrb r1, [r0, #0xc]
    b lbl_08078772
    .align 2, 0
lbl_0807876c: .4byte 0x03000c24
lbl_08078770:
    movs r1, #0
lbl_08078772:
    ldr r6, lbl_08078790 @ =0x08760b40
    lsls r0, r5, #3
    adds r1, r1, r0
    adds r2, r6, #5
    adds r1, r1, r2
    ldrb r1, [r1]
    adds r7, r0, #0
    cmp r3, #1
    beq lbl_080787a2
    cmp r3, #1
    bgt lbl_08078794
    cmp r3, #0
    beq lbl_080787a0
    b lbl_080788c8
    .align 2, 0
lbl_08078790: .4byte 0x08760b40
lbl_08078794:
    cmp r3, #2
    bne lbl_0807879a
    b lbl_080788b8
lbl_0807879a:
    cmp r3, #3
    beq lbl_08078874
    b lbl_080788c8
lbl_080787a0:
    adds r1, #1
lbl_080787a2:
    ldr r4, lbl_08078868 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xd4
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    ldr r4, [r4]
    ldr r3, lbl_0807886c @ =0x08760b40
    adds r1, r7, r3
    ldrh r0, [r1]
    adds r2, r4, #0
    adds r2, #0xd6
    strh r0, [r2]
    ldrh r1, [r1, #2]
    adds r0, r4, #0
    adds r0, #0xd4
    strh r1, [r0]
    adds r2, #0xa
    ldrb r1, [r2]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    ldrb r1, [r3, #4]
    cmp r5, #0
    bne lbl_080787ee
    ldr r2, lbl_08078870 @ =0x03000c24
    ldrb r0, [r2]
    cmp r0, #0
    bne lbl_080787ec
    movs r0, #0x12
    ldrsb r0, [r2, r0]
    cmp r0, #0
    beq lbl_080787ee
lbl_080787ec:
    movs r1, #0x10
lbl_080787ee:
    ldr r0, lbl_08078868 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xf4
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    ldr r0, lbl_0807886c @ =0x08760b40
    ldrb r1, [r0, #0xc]
    cmp r5, #1
    bne lbl_0807881c
    ldr r2, lbl_08078870 @ =0x03000c24
    ldrb r0, [r2, #0x18]
    cmp r0, #0
    bne lbl_0807881a
    adds r0, r2, #0
    adds r0, #0x2a
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807881c
lbl_0807881a:
    movs r1, #0x11
lbl_0807881c:
    ldr r0, lbl_08078868 @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0x82
    lsls r2, r2, #1
    adds r0, r0, r2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    ldr r0, lbl_0807886c @ =0x08760b40
    ldrb r1, [r0, #0x14]
    cmp r5, #2
    bne lbl_08078852
    ldr r2, lbl_08078870 @ =0x03000c24
    adds r0, r2, #0
    adds r0, #0x30
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08078850
    adds r0, r2, #0
    adds r0, #0x42
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08078852
lbl_08078850:
    movs r1, #0x12
lbl_08078852:
    ldr r0, lbl_08078868 @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0x8a
    lsls r2, r2, #1
    adds r0, r0, r2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    b lbl_080788c8
    .align 2, 0
lbl_08078868: .4byte 0x08754bc4
lbl_0807886c: .4byte 0x08760b40
lbl_08078870: .4byte 0x03000c24
lbl_08078874:
    ldr r4, lbl_080788b4 @ =0x08754bc4
    ldr r1, [r4]
    adds r1, #0xdf
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    ldr r0, [r4]
    adds r0, #0xde
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0xf4
    ldrb r1, [r6, #4]
    bl sub_08068128
    ldr r0, [r4]
    movs r1, #0x82
    lsls r1, r1, #1
    adds r0, r0, r1
    ldrb r1, [r6, #0xc]
    bl sub_08068128
    ldr r0, [r4]
    movs r2, #0x8a
    lsls r2, r2, #1
    adds r0, r0, r2
    ldrb r1, [r6, #0x14]
    bl sub_08068128
    b lbl_080788c8
    .align 2, 0
lbl_080788b4: .4byte 0x08754bc4
lbl_080788b8:
    ldr r0, lbl_080788d0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xd4
    adds r1, #2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
lbl_080788c8:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080788d0: .4byte 0x08754bc4

    thumb_func_start sub_080788d4
sub_080788d4: @ 0x080788d4
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    adds r6, r3, #0
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldr r5, lbl_0807891c @ =0x08754bc4
    ldr r2, [r5]
    ldr r7, lbl_08078920 @ =0x08760b40
    movs r0, #0x26
    adds r0, r0, r2
    mov ip, r0
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrh r0, [r0]
    adds r1, r2, #0
    adds r1, #0xc6
    strh r0, [r1]
    mov r1, ip
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrh r1, [r0, #2]
    adds r0, r2, #0
    adds r0, #0xc4
    strh r1, [r0]
    cmp r3, #2
    bne lbl_08078910
    b lbl_08078a0c
lbl_08078910:
    cmp r3, #2
    ble lbl_08078924
    cmp r3, #3
    beq lbl_080789d0
    b lbl_08078a0c
    .align 2, 0
lbl_0807891c: .4byte 0x08754bc4
lbl_08078920: .4byte 0x08760b40
lbl_08078924:
    cmp r6, #0
    blt lbl_08078a0c
    adds r2, #0xd0
    ldrb r1, [r2]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    ldr r3, lbl_08078984 @ =0x08760b70
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x26
    ldrb r2, [r1]
    lsls r1, r2, #1
    adds r1, r1, r2
    adds r1, r4, r1
    adds r1, r1, r3
    adds r0, #0xc4
    ldrb r1, [r1]
    bl sub_08068128
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x26
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807896e
    movs r1, #0x13
    cmp r4, #0
    beq lbl_08078966
    ldrb r1, [r7, #4]
lbl_08078966:
    adds r0, r2, #0
    adds r0, #0xf4
    bl sub_08068128
lbl_0807896e:
    ldr r0, lbl_08078988 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x26
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_080789a0
    cmp r4, #1
    beq lbl_08078990
    ldr r0, lbl_0807898c @ =0x08760b40
    ldrb r1, [r0, #0xc]
    b lbl_08078992
    .align 2, 0
lbl_08078984: .4byte 0x08760b70
lbl_08078988: .4byte 0x08754bc4
lbl_0807898c: .4byte 0x08760b40
lbl_08078990:
    movs r1, #0x14
lbl_08078992:
    ldr r0, lbl_080789b8 @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0x82
    lsls r2, r2, #1
    adds r0, r0, r2
    bl sub_08068128
lbl_080789a0:
    ldr r0, lbl_080789b8 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x26
    ldrb r1, [r1]
    adds r2, r0, #0
    cmp r1, #2
    beq lbl_08078a0c
    cmp r4, #2
    beq lbl_080789c0
    ldr r0, lbl_080789bc @ =0x08760b40
    ldrb r1, [r0, #0x14]
    b lbl_080789c2
    .align 2, 0
lbl_080789b8: .4byte 0x08754bc4
lbl_080789bc: .4byte 0x08760b40
lbl_080789c0:
    movs r1, #0x15
lbl_080789c2:
    ldr r0, [r2]
    movs r2, #0x8a
    lsls r2, r2, #1
    adds r0, r0, r2
    bl sub_08068128
    b lbl_08078a0c
lbl_080789d0:
    adds r2, #0xcf
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
    cmp r4, #0
    bne lbl_080789e8
    ldr r0, [r5]
    adds r0, #0xf4
    ldrb r1, [r7, #4]
    bl sub_08068128
lbl_080789e8:
    cmp r4, #1
    bne lbl_080789fa
    ldr r0, [r5]
    movs r1, #0x82
    lsls r1, r1, #1
    adds r0, r0, r1
    ldrb r1, [r7, #0xc]
    bl sub_08068128
lbl_080789fa:
    cmp r4, #2
    bne lbl_08078a0c
    ldr r0, [r5]
    movs r2, #0x8a
    lsls r2, r2, #1
    adds r0, r0, r2
    ldrb r1, [r7, #0x14]
    bl sub_08068128
lbl_08078a0c:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_08078a14
sub_08078a14: @ 0x08078a14
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r5, r1, #0x18
    cmp r5, #2
    bhi lbl_08078a34
    ldr r1, lbl_08078a30 @ =0x03000c24
    lsls r0, r5, #1
    adds r0, r0, r5
    lsls r0, r0, #3
    adds r0, r0, r1
    ldrb r1, [r0, #0xc]
    b lbl_08078a36
    .align 2, 0
lbl_08078a30: .4byte 0x03000c24
lbl_08078a34:
    movs r1, #0
lbl_08078a36:
    ldr r6, lbl_08078a54 @ =0x08760b40
    lsls r0, r5, #3
    adds r1, r1, r0
    adds r2, r6, #5
    adds r1, r1, r2
    ldrb r1, [r1]
    adds r7, r0, #0
    cmp r3, #1
    beq lbl_08078a66
    cmp r3, #1
    bgt lbl_08078a58
    cmp r3, #0
    beq lbl_08078a64
    b lbl_08078b8c
    .align 2, 0
lbl_08078a54: .4byte 0x08760b40
lbl_08078a58:
    cmp r3, #2
    bne lbl_08078a5e
    b lbl_08078b7c
lbl_08078a5e:
    cmp r3, #3
    beq lbl_08078b38
    b lbl_08078b8c
lbl_08078a64:
    adds r1, #1
lbl_08078a66:
    ldr r4, lbl_08078b2c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xd4
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    ldr r4, [r4]
    ldr r3, lbl_08078b30 @ =0x08760b40
    adds r1, r7, r3
    ldrh r0, [r1]
    adds r2, r4, #0
    adds r2, #0xd6
    strh r0, [r2]
    ldrh r1, [r1, #2]
    adds r0, r4, #0
    adds r0, #0xd4
    strh r1, [r0]
    adds r2, #0xa
    ldrb r1, [r2]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    ldrb r1, [r3, #4]
    cmp r5, #0
    bne lbl_08078ab2
    ldr r2, lbl_08078b34 @ =0x03000c24
    ldrb r0, [r2]
    cmp r0, #0
    bne lbl_08078ab0
    movs r0, #0x12
    ldrsb r0, [r2, r0]
    cmp r0, #0
    beq lbl_08078ab2
lbl_08078ab0:
    movs r1, #0x10
lbl_08078ab2:
    ldr r0, lbl_08078b2c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xf4
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    ldr r0, lbl_08078b30 @ =0x08760b40
    ldrb r1, [r0, #0xc]
    cmp r5, #1
    bne lbl_08078ae0
    ldr r2, lbl_08078b34 @ =0x03000c24
    ldrb r0, [r2, #0x18]
    cmp r0, #0
    bne lbl_08078ade
    adds r0, r2, #0
    adds r0, #0x2a
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08078ae0
lbl_08078ade:
    movs r1, #0x11
lbl_08078ae0:
    ldr r0, lbl_08078b2c @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0x82
    lsls r2, r2, #1
    adds r0, r0, r2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    ldr r0, lbl_08078b30 @ =0x08760b40
    ldrb r1, [r0, #0x14]
    cmp r5, #2
    bne lbl_08078b16
    ldr r2, lbl_08078b34 @ =0x03000c24
    adds r0, r2, #0
    adds r0, #0x30
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08078b14
    adds r0, r2, #0
    adds r0, #0x42
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_08078b16
lbl_08078b14:
    movs r1, #0x12
lbl_08078b16:
    ldr r0, lbl_08078b2c @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0x8a
    lsls r2, r2, #1
    adds r0, r0, r2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
    b lbl_08078b8c
    .align 2, 0
lbl_08078b2c: .4byte 0x08754bc4
lbl_08078b30: .4byte 0x08760b40
lbl_08078b34: .4byte 0x03000c24
lbl_08078b38:
    ldr r4, lbl_08078b78 @ =0x08754bc4
    ldr r1, [r4]
    adds r1, #0xdf
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    ldr r0, [r4]
    adds r0, #0xde
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0xf4
    ldrb r1, [r6, #4]
    bl sub_08068128
    ldr r0, [r4]
    movs r1, #0x82
    lsls r1, r1, #1
    adds r0, r0, r1
    ldrb r1, [r6, #0xc]
    bl sub_08068128
    ldr r0, [r4]
    movs r2, #0x8a
    lsls r2, r2, #1
    adds r0, r0, r2
    ldrb r1, [r6, #0x14]
    bl sub_08068128
    b lbl_08078b8c
    .align 2, 0
lbl_08078b78: .4byte 0x08754bc4
lbl_08078b7c:
    ldr r0, lbl_08078b94 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xd4
    adds r1, #2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    bl sub_08068128
lbl_08078b8c:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08078b94: .4byte 0x08754bc4

    thumb_func_start sub_08078b98
sub_08078b98: @ 0x08078b98
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #4
    bhi lbl_08078c76
    lsls r0, r0, #2
    ldr r1, lbl_08078bac @ =lbl_08078bb0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08078bac: .4byte lbl_08078bb0
lbl_08078bb0: @ jump table
    .4byte lbl_08078bcc @ case 0
    .4byte lbl_08078bc4 @ case 1
    .4byte lbl_08078c54 @ case 2
    .4byte lbl_08078c30 @ case 3
    .4byte lbl_08078c5c @ case 4
lbl_08078bc4:
    movs r0, #0xfd
    lsls r0, r0, #1
    bl SoundPlay
lbl_08078bcc:
    ldr r5, lbl_08078c1c @ =0x08754bc4
    ldr r3, [r5]
    ldr r2, lbl_08078c20 @ =0x08760b80
    ldr r4, lbl_08078c24 @ =0x03000bf3
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r0, r0, #2
    adds r0, r0, r2
    ldrh r1, [r0]
    ldr r6, lbl_08078c28 @ =0x00000206
    adds r0, r3, r6
    strh r1, [r0]
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r0, r0, #2
    adds r2, #2
    adds r0, r0, r2
    ldrh r1, [r0]
    movs r2, #0x81
    lsls r2, r2, #2
    adds r0, r3, r2
    strh r1, [r0]
    adds r6, #0xa
    adds r3, r3, r6
    ldrb r1, [r3]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r3]
    ldr r5, [r5]
    ldr r1, lbl_08078c2c @ =0x0000020e
    adds r0, r5, r1
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_08078c76
    adds r0, r5, r2
    b lbl_08078c44
    .align 2, 0
lbl_08078c1c: .4byte 0x08754bc4
lbl_08078c20: .4byte 0x08760b80
lbl_08078c24: .4byte 0x03000bf3
lbl_08078c28: .4byte 0x00000206
lbl_08078c2c: .4byte 0x0000020e
lbl_08078c30:
    ldr r0, lbl_08078c4c @ =0x08754bc4
    ldr r1, [r0]
    ldr r2, lbl_08078c50 @ =0x0000020e
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_08078c76
    movs r6, #0x81
    lsls r6, r6, #2
    adds r0, r1, r6
lbl_08078c44:
    movs r1, #1
    bl sub_08068128
    b lbl_08078c76
    .align 2, 0
lbl_08078c4c: .4byte 0x08754bc4
lbl_08078c50: .4byte 0x0000020e
lbl_08078c54:
    movs r0, #0xfe
    lsls r0, r0, #1
    bl SoundPlay
lbl_08078c5c:
    ldr r0, lbl_08078c94 @ =0x08754bc4
    ldr r1, [r0]
    ldr r2, lbl_08078c98 @ =0x0000020e
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #2
    beq lbl_08078c76
    movs r6, #0x81
    lsls r6, r6, #2
    adds r0, r1, r6
    movs r1, #2
    bl sub_08068128
lbl_08078c76:
    ldr r0, lbl_08078c94 @ =0x08754bc4
    ldr r2, [r0]
    ldr r0, lbl_08078c9c @ =0x0000020f
    adds r2, r2, r0
    ldrb r1, [r2]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08078c94: .4byte 0x08754bc4
lbl_08078c98: .4byte 0x0000020e
lbl_08078c9c: .4byte 0x0000020f

    thumb_func_start sub_08078ca0
sub_08078ca0: @ 0x08078ca0
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    movs r0, #3
    ands r0, r7
    cmp r0, #0
    beq lbl_08078d10
    movs r0, #1
    ands r0, r7
    movs r2, #3
    cmp r0, #0
    beq lbl_08078cbe
    movs r2, #2
lbl_08078cbe:
    ldr r0, lbl_08078d80 @ =0x08754bc4
    mov r8, r0
    ldr r0, [r0]
    movs r6, #0x85
    lsls r6, r6, #2
    adds r0, r0, r6
    ldr r4, lbl_08078d84 @ =0x08760b9c
    lsls r2, r2, #1
    ldr r5, lbl_08078d88 @ =0x03000004
    ldrb r1, [r5]
    lsls r1, r1, #3
    adds r2, r2, r1
    adds r2, r2, r4
    ldrb r1, [r2]
    bl sub_08068128
    mov r1, r8
    ldr r2, [r1]
    ldrb r0, [r5]
    lsls r0, r0, #3
    adds r0, r0, r4
    ldrh r1, [r0]
    ldr r3, lbl_08078d8c @ =0x00000216
    adds r0, r2, r3
    strh r1, [r0]
    ldrb r0, [r5]
    lsls r0, r0, #3
    adds r4, #2
    adds r0, r0, r4
    ldrh r0, [r0]
    adds r6, r2, r6
    strh r0, [r6]
    ldr r6, lbl_08078d90 @ =0x0000021f
    adds r2, r2, r6
    ldrb r1, [r2]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
lbl_08078d10:
    movs r0, #4
    ands r0, r7
    cmp r0, #0
    beq lbl_08078d74
    ldr r5, lbl_08078d80 @ =0x08754bc4
    ldr r1, [r5]
    ldr r0, lbl_08078d94 @ =0x00000226
    adds r3, r1, r0
    adds r0, #0x7a
    strh r0, [r3]
    movs r6, #0x89
    lsls r6, r6, #2
    adds r4, r1, r6
    movs r0, #0xa0
    lsls r0, r0, #1
    strh r0, [r4]
    ldrh r2, [r3]
    adds r6, #0x12
    adds r0, r1, r6
    strh r2, [r0]
    ldrh r2, [r4]
    subs r6, #2
    adds r0, r1, r6
    strh r2, [r0]
    ldrh r2, [r3]
    ldr r3, lbl_08078d98 @ =0x00000246
    adds r0, r1, r3
    strh r2, [r0]
    ldrh r2, [r4]
    adds r6, #0x10
    adds r0, r1, r6
    strh r2, [r0]
    ldr r0, lbl_08078d9c @ =0x0000022f
    adds r1, r1, r0
    ldrb r0, [r1]
    movs r2, #3
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r5]
    subs r3, #7
    adds r1, r1, r3
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r5]
    adds r6, #0xb
    adds r1, r1, r6
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
lbl_08078d74:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08078d80: .4byte 0x08754bc4
lbl_08078d84: .4byte 0x08760b9c
lbl_08078d88: .4byte 0x03000004
lbl_08078d8c: .4byte 0x00000216
lbl_08078d90: .4byte 0x0000021f
lbl_08078d94: .4byte 0x00000226
lbl_08078d98: .4byte 0x00000246
lbl_08078d9c: .4byte 0x0000022f

    thumb_func_start sub_08078da0
sub_08078da0: @ 0x08078da0
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #8
    ldr r1, lbl_08078dc4 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x34
    ldrb r0, [r0]
    mov ip, r1
    cmp r0, #6
    bls lbl_08078db8
    b lbl_080790be
lbl_08078db8:
    lsls r0, r0, #2
    ldr r1, lbl_08078dc8 @ =lbl_08078dcc
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08078dc4: .4byte 0x08754bc4
lbl_08078dc8: .4byte lbl_08078dcc
lbl_08078dcc: @ jump table
    .4byte lbl_080790be @ case 0
    .4byte lbl_08078de8 @ case 1
    .4byte lbl_08078f8c @ case 2
    .4byte lbl_08078f8c @ case 3
    .4byte lbl_08078f8c @ case 4
    .4byte lbl_08078f8c @ case 5
    .4byte lbl_08079046 @ case 6
lbl_08078de8:
    ldr r2, lbl_08078e48 @ =0x03000c0c
    adds r1, r2, #0
    ldr r0, lbl_08078e4c @ =0x0845f430
    ldm r0!, {r3, r4, r5}
    stm r1!, {r3, r4, r5}
    ldr r0, [r0]
    str r0, [r1]
    ldrb r0, [r2, #0xd]
    movs r6, #0
    cmp r0, #0
    beq lbl_08078e00
    subs r6, #1
lbl_08078e00:
    ldr r0, lbl_08078e50 @ =0x0845f3cc
    mov r8, r0
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    mov r7, r8
    adds r7, #1
    adds r0, r0, r7
    ldrb r0, [r0]
    cmp r0, #3
    beq lbl_08078e20
    cmp r0, #1
    bne lbl_08078e60
lbl_08078e20:
    add r0, sp, #4
    strh r6, [r0]
    ldr r2, lbl_08078e54 @ =0x040000d4
    str r0, [r2]
    ldr r3, lbl_08078e58 @ =0x08760bdc
    mov r4, ip
    ldr r0, [r4]
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r0, r0, r7
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r3
    ldr r0, [r0]
    str r0, [r2, #4]
    ldr r0, lbl_08078e5c @ =0x81000800
    b lbl_08078ed6
    .align 2, 0
lbl_08078e48: .4byte 0x03000c0c
lbl_08078e4c: .4byte 0x0845f430
lbl_08078e50: .4byte 0x0845f3cc
lbl_08078e54: .4byte 0x040000d4
lbl_08078e58: .4byte 0x08760bdc
lbl_08078e5c: .4byte 0x81000800
lbl_08078e60:
    cmp r0, #2
    bne lbl_08078eec
    add r3, sp, #4
    strh r6, [r3]
    ldr r2, lbl_08078edc @ =0x040000d4
    str r3, [r2]
    ldr r4, lbl_08078ee0 @ =0x08760bdc
    mov r5, ip
    ldr r0, [r5]
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r0, r0, r7
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r4
    ldr r0, [r0]
    str r0, [r2, #4]
    ldr r5, lbl_08078ee4 @ =0x81000100
    str r5, [r2, #8]
    ldr r0, [r2, #8]
    strh r6, [r3]
    str r3, [r2]
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r0, r0, r7
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r4
    ldr r0, [r0]
    movs r1, #0x80
    lsls r1, r1, #3
    adds r0, r0, r1
    str r0, [r2, #4]
    str r5, [r2, #8]
    ldr r0, [r2, #8]
    strh r6, [r3]
    str r3, [r2]
    mov r3, ip
    ldr r0, [r3]
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r0, r0, r7
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r4
    ldr r0, [r0]
    movs r4, #0xc0
    lsls r4, r4, #3
    adds r0, r0, r4
    str r0, [r2, #4]
    ldr r0, lbl_08078ee8 @ =0x81000400
lbl_08078ed6:
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    b lbl_08078f76
    .align 2, 0
lbl_08078edc: .4byte 0x040000d4
lbl_08078ee0: .4byte 0x08760bdc
lbl_08078ee4: .4byte 0x81000100
lbl_08078ee8: .4byte 0x81000400
lbl_08078eec:
    add r4, sp, #4
    strh r6, [r4]
    ldr r3, lbl_08078f7c @ =0x040000d4
    str r4, [r3]
    ldr r5, lbl_08078f80 @ =0x08760bdc
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r0, r0, r7
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r5
    ldr r0, [r0]
    str r0, [r3, #4]
    ldr r0, lbl_08078f84 @ =0x81000400
    str r0, [r3, #8]
    ldr r0, [r3, #8]
    mov r1, ip
    ldr r0, [r1]
    adds r2, r0, #0
    adds r2, #0x35
    ldrb r1, [r2]
    lsls r0, r1, #1
    adds r0, r0, r1
    mov r1, r8
    adds r1, #2
    adds r0, r0, r1
    ldrb r0, [r0]
    cmp r0, #3
    bne lbl_08078f76
    strh r6, [r4]
    str r4, [r3]
    ldrb r1, [r2]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r0, r0, r7
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r5
    ldr r0, [r0]
    movs r1, #0x80
    lsls r1, r1, #4
    adds r0, r0, r1
    str r0, [r3, #4]
    ldr r2, lbl_08078f88 @ =0x81000100
    str r2, [r3, #8]
    ldr r0, [r3, #8]
    strh r6, [r4]
    str r4, [r3]
    mov r4, ip
    ldr r0, [r4]
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r0, r0, r7
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r5
    ldr r0, [r0]
    movs r5, #0xc0
    lsls r5, r5, #4
    adds r0, r0, r5
    str r0, [r3, #4]
    str r2, [r3, #8]
    ldr r0, [r3, #8]
lbl_08078f76:
    mov r0, ip
    ldr r1, [r0]
    b lbl_0807901a
    .align 2, 0
lbl_08078f7c: .4byte 0x040000d4
lbl_08078f80: .4byte 0x08760bdc
lbl_08078f84: .4byte 0x81000400
lbl_08078f88: .4byte 0x81000100
lbl_08078f8c:
    ldr r4, lbl_08079024 @ =0x08760bdc
    ldr r2, lbl_08079028 @ =0x0845f3cc
    ldr r0, lbl_0807902c @ =0x08754bc4
    ldr r3, [r0]
    adds r0, r3, #0
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r2, #1
    adds r0, r0, r2
    ldrb r1, [r0]
    lsls r0, r1, #2
    adds r0, r0, r4
    ldr r4, [r0]
    adds r3, #0x34
    ldrb r0, [r3]
    subs r6, r0, #2
    movs r0, #2
    ands r0, r6
    cmp r0, #0
    beq lbl_08078fbe
    movs r3, #0x80
    lsls r3, r3, #4
    adds r4, r4, r3
lbl_08078fbe:
    movs r0, #1
    ands r6, r0
    cmp r6, #0
    beq lbl_08078fd6
    movs r5, #0x80
    lsls r5, r5, #2
    adds r4, r4, r5
    cmp r1, #2
    bne lbl_08078fd6
    movs r0, #0x80
    lsls r0, r0, #3
    adds r4, r4, r0
lbl_08078fd6:
    ldr r1, lbl_08079030 @ =0x03000c0c
    movs r0, #0
    strh r0, [r1, #2]
    ldr r1, lbl_08079034 @ =0x0876079c
    mov r8, r1
    ldr r7, lbl_08079028 @ =0x0845f3cc
    ldr r5, lbl_0807902c @ =0x08754bc4
lbl_08078fe4:
    ldr r0, lbl_08079038 @ =0x03000020
    movs r2, #0
    ldrsb r2, [r0, r2]
    lsls r2, r2, #2
    add r2, r8
    ldr r0, [r5]
    adds r0, #0x35
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    adds r0, r0, r7
    ldrb r0, [r0]
    ldr r1, [r2]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r1, [r0]
    ldr r0, lbl_08079030 @ =0x03000c0c
    adds r2, r4, #0
    bl process_current_message
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #2
    beq lbl_0807903c
    cmp r6, #1
    bne lbl_08078fe4
    ldr r1, [r5]
lbl_0807901a:
    adds r1, #0x34
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_080790be
    .align 2, 0
lbl_08079024: .4byte 0x08760bdc
lbl_08079028: .4byte 0x0845f3cc
lbl_0807902c: .4byte 0x08754bc4
lbl_08079030: .4byte 0x03000c0c
lbl_08079034: .4byte 0x0876079c
lbl_08079038: .4byte 0x03000020
lbl_0807903c:
    ldr r0, [r5]
    adds r0, #0x34
    movs r1, #6
    strb r1, [r0]
    b lbl_080790be
lbl_08079046:
    mov r3, ip
    ldr r0, [r3]
    adds r0, #0x35
    movs r1, #0xff
    strb r1, [r0]
    movs r6, #0
    mov r1, sp
    movs r0, #1
    rsbs r0, r0, #0
    strb r0, [r1]
    adds r5, r0, #0
    adds r4, r5, #0
    strb r0, [r1, #1]
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0x36
    ldrb r2, [r1]
    adds r0, r2, #0
    cmp r0, #0xff
    beq lbl_0807907a
    mov r0, sp
    strb r2, [r0]
    ldrb r0, [r1]
    orrs r0, r4
    strb r0, [r1]
    movs r6, #1
lbl_0807907a:
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0x37
    ldrb r2, [r1]
    adds r0, r2, #0
    cmp r0, #0xff
    beq lbl_08079094
    mov r3, sp
    adds r0, r3, r6
    strb r2, [r0]
    ldrb r0, [r1]
    orrs r0, r4
    strb r0, [r1]
lbl_08079094:
    mov r4, ip
    ldr r0, [r4]
    mov r1, sp
    ldrb r1, [r1]
    adds r0, #0x35
    strb r1, [r0]
    ldr r0, [r4]
    mov r1, sp
    ldrb r1, [r1, #1]
    adds r0, #0x36
    strb r1, [r0]
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0x35
    ldrb r0, [r0]
    movs r1, #0xff
    eors r0, r1
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    adds r2, #0x34
    strb r0, [r2]
lbl_080790be:
    add sp, #8
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_080790cc
sub_080790cc: @ 0x080790cc
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r3, r1, #0
    movs r5, #1
    cmp r0, #0
    bne lbl_08079116
    ldr r4, lbl_080790f8 @ =0x08754bc4
    ldr r2, [r4]
    adds r3, r2, #0
    adds r3, #0x35
    ldrb r0, [r3]
    cmp r0, #0xff
    bne lbl_080790fc
    strb r1, [r3]
    ldr r0, [r4]
    adds r0, #0x34
    strb r5, [r0]
    b lbl_0807916a
    .align 2, 0
lbl_080790f8: .4byte 0x08754bc4
lbl_080790fc:
    adds r3, r2, #0
    adds r3, #0x36
    ldrb r0, [r3]
    cmp r0, #0xff
    bne lbl_0807910a
    strb r1, [r3]
    b lbl_0807916a
lbl_0807910a:
    adds r2, #0x37
    ldrb r0, [r2]
    cmp r0, #0xff
    bne lbl_08079140
    strb r1, [r2]
    b lbl_0807916a
lbl_08079116:
    cmp r0, #1
    bne lbl_08079148
    ldr r0, lbl_08079144 @ =0x08754bc4
    ldr r2, [r0]
    adds r0, r2, #0
    adds r0, #0x35
    ldrb r0, [r0]
    cmp r0, r1
    bne lbl_0807912a
    movs r5, #0
lbl_0807912a:
    adds r0, r2, #0
    adds r0, #0x36
    ldrb r0, [r0]
    cmp r0, r1
    bne lbl_08079136
    movs r5, #0
lbl_08079136:
    adds r0, r2, #0
    adds r0, #0x37
    ldrb r0, [r0]
    cmp r0, r3
    bne lbl_0807916a
lbl_08079140:
    movs r5, #0
    b lbl_0807916a
    .align 2, 0
lbl_08079144: .4byte 0x08754bc4
lbl_08079148:
    ldr r2, lbl_08079174 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x35
    movs r1, #0xff
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x36
    movs r1, #1
    rsbs r1, r1, #0
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x37
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x34
    movs r1, #0
    strb r1, [r0]
lbl_0807916a:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08079174: .4byte 0x08754bc4

    thumb_func_start sub_08079178
sub_08079178: @ 0x08079178
    push {lr}
    movs r2, #1
    rsbs r2, r2, #0
    ldr r1, lbl_08079194 @ =0x03000c24
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807919c
    movs r0, #0x12
    ldrsb r0, [r1, r0]
    cmp r0, #0
    bne lbl_0807919c
    movs r2, #0
    ldr r3, lbl_08079198 @ =0x08754bc4
    b lbl_08079200
    .align 2, 0
lbl_08079194: .4byte 0x03000c24
lbl_08079198: .4byte 0x08754bc4
lbl_0807919c:
    ldrb r0, [r1, #0x18]
    cmp r0, #0
    bne lbl_080791bc
    adds r0, r1, #0
    adds r0, #0x2a
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080791bc
    movs r2, #1
    ldr r3, lbl_080791b8 @ =0x08754bc4
    b lbl_08079200
    .align 2, 0
lbl_080791b8: .4byte 0x08754bc4
lbl_080791bc:
    adds r0, r1, #0
    adds r0, #0x30
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080791d6
    adds r0, r1, #0
    adds r0, #0x42
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_080791d6
    movs r2, #2
lbl_080791d6:
    ldr r3, lbl_0807920c @ =0x08754bc4
    cmp r2, #0
    bge lbl_08079200
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x27
    ldrb r2, [r0]
    cmp r2, #0x80
    beq lbl_080791f0
    subs r0, #1
    ldrb r0, [r0]
    cmp r0, r2
    bne lbl_08079200
lbl_080791f0:
    adds r0, r1, #0
    adds r0, #0x26
    ldrb r1, [r0]
    movs r2, #1
    eors r1, r2
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r2, r0, #0x1f
lbl_08079200:
    ldr r0, [r3]
    adds r0, #0x27
    strb r2, [r0]
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807920c: .4byte 0x08754bc4

    thumb_func_start sub_08079210
sub_08079210: @ 0x08079210
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    movs r7, #0
    ldr r2, lbl_0807923c @ =0x08754bc4
    ldr r1, [r2]
    adds r3, r1, #0
    adds r3, #0x42
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r6, r2, #0
    cmp r0, #0xf
    bls lbl_08079230
    b lbl_08079794
lbl_08079230:
    lsls r0, r0, #2
    ldr r1, lbl_08079240 @ =lbl_08079244
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807923c: .4byte 0x08754bc4
lbl_08079240: .4byte lbl_08079244
lbl_08079244: @ jump table
    .4byte lbl_08079284 @ case 0
    .4byte lbl_080792d0 @ case 1
    .4byte lbl_080792e8 @ case 2
    .4byte lbl_08079300 @ case 3
    .4byte lbl_080793e8 @ case 4
    .4byte lbl_080794ec @ case 5
    .4byte lbl_08079510 @ case 6
    .4byte lbl_080795b2 @ case 7
    .4byte lbl_080795d4 @ case 8
    .4byte lbl_080795fc @ case 9
    .4byte lbl_0807961c @ case 10
    .4byte lbl_0807964c @ case 11
    .4byte lbl_08079686 @ case 12
    .4byte lbl_080796a0 @ case 13
    .4byte lbl_080796bc @ case 14
    .4byte lbl_08079780 @ case 15
lbl_08079284:
    movs r0, #0
    movs r1, #1
    bl sub_080790cc
    movs r0, #0
    movs r1, #2
    bl sub_080790cc
    ldr r4, lbl_080792c8 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x26
    bl sub_0807d230
    ldr r0, [r4]
    adds r0, #0x26
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078750
    movs r0, #0x12
    bl sub_0807e6d8
    ldr r1, [r4]
    ldr r0, lbl_080792cc @ =0x08760b38
    ldrb r0, [r0]
    adds r1, #0x2c
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r4]
    adds r0, #0x3a
    strb r2, [r0]
    ldr r1, [r4]
    b lbl_08079766
    .align 2, 0
lbl_080792c8: .4byte 0x08754bc4
lbl_080792cc: .4byte 0x08760b38
lbl_080792d0:
    movs r0, #0x13
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_080792dc
    b lbl_08079794
lbl_080792dc:
    ldr r0, lbl_080792e4 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08079766
    .align 2, 0
lbl_080792e4: .4byte 0x08754bc4
lbl_080792e8:
    movs r0, #1
    movs r1, #2
    bl sub_080790cc
    cmp r0, #0
    bne lbl_080792f6
    b lbl_08079794
lbl_080792f6:
    ldr r0, lbl_080792fc @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08079766
    .align 2, 0
lbl_080792fc: .4byte 0x08754bc4
lbl_08079300:
    movs r4, #0
    ldr r5, lbl_08079320 @ =0x03001380
    ldrh r0, [r5]
    cmp r0, #0
    beq lbl_08079354
    ldr r1, [r6]
    adds r1, #0x26
    movs r0, #1
    bl sub_0807d19c
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_08079324
    movs r4, #1
    b lbl_0807935a
    .align 2, 0
lbl_08079320: .4byte 0x03001380
lbl_08079324:
    ldrh r1, [r5]
    movs r3, #2
    adds r0, r3, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08079332
    b lbl_080796aa
lbl_08079332:
    movs r2, #1
    adds r0, r2, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_08079354
    ldr r0, [r6]
    adds r1, r0, #0
    adds r1, #0x3b
    ldrb r1, [r1]
    adds r0, #0x26
    ldrb r0, [r0]
    asrs r1, r0
    ands r1, r2
    rsbs r0, r1, #0
    orrs r0, r1
    asrs r4, r0, #0x1f
    ands r4, r3
lbl_08079354:
    cmp r4, #0
    bne lbl_0807935a
    b lbl_08079794
lbl_0807935a:
    cmp r4, #1
    bne lbl_08079378
    movs r0, #2
    bl sub_0807ef7c
    ldr r0, lbl_08079374 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x26
    ldrb r1, [r0]
    movs r0, #1
    bl sub_08078750
    b lbl_08079794
    .align 2, 0
lbl_08079374: .4byte 0x08754bc4
lbl_08079378:
    cmp r4, #2
    beq lbl_0807937e
    b lbl_08079794
lbl_0807937e:
    ldr r4, lbl_080793bc @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x26
    ldrb r1, [r0]
    movs r0, #2
    bl sub_08078750
    ldr r2, lbl_080793c0 @ =0x03000c24
    ldr r0, [r4]
    adds r0, #0x26
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #0x15]
    cmp r0, #0
    beq lbl_080793c8
    ldr r0, lbl_080793c4 @ =0x00000209
    bl SoundPlay
    movs r0, #0
    movs r1, #4
    bl sub_080790cc
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #9
    strb r1, [r0]
    b lbl_08079794
    .align 2, 0
lbl_080793bc: .4byte 0x08754bc4
lbl_080793c0: .4byte 0x03000c24
lbl_080793c4: .4byte 0x00000209
lbl_080793c8:
    movs r0, #8
    bl sub_0807ef7c
    bl sub_08079178
    ldr r0, [r4]
    adds r0, #0x27
    ldrb r1, [r0]
    movs r0, #0
    bl sub_080788d4
    movs r0, #0x1b
    bl sub_0807e6d8
    ldr r1, [r4]
    b lbl_08079766
lbl_080793e8:
    movs r4, #0
    ldr r5, lbl_08079408 @ =0x03001380
    ldrh r0, [r5]
    cmp r0, #0
    beq lbl_08079420
    ldr r1, [r6]
    adds r1, #0x27
    movs r0, #2
    bl sub_0807d19c
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807940c
    movs r4, #1
    b lbl_08079460
    .align 2, 0
lbl_08079408: .4byte 0x03001380
lbl_0807940c:
    ldrh r1, [r5]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    bne lbl_08079428
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08079420
    movs r4, #2
lbl_08079420:
    cmp r4, #0
    bne lbl_08079426
    b lbl_08079794
lbl_08079426:
    b lbl_08079460
lbl_08079428:
    ldr r0, lbl_08079458 @ =0x00000209
    bl SoundPlay
    ldr r4, lbl_0807945c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x26
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078750
    ldr r0, [r4]
    adds r0, #0x27
    ldrb r1, [r0]
    movs r0, #3
    bl sub_080788d4
    movs r0, #0x1a
    bl sub_0807e6d8
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #3
    strb r1, [r0]
    b lbl_08079794
    .align 2, 0
lbl_08079458: .4byte 0x00000209
lbl_0807945c: .4byte 0x08754bc4
lbl_08079460:
    cmp r4, #1
    bne lbl_08079480
    ldr r0, lbl_0807947c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x27
    ldrb r1, [r0]
    movs r0, #1
    bl sub_080788d4
    movs r0, #9
    bl sub_0807ef7c
    b lbl_08079794
    .align 2, 0
lbl_0807947c: .4byte 0x08754bc4
lbl_08079480:
    cmp r4, #2
    beq lbl_08079486
    b lbl_08079794
lbl_08079486:
    ldr r4, lbl_080794d4 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_080794d8 @ =0x08760b38
    ldrb r1, [r1]
    adds r0, #0x2c
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0x27
    ldrb r1, [r0]
    movs r0, #2
    bl sub_080788d4
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0x3b
    ldrb r1, [r1]
    adds r0, #0x27
    ldrb r0, [r0]
    asrs r1, r0
    movs r0, #1
    ands r1, r0
    cmp r1, #0
    beq lbl_080794dc
    movs r0, #0
    movs r1, #3
    bl sub_080790cc
    movs r0, #0x16
    bl sub_0807e6d8
    movs r0, #8
    bl sub_0807ef7c
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #5
    strb r1, [r0]
    b lbl_08079794
    .align 2, 0
lbl_080794d4: .4byte 0x08754bc4
lbl_080794d8: .4byte 0x08760b38
lbl_080794dc:
    movs r0, #0xa
    bl sub_0807ef7c
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #0xb
    strb r1, [r0]
    b lbl_08079794
lbl_080794ec:
    movs r0, #0x17
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_080794f8
    b lbl_08079794
lbl_080794f8:
    ldr r4, lbl_0807950c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x2c
    ldrb r1, [r0]
    movs r0, #4
    bl sub_0807e3fc
    ldr r1, [r4]
    b lbl_08079766
    .align 2, 0
lbl_0807950c: .4byte 0x08754bc4
lbl_08079510:
    movs r4, #0xff
    ldr r0, lbl_08079538 @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_080795a0
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807954e
    ldr r1, [r6]
    adds r0, r1, #0
    adds r0, #0x2c
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807953c
    adds r1, #0x40
    movs r0, #7
    strb r0, [r1]
    b lbl_080795a0
    .align 2, 0
lbl_08079538: .4byte 0x03001380
lbl_0807953c:
    movs r0, #0xa
    bl sub_0807ef7c
    movs r4, #0x80
    ldr r0, [r6]
    adds r0, #0x40
    movs r1, #0xb
    strb r1, [r0]
    b lbl_080795a0
lbl_0807954e:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08079560
    ldr r0, [r6]
    adds r0, #0x40
    movs r1, #7
    strb r1, [r0]
    b lbl_080795a0
lbl_08079560:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08079580
    ldr r0, [r6]
    adds r1, r0, #0
    adds r1, #0x2c
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_080795a0
    movs r4, #0
    strb r4, [r1]
    movs r0, #0
    bl sub_0807ef7c
    b lbl_080795a0
lbl_08079580:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_080795a0
    ldr r0, [r6]
    adds r1, r0, #0
    adds r1, #0x2c
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_080795a0
    movs r4, #1
    movs r0, #1
    strb r0, [r1]
    movs r0, #0
    bl sub_0807ef7c
lbl_080795a0:
    adds r0, r4, #1
    cmp r0, #0
    bne lbl_080795a8
    b lbl_08079794
lbl_080795a8:
    adds r1, r4, #0
    movs r0, #4
    bl sub_0807e3fc
    b lbl_08079794
lbl_080795b2:
    ldr r0, lbl_080795cc @ =0x00000209
    bl SoundPlay
    movs r0, #4
    movs r1, #0x81
    bl sub_0807e3fc
    movs r0, #0x18
    bl sub_0807e6d8
    ldr r0, lbl_080795d0 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08079766
    .align 2, 0
lbl_080795cc: .4byte 0x00000209
lbl_080795d0: .4byte 0x08754bc4
lbl_080795d4:
    movs r0, #0x19
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_080795e0
    b lbl_08079794
lbl_080795e0:
    ldr r4, lbl_080795f8 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x27
    ldrb r1, [r0]
    movs r0, #0
    bl sub_080788d4
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #4
    strb r1, [r0]
    b lbl_08079794
    .align 2, 0
lbl_080795f8: .4byte 0x08754bc4
lbl_080795fc:
    movs r0, #1
    movs r1, #4
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807960a
    b lbl_08079794
lbl_0807960a:
    movs r0, #0x1c
    bl sub_0807e6d8
    ldr r0, lbl_08079618 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08079766
    .align 2, 0
lbl_08079618: .4byte 0x08754bc4
lbl_0807961c:
    ldr r0, lbl_08079648 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    bne lbl_0807962a
    b lbl_08079794
lbl_0807962a:
    ldr r0, [r6]
    adds r0, #0x26
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078750
    movs r0, #0x1a
    bl sub_0807e6d8
    ldr r0, [r6]
    adds r0, #0x40
    movs r1, #3
    strb r1, [r0]
    b lbl_08079794
    .align 2, 0
lbl_08079648: .4byte 0x03001380
lbl_0807964c:
    ldr r1, [r6]
    adds r0, r1, #0
    adds r0, #0x26
    ldrb r0, [r0]
    adds r1, #0x27
    ldrb r1, [r1]
    bl sub_080755a4
    cmp r0, #0
    bne lbl_08079662
    b lbl_08079794
lbl_08079662:
    ldr r0, [r6]
    adds r0, #0x3a
    movs r1, #1
    strb r1, [r0]
    ldr r1, [r6]
    adds r0, r1, #0
    adds r0, #0x2c
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807967e
    adds r1, #0x40
    movs r0, #0xe
    strb r0, [r1]
    b lbl_08079794
lbl_0807967e:
    adds r1, #0x40
    movs r0, #0xc
    strb r0, [r1]
    b lbl_08079794
lbl_08079686:
    movs r0, #4
    movs r1, #0x81
    bl sub_0807e3fc
    movs r0, #0x18
    bl sub_0807e6d8
    ldr r0, lbl_0807969c @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08079766
    .align 2, 0
lbl_0807969c: .4byte 0x08754bc4
lbl_080796a0:
    movs r0, #0x19
    bl sub_0807e6d8
    cmp r0, #0
    beq lbl_08079794
lbl_080796aa:
    ldr r0, lbl_080796b8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x40
    movs r1, #0xe
    strb r1, [r0]
    b lbl_08079794
    .align 2, 0
lbl_080796b8: .4byte 0x08754bc4
lbl_080796bc:
    adds r5, r6, #0
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x3a
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08079746
    adds r0, r1, #0
    adds r0, #0x27
    ldrb r0, [r0]
    bl display_save_file_health
    ldr r0, [r5]
    adds r0, #0x27
    ldrb r0, [r0]
    bl sub_0807cdc4
    ldr r0, [r5]
    adds r0, #0x27
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    ldr r4, lbl_08079770 @ =0x03000c24
    adds r0, r0, r4
    bl sub_0807cf98
    ldr r3, [r5]
    ldr r0, lbl_08079774 @ =0x08760b79
    adds r1, r3, #0
    adds r1, #0x27
    ldrb r2, [r1]
    lsls r1, r2, #1
    adds r0, #1
    adds r0, r1, r0
    ldrb r0, [r0]
    lsls r0, r0, #4
    adds r3, r3, r0
    adds r1, r1, r2
    lsls r1, r1, #3
    adds r1, r1, r4
    ldrb r1, [r1, #0x11]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    rsbs r0, r1, #0
    orrs r0, r1
    asrs r0, r0, #0x1f
    movs r1, #2
    adds r3, #0x7f
    ands r1, r0
    lsls r1, r1, #6
    ldrb r2, [r3]
    movs r0, #0x3f
    ands r0, r2
    orrs r0, r1
    strb r0, [r3]
    bl sub_0807d0b0
    ldr r0, lbl_08079778 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x80
    lsls r3, r3, #4
    adds r1, r1, r3
    ldr r2, lbl_0807977c @ =0x0600d800
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_08079746:
    ldr r0, [r6]
    adds r0, #0x26
    ldrb r1, [r0]
    movs r0, #3
    bl sub_08078750
    ldr r0, [r6]
    adds r0, #0x27
    ldrb r1, [r0]
    movs r0, #3
    bl sub_080788d4
    movs r0, #0x14
    bl sub_0807e6d8
    ldr r1, [r6]
lbl_08079766:
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08079794
    .align 2, 0
lbl_08079770: .4byte 0x03000c24
lbl_08079774: .4byte 0x08760b79
lbl_08079778: .4byte 0x08754bb4
lbl_0807977c: .4byte 0x0600d800
lbl_08079780:
    movs r0, #0x15
    bl sub_0807e6d8
    cmp r0, #0
    beq lbl_08079794
    movs r0, #2
    movs r1, #0xff
    bl sub_080790cc
    movs r7, #1
lbl_08079794:
    adds r0, r7, #0
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_080797a0
sub_080797a0: @ 0x080797a0
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    movs r7, #0
    ldr r2, lbl_080797cc @ =0x08754bc4
    ldr r1, [r2]
    adds r3, r1, #0
    adds r3, #0x42
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r5, r2, #0
    cmp r0, #0xb
    bls lbl_080797c0
    b lbl_08079b44
lbl_080797c0:
    lsls r0, r0, #2
    ldr r1, lbl_080797d0 @ =lbl_080797d4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080797cc: .4byte 0x08754bc4
lbl_080797d0: .4byte lbl_080797d4
lbl_080797d4: @ jump table
    .4byte lbl_08079804 @ case 0
    .4byte lbl_08079840 @ case 1
    .4byte lbl_08079858 @ case 2
    .4byte lbl_08079900 @ case 3
    .4byte lbl_08079930 @ case 4
    .4byte lbl_080799d8 @ case 5
    .4byte lbl_080799fc @ case 6
    .4byte lbl_08079a24 @ case 7
    .4byte lbl_08079a46 @ case 8
    .4byte lbl_08079a60 @ case 9
    .4byte lbl_08079a7c @ case 10
    .4byte lbl_08079b30 @ case 11
lbl_08079804:
    movs r0, #0
    movs r1, #5
    bl sub_080790cc
    movs r0, #0
    movs r1, #6
    bl sub_080790cc
    ldr r4, lbl_0807983c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x28
    bl sub_0807d230
    ldr r0, [r4]
    adds r0, #0x28
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078a14
    movs r0, #0xa
    bl sub_0807e6d8
    ldr r0, [r4]
    adds r0, #0x3a
    movs r1, #0
    strb r1, [r0]
    b lbl_08079b10
    .align 2, 0
lbl_0807983c: .4byte 0x08754bc4
lbl_08079840:
    movs r0, #0xb
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807984c
    b lbl_08079b44
lbl_0807984c:
    ldr r0, lbl_08079854 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08079b12
    .align 2, 0
lbl_08079854: .4byte 0x08754bc4
lbl_08079858:
    movs r4, #0
    ldr r6, lbl_08079878 @ =0x03001380
    ldrh r0, [r6]
    cmp r0, #0
    beq lbl_080798ac
    ldr r1, [r5]
    adds r1, #0x28
    movs r0, #1
    bl sub_0807d19c
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807987c
    movs r4, #1
    b lbl_080798b2
    .align 2, 0
lbl_08079878: .4byte 0x03001380
lbl_0807987c:
    ldrh r1, [r6]
    movs r3, #2
    adds r0, r3, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0807988a
    b lbl_08079a6a
lbl_0807988a:
    movs r2, #1
    adds r0, r2, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_080798ac
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x3b
    ldrb r1, [r1]
    adds r0, #0x28
    ldrb r0, [r0]
    asrs r1, r0
    ands r1, r2
    rsbs r0, r1, #0
    orrs r0, r1
    asrs r4, r0, #0x1f
    ands r4, r3
lbl_080798ac:
    cmp r4, #0
    bne lbl_080798b2
    b lbl_08079b44
lbl_080798b2:
    cmp r4, #1
    bne lbl_080798d0
    movs r0, #2
    bl sub_0807ef7c
    ldr r0, lbl_080798cc @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x28
    ldrb r1, [r0]
    movs r0, #1
    bl sub_08078a14
    b lbl_08079b44
    .align 2, 0
lbl_080798cc: .4byte 0x08754bc4
lbl_080798d0:
    cmp r4, #2
    beq lbl_080798d6
    b lbl_08079b44
lbl_080798d6:
    movs r0, #0x84
    lsls r0, r0, #2
    bl SoundPlay
    ldr r4, lbl_080798fc @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x28
    ldrb r1, [r0]
    movs r0, #2
    bl sub_08078a14
    movs r0, #0xe
    bl sub_0807e6d8
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #3
    strb r1, [r0]
    b lbl_08079b44
    .align 2, 0
lbl_080798fc: .4byte 0x08754bc4
lbl_08079900:
    movs r0, #0xf
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807990c
    b lbl_08079b44
lbl_0807990c:
    ldr r4, lbl_08079928 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_0807992c @ =0x08760b38
    ldrb r1, [r1, #1]
    adds r0, #0x2d
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0x2d
    ldrb r1, [r0]
    movs r0, #3
    bl sub_0807e3fc
    b lbl_08079b10
    .align 2, 0
lbl_08079928: .4byte 0x08754bc4
lbl_0807992c: .4byte 0x08760b38
lbl_08079930:
    movs r4, #0xff
    ldr r0, lbl_08079958 @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_080799c6
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08079974
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x2d
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807995c
    adds r1, #0x40
    movs r0, #5
    strb r0, [r1]
    b lbl_080799c6
    .align 2, 0
lbl_08079958: .4byte 0x03001380
lbl_0807995c:
    movs r4, #0x80
    ldr r0, lbl_08079970 @ =0x0000020d
    bl SoundPlay
    ldr r0, [r5]
    adds r0, #0x40
    movs r1, #7
    strb r1, [r0]
    b lbl_080799c6
    .align 2, 0
lbl_08079970: .4byte 0x0000020d
lbl_08079974:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08079986
    ldr r0, [r5]
    adds r0, #0x40
    movs r1, #5
    strb r1, [r0]
    b lbl_080799c6
lbl_08079986:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_080799a6
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x2d
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_080799c6
    movs r4, #0
    strb r4, [r1]
    movs r0, #0
    bl sub_0807ef7c
    b lbl_080799c6
lbl_080799a6:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_080799c6
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x2d
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_080799c6
    movs r4, #1
    movs r0, #1
    strb r0, [r1]
    movs r0, #0
    bl sub_0807ef7c
lbl_080799c6:
    adds r0, r4, #1
    cmp r0, #0
    bne lbl_080799ce
    b lbl_08079b44
lbl_080799ce:
    adds r1, r4, #0
    movs r0, #3
    bl sub_0807e3fc
    b lbl_08079b44
lbl_080799d8:
    ldr r0, lbl_080799f4 @ =0x00000209
    bl SoundPlay
    movs r0, #3
    movs r1, #0x81
    bl sub_0807e3fc
    movs r0, #0x10
    bl sub_0807e6d8
    ldr r0, lbl_080799f8 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08079b12
    .align 2, 0
lbl_080799f4: .4byte 0x00000209
lbl_080799f8: .4byte 0x08754bc4
lbl_080799fc:
    movs r0, #0x11
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_08079a08
    b lbl_08079b44
lbl_08079a08:
    ldr r4, lbl_08079a20 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x28
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078a14
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #2
    strb r1, [r0]
    b lbl_08079b44
    .align 2, 0
lbl_08079a20: .4byte 0x08754bc4
lbl_08079a24:
    ldr r0, [r5]
    adds r0, #0x28
    ldrb r0, [r0]
    bl sub_08075494
    cmp r0, #0
    bne lbl_08079a34
    b lbl_08079b44
lbl_08079a34:
    ldr r0, [r5]
    adds r0, #0x3a
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x40
    movs r1, #8
    strb r1, [r0]
    b lbl_08079b44
lbl_08079a46:
    movs r0, #3
    movs r1, #0x81
    bl sub_0807e3fc
    movs r0, #0x10
    bl sub_0807e6d8
    ldr r0, lbl_08079a5c @ =0x08754bc4
    ldr r1, [r0]
    b lbl_08079b12
    .align 2, 0
lbl_08079a5c: .4byte 0x08754bc4
lbl_08079a60:
    movs r0, #0x11
    bl sub_0807e6d8
    cmp r0, #0
    beq lbl_08079b44
lbl_08079a6a:
    ldr r0, lbl_08079a78 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x40
    movs r1, #0xa
    strb r1, [r0]
    b lbl_08079b44
    .align 2, 0
lbl_08079a78: .4byte 0x08754bc4
lbl_08079a7c:
    ldr r5, lbl_08079b1c @ =0x08754bc4
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x3a
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08079afc
    adds r0, r1, #0
    adds r0, #0x28
    ldrb r0, [r0]
    bl display_save_file_health
    ldr r0, [r5]
    adds r0, #0x28
    ldrb r0, [r0]
    bl sub_0807cdc4
    ldr r0, [r5]
    adds r0, #0x28
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    ldr r4, lbl_08079b20 @ =0x03000c24
    adds r0, r0, r4
    bl sub_0807cf98
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x28
    ldrb r0, [r0]
    lsls r1, r0, #1
    adds r0, r1, r0
    lsls r0, r0, #3
    adds r0, r0, r4
    ldrb r0, [r0, #0x11]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    bne lbl_08079ae2
    ldr r0, lbl_08079b24 @ =0x08760b79
    adds r0, #1
    adds r0, r1, r0
    ldrb r1, [r0]
    lsls r1, r1, #4
    adds r1, r2, r1
    adds r1, #0x7f
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
lbl_08079ae2:
    bl sub_0807d0b0
    ldr r0, lbl_08079b28 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x80
    lsls r3, r3, #4
    adds r1, r1, r3
    ldr r2, lbl_08079b2c @ =0x0600d800
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
lbl_08079afc:
    ldr r4, lbl_08079b1c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x28
    ldrb r1, [r0]
    movs r0, #3
    bl sub_08078a14
    movs r0, #0xc
    bl sub_0807e6d8
lbl_08079b10:
    ldr r1, [r4]
lbl_08079b12:
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08079b44
    .align 2, 0
lbl_08079b1c: .4byte 0x08754bc4
lbl_08079b20: .4byte 0x03000c24
lbl_08079b24: .4byte 0x08760b79
lbl_08079b28: .4byte 0x08754bb4
lbl_08079b2c: .4byte 0x0600d800
lbl_08079b30:
    movs r0, #0xd
    bl sub_0807e6d8
    cmp r0, #0
    beq lbl_08079b44
    movs r0, #2
    movs r1, #0xff
    bl sub_080790cc
    movs r7, #1
lbl_08079b44:
    adds r0, r7, #0
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_08079b50
sub_08079b50: @ 0x08079b50
    push {r4, r5, lr}
    sub sp, #4
    ldr r2, lbl_08079b78 @ =0x08754bc4
    ldr r1, [r2]
    adds r3, r1, #0
    adds r3, #0x42
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r4, r2, #0
    cmp r0, #0xb
    bls lbl_08079b6e
    b lbl_08079ec0
lbl_08079b6e:
    lsls r0, r0, #2
    ldr r1, lbl_08079b7c @ =lbl_08079b80
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08079b78: .4byte 0x08754bc4
lbl_08079b7c: .4byte lbl_08079b80
lbl_08079b80: @ jump table
    .4byte lbl_08079bb0 @ case 0
    .4byte lbl_08079c5c @ case 1
    .4byte lbl_08079ce4 @ case 2
    .4byte lbl_08079cfc @ case 3
    .4byte lbl_08079d0c @ case 4
    .4byte lbl_08079d3c @ case 5
    .4byte lbl_08079d84 @ case 6
    .4byte lbl_08079d9c @ case 7
    .4byte lbl_08079e34 @ case 8
    .4byte lbl_08079e4c @ case 9
    .4byte lbl_08079e68 @ case 10
    .4byte lbl_08079e98 @ case 11
lbl_08079bb0:
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x46
    movs r0, #0
    strb r0, [r2]
    subs r2, #1
    strb r0, [r2]
    adds r1, #0x44
    strb r0, [r1]
    ldr r0, lbl_08079bd4 @ =0x03000c24
    ldrb r1, [r0, #1]
    adds r2, r0, #0
    cmp r1, #1
    bne lbl_08079bd8
    ldr r0, [r4]
    adds r0, #0x44
    movs r1, #7
    b lbl_08079be2
    .align 2, 0
lbl_08079bd4: .4byte 0x03000c24
lbl_08079bd8:
    cmp r1, #2
    bne lbl_08079be4
    ldr r0, [r4]
    adds r0, #0x44
    movs r1, #0xa
lbl_08079be2:
    strb r1, [r0]
lbl_08079be4:
    ldrb r0, [r2, #0x19]
    cmp r0, #1
    bne lbl_08079bf2
    ldr r0, [r4]
    adds r0, #0x45
    movs r1, #8
    b lbl_08079bfc
lbl_08079bf2:
    cmp r0, #2
    bne lbl_08079bfe
    ldr r0, [r4]
    adds r0, #0x45
    movs r1, #0xb
lbl_08079bfc:
    strb r1, [r0]
lbl_08079bfe:
    adds r0, r2, #0
    adds r0, #0x31
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08079c10
    ldr r0, [r4]
    adds r0, #0x46
    movs r1, #9
    b lbl_08079c1a
lbl_08079c10:
    cmp r0, #2
    bne lbl_08079c1c
    ldr r0, [r4]
    adds r0, #0x46
    movs r1, #0xc
lbl_08079c1a:
    strb r1, [r0]
lbl_08079c1c:
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0x44
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08079c30
    adds r1, r0, #0
    movs r0, #0
    bl sub_080790cc
lbl_08079c30:
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0x45
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08079c44
    adds r1, r0, #0
    movs r0, #0
    bl sub_080790cc
lbl_08079c44:
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0x46
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_08079c58
    adds r1, r0, #0
    movs r0, #0
    bl sub_080790cc
lbl_08079c58:
    ldr r1, [r4]
    b lbl_08079e3e
lbl_08079c5c:
    movs r5, #0
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x44
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_08079c7e
    adds r1, r0, #0
    movs r0, #1
    bl sub_080790cc
    cmp r0, #0
    beq lbl_08079cc6
    ldr r0, [r4]
    adds r0, #0x47
    strb r5, [r0]
    b lbl_08079ccc
lbl_08079c7e:
    adds r2, r1, #0
    adds r2, #0x45
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_08079c9e
    adds r1, r0, #0
    movs r0, #1
    bl sub_080790cc
    cmp r0, #0
    beq lbl_08079cc6
    ldr r0, [r4]
    adds r0, #0x47
    movs r1, #1
    strb r1, [r0]
    b lbl_08079ccc
lbl_08079c9e:
    adds r2, r1, #0
    adds r2, #0x46
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_08079cbe
    adds r1, r0, #0
    movs r0, #1
    bl sub_080790cc
    cmp r0, #0
    beq lbl_08079cc6
    ldr r0, [r4]
    adds r0, #0x47
    movs r1, #2
    strb r1, [r0]
    b lbl_08079ccc
lbl_08079cbe:
    adds r1, #0x40
    movs r0, #0xa
    strb r0, [r1]
    b lbl_08079ec0
lbl_08079cc6:
    cmp r5, #0
    bne lbl_08079ccc
    b lbl_08079ec0
lbl_08079ccc:
    movs r0, #0x26
    bl sub_0807e6d8
    ldr r0, lbl_08079ce0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x40
    movs r1, #2
    strb r1, [r0]
    b lbl_08079ec0
    .align 2, 0
lbl_08079ce0: .4byte 0x08754bc4
lbl_08079ce4:
    movs r0, #0x27
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_08079cf0
    b lbl_08079ec0
lbl_08079cf0:
    ldr r3, lbl_08079cf8 @ =0x08754bc4
    ldr r1, [r3]
    b lbl_08079e7e
    .align 2, 0
lbl_08079cf8: .4byte 0x08754bc4
lbl_08079cfc:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0x1e
    bhi lbl_08079d0a
    b lbl_08079ec0
lbl_08079d0a:
    b lbl_08079e3e
lbl_08079d0c:
    ldr r0, lbl_08079d30 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_08079d1a
    b lbl_08079ec0
lbl_08079d1a:
    ldr r1, lbl_08079d34 @ =0x03000c20
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_08079d38 @ =0x03000c1e
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x47
    ldrb r0, [r0]
    strb r0, [r2]
    b lbl_08079e3e
    .align 2, 0
lbl_08079d30: .4byte 0x03001380
lbl_08079d34: .4byte 0x03000c20
lbl_08079d38: .4byte 0x03000c1e
lbl_08079d3c:
    movs r0, #0
    bl sub_08000fbc
    cmp r0, #0
    bne lbl_08079d48
    b lbl_08079ec0
lbl_08079d48:
    ldr r1, lbl_08079d74 @ =0x03000c20
    movs r0, #0
    strb r0, [r1]
    ldr r2, lbl_08079d78 @ =0x03000c24
    ldr r0, lbl_08079d7c @ =0x03000c1e
    movs r1, #0
    ldrsb r1, [r0, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r1, r0, r2
    ldrb r0, [r1, #1]
    cmp r0, #1
    bne lbl_08079e3a
    movs r0, #0
    strb r0, [r1, #1]
    ldr r0, lbl_08079d80 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x40
    movs r1, #7
    strb r1, [r0]
    b lbl_08079ec0
    .align 2, 0
lbl_08079d74: .4byte 0x03000c20
lbl_08079d78: .4byte 0x03000c24
lbl_08079d7c: .4byte 0x03000c1e
lbl_08079d80: .4byte 0x08754bc4
lbl_08079d84:
    movs r0, #1
    bl sub_08000fbc
    cmp r0, #0
    bne lbl_08079d90
    b lbl_08079ec0
lbl_08079d90:
    ldr r1, lbl_08079d98 @ =0x03000c20
    movs r0, #0
    strb r0, [r1]
    b lbl_08079e3a
    .align 2, 0
lbl_08079d98: .4byte 0x03000c20
lbl_08079d9c:
    ldr r0, [r4]
    adds r0, #0x47
    ldrb r0, [r0]
    bl display_save_file_health
    ldr r0, [r4]
    adds r0, #0x47
    ldrb r0, [r0]
    bl sub_0807cdc4
    ldr r0, [r4]
    adds r0, #0x47
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    ldr r2, lbl_08079ddc @ =0x03000c24
    adds r0, r0, r2
    bl sub_0807cf98
    bl sub_0807d0b0
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x47
    ldrb r3, [r3]
    cmp r3, #0
    bne lbl_08079de0
    adds r0, #0x44
    strb r3, [r0]
    b lbl_08079df2
    .align 2, 0
lbl_08079ddc: .4byte 0x03000c24
lbl_08079de0:
    cmp r3, #1
    bne lbl_08079dea
    adds r1, r0, #0
    adds r1, #0x45
    b lbl_08079dee
lbl_08079dea:
    adds r1, r0, #0
    adds r1, #0x46
lbl_08079dee:
    movs r0, #0
    strb r0, [r1]
lbl_08079df2:
    ldr r0, lbl_08079e28 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x80
    lsls r3, r3, #4
    adds r1, r1, r3
    ldr r2, lbl_08079e2c @ =0x0600d800
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r3, lbl_08079e30 @ =0x08754bc4
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x47
    ldrb r0, [r0]
    adds r0, #0xc
    lsls r0, r0, #4
    adds r1, r1, r0
    adds r1, #0x7f
    ldrb r2, [r1]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    b lbl_08079e3e
    .align 2, 0
lbl_08079e28: .4byte 0x08754bb4
lbl_08079e2c: .4byte 0x0600d800
lbl_08079e30: .4byte 0x08754bc4
lbl_08079e34:
    movs r0, #0x28
    bl sub_0807e6d8
lbl_08079e3a:
    ldr r0, lbl_08079e48 @ =0x08754bc4
    ldr r1, [r0]
lbl_08079e3e:
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08079ec0
    .align 2, 0
lbl_08079e48: .4byte 0x08754bc4
lbl_08079e4c:
    movs r0, #0x29
    bl sub_0807e6d8
    cmp r0, #0
    beq lbl_08079ec0
    ldr r0, lbl_08079e64 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x40
    movs r1, #1
    strb r1, [r0]
    b lbl_08079ec0
    .align 2, 0
lbl_08079e64: .4byte 0x08754bc4
lbl_08079e68:
    movs r0, #2
    movs r1, #0xff
    bl sub_080790cc
    ldr r2, lbl_08079e90 @ =0x03000c1e
    ldr r3, lbl_08079e94 @ =0x08754bc4
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x24
    ldrb r0, [r0]
    strb r0, [r2]
lbl_08079e7e:
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r3]
    adds r0, #0x42
    strh r2, [r0]
    b lbl_08079ec0
    .align 2, 0
lbl_08079e90: .4byte 0x03000c1e
lbl_08079e94: .4byte 0x08754bc4
lbl_08079e98:
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0x10
    bls lbl_08079ec0
    adds r2, #0xef
    ldrb r1, [r2]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r2]
    ldr r0, [r4]
    adds r0, #0x24
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078504
    movs r0, #1
    b lbl_08079ec2
lbl_08079ec0:
    movs r0, #0
lbl_08079ec2:
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_08079ecc
sub_08079ecc: @ 0x08079ecc
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    sub sp, #4
    ldr r0, lbl_08079f9c @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xa2
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r2, lbl_08079fa0 @ =0x0600f000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r4, lbl_08079fa4 @ =0x08754bc4
    ldr r1, [r4]
    ldrh r0, [r1, #0x20]
    strh r0, [r1, #8]
    ldrh r2, [r1]
    movs r3, #0xa0
    lsls r3, r3, #5
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    adds r1, #0xff
    ldrb r3, [r1]
    movs r2, #0xd
    rsbs r2, r2, #0
    adds r0, r2, #0
    ands r0, r3
    movs r5, #4
    orrs r0, r5
    strb r0, [r1]
    ldr r1, [r4]
    ldr r0, lbl_08079fa8 @ =0x0000010f
    mov r8, r0
    add r1, r8
    ldrb r3, [r1]
    adds r0, r2, #0
    ands r0, r3
    orrs r0, r5
    strb r0, [r1]
    ldr r1, [r4]
    ldr r6, lbl_08079fac @ =0x0000011f
    adds r1, r1, r6
    ldrb r3, [r1]
    adds r0, r2, #0
    ands r0, r3
    orrs r0, r5
    strb r0, [r1]
    ldr r0, [r4]
    adds r0, #0xef
    ldrb r1, [r0]
    ands r2, r1
    orrs r2, r5
    strb r2, [r0]
    ldr r0, [r4]
    ldr r2, lbl_08079fb0 @ =0x0000013f
    adds r1, r0, r2
    ldrb r0, [r1]
    movs r2, #0x20
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r4]
    ldr r3, lbl_08079fb4 @ =0x0000014f
    adds r1, r0, r3
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r4]
    adds r3, #0x10
    adds r1, r0, r3
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r4]
    adds r1, #0xff
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r4]
    add r1, r8
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r4]
    adds r1, r1, r6
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r4]
    adds r1, #0xef
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08079f9c: .4byte 0x08754bb4
lbl_08079fa0: .4byte 0x0600f000
lbl_08079fa4: .4byte 0x08754bc4
lbl_08079fa8: .4byte 0x0000010f
lbl_08079fac: .4byte 0x0000011f
lbl_08079fb0: .4byte 0x0000013f
lbl_08079fb4: .4byte 0x0000014f

    thumb_func_start sub_08079fb8
sub_08079fb8: @ 0x08079fb8
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r0, lbl_0807a008 @ =0x0845e3ec
    ldr r1, lbl_0807a00c @ =0x08754bb4
    ldr r1, [r1]
    movs r2, #0xa2
    lsls r2, r2, #7
    adds r1, r1, r2
    bl CallLZ77UncompWRAM
    movs r5, #0
    ldr r1, lbl_0807a010 @ =0x08754bc4
    movs r2, #0
    mov ip, r1
lbl_08079fd4:
    ldr r0, [r1]
    adds r0, #0x5c
    adds r0, r0, r5
    strb r2, [r0]
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #6
    bls lbl_08079fd4
    mov r3, ip
    ldr r1, [r3]
    adds r4, r1, #0
    adds r4, #0x5c
    movs r0, #1
    strb r0, [r4]
    adds r4, #1
    movs r5, #2
lbl_08079ff6:
    subs r0, r5, #2
    cmp r0, #5
    bls lbl_08079ffe
    b lbl_0807a11e
lbl_08079ffe:
    lsls r0, r0, #2
    ldr r1, lbl_0807a014 @ =lbl_0807a018
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807a008: .4byte 0x0845e3ec
lbl_0807a00c: .4byte 0x08754bb4
lbl_0807a010: .4byte 0x08754bc4
lbl_0807a014: .4byte lbl_0807a018
lbl_0807a018: @ jump table
    .4byte lbl_0807a030 @ case 0
    .4byte lbl_0807a040 @ case 1
    .4byte lbl_0807a0a0 @ case 2
    .4byte lbl_0807a0f4 @ case 3
    .4byte lbl_0807a104 @ case 4
    .4byte lbl_0807a10c @ case 5
lbl_0807a030:
    ldr r0, lbl_0807a03c @ =0x03000014
    ldrb r1, [r0, #4]
    movs r0, #4
    ands r0, r1
    b lbl_0807a116
    .align 2, 0
lbl_0807a03c: .4byte 0x03000014
lbl_0807a040:
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0x64
    movs r7, #0
    movs r3, #0
    strb r3, [r0]
    ldr r0, [r1]
    adds r0, #0x65
    strb r3, [r0]
    ldr r6, lbl_0807a09c @ =0x03001694
    adds r0, r6, #0
    adds r0, #0x2c
    ldrb r0, [r0]
    cmp r0, #0xff
    beq lbl_0807a074
    ldr r2, [r1]
    adds r2, #0x64
    ldrb r0, [r2]
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    mov r2, ip
    ldr r0, [r2]
    adds r0, #0x65
    movs r1, #1
    strb r1, [r0]
lbl_0807a074:
    ldrb r0, [r6, #0x14]
    cmp r0, #0xff
    beq lbl_0807a090
    mov r0, ip
    ldr r2, [r0]
    adds r2, #0x64
    ldrb r0, [r2]
    movs r1, #1
    orrs r0, r1
    strb r0, [r2]
    mov r1, ip
    ldr r0, [r1]
    adds r0, #0x65
    strb r3, [r0]
lbl_0807a090:
    mov r2, ip
    ldr r0, [r2]
    adds r0, #0x64
    ldrb r0, [r0]
    b lbl_0807a116
    .align 2, 0
lbl_0807a09c: .4byte 0x03001694
lbl_0807a0a0:
    ldr r1, lbl_0807a0e4 @ =0x03000014
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807a11e
    strb r5, [r4]
    adds r4, #1
    ldrh r0, [r1]
    cmp r0, #0xff
    bne lbl_0807a11e
    ldr r1, lbl_0807a0e8 @ =0x08754bb4
    ldr r0, lbl_0807a0ec @ =0x08760bec
    ldrh r0, [r0, #8]
    lsls r0, r0, #1
    movs r3, #0xa2
    lsls r3, r3, #7
    adds r0, r0, r3
    ldr r1, [r1]
    adds r2, r1, r0
    ldr r7, lbl_0807a0f0 @ =0x00000fff
    movs r0, #0xe0
    lsls r0, r0, #8
    adds r6, r0, #0
    movs r3, #0x3f
lbl_0807a0ce:
    ldrh r1, [r2]
    adds r0, r7, #0
    ands r0, r1
    orrs r0, r6
    strh r0, [r2]
    subs r3, #1
    adds r2, #2
    cmp r3, #0
    bge lbl_0807a0ce
    b lbl_0807a11e
    .align 2, 0
lbl_0807a0e4: .4byte 0x03000014
lbl_0807a0e8: .4byte 0x08754bb4
lbl_0807a0ec: .4byte 0x08760bec
lbl_0807a0f0: .4byte 0x00000fff
lbl_0807a0f4:
    ldr r0, lbl_0807a100 @ =0x03000014
    ldrh r0, [r0, #2]
    cmp r0, #0
    beq lbl_0807a11e
    strb r5, [r4]
    b lbl_0807a11e
    .align 2, 0
lbl_0807a100: .4byte 0x03000014
lbl_0807a104:
    ldrb r0, [r4]
    cmp r0, #5
    beq lbl_0807a11c
    b lbl_0807a11a
lbl_0807a10c:
    ldr r1, lbl_0807a198 @ =0x03000014
    ldrh r0, [r1]
    cmp r0, #0
    bne lbl_0807a11a
    ldrb r0, [r1, #4]
lbl_0807a116:
    cmp r0, #0
    beq lbl_0807a11e
lbl_0807a11a:
    strb r5, [r4]
lbl_0807a11c:
    adds r4, #1
lbl_0807a11e:
    mov r2, ip
    ldr r1, [r2]
    adds r0, r1, #0
    adds r0, #0x62
    cmp r4, r0
    bhs lbl_0807a136
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #7
    bhi lbl_0807a136
    b lbl_08079ff6
lbl_0807a136:
    movs r5, #0
    adds r0, r1, #0
    adds r0, #0x5c
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807a190
    ldr r7, lbl_0807a19c @ =0x08760bec
    mov r4, ip
    ldr r6, lbl_0807a1a0 @ =0x08754bb4
lbl_0807a148:
    ldr r0, [r4]
    adds r0, #0x5c
    adds r0, r0, r5
    ldrb r0, [r0]
    lsls r0, r0, #1
    adds r1, r0, r7
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807a17e
    adds r1, r0, #0
    lsls r1, r1, #1
    movs r3, #0xa2
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, [r6]
    adds r1, r2, r1
    lsls r0, r5, #7
    movs r3, #0xa4
    lsls r3, r3, #7
    adds r0, r0, r3
    adds r2, r2, r0
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0x80
    bl DMATransfer
lbl_0807a17e:
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    ldr r0, [r4]
    adds r0, #0x5c
    adds r0, r0, r5
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807a148
lbl_0807a190:
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807a198: .4byte 0x03000014
lbl_0807a19c: .4byte 0x08760bec
lbl_0807a1a0: .4byte 0x08754bb4

    thumb_func_start copy_time_attack_time
copy_time_attack_time: @ 0x0807a1a4
    push {r4, r5, r6, r7, lr}
    ldr r7, lbl_0807a2b4 @ =0x08754bc4
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x64
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807a2ae
    adds r0, r1, #0
    adds r0, #0x48
    bl sub_0807f60c
    ldr r6, lbl_0807a2b8 @ =0x03001694
    ldrb r0, [r6, #0x14]
    movs r5, #0x63
    cmp r0, #0x62
    bhi lbl_0807a1c8
    adds r5, r0, #0
lbl_0807a1c8:
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __divsi3
    adds r4, #0x50
    strb r0, [r4]
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __modsi3
    adds r4, #0x51
    strb r0, [r4]
    ldrb r0, [r6, #0x15]
    movs r5, #0x3b
    cmp r0, #0x3a
    bhi lbl_0807a1ee
    adds r5, r0, #0
lbl_0807a1ee:
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __divsi3
    adds r4, #0x52
    strb r0, [r4]
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __modsi3
    adds r4, #0x53
    strb r0, [r4]
    ldrb r0, [r6, #0x16]
    movs r5, #0x3b
    cmp r0, #0x3a
    bhi lbl_0807a214
    adds r5, r0, #0
lbl_0807a214:
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __divsi3
    adds r4, #0x54
    strb r0, [r4]
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __modsi3
    adds r4, #0x55
    strb r0, [r4]
    adds r1, r6, #0
    adds r1, #0x2c
    ldrb r0, [r1]
    movs r5, #0x63
    cmp r0, #0x62
    bhi lbl_0807a23e
    adds r5, r0, #0
lbl_0807a23e:
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __divsi3
    adds r4, #0x56
    strb r0, [r4]
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __modsi3
    adds r4, #0x57
    strb r0, [r4]
    adds r1, r6, #0
    adds r1, #0x2d
    ldrb r0, [r1]
    movs r5, #0x3b
    cmp r0, #0x3a
    bhi lbl_0807a268
    adds r5, r0, #0
lbl_0807a268:
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __divsi3
    adds r4, #0x58
    strb r0, [r4]
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __modsi3
    adds r4, #0x59
    strb r0, [r4]
    adds r1, r6, #0
    adds r1, #0x2e
    ldrb r0, [r1]
    movs r5, #0x3b
    cmp r0, #0x3a
    bhi lbl_0807a292
    adds r5, r0, #0
lbl_0807a292:
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __divsi3
    adds r4, #0x5a
    strb r0, [r4]
    ldr r4, [r7]
    adds r0, r5, #0
    movs r1, #0xa
    bl __modsi3
    adds r4, #0x5b
    strb r0, [r4]
lbl_0807a2ae:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807a2b4: .4byte 0x08754bc4
lbl_0807a2b8: .4byte 0x03001694

    thumb_func_start sub_0807a2bc
sub_0807a2bc: @ 0x0807a2bc
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldr r2, lbl_0807a2ec @ =0x08754bc4
    ldr r1, [r2]
    adds r3, r1, #0
    adds r3, #0x42
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r7, r2, #0
    cmp r0, #0xc
    bls lbl_0807a2e2
    b lbl_0807a7d4
lbl_0807a2e2:
    lsls r0, r0, #2
    ldr r1, lbl_0807a2f0 @ =lbl_0807a2f4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807a2ec: .4byte 0x08754bc4
lbl_0807a2f0: .4byte lbl_0807a2f4
lbl_0807a2f4: @ jump table
    .4byte lbl_0807a328 @ case 0
    .4byte lbl_0807a346 @ case 1
    .4byte lbl_0807a454 @ case 2
    .4byte lbl_0807a4d4 @ case 3
    .4byte lbl_0807a50c @ case 4
    .4byte lbl_0807a524 @ case 5
    .4byte lbl_0807a562 @ case 6
    .4byte lbl_0807a578 @ case 7
    .4byte lbl_0807a608 @ case 8
    .4byte lbl_0807a648 @ case 9
    .4byte lbl_0807a66c @ case 10
    .4byte lbl_0807a6e4 @ case 11
    .4byte lbl_0807a7a0 @ case 12
lbl_0807a328:
    cmp r4, #0
    beq lbl_0807a334
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #7
    b lbl_0807a33a
lbl_0807a334:
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #1
lbl_0807a33a:
    strb r1, [r0]
    ldr r0, [r7]
    adds r0, #0x42
    movs r1, #0
    strh r1, [r0]
    b lbl_0807a7d4
lbl_0807a346:
    ldr r2, [r7]
    adds r0, r2, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #9
    bhi lbl_0807a354
    b lbl_0807a7d4
lbl_0807a354:
    ldr r0, lbl_0807a42c @ =0x030013b2
    movs r4, #0
    strh r4, [r0]
    ldr r1, lbl_0807a430 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    movs r0, #0
    mov r8, r0
    ldr r0, lbl_0807a434 @ =0x00003f42
    strh r0, [r2, #2]
    adds r4, r2, #0
    adds r4, #0xff
    ldrb r2, [r4]
    movs r1, #0xd
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r2
    movs r3, #4
    orrs r0, r3
    strb r0, [r4]
    ldr r0, [r7]
    ldr r2, lbl_0807a438 @ =0x0000010f
    adds r4, r0, r2
    ldrb r2, [r4]
    adds r0, r1, #0
    ands r0, r2
    orrs r0, r3
    strb r0, [r4]
    ldr r0, [r7]
    ldr r2, lbl_0807a43c @ =0x0000011f
    adds r4, r0, r2
    ldrb r2, [r4]
    adds r0, r1, #0
    ands r0, r2
    orrs r0, r3
    strb r0, [r4]
    ldr r0, [r7]
    adds r0, #0xef
    ldrb r2, [r0]
    ands r1, r2
    orrs r1, r3
    strb r1, [r0]
    ldr r0, [r7]
    ldr r3, lbl_0807a440 @ =0x0000013f
    adds r2, r0, r3
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r7]
    adds r3, #0x10
    adds r2, r0, r3
    ldrb r0, [r2]
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r7]
    adds r3, #0x10
    adds r2, r0, r3
    ldrb r0, [r2]
    orrs r0, r1
    strb r0, [r2]
    ldr r5, lbl_0807a444 @ =0x0600e000
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r5, #0
    adds r3, r6, #0
    bl BitFill
    ldr r0, lbl_0807a448 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xa2
    lsls r0, r0, #7
    adds r1, r1, r0
    str r4, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0xc0
    bl DMATransfer
    ldr r2, [r7]
    ldrh r0, [r2, #0x1e]
    strh r0, [r2, #4]
    ldrh r0, [r2]
    movs r3, #0x80
    lsls r3, r3, #1
    adds r1, r3, #0
    orrs r0, r1
    strh r0, [r2]
    ldr r0, lbl_0807a44c @ =0x03000bf4
    strh r6, [r0]
    ldr r1, lbl_0807a450 @ =0x03000bf6
    movs r3, #0xc0
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    adds r0, r2, #0
    adds r0, #0x42
    mov r1, r8
    strh r1, [r0]
    adds r2, #0x40
    ldrb r0, [r2]
    adds r0, #1
    strb r0, [r2]
    b lbl_0807a7d4
    .align 2, 0
lbl_0807a42c: .4byte 0x030013b2
lbl_0807a430: .4byte 0x030013b0
lbl_0807a434: .4byte 0x00003f42
lbl_0807a438: .4byte 0x0000010f
lbl_0807a43c: .4byte 0x0000011f
lbl_0807a440: .4byte 0x0000013f
lbl_0807a444: .4byte 0x0600e000
lbl_0807a448: .4byte 0x08754bb4
lbl_0807a44c: .4byte 0x03000bf4
lbl_0807a450: .4byte 0x03000bf6
lbl_0807a454:
    movs r2, #1
    ldr r1, lbl_0807a46c @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807a472
    movs r2, #0
    subs r0, #2
    cmp r0, #0
    bge lbl_0807a470
    strh r2, [r1]
    b lbl_0807a472
    .align 2, 0
lbl_0807a46c: .4byte 0x030013b0
lbl_0807a470:
    strh r0, [r1]
lbl_0807a472:
    ldr r1, lbl_0807a4c8 @ =0x030013b2
    ldrh r0, [r1]
    cmp r0, #0x10
    beq lbl_0807a486
    movs r2, #0
    adds r0, #2
    cmp r0, #0x10
    ble lbl_0807a484
    movs r0, #0x10
lbl_0807a484:
    strh r0, [r1]
lbl_0807a486:
    cmp r2, #0
    bne lbl_0807a48c
    b lbl_0807a7d4
lbl_0807a48c:
    ldr r1, [r7]
    adds r1, #0xff
    ldrb r0, [r1]
    movs r2, #0x20
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r7]
    ldr r3, lbl_0807a4cc @ =0x0000010f
    adds r1, r0, r3
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r7]
    adds r3, #0x10
    adds r1, r0, r3
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r7]
    adds r1, #0xef
    ldrb r0, [r1]
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r7]
    ldrh r2, [r1]
    ldr r0, lbl_0807a4d0 @ =0x0000fdff
    ands r0, r2
    strh r0, [r1]
    b lbl_0807a77e
    .align 2, 0
lbl_0807a4c8: .4byte 0x030013b2
lbl_0807a4cc: .4byte 0x0000010f
lbl_0807a4d0: .4byte 0x0000fdff
lbl_0807a4d4:
    ldr r1, lbl_0807a500 @ =0x03000bf6
    ldrh r0, [r1]
    ldr r2, lbl_0807a504 @ =0x000007ff
    cmp r0, r2
    bhi lbl_0807a4ec
    adds r0, #0x40
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r2
    bhi lbl_0807a4ec
    b lbl_0807a7d4
lbl_0807a4ec:
    movs r2, #0x80
    lsls r2, r2, #4
    adds r0, r2, #0
    strh r0, [r1]
    bl sub_08079fb8
    ldr r0, lbl_0807a508 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_0807a77e
    .align 2, 0
lbl_0807a500: .4byte 0x03000bf6
lbl_0807a504: .4byte 0x000007ff
lbl_0807a508: .4byte 0x08754bc4
lbl_0807a50c:
    bl sub_08079ecc
    ldr r0, lbl_0807a51c @ =0x08754bc4
    ldr r1, [r0]
    ldr r0, lbl_0807a520 @ =0x00003f54
    strh r0, [r1, #2]
    b lbl_0807a77e
    .align 2, 0
lbl_0807a51c: .4byte 0x08754bc4
lbl_0807a520: .4byte 0x00003f54
lbl_0807a524:
    movs r2, #1
    ldr r1, lbl_0807a550 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0x10
    beq lbl_0807a53a
    movs r2, #0
    adds r0, #2
    cmp r0, #0x10
    ble lbl_0807a538
    movs r0, #0x10
lbl_0807a538:
    strh r0, [r1]
lbl_0807a53a:
    ldr r1, lbl_0807a554 @ =0x030013b2
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807a55a
    movs r2, #0
    subs r0, #2
    cmp r0, #0
    bge lbl_0807a558
    strh r2, [r1]
    b lbl_0807a55a
    .align 2, 0
lbl_0807a550: .4byte 0x030013b0
lbl_0807a554: .4byte 0x030013b2
lbl_0807a558:
    strh r0, [r1]
lbl_0807a55a:
    cmp r2, #0
    bne lbl_0807a560
    b lbl_0807a7d4
lbl_0807a560:
    b lbl_0807a77c
lbl_0807a562:
    ldr r1, [r7]
    ldrh r2, [r1]
    ldr r0, lbl_0807a574 @ =0x0000fcff
    ands r0, r2
    movs r2, #0
    strh r0, [r1]
    strh r2, [r1, #2]
    movs r0, #1
    b lbl_0807a7d6
    .align 2, 0
lbl_0807a574: .4byte 0x0000fcff
lbl_0807a578:
    ldr r0, [r7]
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #3
    bhi lbl_0807a584
    b lbl_0807a7d4
lbl_0807a584:
    ldr r6, lbl_0807a5e4 @ =0x0600e000
    movs r4, #0x80
    lsls r4, r4, #4
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r6, #0
    adds r3, r4, #0
    bl BitFill
    ldr r0, lbl_0807a5e8 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0xa2
    lsls r3, r3, #7
    adds r1, r1, r3
    str r5, [sp]
    movs r0, #3
    adds r2, r6, #0
    movs r3, #0xc0
    bl DMATransfer
    ldr r1, lbl_0807a5ec @ =0x03000bf4
    ldr r0, lbl_0807a5f0 @ =0x03000bf6
    strh r4, [r0]
    strh r4, [r1]
    ldr r1, [r7]
    movs r2, #0
    ldr r0, lbl_0807a5f4 @ =0x00003f54
    strh r0, [r1, #2]
    ldr r0, lbl_0807a5f8 @ =0x030013b2
    strh r2, [r0]
    ldr r0, lbl_0807a5fc @ =0x030013b0
    strh r5, [r0]
    ldr r0, lbl_0807a600 @ =0x03000bf8
    strh r4, [r0]
    ldr r0, lbl_0807a604 @ =0x03000bfa
    strh r4, [r0]
    ldrh r0, [r1, #0x1e]
    strh r0, [r1, #4]
    ldrh r2, [r1]
    movs r3, #0x80
    lsls r3, r3, #1
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    b lbl_0807a77e
    .align 2, 0
lbl_0807a5e4: .4byte 0x0600e000
lbl_0807a5e8: .4byte 0x08754bb4
lbl_0807a5ec: .4byte 0x03000bf4
lbl_0807a5f0: .4byte 0x03000bf6
lbl_0807a5f4: .4byte 0x00003f54
lbl_0807a5f8: .4byte 0x030013b2
lbl_0807a5fc: .4byte 0x030013b0
lbl_0807a600: .4byte 0x03000bf8
lbl_0807a604: .4byte 0x03000bfa
lbl_0807a608:
    movs r2, #1
    ldr r1, lbl_0807a620 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807a626
    movs r2, #0
    subs r0, #2
    cmp r0, #0
    bge lbl_0807a624
    strh r2, [r1]
    b lbl_0807a626
    .align 2, 0
lbl_0807a620: .4byte 0x030013b0
lbl_0807a624:
    strh r0, [r1]
lbl_0807a626:
    ldr r1, lbl_0807a644 @ =0x030013b2
    ldrh r0, [r1]
    cmp r0, #0x10
    beq lbl_0807a63a
    movs r2, #0
    adds r0, #2
    cmp r0, #0x10
    ble lbl_0807a638
    movs r0, #0x10
lbl_0807a638:
    strh r0, [r1]
lbl_0807a63a:
    cmp r2, #0
    bne lbl_0807a640
    b lbl_0807a7d4
lbl_0807a640:
    b lbl_0807a77c
    .align 2, 0
lbl_0807a644: .4byte 0x030013b2
lbl_0807a648:
    ldr r2, lbl_0807a668 @ =0x03000bf6
    ldrh r0, [r2]
    movs r1, #0xc0
    lsls r1, r1, #3
    cmp r0, r1
    bls lbl_0807a662
    subs r0, #0x40
    strh r0, [r2]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, r1
    bls lbl_0807a662
    b lbl_0807a7d4
lbl_0807a662:
    strh r1, [r2]
    b lbl_0807a77c
    .align 2, 0
lbl_0807a668: .4byte 0x03000bf6
lbl_0807a66c:
    ldr r0, [r7]
    adds r0, #0x3f
    movs r1, #5
    strb r1, [r0]
    ldr r1, [r7]
    ldrh r0, [r1, #0x18]
    strh r0, [r1, #6]
    ldrh r2, [r1]
    ldr r0, lbl_0807a6d4 @ =0x0000fbff
    ands r0, r2
    movs r3, #0x90
    lsls r3, r3, #5
    adds r2, r3, #0
    orrs r0, r2
    strh r0, [r1]
    adds r1, #0x3f
    ldrb r1, [r1]
    movs r0, #0
    bl sub_08078504
    ldr r1, [r7]
    adds r1, #0xff
    ldrb r3, [r1]
    movs r2, #0x21
    rsbs r2, r2, #0
    adds r0, r2, #0
    ands r0, r3
    strb r0, [r1]
    ldr r0, [r7]
    ldr r1, lbl_0807a6d8 @ =0x0000010f
    adds r3, r0, r1
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r7]
    ldr r1, lbl_0807a6dc @ =0x0000011f
    adds r3, r0, r1
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r7]
    adds r0, #0xef
    ldrb r1, [r0]
    ands r2, r1
    strb r2, [r0]
    ldr r1, [r7]
    ldr r0, lbl_0807a6e0 @ =0x00003f42
    strh r0, [r1, #2]
    b lbl_0807a77e
    .align 2, 0
lbl_0807a6d4: .4byte 0x0000fbff
lbl_0807a6d8: .4byte 0x0000010f
lbl_0807a6dc: .4byte 0x0000011f
lbl_0807a6e0: .4byte 0x00003f42
lbl_0807a6e4:
    movs r2, #1
    ldr r1, lbl_0807a6fc @ =0x030013b2
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807a702
    movs r2, #0
    subs r0, #2
    cmp r0, #0
    bge lbl_0807a700
    strh r2, [r1]
    b lbl_0807a702
    .align 2, 0
lbl_0807a6fc: .4byte 0x030013b2
lbl_0807a700:
    strh r0, [r1]
lbl_0807a702:
    ldr r1, lbl_0807a788 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0x10
    beq lbl_0807a716
    movs r2, #0
    adds r0, #2
    cmp r0, #0x10
    ble lbl_0807a714
    movs r0, #0x10
lbl_0807a714:
    strh r0, [r1]
lbl_0807a716:
    cmp r2, #0
    beq lbl_0807a7d4
    ldr r1, [r7]
    adds r1, #0xff
    ldrb r3, [r1]
    movs r2, #0xd
    rsbs r2, r2, #0
    adds r0, r2, #0
    ands r0, r3
    strb r0, [r1]
    ldr r0, [r7]
    ldr r1, lbl_0807a78c @ =0x0000010f
    adds r3, r0, r1
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r7]
    ldr r1, lbl_0807a790 @ =0x0000011f
    adds r3, r0, r1
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r7]
    adds r0, #0xef
    ldrb r1, [r0]
    ands r2, r1
    strb r2, [r0]
    ldr r0, [r7]
    ldr r2, lbl_0807a794 @ =0x0000013f
    adds r3, r0, r2
    ldrb r2, [r3]
    movs r1, #0x21
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r7]
    ldr r2, lbl_0807a798 @ =0x0000014f
    adds r3, r0, r2
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r7]
    ldr r3, lbl_0807a79c @ =0x0000015f
    adds r2, r0, r3
    ldrb r0, [r2]
    ands r1, r0
    strb r1, [r2]
lbl_0807a77c:
    ldr r1, [r7]
lbl_0807a77e:
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0807a7d4
    .align 2, 0
lbl_0807a788: .4byte 0x030013b0
lbl_0807a78c: .4byte 0x0000010f
lbl_0807a790: .4byte 0x0000011f
lbl_0807a794: .4byte 0x0000013f
lbl_0807a798: .4byte 0x0000014f
lbl_0807a79c: .4byte 0x0000015f
lbl_0807a7a0:
    ldr r2, [r7]
    ldrh r1, [r2]
    ldr r0, lbl_0807a7c4 @ =0x0000feff
    ands r0, r1
    movs r3, #0
    strh r0, [r2]
    ldr r0, lbl_0807a7c8 @ =0x03000bf4
    movs r2, #0x80
    lsls r2, r2, #4
    adds r1, r2, #0
    strh r1, [r0]
    ldr r0, lbl_0807a7cc @ =0x03000bf6
    strh r1, [r0]
    ldr r0, lbl_0807a7d0 @ =0x03000c74
    strb r3, [r0]
    movs r0, #1
    b lbl_0807a7d6
    .align 2, 0
lbl_0807a7c4: .4byte 0x0000feff
lbl_0807a7c8: .4byte 0x03000bf4
lbl_0807a7cc: .4byte 0x03000bf6
lbl_0807a7d0: .4byte 0x03000c74
lbl_0807a7d4:
    movs r0, #0
lbl_0807a7d6:
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start settings_subroutine
settings_subroutine: @ 0x0807a7e4
    push {r4, r5, r6, lr}
    ldr r1, lbl_0807a800 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x3e
    ldrb r0, [r0]
    adds r4, r1, #0
    cmp r0, #5
    bls lbl_0807a7f6
    b lbl_0807aa20
lbl_0807a7f6:
    lsls r0, r0, #2
    ldr r1, lbl_0807a804 @ =lbl_0807a808
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807a800: .4byte 0x08754bc4
lbl_0807a804: .4byte lbl_0807a808
lbl_0807a808: @ jump table
    .4byte lbl_0807a820 @ case 0
    .4byte lbl_0807a870 @ case 1
    .4byte lbl_0807a88a @ case 2
    .4byte lbl_0807a96c @ case 3
    .4byte lbl_0807a9f8 @ case 4
    .4byte lbl_0807aa14 @ case 5
lbl_0807a820:
    ldr r0, [r4]
    ldr r2, lbl_0807a868 @ =0x03000bf3
    movs r1, #0
    ldrsb r1, [r2, r1]
    adds r0, #0x5c
    adds r0, r0, r1
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807a840
    ldrb r0, [r2]
    lsls r0, r0, #0x18
    cmp r0, #0
    blt lbl_0807a840
    lsrs r0, r0, #0x18
    cmp r0, #6
    bls lbl_0807a844
lbl_0807a840:
    movs r0, #0
    strb r0, [r2]
lbl_0807a844:
    movs r0, #0
    bl sub_08078b98
    bl sub_0807b008
    ldr r0, lbl_0807a86c @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    movs r3, #0xa0
    lsls r3, r3, #5
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    adds r1, #0x3e
    movs r0, #2
    strb r0, [r1]
    b lbl_0807aa20
    .align 2, 0
lbl_0807a868: .4byte 0x03000bf3
lbl_0807a86c: .4byte 0x08754bc4
lbl_0807a870:
    ldr r0, [r4]
    ldrh r0, [r0, #0x3c]
    cmp r0, #0x10
    bhi lbl_0807a87a
    b lbl_0807aa20
lbl_0807a87a:
    movs r0, #0
    bl sub_08078b98
    ldr r0, [r4]
    adds r0, #0x3e
    movs r1, #2
    strb r1, [r0]
    b lbl_0807aa20
lbl_0807a88a:
    bl check_for_maintained_input
    ldr r0, lbl_0807a8b8 @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    bne lbl_0807a898
    b lbl_0807aa20
lbl_0807a898:
    movs r0, #2
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #0
    beq lbl_0807a8c4
    ldr r0, lbl_0807a8bc @ =0x00000209
    bl SoundPlay
    ldr r0, lbl_0807a8c0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3e
    movs r1, #4
    strb r1, [r0]
    b lbl_0807aa20
    .align 2, 0
lbl_0807a8b8: .4byte 0x03001380
lbl_0807a8bc: .4byte 0x00000209
lbl_0807a8c0: .4byte 0x08754bc4
lbl_0807a8c4:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807a918
    ldr r5, lbl_0807a910 @ =0x08754bc4
    ldr r0, [r5]
    ldr r1, lbl_0807a914 @ =0x03000bf3
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r0, #0x5c
    adds r0, r0, r1
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807a8e4
    b lbl_0807aa20
lbl_0807a8e4:
    movs r0, #2
    bl sub_08078b98
    ldr r0, [r5]
    adds r0, #0x40
    strb r4, [r0]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x42
    strh r4, [r0]
    adds r0, #0x26
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    bl reset_io_transfter_info
    ldr r0, [r5]
    adds r0, #0x3e
    movs r1, #3
    strb r1, [r0]
    b lbl_0807aa20
    .align 2, 0
lbl_0807a910: .4byte 0x08754bc4
lbl_0807a914: .4byte 0x03000bf3
lbl_0807a918:
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_0807a938
    ldr r1, lbl_0807a934 @ =0x03000bf3
    ldrb r2, [r1]
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r0, #0
    bne lbl_0807a92e
    b lbl_0807aa20
lbl_0807a92e:
    subs r0, r2, #1
    strb r0, [r1]
    b lbl_0807a95a
    .align 2, 0
lbl_0807a934: .4byte 0x03000bf3
lbl_0807a938:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0807aa20
    ldr r0, lbl_0807a964 @ =0x08754bc4
    ldr r0, [r0]
    ldr r2, lbl_0807a968 @ =0x03000bf3
    movs r1, #0
    ldrsb r1, [r2, r1]
    adds r0, r0, r1
    adds r0, #0x5d
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807aa20
    ldrb r0, [r2]
    adds r0, #1
    strb r0, [r2]
lbl_0807a95a:
    movs r0, #1
    bl sub_08078b98
    b lbl_0807aa20
    .align 2, 0
lbl_0807a964: .4byte 0x08754bc4
lbl_0807a968: .4byte 0x03000bf3
lbl_0807a96c:
    ldr r6, lbl_0807a9ac @ =0x08760bfc
    ldr r0, [r4]
    ldr r5, lbl_0807a9b0 @ =0x03000bf3
    movs r1, #0
    ldrsb r1, [r5, r1]
    adds r0, #0x5c
    adds r0, r0, r1
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807aa20
    cmp r0, #2
    bne lbl_0807a9b8
    ldr r2, lbl_0807a9b4 @ =0x03000c74
    ldr r0, [r4]
    movs r1, #0
    ldrsb r1, [r5, r1]
    adds r0, #0x5c
    adds r0, r0, r1
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r6
    ldrb r0, [r0, #4]
    strb r0, [r2]
    adds r1, r2, #0
    b lbl_0807a9be
    .align 2, 0
lbl_0807a9ac: .4byte 0x08760bfc
lbl_0807a9b0: .4byte 0x03000bf3
lbl_0807a9b4: .4byte 0x03000c74
lbl_0807a9b8:
    ldr r1, lbl_0807a9d0 @ =0x03000c74
    movs r0, #0
    strb r0, [r1]
lbl_0807a9be:
    movs r0, #0
    ldrsb r0, [r1, r0]
    cmp r0, #0
    beq lbl_0807a9d8
    ldr r0, lbl_0807a9d4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3e
    movs r1, #5
    b lbl_0807a9e6
    .align 2, 0
lbl_0807a9d0: .4byte 0x03000c74
lbl_0807a9d4: .4byte 0x08754bc4
lbl_0807a9d8:
    movs r0, #3
    bl sub_08078b98
    ldr r0, lbl_0807a9f4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3e
    movs r1, #2
lbl_0807a9e6:
    strb r1, [r0]
    ldr r0, lbl_0807a9f4 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #0x3c]
    b lbl_0807aa20
    .align 2, 0
lbl_0807a9f4: .4byte 0x08754bc4
lbl_0807a9f8:
    ldr r0, [r4]
    adds r0, #0x63
    movs r4, #0
    strb r4, [r0]
    movs r0, #0xa
    bl sub_0800427c
    ldr r0, lbl_0807aa10 @ =0x03000c74
    strb r4, [r0]
    movs r0, #1
    b lbl_0807aa26
    .align 2, 0
lbl_0807aa10: .4byte 0x03000c74
lbl_0807aa14:
    ldr r0, [r4]
    ldrh r0, [r0, #0x3c]
    cmp r0, #0xa
    bls lbl_0807aa20
    movs r0, #1
    b lbl_0807aa26
lbl_0807aa20:
    bl sub_08078da0
    movs r0, #0
lbl_0807aa26:
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start reset_io_transfter_info
reset_io_transfter_info: @ 0x0807aa2c
    push {r4, r5, lr}
    ldr r0, lbl_0807aa60 @ =0x08754bc4
    ldr r0, [r0]
    ldr r1, lbl_0807aa64 @ =0x03000bf3
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    adds r0, #0x5c
    adds r0, r0, r1
    ldrb r0, [r0]
    cmp r0, #6
    bgt lbl_0807aa5a
    cmp r0, #5
    blt lbl_0807aa5a
    ldr r2, lbl_0807aa68 @ =0x03005808
    adds r1, r2, #0
    ldr r0, lbl_0807aa6c @ =0x085d914c
    ldm r0!, {r3, r4, r5}
    stm r1!, {r3, r4, r5}
    ldm r0!, {r3, r4, r5}
    stm r1!, {r3, r4, r5}
    ldr r0, lbl_0807aa70 @ =file_select_menu_process_oam
    str r0, [r2]
lbl_0807aa5a:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807aa60: .4byte 0x08754bc4
lbl_0807aa64: .4byte 0x03000bf3
lbl_0807aa68: .4byte 0x03005808
lbl_0807aa6c: .4byte 0x085d914c
lbl_0807aa70: .4byte file_select_menu_process_oam

    thumb_func_start nes_metroid_subroutine
nes_metroid_subroutine: @ 0x0807aa74
    push {r4, r5, lr}
    ldr r2, lbl_0807aa9c @ =0x08754bc4
    ldr r1, [r2]
    adds r3, r1, #0
    adds r3, #0x42
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r4, r2, #0
    cmp r0, #4
    bls lbl_0807aa90
    b lbl_0807abb0
lbl_0807aa90:
    lsls r0, r0, #2
    ldr r1, lbl_0807aaa0 @ =lbl_0807aaa4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807aa9c: .4byte 0x08754bc4
lbl_0807aaa0: .4byte lbl_0807aaa4
lbl_0807aaa4: @ jump table
    .4byte lbl_0807aab8 @ case 0
    .4byte lbl_0807aaf8 @ case 1
    .4byte lbl_0807ab30 @ case 2
    .4byte lbl_0807ab58 @ case 3
    .4byte lbl_0807ab98 @ case 4
lbl_0807aab8:
    ldr r0, lbl_0807aadc @ =0x03001380
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0
    beq lbl_0807aae0
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x42
    movs r2, #0
    movs r1, #0
    strh r1, [r3]
    adds r0, #0x40
    strb r2, [r0]
lbl_0807aad8:
    movs r0, #1
    b lbl_0807abb2
    .align 2, 0
lbl_0807aadc: .4byte 0x03001380
lbl_0807aae0:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0xa
    bls lbl_0807abb0
    adds r0, r1, #0
    adds r0, #0x40
    ldrb r1, [r0]
    adds r1, #1
    strb r1, [r0]
    b lbl_0807ab20
lbl_0807aaf8:
    movs r2, #0
    ldr r5, lbl_0807ab28 @ =0x087d80a0
    ldr r3, lbl_0807ab2c @ =0x0845f440
lbl_0807aafe:
    adds r0, r2, r5
    adds r1, r2, r3
    ldrb r0, [r0]
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_0807aad8
    adds r0, r2, #1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    cmp r2, #0x11
    bls lbl_0807aafe
    ldr r1, [r4]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
lbl_0807ab20:
    ldr r0, [r4]
    adds r0, #0x42
    strh r2, [r0]
    b lbl_0807abb0
    .align 2, 0
lbl_0807ab28: .4byte 0x087d80a0
lbl_0807ab2c: .4byte 0x0845f440
lbl_0807ab30:
    bl sub_080033dc
    ldr r2, lbl_0807ab50 @ =0x08754bc4
    ldr r1, [r2]
    movs r3, #0
    movs r0, #0xff
    strh r0, [r1, #2]
    ldr r0, lbl_0807ab54 @ =0x030013ae
    strh r3, [r0]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r2]
    b lbl_0807ab8a
    .align 2, 0
lbl_0807ab50: .4byte 0x08754bc4
lbl_0807ab54: .4byte 0x030013ae
lbl_0807ab58:
    ldr r2, lbl_0807ab90 @ =0x030013ae
    ldrh r0, [r2]
    adds r0, #2
    strh r0, [r2]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0xf
    bls lbl_0807abb0
    movs r1, #0xa0
    lsls r1, r1, #0x13
    movs r0, #0
    strh r0, [r1]
    ldr r1, [r4]
    movs r3, #0
    strh r3, [r1, #2]
    strh r3, [r2]
    ldrh r2, [r1]
    ldr r0, lbl_0807ab94 @ =0x0000e0ff
    ands r0, r2
    strh r0, [r1]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r4]
lbl_0807ab8a:
    adds r0, #0x42
    strh r3, [r0]
    b lbl_0807abb0
    .align 2, 0
lbl_0807ab90: .4byte 0x030013ae
lbl_0807ab94: .4byte 0x0000e0ff
lbl_0807ab98:
    ldr r1, lbl_0807abb8 @ =0x04000208
    movs r0, #0
    strh r0, [r1]
    subs r1, #6
    ldr r2, lbl_0807abbc @ =0x0000ffff
    adds r0, r2, #0
    strh r0, [r1]
    movs r0, #0x80
    lsls r0, r0, #0x14
    ldr r1, lbl_0807abc0 @ =0x087d8000
    bl _call_via_r1
lbl_0807abb0:
    movs r0, #0
lbl_0807abb2:
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807abb8: .4byte 0x04000208
lbl_0807abbc: .4byte 0x0000ffff
lbl_0807abc0: .4byte 0x087d8000

    thumb_func_start sub_0807abc4
sub_0807abc4: @ 0x0807abc4
    push {lr}
    ldr r0, lbl_0807abe8 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x42
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    ldr r0, lbl_0807abec @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_0807abf0
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807abf0
    movs r0, #1
    b lbl_0807abf2
    .align 2, 0
lbl_0807abe8: .4byte 0x08754bc4
lbl_0807abec: .4byte 0x03001380
lbl_0807abf0:
    movs r0, #0
lbl_0807abf2:
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0807abf8
sub_0807abf8: @ 0x0807abf8
    push {r4, r5, r6, lr}
    ldr r0, lbl_0807ac28 @ =0x08754bc4
    ldr r3, [r0]
    adds r1, r3, #0
    adds r1, #0x42
    ldrh r0, [r1]
    adds r5, r0, #1
    movs r6, #0
    strh r5, [r1]
    ldr r0, lbl_0807ac2c @ =0x03001380
    ldrh r2, [r0]
    movs r0, #2
    ands r0, r2
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #0
    beq lbl_0807ac30
    movs r0, #0
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0x40
    strb r6, [r0]
    movs r0, #1
    b lbl_0807ac4e
    .align 2, 0
lbl_0807ac28: .4byte 0x08754bc4
lbl_0807ac2c: .4byte 0x03001380
lbl_0807ac30:
    movs r0, #1
    ands r0, r2
    cmp r0, #0
    bne lbl_0807ac40
    lsls r0, r5, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0xa
    bls lbl_0807ac4c
lbl_0807ac40:
    strh r4, [r1]
    adds r0, r3, #0
    adds r0, #0x40
    strb r6, [r0]
    movs r0, #2
    b lbl_0807ac4e
lbl_0807ac4c:
    movs r0, #0
lbl_0807ac4e:
    pop {r4, r5, r6}
    pop {r1}
    bx r1

    thumb_func_start stereo_selection_subroutine
stereo_selection_subroutine: @ 0x0807ac54
    push {r4, r5, lr}
    ldr r4, lbl_0807ac70 @ =0x08754bc4
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x40
    ldrb r2, [r3]
    cmp r2, #1
    beq lbl_0807ac86
    cmp r2, #1
    bgt lbl_0807ac74
    cmp r2, #0
    beq lbl_0807ac7e
    b lbl_0807ad08
    .align 2, 0
lbl_0807ac70: .4byte 0x08754bc4
lbl_0807ac74:
    cmp r2, #2
    beq lbl_0807ace4
    cmp r2, #3
    beq lbl_0807acfa
    b lbl_0807ad08
lbl_0807ac7e:
    movs r0, #2
    bl sub_08078ca0
    b lbl_0807acee
lbl_0807ac86:
    movs r5, #0
    ldr r0, lbl_0807aca4 @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_0807ad08
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    beq lbl_0807aca8
    movs r0, #0xfe
    lsls r0, r0, #1
    bl SoundPlay
    b lbl_0807acee
    .align 2, 0
lbl_0807aca4: .4byte 0x03001380
lbl_0807aca8:
    ldr r3, lbl_0807acbc @ =0x03000004
    ldrb r0, [r3]
    cmp r0, #0
    bne lbl_0807acc0
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0807accc
    strb r2, [r3]
    b lbl_0807acd0
    .align 2, 0
lbl_0807acbc: .4byte 0x03000004
lbl_0807acc0:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0807accc
    strb r5, [r3]
    movs r5, #1
lbl_0807accc:
    cmp r5, #0
    beq lbl_0807ad08
lbl_0807acd0:
    movs r0, #0xfd
    lsls r0, r0, #1
    bl SoundPlay
    movs r0, #2
    bl sub_08078ca0
    bl sub_08078228
    b lbl_0807ad08
lbl_0807ace4:
    movs r0, #1
    bl sub_08078ca0
    bl sub_08074b6c
lbl_0807acee:
    ldr r1, [r4]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0807ad08
lbl_0807acfa:
    adds r0, #0x42
    movs r2, #0
    movs r1, #0
    strh r1, [r0]
    strb r2, [r3]
    movs r0, #1
    b lbl_0807ad0a
lbl_0807ad08:
    movs r0, #0
lbl_0807ad0a:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sound_test_subroutine
sound_test_subroutine: @ 0x0807ad10
    push {r4, r5, lr}
    ldr r2, lbl_0807ad38 @ =0x08754bc4
    ldr r1, [r2]
    adds r3, r1, #0
    adds r3, #0x42
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r4, r2, #0
    cmp r0, #8
    bls lbl_0807ad2c
    b lbl_0807b000
lbl_0807ad2c:
    lsls r0, r0, #2
    ldr r1, lbl_0807ad3c @ =lbl_0807ad40
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807ad38: .4byte 0x08754bc4
lbl_0807ad3c: .4byte lbl_0807ad40
lbl_0807ad40: @ jump table
    .4byte lbl_0807ad64 @ case 0
    .4byte lbl_0807add8 @ case 1
    .4byte lbl_0807ae1c @ case 2
    .4byte lbl_0807af08 @ case 3
    .4byte lbl_0807af30 @ case 4
    .4byte lbl_0807af6c @ case 5
    .4byte lbl_0807af80 @ case 6
    .4byte lbl_0807afcc @ case 7
    .4byte lbl_0807afec @ case 8
lbl_0807ad64:
    bl sub_0807b008
    cmp r0, #0
    beq lbl_0807ad80
    ldr r1, lbl_0807adc4 @ =0x08760bac
    ldr r0, lbl_0807adc8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x63
    ldrb r0, [r0]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    bl sub_08004228
lbl_0807ad80:
    bl sub_0807b094
    ldr r0, lbl_0807adcc @ =0x000001fd
    bl SoundPlay
    ldr r5, lbl_0807adc8 @ =0x08754bc4
    ldr r0, [r5]
    movs r4, #0x95
    lsls r4, r4, #2
    adds r0, r0, r4
    movs r1, #0xe
    bl sub_08068128
    ldr r1, [r5]
    ldr r2, lbl_0807add0 @ =0x00000226
    adds r0, r1, r2
    ldrh r2, [r0]
    ldr r3, lbl_0807add4 @ =0x00000256
    adds r0, r1, r3
    strh r2, [r0]
    movs r2, #0x89
    lsls r2, r2, #2
    adds r0, r1, r2
    ldrh r0, [r0]
    adds r4, r1, r4
    strh r0, [r4]
    adds r3, #9
    adds r1, r1, r3
    ldrb r0, [r1]
    movs r2, #3
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r5]
    b lbl_0807afde
    .align 2, 0
lbl_0807adc4: .4byte 0x08760bac
lbl_0807adc8: .4byte 0x08754bc4
lbl_0807adcc: .4byte 0x000001fd
lbl_0807add0: .4byte 0x00000226
lbl_0807add4: .4byte 0x00000256
lbl_0807add8:
    ldr r2, [r4]
    ldr r1, lbl_0807ae18 @ =0x0000025f
    adds r0, r2, r1
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    bne lbl_0807adea
    b lbl_0807b000
lbl_0807adea:
    movs r3, #0x89
    lsls r3, r3, #2
    adds r0, r2, r3
    movs r1, #7
    bl sub_08068128
    ldr r0, [r4]
    movs r1, #0x8d
    lsls r1, r1, #2
    adds r0, r0, r1
    movs r1, #9
    bl sub_08068128
    ldr r0, [r4]
    movs r2, #0x91
    lsls r2, r2, #2
    adds r0, r0, r2
    movs r1, #0xb
    bl sub_08068128
    ldr r1, [r4]
    b lbl_0807afde
    .align 2, 0
lbl_0807ae18: .4byte 0x0000025f
lbl_0807ae1c:
    movs r5, #0
    ldr r0, lbl_0807ae38 @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_0807aed6
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807ae3c
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #6
    strb r1, [r0]
    b lbl_0807aed6
    .align 2, 0
lbl_0807ae38: .4byte 0x03001380
lbl_0807ae3c:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807ae6c
    ldr r1, lbl_0807ae68 @ =0x08760bac
    ldr r0, [r4]
    adds r0, #0x63
    ldrb r0, [r0]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    bl sub_08004260
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x42
    strh r5, [r3]
    adds r0, #0x40
    movs r1, #5
    strb r1, [r0]
    b lbl_0807aed6
    .align 2, 0
lbl_0807ae68: .4byte 0x08760bac
lbl_0807ae6c:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0807aea0
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0x63
    ldrb r0, [r1]
    cmp r0, #0x16
    bhi lbl_0807ae84
    adds r0, #1
    b lbl_0807ae86
lbl_0807ae84:
    movs r0, #1
lbl_0807ae86:
    strb r0, [r1]
    ldr r0, [r4]
    movs r3, #0x91
    lsls r3, r3, #2
    adds r0, r0, r3
    movs r1, #0xa
    bl sub_08068128
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #3
    strb r1, [r0]
    b lbl_0807aedc
lbl_0807aea0:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0807aed6
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0x63
    ldrb r0, [r1]
    cmp r0, #1
    bls lbl_0807aeb8
    subs r0, #1
    b lbl_0807aeba
lbl_0807aeb8:
    movs r0, #0x17
lbl_0807aeba:
    strb r0, [r1]
    ldr r0, [r4]
    movs r1, #0x8d
    lsls r1, r1, #2
    adds r0, r0, r1
    movs r1, #8
    bl sub_08068128
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #4
    strb r1, [r0]
    movs r5, #1
    rsbs r5, r5, #0
lbl_0807aed6:
    cmp r5, #0
    bne lbl_0807aedc
    b lbl_0807b000
lbl_0807aedc:
    ldr r0, lbl_0807aefc @ =0x0000020e
    bl SoundPlay
    ldr r1, lbl_0807af00 @ =0x08760bac
    ldr r0, lbl_0807af04 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x63
    ldrb r0, [r0]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    bl sub_08004228
    bl sub_0807b094
    b lbl_0807b000
    .align 2, 0
lbl_0807aefc: .4byte 0x0000020e
lbl_0807af00: .4byte 0x08760bac
lbl_0807af04: .4byte 0x08754bc4
lbl_0807af08:
    ldr r2, [r4]
    ldr r3, lbl_0807af28 @ =0x0000024e
    adds r0, r2, r3
    ldrb r0, [r0]
    cmp r0, #0xa
    beq lbl_0807b000
    movs r1, #0x8f
    lsls r1, r1, #2
    adds r0, r2, r1
    ldrb r1, [r0]
    subs r3, #2
    adds r0, r2, r3
    strb r1, [r0]
    ldr r0, [r4]
    ldr r2, lbl_0807af2c @ =0x0000023d
    b lbl_0807af4e
    .align 2, 0
lbl_0807af28: .4byte 0x0000024e
lbl_0807af2c: .4byte 0x0000023d
lbl_0807af30:
    ldr r2, [r4]
    ldr r1, lbl_0807af64 @ =0x0000023e
    adds r0, r2, r1
    ldrb r0, [r0]
    cmp r0, #8
    beq lbl_0807b000
    movs r3, #0x93
    lsls r3, r3, #2
    adds r0, r2, r3
    ldrb r1, [r0]
    subs r3, #0x10
    adds r0, r2, r3
    strb r1, [r0]
    ldr r0, [r4]
    ldr r2, lbl_0807af68 @ =0x0000024d
lbl_0807af4e:
    adds r1, r0, r2
    ldrb r1, [r1]
    adds r3, #1
    adds r0, r0, r3
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #2
    strb r1, [r0]
    b lbl_0807b000
    .align 2, 0
lbl_0807af64: .4byte 0x0000023e
lbl_0807af68: .4byte 0x0000024d
lbl_0807af6c:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0x1e
    bls lbl_0807b000
    adds r1, #0x40
    movs r0, #2
    strb r0, [r1]
    b lbl_0807b000
lbl_0807af80:
    movs r0, #0xff
    lsls r0, r0, #1
    bl SoundPlay
    ldr r4, lbl_0807afc4 @ =0x08754bc4
    ldr r0, [r4]
    movs r1, #0x89
    lsls r1, r1, #2
    adds r0, r0, r1
    movs r1, #0
    bl sub_08068128
    ldr r0, [r4]
    movs r2, #0x8d
    lsls r2, r2, #2
    adds r0, r0, r2
    movs r1, #0
    bl sub_08068128
    ldr r0, [r4]
    movs r3, #0x91
    lsls r3, r3, #2
    adds r0, r0, r3
    movs r1, #0
    bl sub_08068128
    ldr r1, [r4]
    ldr r0, lbl_0807afc8 @ =0x0000025e
    adds r1, r1, r0
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r4]
    b lbl_0807afde
    .align 2, 0
lbl_0807afc4: .4byte 0x08754bc4
lbl_0807afc8: .4byte 0x0000025e
lbl_0807afcc:
    ldr r2, [r4]
    ldr r1, lbl_0807afe8 @ =0x0000025f
    adds r0, r2, r1
    ldrb r1, [r0]
    movs r0, #0xc0
    ands r0, r1
    cmp r0, #0
    bne lbl_0807b000
    adds r1, r2, #0
lbl_0807afde:
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0807b000
    .align 2, 0
lbl_0807afe8: .4byte 0x0000025f
lbl_0807afec:
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x42
    movs r2, #0
    movs r1, #0
    strh r1, [r3]
    adds r0, #0x40
    strb r2, [r0]
    movs r0, #1
    b lbl_0807b002
lbl_0807b000:
    movs r0, #0
lbl_0807b002:
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start sub_0807b008
sub_0807b008: @ 0x0807b008
    push {r4, r5, r6, r7, lr}
    movs r7, #0
    ldr r4, lbl_0807b088 @ =0x03001d00
    ldr r5, lbl_0807b08c @ =0x08760bac
    ldr r2, lbl_0807b090 @ =0x08754bc4
    ldr r0, [r2]
    adds r3, r0, #0
    adds r3, #0x63
    ldrb r0, [r3]
    lsls r0, r0, #1
    adds r0, r0, r5
    ldrh r1, [r4, #0x1c]
    ldrh r0, [r0]
    cmp r1, r0
    beq lbl_0807b06c
    movs r7, #1
    movs r0, #0x17
    strb r0, [r3]
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0x63
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807b076
    lsls r0, r0, #1
    adds r0, r0, r5
    ldrh r1, [r4, #0x1c]
    ldrh r0, [r0]
    cmp r1, r0
    beq lbl_0807b06c
    adds r3, r2, #0
    adds r6, r4, #0
    adds r4, r5, #0
lbl_0807b04a:
    ldr r1, [r3]
    adds r1, #0x63
    ldrb r0, [r1]
    subs r0, #1
    strb r0, [r1]
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0x63
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807b076
    lsls r0, r0, #1
    adds r0, r0, r4
    ldrh r1, [r6, #0x1c]
    ldrh r0, [r0]
    cmp r1, r0
    bne lbl_0807b04a
lbl_0807b06c:
    ldr r0, [r2]
    adds r0, #0x63
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807b07e
lbl_0807b076:
    ldr r0, [r2]
    adds r0, #0x63
    movs r1, #1
    strb r1, [r0]
lbl_0807b07e:
    adds r0, r7, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807b088: .4byte 0x03001d00
lbl_0807b08c: .4byte 0x08760bac
lbl_0807b090: .4byte 0x08754bc4

    thumb_func_start sub_0807b094
sub_0807b094: @ 0x0807b094
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #4
    ldr r0, lbl_0807b12c @ =0x08754bc4
    mov sb, r0
    ldr r0, [r0]
    adds r0, #0x63
    ldrb r0, [r0]
    movs r1, #0xa
    bl __udivsi3
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x13
    movs r1, #0xa0
    lsls r1, r1, #4
    adds r4, r4, r1
    ldr r5, lbl_0807b130 @ =0x08415460
    adds r1, r4, r5
    ldr r2, lbl_0807b134 @ =0x060103c0
    movs r6, #0x10
    str r6, [sp]
    movs r0, #3
    movs r3, #0x20
    bl DMATransfer
    movs r0, #0x80
    lsls r0, r0, #3
    adds r0, r0, r5
    mov r8, r0
    add r4, r8
    ldr r2, lbl_0807b138 @ =0x060107c0
    str r6, [sp]
    movs r0, #3
    adds r1, r4, #0
    movs r3, #0x20
    bl DMATransfer
    mov r1, sb
    ldr r0, [r1]
    adds r0, #0x63
    ldrb r0, [r0]
    movs r1, #0xa
    bl __umodsi3
    adds r4, r0, #0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x13
    movs r0, #0xa0
    lsls r0, r0, #4
    adds r4, r4, r0
    adds r5, r4, r5
    ldr r2, lbl_0807b13c @ =0x060103e0
    str r6, [sp]
    movs r0, #3
    adds r1, r5, #0
    movs r3, #0x20
    bl DMATransfer
    add r4, r8
    ldr r2, lbl_0807b140 @ =0x060107e0
    str r6, [sp]
    movs r0, #3
    adds r1, r4, #0
    movs r3, #0x20
    bl DMATransfer
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807b12c: .4byte 0x08754bc4
lbl_0807b130: .4byte 0x08415460
lbl_0807b134: .4byte 0x060103c0
lbl_0807b138: .4byte 0x060107c0
lbl_0807b13c: .4byte 0x060103e0
lbl_0807b140: .4byte 0x060107e0

    thumb_func_start time_attack_records_subroutine
time_attack_records_subroutine: @ 0x0807b144
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    ldr r2, lbl_0807b174 @ =0x08754bc4
    ldr r1, [r2]
    adds r3, r1, #0
    adds r3, #0x42
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r4, r2, #0
    cmp r0, #0xc
    bls lbl_0807b168
    b lbl_0807b70c
lbl_0807b168:
    lsls r0, r0, #2
    ldr r1, lbl_0807b178 @ =lbl_0807b17c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807b174: .4byte 0x08754bc4
lbl_0807b178: .4byte lbl_0807b17c
lbl_0807b17c: @ jump table
    .4byte lbl_0807b1b0 @ case 0
    .4byte lbl_0807b3bc @ case 1
    .4byte lbl_0807b3e8 @ case 2
    .4byte lbl_0807b40c @ case 3
    .4byte lbl_0807b412 @ case 4
    .4byte lbl_0807b436 @ case 5
    .4byte lbl_0807b43c @ case 6
    .4byte lbl_0807b478 @ case 7
    .4byte lbl_0807b594 @ case 8
    .4byte lbl_0807b5c0 @ case 9
    .4byte lbl_0807b66c @ case 10
    .4byte lbl_0807b6c4 @ case 11
    .4byte lbl_0807b6f8 @ case 12
lbl_0807b1b0:
    ldr r6, lbl_0807b338 @ =0x08754bc4
    ldr r0, [r6]
    adds r0, #0x64
    ldrb r1, [r0]
    movs r4, #1
    movs r0, #1
    mov sb, r0
    ands r0, r1
    cmp r0, #0
    beq lbl_0807b1cc
    movs r0, #0
    movs r1, #0x1f
    bl sub_080790cc
lbl_0807b1cc:
    ldr r0, [r6]
    adds r0, #0x64
    ldrb r1, [r0]
    movs r5, #2
    adds r0, r5, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0807b1e4
    movs r0, #0
    movs r1, #0x20
    bl sub_080790cc
lbl_0807b1e4:
    ldr r1, [r6]
    movs r2, #0x80
    lsls r2, r2, #2
    adds r1, r1, r2
    ldrb r2, [r1]
    movs r3, #0x10
    rsbs r3, r3, #0
    mov r8, r3
    mov r0, r8
    ands r0, r2
    orrs r0, r4
    strb r0, [r1]
    ldr r2, [r6]
    ldr r0, lbl_0807b33c @ =0x000001ff
    adds r2, r2, r0
    ldrb r1, [r2]
    movs r7, #4
    rsbs r7, r7, #0
    adds r0, r7, #0
    ands r0, r1
    movs r1, #2
    orrs r0, r1
    strb r0, [r2]
    ldr r2, [r6]
    movs r3, #0xfb
    lsls r3, r3, #1
    adds r1, r2, r3
    movs r0, #0xa0
    lsls r0, r0, #1
    strh r0, [r1]
    adds r0, #0xb4
    adds r1, r2, r0
    movs r0, #0xc0
    strh r0, [r1]
    movs r1, #0xf8
    lsls r1, r1, #1
    adds r2, r2, r1
    ldrb r1, [r2]
    mov r0, r8
    ands r0, r1
    strb r0, [r2]
    ldr r0, [r6]
    subs r3, #7
    adds r2, r0, r3
    ldrb r1, [r2]
    adds r0, r7, #0
    ands r0, r1
    orrs r0, r4
    strb r0, [r2]
    ldr r2, [r6]
    movs r4, #0xf3
    lsls r4, r4, #1
    adds r1, r2, r4
    movs r0, #0x80
    lsls r0, r0, #1
    strh r0, [r1]
    adds r0, #0xe4
    adds r1, r2, r0
    movs r0, #0x80
    strh r0, [r1]
    ldr r1, lbl_0807b340 @ =0x03000bf8
    movs r2, #0xdb
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0807b344 @ =0x03000bfa
    movs r3, #0xe0
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r1, lbl_0807b348 @ =0x03000bf4
    movs r4, #0xcc
    lsls r4, r4, #3
    adds r0, r4, #0
    strh r0, [r1]
    ldr r1, lbl_0807b34c @ =0x03000bf6
    movs r2, #0x80
    lsls r2, r2, #4
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_0807b350 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x90
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_0807b354 @ =0x0600e000
    movs r3, #0xc0
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, [r6]
    ldrh r0, [r1, #0x1e]
    strh r0, [r1, #4]
    ldrh r0, [r1, #0x1c]
    strh r0, [r1, #6]
    adds r0, r1, #0
    adds r0, #0x64
    ldrb r2, [r0]
    mov r0, sb
    ands r0, r2
    cmp r0, #0
    beq lbl_0807b360
    adds r0, r5, #0
    ands r0, r2
    cmp r0, #0
    beq lbl_0807b360
    movs r4, #0xe2
    lsls r4, r4, #1
    adds r0, r1, r4
    movs r1, #9
    bl sub_08068128
    ldr r1, [r6]
    movs r5, #0xe8
    lsls r5, r5, #1
    adds r1, r1, r5
    ldrb r2, [r1]
    mov r0, r8
    ands r0, r2
    strb r0, [r1]
    ldr r0, [r6]
    ldr r1, lbl_0807b358 @ =0x000001cf
    adds r2, r0, r1
    ldrb r1, [r2]
    adds r0, r7, #0
    ands r0, r1
    strb r0, [r2]
    ldr r0, [r6]
    movs r3, #0xe3
    lsls r3, r3, #1
    adds r2, r0, r3
    movs r1, #0x5c
    strh r1, [r2]
    adds r4, r0, r4
    movs r5, #0x60
    strh r5, [r4]
    movs r4, #0xea
    lsls r4, r4, #1
    adds r0, r0, r4
    movs r1, #0xb
    bl sub_08068128
    ldr r1, [r6]
    movs r0, #0xf0
    lsls r0, r0, #1
    adds r1, r1, r0
    ldrb r2, [r1]
    mov r0, r8
    ands r0, r2
    strb r0, [r1]
    ldr r0, [r6]
    ldr r1, lbl_0807b35c @ =0x000001df
    adds r2, r0, r1
    ldrb r1, [r2]
    adds r0, r7, #0
    ands r0, r1
    strb r0, [r2]
    ldr r0, [r6]
    movs r2, #0xeb
    lsls r2, r2, #1
    adds r3, r0, r2
    movs r1, #0xd2
    lsls r1, r1, #1
    strh r1, [r3]
    adds r0, r0, r4
    strh r5, [r0]
    b lbl_0807b37e
    .align 2, 0
lbl_0807b338: .4byte 0x08754bc4
lbl_0807b33c: .4byte 0x000001ff
lbl_0807b340: .4byte 0x03000bf8
lbl_0807b344: .4byte 0x03000bfa
lbl_0807b348: .4byte 0x03000bf4
lbl_0807b34c: .4byte 0x03000bf6
lbl_0807b350: .4byte 0x08754bb4
lbl_0807b354: .4byte 0x0600e000
lbl_0807b358: .4byte 0x000001cf
lbl_0807b35c: .4byte 0x000001df
lbl_0807b360:
    ldr r4, lbl_0807b3b0 @ =0x08754bc4
    ldr r0, [r4]
    movs r3, #0xe2
    lsls r3, r3, #1
    adds r0, r0, r3
    movs r1, #0
    bl sub_08068128
    ldr r0, [r4]
    movs r4, #0xea
    lsls r4, r4, #1
    adds r0, r0, r4
    movs r1, #0
    bl sub_08068128
lbl_0807b37e:
    ldr r2, lbl_0807b3b0 @ =0x08754bc4
    ldr r0, [r2]
    ldr r5, lbl_0807b3b4 @ =0x000001cf
    adds r3, r0, r5
    ldrb r0, [r3]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r3]
    ldr r0, [r2]
    ldr r4, lbl_0807b3b8 @ =0x000001df
    adds r3, r0, r4
    ldrb r0, [r3]
    orrs r0, r1
    strb r0, [r3]
    ldr r1, [r2]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    movs r3, #0
    strb r0, [r1]
    ldr r0, [r2]
    adds r0, #0x42
    strh r3, [r0]
    b lbl_0807b70c
    .align 2, 0
lbl_0807b3b0: .4byte 0x08754bc4
lbl_0807b3b4: .4byte 0x000001cf
lbl_0807b3b8: .4byte 0x000001df
lbl_0807b3bc:
    movs r0, #1
    movs r1, #0x1f
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807b3ca
    b lbl_0807b70c
lbl_0807b3ca:
    movs r0, #1
    movs r1, #0x20
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807b3d8
    b lbl_0807b70c
lbl_0807b3d8:
    bl sub_0807b854
    ldr r0, lbl_0807b3e4 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x40
    b lbl_0807b6e6
    .align 2, 0
lbl_0807b3e4: .4byte 0x08754bc4
lbl_0807b3e8:
    ldr r0, [r4]
    adds r0, #0x64
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807b402
    movs r0, #0
    bl load_time_attack_password_for_record
    movs r0, #1
    bl load_time_attack_password_for_record
lbl_0807b402:
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #4
    strb r1, [r0]
    b lbl_0807b70c
lbl_0807b40c:
    ldr r1, [r4]
    adds r1, #0x40
    b lbl_0807b6e6
lbl_0807b412:
    ldr r0, [r4]
    adds r0, #0x64
    ldrb r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807b42c
    movs r0, #2
    bl load_time_attack_password_for_record
    movs r0, #3
    bl load_time_attack_password_for_record
lbl_0807b42c:
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #6
    strb r1, [r0]
    b lbl_0807b70c
lbl_0807b436:
    ldr r1, [r4]
    adds r1, #0x40
    b lbl_0807b6e6
lbl_0807b43c:
    bl sub_0807b71c
    ldr r4, lbl_0807b470 @ =0x08754bc4
    ldr r0, [r4]
    movs r5, #0xfa
    lsls r5, r5, #1
    adds r0, r0, r5
    movs r1, #0x14
    bl sub_08068128
    ldr r0, [r4]
    movs r1, #0xf2
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0x10
    bl sub_08068128
    ldr r0, lbl_0807b474 @ =0x000001fd
    bl SoundPlay
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #7
    strb r1, [r0]
    b lbl_0807b70c
    .align 2, 0
lbl_0807b470: .4byte 0x08754bc4
lbl_0807b474: .4byte 0x000001fd
lbl_0807b478:
    movs r5, #0
    ldr r2, [r4]
    ldr r3, lbl_0807b4cc @ =0x000001ef
    adds r0, r2, r3
    ldrb r1, [r0]
    movs r4, #0x10
    adds r0, r4, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0807b502
    ldr r1, lbl_0807b4d0 @ =0x000001ff
    adds r0, r2, r1
    ldrb r1, [r0]
    adds r0, r4, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0807b502
    adds r0, r2, #0
    adds r0, #0x65
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807b4dc
    movs r0, #1
    movs r1, #0x1e
    bl sub_080790cc
    cmp r0, #0
    beq lbl_0807b502
    ldr r0, lbl_0807b4d4 @ =0x08754bb4
    ldr r1, [r0]
    movs r2, #0x9c
    lsls r2, r2, #7
    adds r1, r1, r2
    ldr r2, lbl_0807b4d8 @ =0x0600e800
    movs r3, #0xc0
    lsls r3, r3, #2
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    b lbl_0807b508
    .align 2, 0
lbl_0807b4cc: .4byte 0x000001ef
lbl_0807b4d0: .4byte 0x000001ff
lbl_0807b4d4: .4byte 0x08754bb4
lbl_0807b4d8: .4byte 0x0600e800
lbl_0807b4dc:
    movs r0, #1
    movs r1, #0x1d
    bl sub_080790cc
    cmp r0, #0
    beq lbl_0807b502
    movs r5, #1
    ldr r0, lbl_0807b534 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x96
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_0807b538 @ =0x0600e800
    movs r3, #0xc0
    lsls r3, r3, #2
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
lbl_0807b502:
    cmp r5, #0
    bne lbl_0807b508
    b lbl_0807b70c
lbl_0807b508:
    ldr r1, lbl_0807b53c @ =0x08754bc4
    ldr r3, [r1]
    adds r0, r3, #0
    adds r0, #0x65
    ldrb r0, [r0]
    adds r4, r1, #0
    cmp r0, #0
    beq lbl_0807b548
    ldr r5, lbl_0807b540 @ =0x000001cf
    adds r2, r3, r5
    ldrb r1, [r2]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r0, r1
    strb r0, [r2]
    ldr r0, [r4]
    ldr r1, lbl_0807b544 @ =0x000001df
    adds r2, r0, r1
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    b lbl_0807b562
    .align 2, 0
lbl_0807b534: .4byte 0x08754bb4
lbl_0807b538: .4byte 0x0600e800
lbl_0807b53c: .4byte 0x08754bc4
lbl_0807b540: .4byte 0x000001cf
lbl_0807b544: .4byte 0x000001df
lbl_0807b548:
    ldr r5, lbl_0807b58c @ =0x000001cf
    adds r2, r3, r5
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r4]
    ldr r1, lbl_0807b590 @ =0x000001df
    adds r2, r0, r1
    ldrb r1, [r2]
    movs r0, #0x21
    rsbs r0, r0, #0
    ands r0, r1
lbl_0807b562:
    strb r0, [r2]
    ldr r0, [r4]
    adds r0, #0x65
    ldrb r0, [r0]
    bl load_time_attack_time_for_record
    ldr r1, [r4]
    ldrh r2, [r1]
    movs r3, #0xc0
    lsls r3, r3, #2
    adds r0, r3, #0
    movs r3, #0
    orrs r0, r2
    strh r0, [r1]
    adds r0, r1, #0
    adds r0, #0x42
    strh r3, [r0]
    adds r1, #0x40
    movs r0, #8
    strb r0, [r1]
    b lbl_0807b70c
    .align 2, 0
lbl_0807b58c: .4byte 0x000001cf
lbl_0807b590: .4byte 0x000001df
lbl_0807b594:
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x42
    ldrh r0, [r2]
    cmp r0, #0xa
    bls lbl_0807b5ac
    movs r0, #0
    strh r0, [r2]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_0807b5ac:
    ldr r0, lbl_0807b5bc @ =0x03001380
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    bne lbl_0807b5ba
    b lbl_0807b70c
lbl_0807b5ba:
    b lbl_0807b5d2
    .align 2, 0
lbl_0807b5bc: .4byte 0x03001380
lbl_0807b5c0:
    ldr r0, lbl_0807b5dc @ =0x03001380
    ldrh r3, [r0]
    cmp r3, #0
    bne lbl_0807b5ca
    b lbl_0807b70c
lbl_0807b5ca:
    movs r0, #2
    ands r0, r3
    cmp r0, #0
    beq lbl_0807b5e0
lbl_0807b5d2:
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #0xa
    strb r1, [r0]
    b lbl_0807b70c
    .align 2, 0
lbl_0807b5dc: .4byte 0x03001380
lbl_0807b5e0:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x64
    ldrb r0, [r0]
    cmp r0, #3
    beq lbl_0807b5ee
    b lbl_0807b70c
lbl_0807b5ee:
    movs r0, #0x30
    ands r0, r3
    cmp r0, #0
    bne lbl_0807b5f8
    b lbl_0807b70c
lbl_0807b5f8:
    movs r5, #0
    adds r1, #0x65
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807b60e
    movs r0, #0x20
    ands r0, r3
    cmp r0, #0
    beq lbl_0807b61c
    strb r5, [r1]
    b lbl_0807b620
lbl_0807b60e:
    movs r0, #0x10
    ands r0, r3
    cmp r0, #0
    beq lbl_0807b61c
    movs r0, #1
    strb r0, [r1]
    movs r5, #1
lbl_0807b61c:
    cmp r5, #0
    beq lbl_0807b70c
lbl_0807b620:
    bl sub_0807b71c
    ldr r4, lbl_0807b658 @ =0x08754bc4
    ldr r0, [r4]
    ldr r5, lbl_0807b65c @ =0x000001cf
    adds r2, r0, r5
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r4]
    ldr r3, lbl_0807b660 @ =0x000001df
    adds r2, r0, r3
    ldrb r0, [r2]
    orrs r0, r1
    strb r0, [r2]
    ldr r0, lbl_0807b664 @ =0x00000211
    bl SoundPlay
    ldr r1, [r4]
    ldrh r2, [r1]
    ldr r0, lbl_0807b668 @ =0x0000fcff
    ands r0, r2
    strh r0, [r1]
    adds r1, #0x40
    movs r0, #7
    strb r0, [r1]
    b lbl_0807b70c
    .align 2, 0
lbl_0807b658: .4byte 0x08754bc4
lbl_0807b65c: .4byte 0x000001cf
lbl_0807b660: .4byte 0x000001df
lbl_0807b664: .4byte 0x00000211
lbl_0807b668: .4byte 0x0000fcff
lbl_0807b66c:
    movs r4, #0xff
    lsls r4, r4, #1
    adds r0, r4, #0
    bl SoundPlay
    ldr r2, lbl_0807b6b8 @ =0x08754bc4
    ldr r0, [r2]
    ldr r5, lbl_0807b6bc @ =0x000001cf
    adds r3, r0, r5
    ldrb r0, [r3]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r3]
    ldr r0, [r2]
    adds r5, #0x10
    adds r3, r0, r5
    ldrb r0, [r3]
    orrs r0, r1
    strb r0, [r3]
    ldr r1, [r2]
    adds r1, r1, r4
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r2]
    movs r3, #0xf7
    lsls r3, r3, #1
    adds r1, r0, r3
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r2]
    ldrh r2, [r1]
    ldr r0, lbl_0807b6c0 @ =0x0000fcff
    ands r0, r2
    strh r0, [r1]
    adds r1, #0x40
    b lbl_0807b6e6
    .align 2, 0
lbl_0807b6b8: .4byte 0x08754bc4
lbl_0807b6bc: .4byte 0x000001cf
lbl_0807b6c0: .4byte 0x0000fcff
lbl_0807b6c4:
    ldr r2, [r4]
    ldr r4, lbl_0807b6f0 @ =0x000001ff
    adds r0, r2, r4
    ldrb r0, [r0]
    ldr r5, lbl_0807b6f4 @ =0x000001ef
    adds r1, r2, r5
    ldrb r1, [r1]
    orrs r0, r1
    lsrs r0, r0, #6
    cmp r0, #0
    bne lbl_0807b70c
    adds r1, r2, #0
    adds r1, #0x42
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    subs r1, #2
lbl_0807b6e6:
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0807b70c
    .align 2, 0
lbl_0807b6f0: .4byte 0x000001ff
lbl_0807b6f4: .4byte 0x000001ef
lbl_0807b6f8:
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x42
    movs r2, #0
    movs r1, #0
    strh r1, [r3]
    adds r0, #0x40
    strb r2, [r0]
    movs r0, #1
    b lbl_0807b70e
lbl_0807b70c:
    movs r0, #0
lbl_0807b70e:
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_0807b71c
sub_0807b71c: @ 0x0807b71c
    push {lr}
    ldr r0, lbl_0807b734 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x65
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807b738
    movs r0, #0
    movs r1, #0x1e
    bl sub_080790cc
    b lbl_0807b740
    .align 2, 0
lbl_0807b734: .4byte 0x08754bc4
lbl_0807b738:
    movs r0, #0
    movs r1, #0x1d
    bl sub_080790cc
lbl_0807b740:
    pop {r0}
    bx r0

    thumb_func_start load_time_attack_time_for_record
load_time_attack_time_for_record: @ 0x0807b744
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r1, lbl_0807b84c @ =0x0600e108
    mov ip, r1
    movs r3, #0xa0
    lsls r3, r3, #7
    ldr r1, lbl_0807b850 @ =0x08754bc4
    ldr r7, [r1]
    lsls r6, r0, #1
    adds r6, r6, r0
    lsls r6, r6, #1
    adds r1, r7, #0
    adds r1, #0x50
    adds r1, r1, r6
    movs r2, #0xe6
    lsls r2, r2, #1
    adds r5, r2, #0
    ldrb r2, [r1]
    adds r0, r5, r2
    orrs r0, r3
    mov r2, ip
    strh r0, [r2]
    adds r2, #0x40
    movs r0, #0xf6
    lsls r0, r0, #1
    adds r4, r0, #0
    ldrb r1, [r1]
    adds r0, r4, r1
    orrs r0, r3
    strh r0, [r2]
    adds r1, r7, #0
    adds r1, #0x51
    adds r1, r1, r6
    ldrb r2, [r1]
    adds r0, r5, r2
    orrs r0, r3
    mov r2, ip
    strh r0, [r2, #2]
    adds r2, #0x42
    ldrb r1, [r1]
    adds r0, r4, r1
    orrs r0, r3
    strh r0, [r2]
    movs r1, #0xe5
    lsls r1, r1, #1
    adds r0, r1, #0
    mov sb, r3
    mov r2, sb
    orrs r2, r0
    mov sb, r2
    mov r0, ip
    strh r2, [r0, #4]
    mov r1, ip
    adds r1, #0x44
    movs r2, #0xf5
    lsls r2, r2, #1
    adds r0, r2, #0
    mov r8, r3
    mov r2, r8
    orrs r2, r0
    mov r8, r2
    strh r2, [r1]
    adds r1, r7, #0
    adds r1, #0x52
    adds r1, r1, r6
    ldrb r2, [r1]
    adds r0, r5, r2
    orrs r0, r3
    mov r2, ip
    strh r0, [r2, #6]
    adds r2, #0x46
    ldrb r1, [r1]
    adds r0, r4, r1
    orrs r0, r3
    strh r0, [r2]
    adds r1, r7, #0
    adds r1, #0x53
    adds r1, r1, r6
    ldrb r2, [r1]
    adds r0, r5, r2
    orrs r0, r3
    mov r2, ip
    strh r0, [r2, #8]
    adds r2, #0x48
    ldrb r1, [r1]
    adds r0, r4, r1
    orrs r0, r3
    strh r0, [r2]
    mov r1, sb
    mov r0, ip
    strh r1, [r0, #0xa]
    adds r0, #0x4a
    mov r2, r8
    strh r2, [r0]
    adds r1, r7, #0
    adds r1, #0x54
    adds r1, r1, r6
    ldrb r2, [r1]
    adds r0, r5, r2
    orrs r0, r3
    mov r2, ip
    strh r0, [r2, #0xc]
    adds r2, #0x4c
    ldrb r1, [r1]
    adds r0, r4, r1
    orrs r0, r3
    strh r0, [r2]
    adds r0, r7, #0
    adds r0, #0x55
    adds r0, r0, r6
    ldrb r1, [r0]
    adds r5, r5, r1
    orrs r5, r3
    mov r2, ip
    strh r5, [r2, #0xe]
    mov r1, ip
    adds r1, #0x4e
    ldrb r0, [r0]
    adds r4, r4, r0
    orrs r4, r3
    strh r4, [r1]
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807b84c: .4byte 0x0600e108
lbl_0807b850: .4byte 0x08754bc4

    thumb_func_start sub_0807b854
sub_0807b854: @ 0x0807b854
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r0, lbl_0807b910 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x48
    mov sb, r0
    ldr r0, lbl_0807b914 @ =0x03000014
    ldr r0, [r0, #8]
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0807b878
    ldr r0, lbl_0807b918 @ =0x08760c44
    mov sb, r0
lbl_0807b878:
    movs r5, #0
    movs r1, #0x10
    mov sl, r1
    ldr r6, lbl_0807b91c @ =0x06006100
    ldr r0, lbl_0807b920 @ =0x06006500
    mov r8, r0
    adds r7, r6, #0
lbl_0807b886:
    mov r1, sb
    adds r0, r1, r5
    ldrb r1, [r0]
    cmp r1, #0x31
    bne lbl_0807b892
    movs r1, #0x3e
lbl_0807b892:
    lsrs r4, r1, #5
    lsls r4, r4, #0xb
    movs r0, #0x1f
    ands r1, r0
    lsls r0, r1, #5
    adds r4, r4, r0
    ldr r0, lbl_0807b924 @ =0x08415460
    adds r1, r4, r0
    mov r0, sl
    str r0, [sp]
    movs r0, #3
    adds r2, r7, #0
    movs r3, #0x20
    bl DMATransfer
    ldr r1, lbl_0807b928 @ =0x08415860
    adds r4, r4, r1
    mov r0, sl
    str r0, [sp]
    movs r0, #3
    adds r1, r4, #0
    mov r2, r8
    movs r3, #0x20
    bl DMATransfer
    movs r1, #0x20
    add r8, r1
    adds r7, #0x20
    adds r5, #1
    cmp r5, #7
    ble lbl_0807b886
    movs r2, #0x80
    lsls r2, r2, #5
    adds r2, r6, r2
    movs r5, #0x80
    lsls r5, r5, #1
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    movs r1, #0x80
    lsls r1, r1, #3
    adds r1, r6, r1
    movs r2, #0xa0
    lsls r2, r2, #5
    adds r2, r6, r2
    str r4, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807b910: .4byte 0x08754bc4
lbl_0807b914: .4byte 0x03000014
lbl_0807b918: .4byte 0x08760c44
lbl_0807b91c: .4byte 0x06006100
lbl_0807b920: .4byte 0x06006500
lbl_0807b924: .4byte 0x08415460
lbl_0807b928: .4byte 0x08415860

    thumb_func_start load_time_attack_password_for_record
load_time_attack_password_for_record: @ 0x0807b92c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #1
    bls lbl_0807b950
    ldr r7, lbl_0807b948 @ =0x000078c0
    ldr r0, lbl_0807b94c @ =0x030016ac
    b lbl_0807b954
    .align 2, 0
lbl_0807b948: .4byte 0x000078c0
lbl_0807b94c: .4byte 0x030016ac
lbl_0807b950:
    ldr r7, lbl_0807b9d8 @ =0x000068c0
    ldr r0, lbl_0807b9dc @ =0x03001694
lbl_0807b954:
    mov sb, r0
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807b968
    movs r1, #0xa
    add sb, r1
    movs r0, #0x80
    lsls r0, r0, #2
    adds r7, r7, r0
lbl_0807b968:
    movs r1, #0xc0
    lsls r1, r1, #0x13
    adds r0, r7, r1
    movs r7, #0
    ldr r1, lbl_0807b9e0 @ =0x08415460
    mov sl, r1
    movs r1, #0x10
    mov r8, r1
    movs r1, #0x80
    lsls r1, r1, #3
    adds r6, r0, r1
    adds r5, r0, #0
lbl_0807b980:
    mov r1, sb
    adds r0, r1, r7
    ldrb r1, [r0]
    cmp r1, #0x31
    bne lbl_0807b98c
    movs r1, #0x3e
lbl_0807b98c:
    lsrs r4, r1, #5
    lsls r4, r4, #0xb
    movs r0, #0x1f
    ands r1, r0
    lsls r0, r1, #5
    adds r4, r4, r0
    mov r0, sl
    adds r1, r4, r0
    mov r0, r8
    str r0, [sp]
    movs r0, #3
    adds r2, r5, #0
    movs r3, #0x20
    bl DMATransfer
    ldr r1, lbl_0807b9e4 @ =0x08415860
    adds r4, r4, r1
    mov r0, r8
    str r0, [sp]
    movs r0, #3
    adds r1, r4, #0
    adds r2, r6, #0
    movs r3, #0x20
    bl DMATransfer
    adds r6, #0x20
    adds r5, #0x20
    adds r7, #1
    cmp r7, #9
    ble lbl_0807b980
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807b9d8: .4byte 0x000068c0
lbl_0807b9dc: .4byte 0x03001694
lbl_0807b9e0: .4byte 0x08415460
lbl_0807b9e4: .4byte 0x08415860

    thumb_func_start metroid_fusion_link_subroutine
metroid_fusion_link_subroutine: @ 0x0807b9e8
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r0, lbl_0807ba10 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x42
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    ldr r1, lbl_0807ba14 @ =0x03005808
    ldrb r0, [r1, #8]
    cmp r0, #1
    bne lbl_0807ba18
    bl sub_08088ea0
    b lbl_0807ba26
    .align 2, 0
lbl_0807ba10: .4byte 0x08754bc4
lbl_0807ba14: .4byte 0x03005808
lbl_0807ba18:
    cmp r0, #2
    bne lbl_0807ba22
    bl sub_08089e30
    b lbl_0807ba26
lbl_0807ba22:
    movs r0, #0
    strb r0, [r1, #0xb]
lbl_0807ba26:
    ldr r1, lbl_0807ba40 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x40
    ldrb r0, [r0]
    adds r4, r1, #0
    cmp r0, #0x17
    bls lbl_0807ba36
    b lbl_0807c110
lbl_0807ba36:
    lsls r0, r0, #2
    ldr r1, lbl_0807ba44 @ =lbl_0807ba48
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807ba40: .4byte 0x08754bc4
lbl_0807ba44: .4byte lbl_0807ba48
lbl_0807ba48: @ jump table
    .4byte lbl_0807baa8 @ case 0
    .4byte lbl_0807bbfc @ case 1
    .4byte lbl_0807bc38 @ case 2
    .4byte lbl_0807bd24 @ case 3
    .4byte lbl_0807bd8e @ case 4
    .4byte lbl_0807bdd8 @ case 5
    .4byte lbl_0807be40 @ case 6
    .4byte lbl_0807be50 @ case 7
    .4byte lbl_0807be70 @ case 8
    .4byte lbl_0807bea8 @ case 9
    .4byte lbl_0807bedc @ case 10
    .4byte lbl_0807beec @ case 11
    .4byte lbl_0807bf1c @ case 12
    .4byte lbl_0807bf3e @ case 13
    .4byte lbl_0807bf7c @ case 14
    .4byte lbl_0807bfb8 @ case 15
    .4byte lbl_0807bfdc @ case 16
    .4byte lbl_0807c00c @ case 17
    .4byte lbl_0807c01c @ case 18
    .4byte lbl_0807c054 @ case 19
    .4byte lbl_0807c078 @ case 20
    .4byte lbl_0807c094 @ case 21
    .4byte lbl_0807c0d8 @ case 22
    .4byte lbl_0807c0fc @ case 23
lbl_0807baa8:
    ldr r0, lbl_0807babc @ =0x03000014
    ldrh r0, [r0, #2]
    cmp r0, #0
    beq lbl_0807bac4
    ldr r0, lbl_0807bac0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x40
    movs r1, #1
    b lbl_0807bbce
    .align 2, 0
lbl_0807babc: .4byte 0x03000014
lbl_0807bac0: .4byte 0x08754bc4
lbl_0807bac4:
    ldr r5, lbl_0807bbdc @ =0x08754bc4
    ldr r1, [r5]
    movs r0, #0x80
    lsls r0, r0, #2
    adds r1, r1, r0
    ldrb r2, [r1]
    movs r4, #0x10
    rsbs r4, r4, #0
    adds r0, r4, #0
    ands r0, r2
    movs r2, #1
    mov r8, r2
    mov r3, r8
    orrs r0, r3
    strb r0, [r1]
    ldr r1, [r5]
    ldr r0, lbl_0807bbe0 @ =0x000001ff
    adds r1, r1, r0
    ldrb r2, [r1]
    movs r3, #4
    rsbs r3, r3, #0
    adds r0, r3, #0
    ands r0, r2
    movs r2, #2
    mov sb, r2
    mov r2, sb
    orrs r0, r2
    strb r0, [r1]
    ldr r1, [r5]
    movs r2, #0xfb
    lsls r2, r2, #1
    adds r0, r1, r2
    movs r6, #0xa0
    lsls r6, r6, #1
    strh r6, [r0]
    movs r0, #0xfa
    lsls r0, r0, #1
    mov sl, r0
    adds r2, r1, r0
    movs r0, #0xc0
    strh r0, [r2]
    movs r2, #0xe0
    lsls r2, r2, #1
    adds r1, r1, r2
    ldrb r2, [r1]
    adds r0, r4, #0
    ands r0, r2
    mov r2, r8
    orrs r0, r2
    strb r0, [r1]
    ldr r0, [r5]
    ldr r1, lbl_0807bbe4 @ =0x000001bf
    adds r2, r0, r1
    ldrb r1, [r2]
    adds r0, r3, #0
    ands r0, r1
    strb r0, [r2]
    ldr r2, [r5]
    movs r1, #0xdb
    lsls r1, r1, #1
    adds r0, r2, r1
    strh r6, [r0]
    movs r0, #0xda
    lsls r0, r0, #1
    adds r1, r2, r0
    movs r0, #0xe0
    strh r0, [r1]
    movs r0, #0xf8
    lsls r0, r0, #1
    adds r1, r2, r0
    ldrb r0, [r1]
    ands r4, r0
    strb r4, [r1]
    ldr r0, [r5]
    ldr r2, lbl_0807bbe8 @ =0x000001ef
    adds r1, r0, r2
    ldrb r0, [r1]
    ands r3, r0
    mov r4, sb
    orrs r3, r4
    strb r3, [r1]
    ldr r1, [r5]
    movs r0, #0xf3
    lsls r0, r0, #1
    adds r2, r1, r0
    subs r0, #0xe6
    strh r0, [r2]
    movs r4, #0xf2
    lsls r4, r4, #1
    adds r1, r1, r4
    movs r0, #0x80
    strh r0, [r1]
    movs r0, #0
    movs r1, #0x19
    bl sub_080790cc
    movs r0, #0
    movs r1, #0x15
    bl sub_080790cc
    ldr r0, [r5]
    add r0, sl
    movs r1, #0x14
    bl sub_08068128
    ldr r0, [r5]
    adds r0, r0, r4
    movs r1, #0x10
    bl sub_08068128
    ldr r1, lbl_0807bbec @ =0x03000bf8
    movs r2, #0xdb
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0807bbf0 @ =0x03000bfa
    movs r3, #0xdf
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r1, lbl_0807bbf4 @ =0x03000bf4
    movs r4, #0xcc
    lsls r4, r4, #3
    adds r0, r4, #0
    strh r0, [r1]
    ldr r1, lbl_0807bbf8 @ =0x03000bf6
    movs r2, #0xfc
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, [r5]
    adds r0, #0x40
    movs r1, #2
lbl_0807bbce:
    strb r1, [r0]
    ldr r0, lbl_0807bbdc @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x42
    movs r1, #0
    strh r1, [r0]
    b lbl_0807c110
    .align 2, 0
lbl_0807bbdc: .4byte 0x08754bc4
lbl_0807bbe0: .4byte 0x000001ff
lbl_0807bbe4: .4byte 0x000001bf
lbl_0807bbe8: .4byte 0x000001ef
lbl_0807bbec: .4byte 0x03000bf8
lbl_0807bbf0: .4byte 0x03000bfa
lbl_0807bbf4: .4byte 0x03000bf4
lbl_0807bbf8: .4byte 0x03000bf6
lbl_0807bbfc:
    ldr r0, lbl_0807bc34 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0
    beq lbl_0807bc0e
    b lbl_0807c0fc
lbl_0807bc0e:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0807bc22
    ldr r0, [r4]
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0xa
    bhi lbl_0807bc22
    b lbl_0807c110
lbl_0807bc22:
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x42
    movs r1, #0
    strh r2, [r3]
    adds r0, #0x40
    strb r1, [r0]
    movs r0, #2
    b lbl_0807c112
    .align 2, 0
lbl_0807bc34: .4byte 0x03001380
lbl_0807bc38:
    ldr r2, [r4]
    ldrh r1, [r2]
    movs r5, #0xc0
    lsls r5, r5, #2
    adds r0, r5, #0
    ands r0, r1
    cmp r0, r5
    bne lbl_0807bc58
    ldr r1, lbl_0807bc54 @ =0x03005808
    movs r0, #1
    strb r0, [r1, #8]
    adds r1, r2, #0
    b lbl_0807c0f2
    .align 2, 0
lbl_0807bc54: .4byte 0x03005808
lbl_0807bc58:
    movs r7, #0x80
    lsls r7, r7, #2
    adds r0, r7, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_0807bcb0
    ldr r3, lbl_0807bd0c @ =0x000001ff
    adds r0, r2, r3
    ldrb r1, [r0]
    movs r6, #0x10
    adds r0, r6, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0807bcb0
    movs r0, #1
    movs r1, #0x15
    bl sub_080790cc
    cmp r0, #0
    beq lbl_0807bcb0
    ldr r0, lbl_0807bd10 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xf0
    lsls r0, r0, #6
    adds r1, r1, r0
    ldr r2, lbl_0807bd14 @ =0x0600e800
    str r6, [sp]
    movs r0, #3
    adds r3, r5, #0
    bl DMATransfer
    ldr r0, [r4]
    ldrh r1, [r0, #0x1c]
    strh r1, [r0, #6]
    ldrh r2, [r0]
    adds r1, r7, #0
    orrs r1, r2
    strh r1, [r0]
    movs r1, #0xda
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0xc
    bl sub_08068128
lbl_0807bcb0:
    ldr r5, lbl_0807bd18 @ =0x08754bc4
    ldr r2, [r5]
    ldrh r1, [r2]
    movs r6, #0x80
    lsls r6, r6, #1
    adds r0, r6, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0807bcc4
    b lbl_0807c110
lbl_0807bcc4:
    ldr r3, lbl_0807bd1c @ =0x000001ef
    adds r0, r2, r3
    ldrb r1, [r0]
    movs r4, #0x10
    adds r0, r4, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_0807bcd6
    b lbl_0807c110
lbl_0807bcd6:
    movs r0, #1
    movs r1, #0x19
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807bce4
    b lbl_0807c110
lbl_0807bce4:
    ldr r0, lbl_0807bd10 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0x90
    lsls r0, r0, #7
    adds r1, r1, r0
    ldr r2, lbl_0807bd20 @ =0x0600e000
    movs r3, #0xc0
    lsls r3, r3, #2
    str r4, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, [r5]
    ldrh r0, [r1, #0x1e]
    strh r0, [r1, #4]
    ldrh r2, [r1]
    adds r0, r6, #0
    orrs r0, r2
    strh r0, [r1]
    b lbl_0807c110
    .align 2, 0
lbl_0807bd0c: .4byte 0x000001ff
lbl_0807bd10: .4byte 0x08754bb4
lbl_0807bd14: .4byte 0x0600e800
lbl_0807bd18: .4byte 0x08754bc4
lbl_0807bd1c: .4byte 0x000001ef
lbl_0807bd20: .4byte 0x0600e000
lbl_0807bd24:
    ldr r0, lbl_0807bd3c @ =0x03005808
    ldrb r0, [r0, #0xb]
    subs r0, #1
    cmp r0, #4
    bls lbl_0807bd30
    b lbl_0807c110
lbl_0807bd30:
    lsls r0, r0, #2
    ldr r1, lbl_0807bd40 @ =lbl_0807bd44
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807bd3c: .4byte 0x03005808
lbl_0807bd40: .4byte lbl_0807bd44
lbl_0807bd44: @ jump table
    .4byte lbl_0807bd58 @ case 0
    .4byte lbl_0807c084 @ case 1
    .4byte lbl_0807bd84 @ case 2
    .4byte lbl_0807bd70 @ case 3
    .4byte lbl_0807bd7a @ case 4
lbl_0807bd58:
    bl sub_08073300
    ldr r2, lbl_0807bd6c @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x40
    movs r3, #0
    movs r1, #8
    strb r1, [r0]
    ldr r0, [r2]
    b lbl_0807be32
    .align 2, 0
lbl_0807bd6c: .4byte 0x08754bc4
lbl_0807bd70:
    ldr r0, [r4]
    adds r0, #0x40
    movs r2, #0
    movs r1, #4
    b lbl_0807bf34
lbl_0807bd7a:
    ldr r0, [r4]
    adds r0, #0x40
    movs r2, #0
    movs r1, #0xe
    b lbl_0807bf34
lbl_0807bd84:
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #0x12
    strb r1, [r0]
    b lbl_0807c110
lbl_0807bd8e:
    ldr r2, [r4]
    ldrh r1, [r2]
    ldr r0, lbl_0807bdd4 @ =0x0000fcff
    ands r0, r1
    strh r0, [r2]
    movs r0, #0
    movs r1, #0x17
    bl sub_080790cc
    movs r0, #0
    movs r1, #0x18
    bl sub_080790cc
    ldr r0, [r4]
    movs r1, #0xda
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0
    bl sub_08068128
    ldr r1, [r4]
    movs r2, #0xf7
    lsls r2, r2, #1
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807bdd0
    movs r3, #0xf2
    lsls r3, r3, #1
    adds r0, r1, r3
    movs r1, #0x10
    bl sub_08068128
lbl_0807bdd0:
    ldr r1, [r4]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807bdd4: .4byte 0x0000fcff
lbl_0807bdd8:
    ldr r2, [r4]
    ldr r1, lbl_0807be38 @ =0x000001ff
    adds r0, r2, r1
    ldrb r1, [r0]
    movs r3, #0x10
    adds r0, r3, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_0807bdec
    b lbl_0807c110
lbl_0807bdec:
    ldr r1, lbl_0807be3c @ =0x000001ef
    adds r0, r2, r1
    ldrb r1, [r0]
    adds r0, r3, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_0807bdfc
    b lbl_0807c110
lbl_0807bdfc:
    movs r0, #1
    movs r1, #0x18
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807be0a
    b lbl_0807c110
lbl_0807be0a:
    movs r0, #1
    movs r1, #0x17
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807be18
    b lbl_0807c110
lbl_0807be18:
    ldr r1, [r4]
    ldrh r2, [r1]
    movs r3, #0xc0
    lsls r3, r3, #2
    adds r0, r3, #0
    movs r3, #0
    orrs r0, r2
    strh r0, [r1]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r4]
lbl_0807be32:
    adds r0, #0x42
    strh r3, [r0]
    b lbl_0807c110
    .align 2, 0
lbl_0807be38: .4byte 0x000001ff
lbl_0807be3c: .4byte 0x000001ef
lbl_0807be40:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0x1e
    bhi lbl_0807be4e
    b lbl_0807c110
lbl_0807be4e:
    b lbl_0807c0f2
lbl_0807be50:
    ldr r0, lbl_0807be68 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    bne lbl_0807be5e
    b lbl_0807c110
lbl_0807be5e:
    ldr r1, lbl_0807be6c @ =0x03000c70
    movs r0, #0xe
    strh r0, [r1]
    b lbl_0807c110
    .align 2, 0
lbl_0807be68: .4byte 0x03001380
lbl_0807be6c: .4byte 0x03000c70
lbl_0807be70:
    ldr r0, [r4]
    ldrh r2, [r0]
    ldr r1, lbl_0807bea4 @ =0x0000fcff
    ands r1, r2
    strh r1, [r0]
    movs r1, #0xda
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0
    bl sub_08068128
    ldr r0, [r4]
    movs r2, #0xf7
    lsls r2, r2, #1
    adds r1, r0, r2
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807be98
    adds r0, #1
    strb r0, [r1]
lbl_0807be98:
    movs r0, #0
    movs r1, #0x1a
    bl sub_080790cc
    ldr r1, [r4]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807bea4: .4byte 0x0000fcff
lbl_0807bea8:
    movs r0, #1
    movs r1, #0x1a
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807beb6
    b lbl_0807c110
lbl_0807beb6:
    ldr r3, lbl_0807bed8 @ =0x08754bc4
    ldr r1, [r3]
    ldrh r2, [r1]
    movs r4, #0x80
    lsls r4, r4, #2
    adds r0, r4, #0
    movs r4, #0
    orrs r0, r2
    strh r0, [r1]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r3]
    adds r0, #0x42
    strh r4, [r0]
    b lbl_0807c110
    .align 2, 0
lbl_0807bed8: .4byte 0x08754bc4
lbl_0807bedc:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0x3c
    bhi lbl_0807beea
    b lbl_0807c110
lbl_0807beea:
    b lbl_0807c0f2
lbl_0807beec:
    ldr r0, lbl_0807bf14 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #9
    ands r0, r1
    cmp r0, #0
    bne lbl_0807befa
    b lbl_0807c110
lbl_0807befa:
    ldr r1, [r4]
    ldrh r2, [r1]
    ldr r0, lbl_0807bf18 @ =0x0000fcff
    ands r0, r2
    strh r0, [r1]
    movs r0, #0xff
    lsls r0, r0, #1
    adds r1, r1, r0
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r4]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807bf14: .4byte 0x03001380
lbl_0807bf18: .4byte 0x0000fcff
lbl_0807bf1c:
    ldr r1, [r4]
    movs r2, #0xff
    lsls r2, r2, #1
    adds r0, r1, r2
    ldrb r2, [r0]
    cmp r2, #0
    beq lbl_0807bf2c
    b lbl_0807c110
lbl_0807bf2c:
    adds r0, r1, #0
    adds r0, #0x40
    ldrb r1, [r0]
    adds r1, #1
lbl_0807bf34:
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0x42
    strh r2, [r0]
    b lbl_0807c110
lbl_0807bf3e:
    ldr r0, [r4]
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0x1e
    bhi lbl_0807bf4a
    b lbl_0807c110
lbl_0807bf4a:
    bl sub_08079fb8
    ldr r0, lbl_0807bf74 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0xa2
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_0807bf78 @ =0x0600f000
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #0x17
    strb r1, [r0]
    b lbl_0807c110
    .align 2, 0
lbl_0807bf74: .4byte 0x08754bb4
lbl_0807bf78: .4byte 0x0600f000
lbl_0807bf7c:
    ldr r0, [r4]
    movs r1, #0xda
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0
    bl sub_08068128
    ldr r2, [r4]
    ldrh r1, [r2]
    ldr r0, lbl_0807bfb4 @ =0x0000fcff
    ands r0, r1
    strh r0, [r2]
    movs r0, #0
    movs r1, #0x16
    bl sub_080790cc
    ldr r0, [r4]
    movs r2, #0xf7
    lsls r2, r2, #1
    adds r1, r0, r2
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807bfae
    adds r0, #1
    strb r0, [r1]
lbl_0807bfae:
    ldr r1, [r4]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807bfb4: .4byte 0x0000fcff
lbl_0807bfb8:
    movs r0, #1
    movs r1, #0x16
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807bfc6
    b lbl_0807c110
lbl_0807bfc6:
    ldr r0, lbl_0807bfd8 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    movs r3, #0x80
    lsls r3, r3, #2
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807bfd8: .4byte 0x08754bc4
lbl_0807bfdc:
    ldr r2, lbl_0807bfec @ =0x03005808
    ldrb r1, [r2, #0xb]
    cmp r1, #4
    bne lbl_0807bff0
    ldr r0, [r4]
    adds r0, #0x40
    strb r1, [r0]
    b lbl_0807c110
    .align 2, 0
lbl_0807bfec: .4byte 0x03005808
lbl_0807bff0:
    ldr r0, lbl_0807c008 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #9
    ands r0, r1
    cmp r0, #0
    bne lbl_0807bffe
    b lbl_0807c110
lbl_0807bffe:
    movs r0, #0
    strb r0, [r2, #4]
    ldr r1, [r4]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807c008: .4byte 0x03001380
lbl_0807c00c:
    ldr r0, lbl_0807c018 @ =0x03005808
    ldrb r0, [r0, #0xb]
    cmp r0, #4
    beq lbl_0807c016
    b lbl_0807c110
lbl_0807c016:
    b lbl_0807c084
    .align 2, 0
lbl_0807c018: .4byte 0x03005808
lbl_0807c01c:
    ldr r0, [r4]
    ldrh r2, [r0]
    ldr r1, lbl_0807c050 @ =0x0000fcff
    ands r1, r2
    strh r1, [r0]
    movs r1, #0xda
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0
    bl sub_08068128
    ldr r0, [r4]
    movs r2, #0xf7
    lsls r2, r2, #1
    adds r1, r0, r2
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807c044
    adds r0, #1
    strb r0, [r1]
lbl_0807c044:
    movs r0, #0
    movs r1, #0x1b
    bl sub_080790cc
    ldr r1, [r4]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807c050: .4byte 0x0000fcff
lbl_0807c054:
    movs r0, #1
    movs r1, #0x1b
    bl sub_080790cc
    cmp r0, #0
    beq lbl_0807c110
    ldr r0, lbl_0807c074 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    movs r3, #0x80
    lsls r3, r3, #2
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807c074: .4byte 0x08754bc4
lbl_0807c078:
    ldr r0, lbl_0807c090 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #9
    ands r0, r1
    cmp r0, #0
    beq lbl_0807c110
lbl_0807c084:
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #0x15
    strb r1, [r0]
    b lbl_0807c110
    .align 2, 0
lbl_0807c090: .4byte 0x03001380
lbl_0807c094:
    ldr r0, [r4]
    ldrh r2, [r0]
    ldr r1, lbl_0807c0d4 @ =0x0000fcff
    ands r1, r2
    strh r1, [r0]
    movs r1, #0xda
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0
    bl sub_08068128
    ldr r0, [r4]
    movs r2, #0xff
    lsls r2, r2, #1
    adds r1, r0, r2
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807c0bc
    adds r0, #1
    strb r0, [r1]
lbl_0807c0bc:
    ldr r0, [r4]
    movs r3, #0xf7
    lsls r3, r3, #1
    adds r1, r0, r3
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807c0ce
    adds r0, #1
    strb r0, [r1]
lbl_0807c0ce:
    ldr r1, [r4]
    b lbl_0807c0f2
    .align 2, 0
lbl_0807c0d4: .4byte 0x0000fcff
lbl_0807c0d8:
    ldr r1, [r4]
    movs r4, #0xff
    lsls r4, r4, #1
    adds r0, r1, r4
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807c110
    movs r2, #0xf7
    lsls r2, r2, #1
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807c110
lbl_0807c0f2:
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0807c110
lbl_0807c0fc:
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x42
    movs r2, #0
    movs r1, #0
    strh r1, [r3]
    adds r0, #0x40
    strb r2, [r0]
    movs r0, #1
    b lbl_0807c112
lbl_0807c110:
    movs r0, #0
lbl_0807c112:
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start fileselect_main
fileselect_main: @ 0x0807c124
    push {lr}
    ldr r2, lbl_0807c148 @ =0x08754bc4
    ldr r1, [r2]
    ldrh r0, [r1, #0x3c]
    adds r0, #1
    strh r0, [r1, #0x3c]
    ldr r0, lbl_0807c14c @ =0x03000c72
    movs r3, #0
    ldrsh r1, [r0, r3]
    adds r3, r0, #0
    cmp r1, #0xb
    bls lbl_0807c13e
    b lbl_0807c2f6
lbl_0807c13e:
    lsls r0, r1, #2
    ldr r1, lbl_0807c150 @ =lbl_0807c154
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807c148: .4byte 0x08754bc4
lbl_0807c14c: .4byte 0x03000c72
lbl_0807c150: .4byte lbl_0807c154
lbl_0807c154: @ jump table
    .4byte lbl_0807c184 @ case 0
    .4byte lbl_0807c1a8 @ case 1
    .4byte lbl_0807c1cc @ case 2
    .4byte lbl_0807c2a4 @ case 3
    .4byte lbl_0807c2b4 @ case 4
    .4byte lbl_0807c2dc @ case 5
    .4byte lbl_0807c2ec @ case 6
    .4byte lbl_0807c2b4 @ case 7
    .4byte lbl_0807c2ec @ case 8
    .4byte lbl_0807c1a8 @ case 9
    .4byte lbl_0807c24c @ case 10
    .4byte lbl_0807c2a4 @ case 11
lbl_0807c184:
    ldr r0, lbl_0807c19c @ =0x03000c74
    movs r1, #0
    strb r1, [r0]
    ldr r0, lbl_0807c1a0 @ =0x0300002f
    strb r1, [r0]
    bl file_select_menu_init
    ldr r1, lbl_0807c1a4 @ =0x03000c72
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
    b lbl_0807c2f6
    .align 2, 0
lbl_0807c19c: .4byte 0x03000c74
lbl_0807c1a0: .4byte 0x0300002f
lbl_0807c1a4: .4byte 0x03000c72
lbl_0807c1a8:
    bl sub_0807c568
    bl file_select_fading
    cmp r0, #0
    bne lbl_0807c1b6
    b lbl_0807c2f6
lbl_0807c1b6:
    ldr r1, lbl_0807c1c4 @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    ldr r1, lbl_0807c1c8 @ =0x03000c74
    b lbl_0807c23c
    .align 2, 0
lbl_0807c1c4: .4byte 0x03000c72
lbl_0807c1c8: .4byte 0x03000c74
lbl_0807c1cc:
    bl sub_0807d27c
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_0807c1d8
    b lbl_0807c2f6
lbl_0807c1d8:
    ldr r0, lbl_0807c1f4 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #0x3c]
    ldr r0, lbl_0807c1f8 @ =0x03000c74
    movs r2, #0
    ldrsb r2, [r0, r2]
    adds r3, r0, #0
    cmp r2, #1
    bne lbl_0807c200
    ldr r1, lbl_0807c1fc @ =0x03000c72
    movs r0, #7
    b lbl_0807c22a
    .align 2, 0
lbl_0807c1f4: .4byte 0x08754bc4
lbl_0807c1f8: .4byte 0x03000c74
lbl_0807c1fc: .4byte 0x03000c72
lbl_0807c200:
    cmp r2, #2
    bne lbl_0807c210
    ldr r1, lbl_0807c20c @ =0x03000c72
    movs r0, #4
    b lbl_0807c22a
    .align 2, 0
lbl_0807c20c: .4byte 0x03000c72
lbl_0807c210:
    cmp r2, #3
    bne lbl_0807c220
    ldr r0, lbl_0807c21c @ =0x03000c72
    strh r2, [r0]
    b lbl_0807c22c
    .align 2, 0
lbl_0807c21c: .4byte 0x03000c72
lbl_0807c220:
    adds r1, #0x3e
    movs r0, #0
    strb r0, [r1]
    ldr r1, lbl_0807c244 @ =0x03000c72
    movs r0, #0xa
lbl_0807c22a:
    strh r0, [r1]
lbl_0807c22c:
    movs r0, #0
    ldrsb r0, [r3, r0]
    cmp r0, #0
    beq lbl_0807c2f6
    movs r0, #1
    bl sub_0807c4b0
    ldr r1, lbl_0807c248 @ =0x03000bf3
lbl_0807c23c:
    movs r0, #0
    strb r0, [r1]
    b lbl_0807c2f6
    .align 2, 0
lbl_0807c244: .4byte 0x03000c72
lbl_0807c248: .4byte 0x03000bf3
lbl_0807c24c:
    bl settings_subroutine
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807c2f6
    ldr r0, lbl_0807c270 @ =0x03000c74
    movs r3, #0
    ldrsb r3, [r0, r3]
    cmp r3, #0
    beq lbl_0807c278
    movs r0, #1
    bl sub_0807c4b0
    ldr r1, lbl_0807c274 @ =0x03000c72
    movs r0, #0xb
    strh r0, [r1]
    b lbl_0807c2f6
    .align 2, 0
lbl_0807c270: .4byte 0x03000c74
lbl_0807c274: .4byte 0x03000c72
lbl_0807c278:
    ldr r1, lbl_0807c29c @ =0x03000c72
    movs r0, #2
    strh r0, [r1]
    ldr r2, lbl_0807c2a0 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x3e
    movs r1, #6
    strb r1, [r0]
    ldr r0, [r2]
    movs r1, #0
    strh r3, [r0, #0x3c]
    adds r0, #0x40
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x42
    strh r3, [r0]
    b lbl_0807c2f6
    .align 2, 0
lbl_0807c29c: .4byte 0x03000c72
lbl_0807c2a0: .4byte 0x08754bc4
lbl_0807c2a4:
    bl sub_0807c568
    bl file_select_fading
    cmp r0, #0
    beq lbl_0807c2f6
    movs r0, #1
    b lbl_0807c2fc
lbl_0807c2b4:
    bl sub_0807c568
    bl file_select_fading
    cmp r0, #0
    beq lbl_0807c2f6
    ldr r0, lbl_0807c2d4 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #0x3c]
    ldr r1, lbl_0807c2d8 @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    b lbl_0807c2f6
    .align 2, 0
lbl_0807c2d4: .4byte 0x08754bc4
lbl_0807c2d8: .4byte 0x03000c72
lbl_0807c2dc:
    ldr r0, [r2]
    ldrh r0, [r0, #0x3c]
    cmp r0, #0x1e
    bls lbl_0807c2f6
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    b lbl_0807c2f6
lbl_0807c2ec:
    movs r0, #0
    bl sub_08075c04
    movs r0, #1
    b lbl_0807c2fc
lbl_0807c2f6:
    bl file_select_menu_process_oam
    movs r0, #0
lbl_0807c2fc:
    pop {r1}
    bx r1

    thumb_func_start file_select_fading
file_select_fading: @ 0x0807c300
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #0xc
    movs r0, #0
    mov r8, r0
    ldr r7, lbl_0807c32c @ =0x08754bc4
    ldr r1, [r7]
    ldrh r0, [r1, #0x10]
    adds r2, r0, #1
    movs r3, #0
    strh r2, [r1, #0x10]
    ldrb r0, [r1, #0xc]
    cmp r0, #1
    bne lbl_0807c320
    b lbl_0807c490
lbl_0807c320:
    cmp r0, #1
    bgt lbl_0807c330
    cmp r0, #0
    beq lbl_0807c33c
    b lbl_0807c4a0
    .align 2, 0
lbl_0807c32c: .4byte 0x08754bc4
lbl_0807c330:
    cmp r0, #2
    beq lbl_0807c3d8
    cmp r0, #3
    bne lbl_0807c33a
    b lbl_0807c490
lbl_0807c33a:
    b lbl_0807c4a0
lbl_0807c33c:
    ldrb r0, [r1, #0xe]
    cmp r0, #0
    beq lbl_0807c344
    b lbl_0807c4a0
lbl_0807c344:
    lsls r0, r2, #0x10
    lsrs r0, r0, #0x10
    ldrb r2, [r1, #0x13]
    cmp r0, r2
    bhs lbl_0807c350
    b lbl_0807c4a0
lbl_0807c350:
    ldrb r0, [r1, #0xd]
    cmp r0, #0x1f
    bhi lbl_0807c3bc
    ldr r4, lbl_0807c3b4 @ =0x08754bb4
    ldr r0, [r4]
    str r0, [sp, #4]
    movs r2, #0x80
    lsls r2, r2, #3
    adds r0, r0, r2
    str r0, [sp, #8]
    ldrb r1, [r1, #0xd]
    add r6, sp, #8
    ldr r5, lbl_0807c3b8 @ =0x0000ffff
    str r5, [sp]
    movs r0, #0
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r4]
    movs r2, #0x80
    lsls r2, r2, #2
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r1, #0xc0
    lsls r1, r1, #3
    adds r0, r0, r1
    str r0, [sp, #8]
    ldr r0, [r7]
    ldrb r1, [r0, #0xd]
    str r5, [sp]
    movs r0, #0
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r1, [r7]
    movs r0, #1
    strb r0, [r1, #0xe]
    ldr r2, [r7]
    ldrb r0, [r2, #0xd]
    cmp r0, #0x1f
    beq lbl_0807c442
    ldrb r1, [r2, #0xd]
    ldrb r0, [r2, #0x12]
    adds r1, r1, r0
    cmp r1, #0x1f
    bgt lbl_0807c45a
    b lbl_0807c460
    .align 2, 0
lbl_0807c3b4: .4byte 0x08754bb4
lbl_0807c3b8: .4byte 0x0000ffff
lbl_0807c3bc:
    ldr r0, lbl_0807c3d4 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r2, r1, r3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    b lbl_0807c47a
    .align 2, 0
lbl_0807c3d4: .4byte 0x08754bb4
lbl_0807c3d8:
    ldrb r0, [r1, #0xe]
    cmp r0, #0
    bne lbl_0807c4a0
    lsls r0, r2, #0x10
    lsrs r0, r0, #0x10
    ldrb r2, [r1, #0x13]
    cmp r0, r2
    blo lbl_0807c4a0
    mov r0, r8
    strh r0, [r1, #0x10]
    ldrb r0, [r1, #0xd]
    cmp r0, #0x1f
    bhi lbl_0807c464
    ldr r4, lbl_0807c448 @ =0x08754bb4
    ldr r0, [r4]
    str r0, [sp, #4]
    movs r2, #0x80
    lsls r2, r2, #3
    adds r0, r0, r2
    str r0, [sp, #8]
    ldrb r1, [r1, #0xd]
    add r6, sp, #8
    ldr r5, lbl_0807c44c @ =0x0000ffff
    str r5, [sp]
    movs r0, #2
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r0, [r4]
    movs r2, #0x80
    lsls r2, r2, #2
    adds r1, r0, r2
    str r1, [sp, #4]
    movs r1, #0xc0
    lsls r1, r1, #3
    adds r0, r0, r1
    str r0, [sp, #8]
    ldr r0, [r7]
    ldrb r1, [r0, #0xd]
    str r5, [sp]
    movs r0, #2
    add r2, sp, #4
    adds r3, r6, #0
    bl sub_0805baac
    ldr r1, [r7]
    movs r0, #1
    strb r0, [r1, #0xe]
    ldr r2, [r7]
    ldrb r0, [r2, #0xd]
    cmp r0, #0x1f
    bne lbl_0807c450
lbl_0807c442:
    adds r0, #1
    strb r0, [r2, #0xd]
    b lbl_0807c4a0
    .align 2, 0
lbl_0807c448: .4byte 0x08754bb4
lbl_0807c44c: .4byte 0x0000ffff
lbl_0807c450:
    ldrb r1, [r2, #0xd]
    ldrb r0, [r2, #0x12]
    adds r1, r1, r0
    cmp r1, #0x1f
    ble lbl_0807c460
lbl_0807c45a:
    movs r0, #0x1f
    strb r0, [r2, #0xd]
    b lbl_0807c4a0
lbl_0807c460:
    strb r1, [r2, #0xd]
    b lbl_0807c4a0
lbl_0807c464:
    ldr r0, lbl_0807c48c @ =0x08754bb4
    ldr r2, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r2, r2, r3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
lbl_0807c47a:
    ldr r1, [r7]
    movs r0, #1
    strb r0, [r1, #0xe]
    ldr r1, [r7]
    ldrb r0, [r1, #0xc]
    adds r0, #1
    strb r0, [r1, #0xc]
    b lbl_0807c4a0
    .align 2, 0
lbl_0807c48c: .4byte 0x08754bb4
lbl_0807c490:
    ldrb r0, [r1, #0xe]
    cmp r0, #0
    bne lbl_0807c4a0
    strb r3, [r1, #0xd]
    ldr r0, [r7]
    strb r3, [r0, #0xc]
    movs r2, #1
    mov r8, r2
lbl_0807c4a0:
    mov r0, r8
    add sp, #0xc
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0807c4b0
sub_0807c4b0: @ 0x0807c4b0
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    lsls r0, r0, #0x18
    ldr r7, lbl_0807c524 @ =0x08754bc4
    ldr r1, [r7]
    movs r2, #0
    strb r2, [r1, #0xd]
    ldr r1, [r7]
    strb r2, [r1, #0xe]
    ldr r1, [r7]
    movs r3, #0
    mov sb, r3
    strh r2, [r1, #0x10]
    cmp r0, #0
    bne lbl_0807c52c
    movs r6, #0xa0
    lsls r6, r6, #0x13
    ldr r0, lbl_0807c528 @ =0x08754bb4
    mov r8, r0
    ldr r2, [r0]
    movs r5, #0x80
    lsls r5, r5, #3
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r6, #0
    adds r3, r5, #0
    bl BitFill
    mov r1, r8
    ldr r2, [r1]
    adds r2, r2, r5
    str r4, [sp]
    movs r0, #3
    adds r1, r6, #0
    adds r3, r5, #0
    bl DMATransfer
    ldr r0, [r7]
    mov r3, sb
    strb r3, [r0, #0xc]
    ldr r1, [r7]
    movs r0, #8
    strb r0, [r1, #0x12]
    ldr r0, [r7]
    strb r3, [r0, #0x13]
    b lbl_0807c554
    .align 2, 0
lbl_0807c524: .4byte 0x08754bc4
lbl_0807c528: .4byte 0x08754bb4
lbl_0807c52c:
    movs r1, #0xa0
    lsls r1, r1, #0x13
    ldr r0, lbl_0807c564 @ =0x08754bb4
    ldr r2, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, [r7]
    movs r0, #2
    strb r0, [r1, #0xc]
    ldr r1, [r7]
    movs r0, #8
    strb r0, [r1, #0x12]
    ldr r0, [r7]
    mov r1, sb
    strb r1, [r0, #0x13]
lbl_0807c554:
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807c564: .4byte 0x08754bb4

    thumb_func_start sub_0807c568
sub_0807c568: @ 0x0807c568
    push {r4, lr}
    sub sp, #4
    ldr r4, lbl_0807c59c @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0, #0xe]
    cmp r0, #0
    beq lbl_0807c594
    ldr r0, lbl_0807c5a0 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r1, r1, r3
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, [r4]
    movs r0, #0
    strb r0, [r1, #0xe]
lbl_0807c594:
    add sp, #4
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807c59c: .4byte 0x08754bc4
lbl_0807c5a0: .4byte 0x08754bb4

    thumb_func_start sub_0807c5a4
sub_0807c5a4: @ 0x0807c5a4
    push {r4, lr}
    movs r1, #0
    ldr r4, lbl_0807c5d8 @ =0x03000020
    movs r0, #0
    ldrsb r0, [r4, r0]
    cmp r0, #2
    beq lbl_0807c5b8
    movs r0, #2
    strb r0, [r4]
    movs r1, #1
lbl_0807c5b8:
    cmp r1, #0
    beq lbl_0807c5c0
    bl sub_08074cf8
lbl_0807c5c0:
    adds r3, r4, #0
    ldr r2, lbl_0807c5dc @ =0x03000c24
    movs r1, #2
lbl_0807c5c6:
    ldrb r0, [r3]
    strb r0, [r2, #0x13]
    adds r2, #0x18
    subs r1, #1
    cmp r1, #0
    bge lbl_0807c5c6
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807c5d8: .4byte 0x03000020
lbl_0807c5dc: .4byte 0x03000c24

    thumb_func_start file_select_menu_init
file_select_menu_init: @ 0x0807c5e0
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #4
    ldr r0, lbl_0807c798 @ =sub_0807cb20
    bl CallbackSetVBlank
    ldr r2, lbl_0807c79c @ =0x030016c4
    movs r3, #0xc5
    lsls r3, r3, #3
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldr r7, lbl_0807c7a0 @ =0x08754bc4
    ldr r3, [r7]
    movs r4, #0
    movs r1, #0
    mov r8, r1
    mov r2, r8
    strh r2, [r3]
    strh r2, [r0]
    ldr r2, lbl_0807c7a4 @ =0x04000054
    ldr r1, lbl_0807c7a8 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strh r0, [r2]
    ldr r1, lbl_0807c7ac @ =0x04000050
    movs r0, #0xff
    strh r0, [r3, #2]
    strh r0, [r1]
    ldr r0, lbl_0807c7b0 @ =0x03001382
    strb r4, [r0]
    bl ClearGFXRAM
    bl ResetFreeOAM
    ldr r1, lbl_0807c7b4 @ =0x03005806
    ldr r0, lbl_0807c7b8 @ =0x03005807
    strb r4, [r0]
    strb r4, [r1]
    ldr r0, lbl_0807c7bc @ =0x03000001
    strb r4, [r0]
    ldr r0, lbl_0807c7c0 @ =0x03000000
    strb r4, [r0]
    ldr r6, lbl_0807c7c4 @ =0x08754bb4
    ldr r2, [r6]
    movs r3, #0x80
    lsls r3, r3, #5
    adds r2, r2, r3
    movs r0, #0x80
    lsls r0, r0, #4
    mov sb, r0
    movs r5, #0x10
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, sb
    bl BitFill
    bl sub_080756c0
    bl sub_0807c5a4
    ldr r0, [r7]
    ldr r2, lbl_0807c7c8 @ =0x03000c1e
    ldrb r1, [r2]
    adds r0, #0x24
    strb r1, [r0]
    ldr r0, [r7]
    ldrb r1, [r2]
    adds r0, #0x25
    strb r1, [r0]
    ldr r0, [r7]
    ldrb r1, [r2]
    adds r0, #0x26
    strb r1, [r0]
    ldr r0, [r7]
    ldrb r1, [r2]
    adds r0, #0x27
    strb r1, [r0]
    ldr r0, [r7]
    ldrb r1, [r2]
    adds r0, #0x28
    strb r1, [r0]
    ldr r0, [r7]
    ldrb r1, [r2]
    adds r0, #0x3f
    strb r1, [r0]
    ldr r1, lbl_0807c7cc @ =0x08454818
    movs r4, #0xa0
    lsls r4, r4, #0x13
    str r5, [sp]
    movs r0, #3
    adds r2, r4, #0
    movs r3, #0xe0
    bl DMATransfer
    ldr r1, lbl_0807c7d0 @ =0x084548f8
    ldr r2, lbl_0807c7d4 @ =0x050001c0
    str r5, [sp]
    movs r0, #3
    movs r3, #0x40
    bl DMATransfer
    ldr r1, lbl_0807c7d8 @ =0x08454938
    ldr r2, lbl_0807c7dc @ =0x05000200
    str r5, [sp]
    movs r0, #3
    movs r3, #0xc0
    bl DMATransfer
    mov r1, r8
    strh r1, [r4]
    ldr r0, lbl_0807c7e0 @ =0x08458e14
    ldr r4, lbl_0807c7e4 @ =0x06000400
    adds r1, r4, #0
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0807c7e8 @ =0x08455f70
    ldr r1, lbl_0807c7ec @ =0x06008000
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0807c7f0 @ =0x0845c0f4
    ldr r1, lbl_0807c7f4 @ =0x06010000
    bl CallLZ77UncompVRAM
    str r5, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r4, #0
    mov r3, sb
    bl BitFill
    ldr r1, lbl_0807c7f8 @ =0x08760b24
    ldr r0, lbl_0807c7fc @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    subs r0, #2
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    ldr r1, lbl_0807c800 @ =0x06000c00
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0807c804 @ =0x0845dbdc
    ldr r1, lbl_0807c808 @ =0x0600f800
    bl CallLZ77UncompVRAM
    ldr r0, lbl_0807c80c @ =0x0845e19c
    ldr r1, [r6]
    add r1, sb
    bl CallLZ77UncompWRAM
    ldr r0, lbl_0807c810 @ =0x0845e6dc
    ldr r1, [r6]
    movs r2, #0xa0
    lsls r2, r2, #6
    adds r1, r1, r2
    bl CallLZ77UncompWRAM
    ldr r0, lbl_0807c814 @ =0x0845ea80
    ldr r1, [r6]
    movs r3, #0xc0
    lsls r3, r3, #5
    adds r1, r1, r3
    bl CallLZ77UncompWRAM
    ldr r0, lbl_0807c818 @ =0x0845ee24
    ldr r1, [r6]
    movs r2, #0x80
    lsls r2, r2, #6
    adds r1, r1, r2
    bl CallLZ77UncompWRAM
    bl sub_08079fb8
    bl copy_time_attack_time
    bl display_save_file_info
    ldr r1, [r6]
    add r1, sb
    ldr r2, lbl_0807c81c @ =0x0600d800
    str r5, [sp]
    movs r0, #3
    mov r3, sb
    bl DMATransfer
    bl sub_08074c08
    bl sub_08078228
    ldr r3, lbl_0807c820 @ =0x03000c72
    movs r0, #2
    strh r0, [r3]
    ldr r1, lbl_0807c824 @ =0x03000c24
    ldrb r0, [r1, #1]
    cmp r0, #0
    bne lbl_0807c78c
    ldrb r0, [r1, #0x19]
    cmp r0, #0
    bne lbl_0807c78c
    adds r0, r1, #0
    adds r0, #0x31
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807c828
lbl_0807c78c:
    ldr r0, lbl_0807c7a0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3e
    movs r1, #4
    b lbl_0807c872
    .align 2, 0
lbl_0807c798: .4byte sub_0807cb20
lbl_0807c79c: .4byte 0x030016c4
lbl_0807c7a0: .4byte 0x08754bc4
lbl_0807c7a4: .4byte 0x04000054
lbl_0807c7a8: .4byte 0x030013ae
lbl_0807c7ac: .4byte 0x04000050
lbl_0807c7b0: .4byte 0x03001382
lbl_0807c7b4: .4byte 0x03005806
lbl_0807c7b8: .4byte 0x03005807
lbl_0807c7bc: .4byte 0x03000001
lbl_0807c7c0: .4byte 0x03000000
lbl_0807c7c4: .4byte 0x08754bb4
lbl_0807c7c8: .4byte 0x03000c1e
lbl_0807c7cc: .4byte 0x08454818
lbl_0807c7d0: .4byte 0x084548f8
lbl_0807c7d4: .4byte 0x050001c0
lbl_0807c7d8: .4byte 0x08454938
lbl_0807c7dc: .4byte 0x05000200
lbl_0807c7e0: .4byte 0x08458e14
lbl_0807c7e4: .4byte 0x06000400
lbl_0807c7e8: .4byte 0x08455f70
lbl_0807c7ec: .4byte 0x06008000
lbl_0807c7f0: .4byte 0x0845c0f4
lbl_0807c7f4: .4byte 0x06010000
lbl_0807c7f8: .4byte 0x08760b24
lbl_0807c7fc: .4byte 0x03000020
lbl_0807c800: .4byte 0x06000c00
lbl_0807c804: .4byte 0x0845dbdc
lbl_0807c808: .4byte 0x0600f800
lbl_0807c80c: .4byte 0x0845e19c
lbl_0807c810: .4byte 0x0845e6dc
lbl_0807c814: .4byte 0x0845ea80
lbl_0807c818: .4byte 0x0845ee24
lbl_0807c81c: .4byte 0x0600d800
lbl_0807c820: .4byte 0x03000c72
lbl_0807c824: .4byte 0x03000c24
lbl_0807c828:
    ldr r0, [r7]
    ldr r2, lbl_0807c858 @ =0x03000bf3
    movs r1, #0
    ldrsb r1, [r2, r1]
    adds r0, #0x5c
    adds r0, r0, r1
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807c85c
    ldrb r0, [r2]
    lsls r0, r0, #0x18
    cmp r0, #0
    ble lbl_0807c85c
    lsrs r0, r0, #0x18
    cmp r0, #6
    bhi lbl_0807c85c
    movs r0, #0xa
    strh r0, [r3]
    bl sub_0807b008
    ldr r0, [r7]
    adds r0, #0x3e
    movs r1, #1
    b lbl_0807c872
    .align 2, 0
lbl_0807c858: .4byte 0x03000bf3
lbl_0807c85c:
    movs r0, #9
    movs r1, #2
    bl PlayMusic
    ldr r1, lbl_0807c968 @ =0x03000bf3
    movs r0, #0
    strb r0, [r1]
    ldr r0, lbl_0807c96c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3e
    movs r1, #0
lbl_0807c872:
    strb r1, [r0]
    ldr r2, lbl_0807c970 @ =0x03000bf4
    ldr r0, lbl_0807c974 @ =0x03000bf6
    movs r3, #0x80
    lsls r3, r3, #4
    adds r1, r3, #0
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_0807c978 @ =0x03000bf8
    ldr r0, lbl_0807c97c @ =0x03000bfa
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_0807c980 @ =0x03000bfc
    ldr r0, lbl_0807c984 @ =0x03000bfe
    strh r1, [r0]
    strh r1, [r2]
    ldr r2, lbl_0807c988 @ =0x03000c00
    ldr r0, lbl_0807c98c @ =0x03000c02
    strh r1, [r0]
    strh r1, [r2]
    ldr r5, lbl_0807c96c @ =0x08754bc4
    ldr r2, [r5]
    movs r6, #0
    movs r3, #0
    movs r0, #0xd0
    lsls r0, r0, #5
    strh r0, [r2]
    ldr r0, lbl_0807c990 @ =0x00001f0b
    strh r0, [r2, #0x14]
    ldr r1, lbl_0807c994 @ =0x00001e02
    strh r1, [r2, #0x16]
    ldr r0, lbl_0807c998 @ =0x00001b01
    strh r0, [r2, #0x18]
    adds r0, #1
    strh r0, [r2, #0x1a]
    ldr r0, lbl_0807c99c @ =0x00001d01
    strh r0, [r2, #0x1c]
    movs r0, #0xe0
    lsls r0, r0, #5
    strh r0, [r2, #0x1e]
    strh r1, [r2, #0x20]
    ldr r0, lbl_0807c9a0 @ =0x04000008
    strh r3, [r2, #4]
    strh r3, [r0]
    ldr r4, lbl_0807c9a4 @ =0x0400000a
    ldrh r3, [r2, #0x18]
    strh r3, [r2, #6]
    ldr r1, lbl_0807c9a8 @ =0x0000ffff
    adds r0, r1, #0
    ands r0, r3
    strh r0, [r4]
    adds r4, #2
    ldrh r3, [r2, #0x16]
    strh r3, [r2, #8]
    adds r0, r1, #0
    ands r0, r3
    strh r0, [r4]
    ldr r3, lbl_0807c9ac @ =0x0400000e
    ldrh r0, [r2, #0x14]
    strh r0, [r2, #0xa]
    ands r1, r0
    strh r1, [r3]
    ldr r0, lbl_0807c9b0 @ =0x08760b38
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2, #0x2c]
    str r1, [r2, #0x30]
    adds r2, #0x34
    strb r6, [r2]
    ldr r0, [r5]
    adds r0, #0x35
    movs r1, #0xff
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x36
    movs r1, #1
    rsbs r1, r1, #0
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x37
    strb r1, [r0]
    bl sub_080782ac
    ldr r0, [r5]
    adds r0, #0x24
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078504
    ldr r0, lbl_0807c9b4 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r0, r1]
    cmp r0, #2
    bne lbl_0807c9b8
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x3e
    ldrb r0, [r0]
    cmp r0, #4
    bne lbl_0807c9da
    adds r2, #0xef
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
    ldr r0, [r5]
    adds r0, #0xfe
    movs r1, #0xd
    strb r1, [r0]
    ldr r0, [r5]
    movs r2, #0x87
    lsls r2, r2, #1
    adds r1, r0, r2
    movs r0, #0xe
    strb r0, [r1]
    ldr r0, [r5]
    movs r3, #0x8f
    lsls r3, r3, #1
    adds r1, r0, r3
    movs r0, #0xf
    strb r0, [r1]
    b lbl_0807c9da
    .align 2, 0
lbl_0807c968: .4byte 0x03000bf3
lbl_0807c96c: .4byte 0x08754bc4
lbl_0807c970: .4byte 0x03000bf4
lbl_0807c974: .4byte 0x03000bf6
lbl_0807c978: .4byte 0x03000bf8
lbl_0807c97c: .4byte 0x03000bfa
lbl_0807c980: .4byte 0x03000bfc
lbl_0807c984: .4byte 0x03000bfe
lbl_0807c988: .4byte 0x03000c00
lbl_0807c98c: .4byte 0x03000c02
lbl_0807c990: .4byte 0x00001f0b
lbl_0807c994: .4byte 0x00001e02
lbl_0807c998: .4byte 0x00001b01
lbl_0807c99c: .4byte 0x00001d01
lbl_0807c9a0: .4byte 0x04000008
lbl_0807c9a4: .4byte 0x0400000a
lbl_0807c9a8: .4byte 0x0000ffff
lbl_0807c9ac: .4byte 0x0400000e
lbl_0807c9b0: .4byte 0x08760b38
lbl_0807c9b4: .4byte 0x03000c72
lbl_0807c9b8:
    bl sub_08079ecc
    movs r0, #0
    bl sub_08078b98
    movs r0, #4
    bl sub_08078b98
    ldr r2, [r5]
    ldrh r1, [r2]
    ldr r0, lbl_0807ca14 @ =0x0000fdff
    ands r0, r1
    movs r3, #0xa0
    lsls r3, r3, #5
    adds r1, r3, #0
    orrs r0, r1
    strh r0, [r2]
lbl_0807c9da:
    bl file_select_menu_process_oam
    movs r0, #0
    bl sub_0807c4b0
    ldr r2, lbl_0807ca18 @ =0x04000054
    ldr r1, lbl_0807ca1c @ =0x030013ae
    movs r0, #0
    strh r0, [r1]
    strh r0, [r2]
    subs r2, #4
    ldr r0, lbl_0807ca20 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    strh r0, [r1, #2]
    strh r0, [r2]
    bl sub_0807ca28
    ldr r0, lbl_0807ca24 @ =sub_0807ca28
    bl CallbackSetVBlank
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807ca14: .4byte 0x0000fdff
lbl_0807ca18: .4byte 0x04000054
lbl_0807ca1c: .4byte 0x030013ae
lbl_0807ca20: .4byte 0x08754bc4
lbl_0807ca24: .4byte sub_0807ca28

    thumb_func_start sub_0807ca28
sub_0807ca28: @ 0x0807ca28
    push {lr}
    ldr r0, lbl_0807cad8 @ =0x03005808
    ldrb r0, [r0, #4]
    cmp r0, #0
    beq lbl_0807ca36
    bl sub_0808a730
lbl_0807ca36:
    ldr r1, lbl_0807cadc @ =0x040000d4
    ldr r0, lbl_0807cae0 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0807cae4 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xc4
    ldr r0, lbl_0807cae8 @ =0x03000bf4
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0807caec @ =0x03000bf6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0807caf0 @ =0x03000bf8
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0807caf4 @ =0x03000bfa
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0807caf8 @ =0x03000bfc
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0807cafc @ =0x03000bfe
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0807cb00 @ =0x03000c00
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0807cb04 @ =0x03000c02
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    subs r1, #0x1e
    ldr r0, lbl_0807cb08 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2]
    strh r0, [r1]
    adds r1, #0x54
    ldr r0, lbl_0807cb0c @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r3, lbl_0807cb10 @ =0x04000052
    ldr r0, lbl_0807cb14 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_0807cb18 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r3]
    ldr r1, lbl_0807cb1c @ =0x04000050
    ldrh r0, [r2, #2]
    strh r0, [r1]
    subs r1, #0x48
    ldrh r0, [r2, #4]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #6]
    strh r0, [r1]
    adds r1, #2
    ldrh r0, [r2, #8]
    strh r0, [r1]
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807cad8: .4byte 0x03005808
lbl_0807cadc: .4byte 0x040000d4
lbl_0807cae0: .4byte 0x03000e7c
lbl_0807cae4: .4byte 0x84000100
lbl_0807cae8: .4byte 0x03000bf4
lbl_0807caec: .4byte 0x03000bf6
lbl_0807caf0: .4byte 0x03000bf8
lbl_0807caf4: .4byte 0x03000bfa
lbl_0807caf8: .4byte 0x03000bfc
lbl_0807cafc: .4byte 0x03000bfe
lbl_0807cb00: .4byte 0x03000c00
lbl_0807cb04: .4byte 0x03000c02
lbl_0807cb08: .4byte 0x08754bc4
lbl_0807cb0c: .4byte 0x030013ae
lbl_0807cb10: .4byte 0x04000052
lbl_0807cb14: .4byte 0x030013b2
lbl_0807cb18: .4byte 0x030013b0
lbl_0807cb1c: .4byte 0x04000050

    thumb_func_start sub_0807cb20
sub_0807cb20: @ 0x0807cb20
    sub sp, #4
    mov r1, sp
    movs r0, #0
    strb r0, [r1]
    add sp, #4
    bx lr

    thumb_func_start display_save_file_info
display_save_file_info: @ 0x0807cb2c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    movs r0, #0
    bl display_save_file_health
    movs r0, #0
    bl sub_0807cdc4
    ldr r4, lbl_0807cd48 @ =0x03000c24
    adds r0, r4, #0
    movs r1, #0
    bl sub_0807cf98
    movs r0, #1
    bl display_save_file_health
    movs r0, #1
    bl sub_0807cdc4
    adds r0, r4, #0
    adds r0, #0x18
    movs r1, #1
    bl sub_0807cf98
    movs r0, #2
    bl display_save_file_health
    movs r0, #2
    bl sub_0807cdc4
    adds r4, #0x30
    adds r0, r4, #0
    movs r1, #2
    bl sub_0807cf98
    bl sub_0807d0b0
    ldr r5, lbl_0807cd4c @ =0x08754bb4
    ldr r2, [r5]
    movs r6, #0xc0
    lsls r6, r6, #6
    adds r2, r2, r6
    movs r0, #0xc0
    lsls r0, r0, #2
    mov r8, r0
    movs r4, #0x10
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r0, #0xcc
    lsls r0, r0, #6
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r0, #0xd8
    lsls r0, r0, #6
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r0, #0xc0
    lsls r0, r0, #5
    adds r1, r2, r0
    adds r2, r2, r6
    str r4, [sp]
    movs r0, #3
    movs r3, #0x80
    lsls r3, r3, #2
    bl DMATransfer
    ldr r2, [r5]
    movs r0, #0xd0
    lsls r0, r0, #5
    adds r1, r2, r0
    movs r0, #0xcc
    lsls r0, r0, #6
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    mov r3, r8
    bl DMATransfer
    ldr r2, [r5]
    movs r0, #0xe8
    lsls r0, r0, #5
    adds r1, r2, r0
    movs r0, #0xd8
    lsls r0, r0, #6
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    mov r3, r8
    bl DMATransfer
    ldr r2, [r5]
    movs r6, #0xe4
    lsls r6, r6, #6
    adds r2, r2, r6
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r0, #0xf0
    lsls r0, r0, #6
    mov sb, r0
    add r2, sb
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r0, #0x80
    lsls r0, r0, #6
    adds r1, r2, r0
    adds r2, r2, r6
    movs r6, #0xa0
    lsls r6, r6, #2
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r2, [r5]
    movs r0, #0x8a
    lsls r0, r0, #6
    adds r1, r2, r0
    add r2, sb
    str r4, [sp]
    movs r0, #3
    mov r3, r8
    bl DMATransfer
    ldr r2, [r5]
    movs r0, #0xfc
    lsls r0, r0, #6
    mov sb, r0
    add r2, sb
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r0, #0x84
    lsls r0, r0, #7
    mov sl, r0
    add r2, sl
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r7, #0x8a
    lsls r7, r7, #7
    adds r2, r2, r7
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r0, #0xa0
    lsls r0, r0, #6
    adds r1, r2, r0
    add r2, sb
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r2, [r5]
    movs r0, #0xaa
    lsls r0, r0, #6
    adds r1, r2, r0
    add r2, sl
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r2, [r5]
    movs r0, #0xb4
    lsls r0, r0, #6
    adds r1, r2, r0
    adds r2, r2, r7
    str r4, [sp]
    movs r0, #3
    adds r3, r6, #0
    bl DMATransfer
    ldr r2, [r5]
    movs r6, #0x90
    lsls r6, r6, #7
    adds r2, r2, r6
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    mov r3, r8
    bl BitFill
    ldr r2, [r5]
    movs r0, #0x96
    lsls r0, r0, #6
    adds r1, r2, r0
    adds r2, r2, r6
    str r4, [sp]
    movs r0, #3
    movs r3, #0x80
    lsls r3, r3, #2
    bl DMATransfer
    ldr r2, [r5]
    movs r0, #0xcc
    lsls r0, r0, #6
    adds r1, r2, r0
    movs r0, #0x96
    lsls r0, r0, #7
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    mov r3, r8
    bl DMATransfer
    ldr r2, [r5]
    movs r0, #0xd8
    lsls r0, r0, #6
    adds r1, r2, r0
    movs r0, #0x9c
    lsls r0, r0, #7
    adds r2, r2, r0
    str r4, [sp]
    movs r0, #3
    mov r3, r8
    bl DMATransfer
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807cd48: .4byte 0x03000c24
lbl_0807cd4c: .4byte 0x08754bb4

    thumb_func_start display_save_file_health
display_save_file_health: @ 0x0807cd50
    push {lr}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    movs r3, #1
    cmp r2, #0
    beq lbl_0807cd66
    movs r3, #3
    cmp r2, #1
    bne lbl_0807cd66
    movs r3, #2
lbl_0807cd66:
    ldr r0, lbl_0807cd98 @ =0x03000c24
    lsls r1, r2, #1
    adds r1, r1, r2
    lsls r1, r1, #3
    adds r2, r1, r0
    ldrb r0, [r2]
    cmp r0, #0
    bne lbl_0807cd7e
    movs r0, #0x12
    ldrsb r0, [r2, r0]
    cmp r0, #0
    beq lbl_0807cda0
lbl_0807cd7e:
    ldrb r0, [r2, #1]
    cmp r0, #0
    bne lbl_0807cda0
    ldr r0, lbl_0807cd9c @ =0x03001530
    ldrh r1, [r2, #4]
    strh r1, [r0, #6]
    ldrh r1, [r2, #6]
    strh r1, [r0]
    adds r0, r3, #0
    bl HUDDrawEnergy
    b lbl_0807cdba
    .align 2, 0
lbl_0807cd98: .4byte 0x03000c24
lbl_0807cd9c: .4byte 0x03001530
lbl_0807cda0:
    subs r0, r3, #1
    lsls r2, r0, #3
    subs r2, r2, r0
    lsls r2, r2, #5
    ldr r0, lbl_0807cdc0 @ =0x06000020
    adds r2, r2, r0
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0xe0
    bl BitFill
lbl_0807cdba:
    add sp, #4
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807cdc0: .4byte 0x06000020

    thumb_func_start sub_0807cdc4
sub_0807cdc4: @ 0x0807cdc4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldr r0, lbl_0807cf18 @ =0x08754bb4
    ldr r0, [r0]
    movs r1, #0x80
    lsls r1, r1, #4
    adds r7, r0, r1
    movs r2, #1
    cmp r3, #0
    beq lbl_0807cdec
    movs r2, #3
    cmp r3, #1
    bne lbl_0807cdec
    movs r2, #2
lbl_0807cdec:
    subs r1, r2, #1
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #6
    adds r0, #0xdc
    adds r7, r7, r0
    ldr r1, lbl_0807cf1c @ =0x03000c24
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #3
    adds r5, r0, r1
    ldrb r0, [r5, #0x15]
    movs r1, #0xa0
    lsls r1, r1, #7
    cmp r0, #0
    beq lbl_0807ce10
    movs r1, #0xc0
    lsls r1, r1, #7
lbl_0807ce10:
    adds r6, r1, #0
    ldrb r0, [r5]
    cmp r0, #0
    bne lbl_0807ce1a
    b lbl_0807cf20
lbl_0807ce1a:
    ldrb r0, [r5, #1]
    cmp r0, #0
    beq lbl_0807ce22
    b lbl_0807cf20
lbl_0807ce22:
    ldrb r0, [r5, #0xd]
    movs r1, #0xa
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    movs r3, #0xe6
    lsls r3, r3, #1
    mov sl, r3
    mov r4, sl
    adds r0, r2, r4
    orrs r0, r6
    strh r0, [r7]
    adds r1, r7, #0
    adds r1, #0x40
    movs r0, #0xf6
    lsls r0, r0, #1
    mov sb, r0
    mov r3, sb
    adds r0, r2, r3
    orrs r0, r6
    strh r0, [r1]
    ldrb r0, [r5, #0xd]
    movs r1, #0xa
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    adds r0, r2, r4
    orrs r0, r6
    strh r0, [r7, #2]
    adds r1, r7, #0
    adds r1, #0x42
    mov r4, sb
    adds r0, r2, r4
    orrs r0, r6
    strh r0, [r1]
    movs r1, #0xe5
    lsls r1, r1, #1
    adds r0, r1, #0
    mov r8, r6
    mov r2, r8
    orrs r2, r0
    mov r8, r2
    strh r2, [r7, #4]
    adds r1, r7, #0
    adds r1, #0x44
    movs r3, #0xf5
    lsls r3, r3, #1
    adds r0, r3, #0
    adds r4, r6, #0
    orrs r4, r0
    strh r4, [r1]
    ldrb r0, [r5, #0xe]
    movs r1, #0xa
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    mov r1, sl
    adds r0, r2, r1
    orrs r0, r6
    strh r0, [r7, #6]
    adds r1, r7, #0
    adds r1, #0x46
    mov r3, sb
    adds r0, r2, r3
    orrs r0, r6
    strh r0, [r1]
    ldrb r0, [r5, #0xe]
    movs r1, #0xa
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    mov r1, sl
    adds r0, r2, r1
    orrs r0, r6
    strh r0, [r7, #8]
    adds r1, r7, #0
    adds r1, #0x48
    mov r3, sb
    adds r0, r2, r3
    orrs r0, r6
    strh r0, [r1]
    mov r0, r8
    strh r0, [r7, #0xa]
    adds r0, r7, #0
    adds r0, #0x4a
    strh r4, [r0]
    ldrb r0, [r5, #0xf]
    movs r1, #0xa
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    mov r1, sl
    adds r0, r2, r1
    orrs r0, r6
    strh r0, [r7, #0xc]
    adds r1, r7, #0
    adds r1, #0x4c
    mov r3, sb
    adds r0, r2, r3
    orrs r0, r6
    strh r0, [r1]
    ldrb r0, [r5, #0xf]
    movs r1, #0xa
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    mov r4, sl
    adds r4, r2, r4
    str r4, [sp]
    orrs r4, r6
    strh r4, [r7, #0xe]
    adds r0, r7, #0
    adds r0, #0x4e
    add r2, sb
    orrs r2, r6
    strh r2, [r0]
    b lbl_0807cf7e
    .align 2, 0
lbl_0807cf18: .4byte 0x08754bb4
lbl_0807cf1c: .4byte 0x03000c24
lbl_0807cf20:
    ldr r2, lbl_0807cf90 @ =0x000001cb
    adds r0, r2, #0
    adds r2, r6, #0
    orrs r2, r0
    strh r2, [r7]
    adds r3, r7, #0
    adds r3, #0x40
    ldr r4, lbl_0807cf94 @ =0x000001eb
    adds r0, r4, #0
    adds r1, r6, #0
    orrs r1, r0
    strh r1, [r3]
    strh r2, [r7, #2]
    adds r0, r7, #0
    adds r0, #0x42
    strh r1, [r0]
    movs r3, #0xe5
    lsls r3, r3, #1
    adds r0, r3, #0
    adds r3, r6, #0
    orrs r3, r0
    strh r3, [r7, #4]
    adds r4, r7, #0
    adds r4, #0x44
    str r4, [sp, #8]
    movs r4, #0xf5
    lsls r4, r4, #1
    adds r0, r4, #0
    orrs r6, r0
    ldr r0, [sp, #8]
    strh r6, [r0]
    strh r2, [r7, #6]
    adds r0, r7, #0
    adds r0, #0x46
    strh r1, [r0]
    strh r2, [r7, #8]
    adds r0, #2
    strh r1, [r0]
    strh r3, [r7, #0xa]
    adds r0, #2
    strh r6, [r0]
    strh r2, [r7, #0xc]
    adds r0, #2
    strh r1, [r0]
    strh r2, [r7, #0xe]
    adds r0, #2
    strh r1, [r0]
lbl_0807cf7e:
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807cf90: .4byte 0x000001cb
lbl_0807cf94: .4byte 0x000001eb

    thumb_func_start sub_0807cf98
sub_0807cf98: @ 0x0807cf98
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r1, #0
    cmp r1, #2
    bne lbl_0807cfaa
    movs r1, #0xc0
    b lbl_0807cfba
lbl_0807cfaa:
    cmp r1, #1
    bne lbl_0807cfb2
    movs r1, #0x60
    b lbl_0807cfba
lbl_0807cfb2:
    cmp r0, #0
    beq lbl_0807cfb8
    b lbl_0807d0aa
lbl_0807cfb8:
    movs r1, #0
lbl_0807cfba:
    ldrb r3, [r5, #0x15]
    movs r0, #0xa0
    lsls r0, r0, #7
    cmp r3, #0
    beq lbl_0807cfc8
    movs r0, #0xc0
    lsls r0, r0, #7
lbl_0807cfc8:
    adds r6, r0, #0
    ldr r2, lbl_0807cff8 @ =0x08754bb4
    ldr r0, [r2]
    lsls r1, r1, #1
    adds r0, r1, r0
    ldr r7, lbl_0807cffc @ =0x000008cc
    adds r4, r0, r7
    ldrb r0, [r5]
    adds r7, r2, #0
    adds r2, r1, #0
    cmp r0, #0
    bne lbl_0807cfe8
    movs r0, #0x12
    ldrsb r0, [r5, r0]
    cmp r0, #0
    beq lbl_0807d028
lbl_0807cfe8:
    ldrb r0, [r5, #1]
    cmp r0, #0
    bne lbl_0807d028
    cmp r3, #0
    beq lbl_0807d004
    ldr r0, lbl_0807d000 @ =0x000001af
    b lbl_0807d010
    .align 2, 0
lbl_0807cff8: .4byte 0x08754bb4
lbl_0807cffc: .4byte 0x000008cc
lbl_0807d000: .4byte 0x000001af
lbl_0807d004:
    ldrb r1, [r5, #0x14]
    lsls r0, r1, #2
    adds r0, r0, r1
    movs r1, #0xd0
    lsls r1, r1, #1
    adds r0, r0, r1
lbl_0807d010:
    movs r3, #4
lbl_0807d012:
    adds r1, r0, #0
    adds r0, r1, #1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    orrs r1, r6
    strh r1, [r4]
    adds r4, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0807d012
    b lbl_0807d036
lbl_0807d028:
    movs r0, #0
    movs r3, #4
lbl_0807d02c:
    strh r0, [r4]
    adds r4, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0807d02c
lbl_0807d036:
    ldr r0, [r7]
    adds r0, r2, r0
    ldr r7, lbl_0807d04c @ =0x0000092c
    adds r4, r0, r7
    ldrb r0, [r5, #2]
    cmp r0, #0xb
    bls lbl_0807d050
    movs r3, #1
    rsbs r3, r3, #0
    b lbl_0807d05a
    .align 2, 0
lbl_0807d04c: .4byte 0x0000092c
lbl_0807d050:
    ldr r1, lbl_0807d098 @ =0x08760b18
    ldrb r0, [r5, #2]
    adds r0, r0, r1
    movs r3, #0
    ldrsb r3, [r0, r3]
lbl_0807d05a:
    ldrb r0, [r5]
    cmp r0, #0
    bne lbl_0807d068
    movs r0, #0x12
    ldrsb r0, [r5, r0]
    cmp r0, #0
    beq lbl_0807d09c
lbl_0807d068:
    cmp r3, #0
    blt lbl_0807d09c
    ldrb r0, [r5, #1]
    cmp r0, #0
    bne lbl_0807d09c
    lsls r0, r3, #1
    adds r0, r0, r3
    lsls r0, r0, #0x11
    movs r1, #0xbb
    lsls r1, r1, #0x11
    adds r0, r0, r1
    lsrs r0, r0, #0x10
    movs r3, #5
lbl_0807d082:
    adds r1, r0, #0
    adds r0, r1, #1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    orrs r1, r6
    strh r1, [r4]
    adds r4, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0807d082
    b lbl_0807d0aa
    .align 2, 0
lbl_0807d098: .4byte 0x08760b18
lbl_0807d09c:
    movs r0, #0
    movs r3, #5
lbl_0807d0a0:
    strh r0, [r4]
    adds r4, #2
    subs r3, #1
    cmp r3, #0
    bge lbl_0807d0a0
lbl_0807d0aa:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_0807d0b0
sub_0807d0b0: @ 0x0807d0b0
    push {r4, r5, r6, lr}
    ldr r2, lbl_0807d158 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x3b
    movs r1, #0
    strb r1, [r0]
    ldr r1, lbl_0807d15c @ =0x03000c24
    ldrb r0, [r1, #1]
    adds r6, r2, #0
    adds r3, r1, #0
    cmp r0, #0
    bne lbl_0807d0e2
    ldrb r0, [r3]
    cmp r0, #0
    bne lbl_0807d0d6
    movs r0, #0x12
    ldrsb r0, [r3, r0]
    cmp r0, #0
    beq lbl_0807d0e2
lbl_0807d0d6:
    ldr r0, [r6]
    adds r0, #0x3b
    ldrb r1, [r0]
    movs r2, #1
    orrs r1, r2
    strb r1, [r0]
lbl_0807d0e2:
    ldrb r0, [r3, #0x19]
    cmp r0, #0
    bne lbl_0807d108
    ldrb r0, [r3, #0x18]
    cmp r0, #0
    bne lbl_0807d0fc
    adds r0, r3, #0
    adds r0, #0x2a
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807d108
lbl_0807d0fc:
    ldr r0, [r6]
    adds r0, #0x3b
    ldrb r2, [r0]
    movs r1, #2
    orrs r1, r2
    strb r1, [r0]
lbl_0807d108:
    adds r0, r3, #0
    adds r0, #0x31
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807d136
    adds r0, r3, #0
    adds r0, #0x30
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807d12a
    adds r0, r3, #0
    adds r0, #0x42
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807d136
lbl_0807d12a:
    ldr r0, [r6]
    adds r0, #0x3b
    ldrb r2, [r0]
    movs r1, #4
    orrs r1, r2
    strb r1, [r0]
lbl_0807d136:
    ldr r0, lbl_0807d160 @ =0x08754bb4
    ldr r0, [r0]
    movs r1, #0xb4
    lsls r1, r1, #4
    adds r2, r0, r1
    ldr r0, [r6]
    adds r3, r0, #0
    adds r3, #0x3b
    ldrb r1, [r3]
    cmp r1, #0
    beq lbl_0807d164
    movs r0, #0x18
    orrs r0, r1
    strb r0, [r3]
    movs r4, #0
    b lbl_0807d166
    .align 2, 0
lbl_0807d158: .4byte 0x08754bc4
lbl_0807d15c: .4byte 0x03000c24
lbl_0807d160: .4byte 0x08754bb4
lbl_0807d164:
    movs r4, #1
lbl_0807d166:
    lsls r0, r4, #0x1c
    lsrs r4, r0, #0x10
    movs r3, #0
    ldr r5, lbl_0807d198 @ =0x00000fff
lbl_0807d16e:
    ldrh r0, [r2]
    adds r1, r5, #0
    ands r1, r0
    orrs r1, r4
    strh r1, [r2]
    adds r2, #2
    adds r0, r3, #1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0x7f
    bls lbl_0807d16e
    ldr r0, [r6]
    adds r0, #0x3b
    ldrb r2, [r0]
    movs r1, #0x20
    orrs r1, r2
    strb r1, [r0]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807d198: .4byte 0x00000fff

    thumb_func_start sub_0807d19c
sub_0807d19c: @ 0x0807d19c
    push {r4, r5, lr}
    adds r5, r1, #0
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldr r0, lbl_0807d1b8 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_0807d1bc
    movs r3, #1
    rsbs r3, r3, #0
    b lbl_0807d1ca
    .align 2, 0
lbl_0807d1b8: .4byte 0x03001380
lbl_0807d1bc:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    bne lbl_0807d1c8
    movs r0, #0
    b lbl_0807d228
lbl_0807d1c8:
    movs r3, #1
lbl_0807d1ca:
    ldrb r2, [r5]
    ldr r0, lbl_0807d1e0 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r0, #0
    adds r1, #0x3b
    ldrb r1, [r1]
    cmp r4, #0
    bne lbl_0807d1e4
    movs r0, #7
    orrs r1, r0
    b lbl_0807d206
    .align 2, 0
lbl_0807d1e0: .4byte 0x08754bc4
lbl_0807d1e4:
    cmp r4, #1
    bne lbl_0807d1f2
    movs r0, #7
    ands r1, r0
    b lbl_0807d206
lbl_0807d1ee:
    movs r3, #0
    b lbl_0807d224
lbl_0807d1f2:
    cmp r4, #2
    bne lbl_0807d206
    adds r0, #0x26
    movs r1, #1
    ldrb r0, [r0]
    lsls r1, r0
    movs r0, #7
    adds r4, r0, #0
    bics r4, r1
    adds r1, r4, #0
lbl_0807d206:
    movs r4, #1
lbl_0807d208:
    cmp r3, #0
    beq lbl_0807d224
    adds r0, r2, r3
    cmp r0, #5
    bhi lbl_0807d1ee
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    adds r0, r1, #0
    asrs r0, r2
    ands r0, r4
    cmp r0, #0
    beq lbl_0807d208
    strb r2, [r5]
    movs r3, #1
lbl_0807d224:
    lsls r0, r3, #0x18
    lsrs r0, r0, #0x18
lbl_0807d228:
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0807d230
sub_0807d230: @ 0x0807d230
    push {r4, r5, lr}
    adds r5, r0, #0
    ldr r0, lbl_0807d258 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3b
    ldrb r1, [r0]
    adds r3, r1, #0
    ldrb r2, [r5]
    adds r0, r1, #0
    asrs r0, r2
    movs r4, #1
    ands r0, r4
    cmp r0, #0
    bne lbl_0807d274
    adds r0, r1, #0
    ands r0, r4
    cmp r0, #0
    beq lbl_0807d25c
    movs r2, #0
    b lbl_0807d272
    .align 2, 0
lbl_0807d258: .4byte 0x08754bc4
lbl_0807d25c:
    movs r0, #2
    ands r1, r0
    cmp r1, #0
    beq lbl_0807d268
    movs r2, #1
    b lbl_0807d272
lbl_0807d268:
    movs r0, #4
    ands r3, r0
    cmp r3, #0
    beq lbl_0807d272
    movs r2, #2
lbl_0807d272:
    strb r2, [r5]
lbl_0807d274:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0807d27c
sub_0807d27c: @ 0x0807d27c
    push {r4, r5, r6, lr}
    ldr r0, lbl_0807d298 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3e
    ldrb r0, [r0]
    cmp r0, #6
    bls lbl_0807d28c
    b lbl_0807d576
lbl_0807d28c:
    lsls r0, r0, #2
    ldr r1, lbl_0807d29c @ =lbl_0807d2a0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807d298: .4byte 0x08754bc4
lbl_0807d29c: .4byte lbl_0807d2a0
lbl_0807d2a0: @ jump table
    .4byte lbl_0807d2bc @ case 0
    .4byte lbl_0807d42c @ case 1
    .4byte lbl_0807d4e4 @ case 2
    .4byte lbl_0807d504 @ case 3
    .4byte lbl_0807d524 @ case 4
    .4byte lbl_0807d544 @ case 5
    .4byte lbl_0807d560 @ case 6
lbl_0807d2bc:
    movs r4, #0
    bl check_for_maintained_input
    ldr r5, lbl_0807d2e0 @ =0x03001380
    ldrh r0, [r5]
    cmp r0, #0
    beq lbl_0807d300
    ldr r0, lbl_0807d2e4 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0x3f
    movs r0, #0
    bl sub_0807d19c
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807d2e8
    movs r4, #1
    b lbl_0807d306
    .align 2, 0
lbl_0807d2e0: .4byte 0x03001380
lbl_0807d2e4: .4byte 0x08754bc4
lbl_0807d2e8:
    ldrh r1, [r5]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807d2f6
    movs r4, #2
    b lbl_0807d306
lbl_0807d2f6:
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807d300
    movs r4, #3
lbl_0807d300:
    cmp r4, #0
    bne lbl_0807d306
    b lbl_0807d576
lbl_0807d306:
    cmp r4, #1
    bne lbl_0807d338
    ldr r4, lbl_0807d32c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x3f
    ldrb r1, [r0]
    movs r0, #1
    bl sub_08078504
    ldr r0, [r4]
    adds r0, #0x3f
    ldrb r0, [r0]
    cmp r0, #2
    bhi lbl_0807d330
    movs r0, #2
    bl sub_0807ef7c
    b lbl_0807d576
    .align 2, 0
lbl_0807d32c: .4byte 0x08754bc4
lbl_0807d330:
    movs r0, #0
    bl sub_0807ef7c
    b lbl_0807d576
lbl_0807d338:
    cmp r4, #2
    bne lbl_0807d34c
    movs r0, #0
    bl FadeMusic
    ldr r1, lbl_0807d348 @ =0x03000c74
    movs r0, #3
    b lbl_0807d554
    .align 2, 0
lbl_0807d348: .4byte 0x03000c74
lbl_0807d34c:
    cmp r4, #3
    beq lbl_0807d352
    b lbl_0807d576
lbl_0807d352:
    movs r4, #0
    ldr r1, lbl_0807d36c @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x3f
    ldrb r0, [r0]
    adds r5, r1, #0
    cmp r0, #5
    bhi lbl_0807d404
    lsls r0, r0, #2
    ldr r1, lbl_0807d370 @ =lbl_0807d374
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807d36c: .4byte 0x08754bc4
lbl_0807d370: .4byte lbl_0807d374
lbl_0807d374: @ jump table
    .4byte lbl_0807d38c @ case 0
    .4byte lbl_0807d38c @ case 1
    .4byte lbl_0807d38c @ case 2
    .4byte lbl_0807d3a4 @ case 3
    .4byte lbl_0807d3c4 @ case 4
    .4byte lbl_0807d3e4 @ case 5
lbl_0807d38c:
    movs r0, #3
    bl sub_0807ef7c
    movs r6, #5
    movs r4, #1
    ldr r0, lbl_0807d3a0 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3e
    strb r4, [r0]
    b lbl_0807d404
    .align 2, 0
lbl_0807d3a0: .4byte 0x08754bc4
lbl_0807d3a4:
    ldr r0, [r5]
    adds r0, #0x3b
    ldrb r1, [r0]
    movs r0, #8
    ands r0, r1
    cmp r0, #0
    beq lbl_0807d404
    movs r0, #1
    bl sub_0807ef7c
    movs r6, #2
    movs r4, #1
    ldr r0, [r5]
    adds r0, #0x3e
    strb r6, [r0]
    b lbl_0807d404
lbl_0807d3c4:
    ldr r0, [r5]
    adds r0, #0x3b
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0807d404
    movs r0, #1
    bl sub_0807ef7c
    movs r6, #2
    movs r4, #1
    ldr r0, [r5]
    adds r0, #0x3e
    movs r1, #3
    b lbl_0807d402
lbl_0807d3e4:
    ldr r0, [r5]
    adds r0, #0x3b
    ldrb r1, [r0]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0807d404
    movs r0, #1
    bl sub_0807ef7c
    movs r6, #2
    movs r4, #1
    ldr r0, [r5]
    adds r0, #0x3e
    movs r1, #5
lbl_0807d402:
    strb r1, [r0]
lbl_0807d404:
    cmp r4, #0
    bne lbl_0807d40a
    b lbl_0807d576
lbl_0807d40a:
    ldr r4, lbl_0807d428 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x3f
    ldrb r1, [r0]
    adds r0, r6, #0
    bl sub_08078504
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0x42
    strh r1, [r0]
    b lbl_0807d576
    .align 2, 0
lbl_0807d428: .4byte 0x08754bc4
lbl_0807d42c:
    bl sub_0807d62c
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #0
    bne lbl_0807d43a
    b lbl_0807d576
lbl_0807d43a:
    cmp r4, #2
    bne lbl_0807d4cc
    ldr r3, lbl_0807d4bc @ =0x08754bc4
    ldr r0, [r3]
    adds r0, #0x3a
    ldrb r0, [r0]
    ldr r5, lbl_0807d4c0 @ =0x03000c24
    ldr r4, lbl_0807d4c4 @ =0x03000c1e
    cmp r0, #0
    blt lbl_0807d496
    cmp r0, #1
    ble lbl_0807d496
    cmp r0, #4
    bgt lbl_0807d496
    movs r1, #0
    ldrsb r1, [r4, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r5
    movs r1, #0
    strb r1, [r0]
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    adds r1, r1, r5
    ldr r0, [r3]
    adds r0, #0x32
    ldrb r0, [r0]
    strb r0, [r1, #0x14]
    movs r1, #0
    ldrsb r1, [r4, r1]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r1, r0, r5
    movs r2, #0
    ldr r0, [r3]
    adds r0, #0x2f
    ldrb r0, [r0]
    cmp r0, #2
    bne lbl_0807d494
    movs r2, #1
lbl_0807d494:
    strb r2, [r1, #0x15]
lbl_0807d496:
    ldr r2, lbl_0807d4c8 @ =0x03000c74
    movs r0, #0
    ldrsb r0, [r4, r0]
    lsls r1, r0, #1
    adds r1, r1, r0
    lsls r1, r1, #3
    adds r1, r1, r5
    ldrb r0, [r1]
    movs r1, #2
    cmp r0, #0
    beq lbl_0807d4ae
    movs r1, #1
lbl_0807d4ae:
    strb r1, [r2]
    movs r0, #0x14
    bl FadeMusic
    movs r0, #1
    b lbl_0807d57c
    .align 2, 0
lbl_0807d4bc: .4byte 0x08754bc4
lbl_0807d4c0: .4byte 0x03000c24
lbl_0807d4c4: .4byte 0x03000c1e
lbl_0807d4c8: .4byte 0x03000c74
lbl_0807d4cc:
    ldr r4, lbl_0807d4e0 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x3f
    ldrb r1, [r0]
    movs r0, #6
    bl sub_08078504
    ldr r0, [r4]
    b lbl_0807d570
    .align 2, 0
lbl_0807d4e0: .4byte 0x08754bc4
lbl_0807d4e4:
    bl sub_08079210
    cmp r0, #0
    beq lbl_0807d576
    ldr r4, lbl_0807d500 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x3f
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078504
    ldr r0, [r4]
    b lbl_0807d570
    .align 2, 0
lbl_0807d500: .4byte 0x08754bc4
lbl_0807d504:
    bl sub_080797a0
    cmp r0, #0
    beq lbl_0807d576
    ldr r4, lbl_0807d520 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x3f
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078504
    ldr r0, [r4]
    b lbl_0807d570
    .align 2, 0
lbl_0807d520: .4byte 0x08754bc4
lbl_0807d524:
    bl sub_08079b50
    cmp r0, #0
    beq lbl_0807d576
    ldr r4, lbl_0807d540 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x3f
    ldrb r1, [r0]
    movs r0, #0
    bl sub_08078504
    ldr r0, [r4]
    b lbl_0807d570
    .align 2, 0
lbl_0807d540: .4byte 0x08754bc4
lbl_0807d544:
    movs r0, #0
    bl sub_0807a2bc
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807d576
    ldr r1, lbl_0807d55c @ =0x03000c74
    movs r0, #0
lbl_0807d554:
    strb r0, [r1]
    movs r0, #1
    b lbl_0807d57c
    .align 2, 0
lbl_0807d55c: .4byte 0x03000c74
lbl_0807d560:
    movs r0, #1
    bl sub_0807a2bc
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807d576
    ldr r0, lbl_0807d584 @ =0x08754bc4
    ldr r0, [r0]
lbl_0807d570:
    adds r0, #0x3e
    movs r1, #0
    strb r1, [r0]
lbl_0807d576:
    bl sub_08078da0
    movs r0, #0
lbl_0807d57c:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807d584: .4byte 0x08754bc4

    thumb_func_start check_inputting_time_attack_code
check_inputting_time_attack_code: @ 0x0807d588
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_0807d5ac @ =0x03001380
    ldrh r2, [r0]
    adds r6, r2, #0
    ldr r5, lbl_0807d5b0 @ =0x08754bc4
    ldr r1, [r5]
    adds r4, r1, #0
    adds r4, #0x6c
    ldrb r0, [r4]
    cmp r0, #0
    bne lbl_0807d5d6
    adds r1, #0x6e
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807d5b4
    subs r0, #1
    strh r0, [r1]
    b lbl_0807d622
    .align 2, 0
lbl_0807d5ac: .4byte 0x03001380
lbl_0807d5b0: .4byte 0x08754bc4
lbl_0807d5b4:
    ldr r0, lbl_0807d5c8 @ =0x0845f452
    ldrh r0, [r0]
    cmp r2, r0
    bne lbl_0807d5cc
    movs r1, #1
    strb r1, [r4]
    ldr r0, [r5]
    adds r0, #0x6d
    strb r1, [r0]
    b lbl_0807d622
    .align 2, 0
lbl_0807d5c8: .4byte 0x0845f452
lbl_0807d5cc:
    cmp r2, #0
    beq lbl_0807d622
    movs r0, #0x1e
    strh r0, [r1]
    b lbl_0807d622
lbl_0807d5d6:
    ldr r7, lbl_0807d604 @ =0x0845f452
    adds r3, r1, #0
    adds r3, #0x6d
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r7
    ldrh r0, [r0]
    cmp r2, r0
    bne lbl_0807d60c
    adds r0, r1, #1
    strb r0, [r3]
    ldr r0, [r5]
    adds r0, #0x6d
    ldrb r0, [r0]
    lsls r0, r0, #1
    adds r0, r0, r7
    ldrh r1, [r0]
    ldr r0, lbl_0807d608 @ =0x0000ffff
    cmp r1, r0
    bne lbl_0807d622
    movs r0, #1
    b lbl_0807d624
    .align 2, 0
lbl_0807d604: .4byte 0x0845f452
lbl_0807d608: .4byte 0x0000ffff
lbl_0807d60c:
    cmp r6, #0
    beq lbl_0807d622
    movs r1, #0
    strb r1, [r4]
    ldr r0, [r5]
    adds r0, #0x6d
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x6e
    movs r1, #0x1e
    strh r1, [r0]
lbl_0807d622:
    movs r0, #0
lbl_0807d624:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0807d62c
sub_0807d62c: @ 0x0807d62c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    movs r0, #0
    mov sl, r0
    ldr r2, lbl_0807d664 @ =0x08754bc4
    ldr r1, [r2]
    adds r3, r1, #0
    adds r3, #0x42
    ldrh r0, [r3]
    adds r0, #1
    strh r0, [r3]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r7, r2, #0
    cmp r0, #0x2c
    bls lbl_0807d658
    bl lbl_0807e3e6
lbl_0807d658:
    lsls r0, r0, #2
    ldr r1, lbl_0807d668 @ =lbl_0807d66c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807d664: .4byte 0x08754bc4
lbl_0807d668: .4byte lbl_0807d66c
lbl_0807d66c: @ jump table
    .4byte lbl_0807d720 @ case 0
    .4byte lbl_0807d854 @ case 1
    .4byte lbl_0807d8ec @ case 2
    .4byte lbl_0807d922 @ case 3
    .4byte lbl_0807d978 @ case 4
    .4byte lbl_0807d986 @ case 5
    .4byte lbl_0807d9a4 @ case 6
    .4byte lbl_0807d9c8 @ case 7
    .4byte lbl_0807daa8 @ case 8
    .4byte lbl_0807db0a @ case 9
    .4byte lbl_0807db28 @ case 10
    .4byte lbl_0807db50 @ case 11
    .4byte lbl_0807dc1a @ case 12
    .4byte lbl_0807dc44 @ case 13
    .4byte lbl_0807dc66 @ case 14
    .4byte lbl_0807e3b6 @ case 15
    .4byte lbl_0807dc7c @ case 16
    .4byte lbl_0807dcac @ case 17
    .4byte lbl_0807dd78 @ case 18
    .4byte lbl_0807ddc4 @ case 19
    .4byte lbl_0807dde0 @ case 20
    .4byte lbl_0807ddfc @ case 21
    .4byte lbl_0807de56 @ case 22
    .4byte lbl_0807de68 @ case 23
    .4byte lbl_0807de8c @ case 24
    .4byte lbl_0807df38 @ case 25
    .4byte lbl_0807df78 @ case 26
    .4byte lbl_0807dfb0 @ case 27
    .4byte lbl_0807dfdc @ case 28
    .4byte lbl_0807dfec @ case 29
    .4byte lbl_0807e010 @ case 30
    .4byte lbl_0807e0da @ case 31
    .4byte lbl_0807e3e6 @ case 32
    .4byte lbl_0807e3e6 @ case 33
    .4byte lbl_0807e11e @ case 34
    .4byte lbl_0807e132 @ case 35
    .4byte lbl_0807e164 @ case 36
    .4byte lbl_0807e190 @ case 37
    .4byte lbl_0807e1a4 @ case 38
    .4byte lbl_0807e26a @ case 39
    .4byte lbl_0807e288 @ case 40
    .4byte lbl_0807e2c4 @ case 41
    .4byte lbl_0807e2ec @ case 42
    .4byte lbl_0807e34c @ case 43
    .4byte lbl_0807e3d8 @ case 44
lbl_0807d720:
    ldr r2, lbl_0807d824 @ =0x03000c1e
    ldr r0, [r7]
    adds r0, #0x3f
    ldrb r1, [r0]
    strb r1, [r2]
    ldrb r0, [r0]
    adds r0, #1
    lsls r4, r0, #1
    adds r4, r4, r0
    ldr r5, lbl_0807d828 @ =0x08754bb4
    ldr r2, [r5]
    movs r1, #0x86
    lsls r1, r1, #5
    adds r2, r2, r1
    movs r3, #0x90
    lsls r3, r3, #2
    movs r0, #0x10
    mov r8, r0
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    lsls r4, r4, #6
    movs r1, #0x80
    lsls r1, r1, #4
    mov sb, r1
    adds r1, r4, r1
    ldr r2, [r5]
    adds r1, r2, r1
    movs r6, #0x80
    lsls r6, r6, #5
    adds r4, r4, r6
    adds r2, r2, r4
    mov r3, r8
    str r3, [sp]
    movs r0, #3
    movs r3, #0xc0
    bl DMATransfer
    ldr r1, [r5]
    adds r1, r1, r6
    ldr r2, lbl_0807d82c @ =0x0600f000
    mov r5, r8
    str r5, [sp]
    movs r0, #3
    mov r3, sb
    bl DMATransfer
    ldr r2, [r7]
    ldrh r1, [r2]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r0, r3, #0
    movs r4, #0
    movs r3, #0
    orrs r0, r1
    movs r5, #0x80
    lsls r5, r5, #6
    adds r1, r5, #0
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_0807d830 @ =0x04000040
    ldr r5, lbl_0807d834 @ =0x000046aa
    adds r0, r5, #0
    strh r0, [r1]
    adds r1, #4
    movs r0, #0x17
    strh r0, [r1]
    adds r1, #6
    movs r0, #0x3f
    strh r0, [r1]
    subs r1, #2
    movs r0, #0x1f
    strb r0, [r1]
    ldr r0, lbl_0807d838 @ =0x030013b2
    strh r3, [r0]
    ldr r0, lbl_0807d83c @ =0x030013b0
    mov r1, r8
    strh r1, [r0]
    ldr r0, lbl_0807d840 @ =0x00003f42
    strh r0, [r2, #2]
    adds r2, #0x3a
    strb r4, [r2]
    ldr r2, [r7]
    ldr r0, lbl_0807d844 @ =0x08760b38
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r2, #0x2c]
    str r1, [r2, #0x30]
    adds r0, r2, #0
    adds r0, #0x3f
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807d7ea
    ldr r3, lbl_0807d848 @ =0x0000013f
    adds r2, r2, r3
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
lbl_0807d7ea:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x3f
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_0807d802
    ldr r5, lbl_0807d84c @ =0x0000014f
    adds r2, r1, r5
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
lbl_0807d802:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x3f
    ldrb r0, [r0]
    cmp r0, #2
    bne lbl_0807d812
    bl lbl_0807e3b6
lbl_0807d812:
    ldr r0, lbl_0807d850 @ =0x0000015f
    adds r2, r1, r0
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
    bl lbl_0807e3b6
    .align 2, 0
lbl_0807d824: .4byte 0x03000c1e
lbl_0807d828: .4byte 0x08754bb4
lbl_0807d82c: .4byte 0x0600f000
lbl_0807d830: .4byte 0x04000040
lbl_0807d834: .4byte 0x000046aa
lbl_0807d838: .4byte 0x030013b2
lbl_0807d83c: .4byte 0x030013b0
lbl_0807d840: .4byte 0x00003f42
lbl_0807d844: .4byte 0x08760b38
lbl_0807d848: .4byte 0x0000013f
lbl_0807d84c: .4byte 0x0000014f
lbl_0807d850: .4byte 0x0000015f
lbl_0807d854:
    movs r5, #1
    ldr r1, lbl_0807d86c @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807d872
    movs r5, #0
    subs r0, #2
    cmp r0, #0
    bge lbl_0807d870
    strh r5, [r1]
    b lbl_0807d872
    .align 2, 0
lbl_0807d86c: .4byte 0x030013b0
lbl_0807d870:
    strh r0, [r1]
lbl_0807d872:
    ldr r1, lbl_0807d8e0 @ =0x030013b2
    ldrh r0, [r1]
    cmp r0, #0x10
    beq lbl_0807d886
    movs r5, #0
    adds r0, #2
    cmp r0, #0x10
    ble lbl_0807d884
    movs r0, #0x10
lbl_0807d884:
    strh r0, [r1]
lbl_0807d886:
    cmp r5, #0
    bne lbl_0807d88e
    bl lbl_0807e3e6
lbl_0807d88e:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x3f
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807d8a6
    adds r0, r1, #0
    adds r0, #0xff
    ldrb r1, [r0]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0]
lbl_0807d8a6:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x3f
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_0807d8be
    ldr r3, lbl_0807d8e4 @ =0x0000010f
    adds r2, r1, r3
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
lbl_0807d8be:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x3f
    ldrb r0, [r0]
    cmp r0, #2
    bne lbl_0807d8ce
    bl lbl_0807e3b6
lbl_0807d8ce:
    ldr r5, lbl_0807d8e8 @ =0x0000011f
    adds r2, r1, r5
    ldrb r0, [r2]
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2]
    bl lbl_0807e3b6
    .align 2, 0
lbl_0807d8e0: .4byte 0x030013b2
lbl_0807d8e4: .4byte 0x0000010f
lbl_0807d8e8: .4byte 0x0000011f
lbl_0807d8ec:
    ldr r2, [r7]
    adds r0, r2, #0
    adds r0, #0x3f
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #5
    movs r1, #0x80
    lsls r1, r1, #4
    adds r5, r0, r1
    ldr r1, lbl_0807d918 @ =0x03000bfe
    ldrh r0, [r1]
    cmp r5, r0
    beq lbl_0807d91c
    adds r0, #0xc
    cmp r0, r5
    ble lbl_0807d912
    bl sub_0807e2fe
lbl_0807d912:
    bl lbl_0807e30c
    .align 2, 0
lbl_0807d918: .4byte 0x03000bfe
lbl_0807d91c:
    adds r1, r2, #0
    bl lbl_0807e3b8
lbl_0807d922:
    ldr r0, lbl_0807d96c @ =0x08754bb4
    ldr r1, [r0]
    movs r2, #0x80
    lsls r2, r2, #4
    adds r1, r1, r2
    ldr r0, [r7]
    adds r0, #0x3f
    ldrb r0, [r0]
    lsls r2, r0, #1
    adds r2, r2, r0
    lsls r2, r2, #6
    ldr r3, lbl_0807d970 @ =0x0600f000
    adds r2, r2, r3
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r3, #0xc0
    bl DMATransfer
    ldr r2, [r7]
    ldrh r1, [r2]
    ldr r0, lbl_0807d974 @ =0x0000dfff
    ands r0, r1
    strh r0, [r2]
    movs r0, #0
    bl sub_0807e6d8
    movs r0, #0
    movs r1, #0
    bl sub_080790cc
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #4
    strb r1, [r0]
    bl lbl_0807e3e6
    .align 2, 0
lbl_0807d96c: .4byte 0x08754bb4
lbl_0807d970: .4byte 0x0600f000
lbl_0807d974: .4byte 0x0000dfff
lbl_0807d978:
    movs r0, #1
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807d986
    bl lbl_0807e3e6
lbl_0807d986:
    ldr r4, lbl_0807d9a0 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x2e
    ldrb r1, [r0]
    movs r0, #0
    bl sub_0807e3fc
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #6
    strb r1, [r0]
    bl lbl_0807e3e6
    .align 2, 0
lbl_0807d9a0: .4byte 0x08754bc4
lbl_0807d9a4:
    ldr r0, [r7]
    adds r0, #0x6c
    movs r1, #0
    strb r1, [r0]
    ldr r0, [r7]
    adds r0, #0x6d
    strb r1, [r0]
    ldr r0, [r7]
    adds r3, r0, #0
    adds r3, #0x6e
    movs r2, #0
    strh r1, [r3]
    adds r0, #0x70
    strb r2, [r0]
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #7
    strb r1, [r0]
lbl_0807d9c8:
    movs r5, #0xff
    ldr r0, lbl_0807da18 @ =0x03001380
    ldrh r1, [r0]
    movs r2, #1
    adds r0, r2, #0
    ands r0, r1
    cmp r0, #0
    beq lbl_0807da2e
    movs r5, #0x80
    movs r0, #1
    bl sub_0807ef7c
    ldr r2, lbl_0807da1c @ =0x03000c24
    ldr r4, lbl_0807da20 @ =0x08754bc4
    ldr r3, [r4]
    adds r0, r3, #0
    adds r0, #0x3f
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r1, r0, r2
    movs r2, #0x11
    ldrsb r2, [r1, r2]
    cmp r2, #0
    bne lbl_0807da24
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807da0a
    movs r0, #0x12
    ldrsb r0, [r1, r0]
    cmp r0, #0
    beq lbl_0807da24
lbl_0807da0a:
    adds r0, r3, #0
    adds r0, #0x3a
    strb r2, [r0]
    ldr r0, [r4]
    adds r0, #0x40
    movs r1, #0x22
    b lbl_0807da84
    .align 2, 0
lbl_0807da18: .4byte 0x03001380
lbl_0807da1c: .4byte 0x03000c24
lbl_0807da20: .4byte 0x08754bc4
lbl_0807da24:
    adds r1, r3, #0
    adds r1, #0x40
    movs r0, #8
    strb r0, [r1]
    b lbl_0807da86
lbl_0807da2e:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807da40
    movs r5, #0x81
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x27
    b lbl_0807da84
lbl_0807da40:
    ldr r0, lbl_0807daa0 @ =0x03000014
    ldr r0, [r0, #8]
    ands r0, r2
    cmp r0, #0
    beq lbl_0807da86
    ldr r2, lbl_0807daa4 @ =0x03000c24
    ldr r0, [r7]
    adds r0, #0x3f
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #0x11]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807da86
    bl check_inputting_time_attack_code
    cmp r0, #0
    beq lbl_0807da86
    movs r5, #0x80
    ldr r0, [r7]
    adds r0, #0x2f
    movs r1, #2
    strb r1, [r0]
    ldr r0, [r7]
    adds r0, #0x70
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #8
lbl_0807da84:
    strb r1, [r0]
lbl_0807da86:
    adds r0, r5, #1
    cmp r0, #0
    bne lbl_0807da90
    bl lbl_0807e3e6
lbl_0807da90:
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    movs r0, #0
    bl sub_0807e3fc
    bl lbl_0807e3e6
    .align 2, 0
lbl_0807daa0: .4byte 0x03000014
lbl_0807daa4: .4byte 0x03000c24
lbl_0807daa8:
    ldr r2, lbl_0807dae0 @ =0x03000c24
    ldr r3, [r7]
    adds r0, r3, #0
    adds r0, #0x3f
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r1, r0, r2
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807dac8
    movs r0, #0x12
    ldrsb r0, [r1, r0]
    cmp r0, #0
    beq lbl_0807daf6
lbl_0807dac8:
    ldrb r0, [r1, #0x15]
    cmp r0, #0
    bne lbl_0807dad8
    adds r0, r3, #0
    adds r0, #0x70
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807dae4
lbl_0807dad8:
    adds r1, r3, #0
    adds r1, #0x39
    movs r0, #0x10
    b lbl_0807daea
    .align 2, 0
lbl_0807dae0: .4byte 0x03000c24
lbl_0807dae4:
    adds r1, r3, #0
    adds r1, #0x39
    movs r0, #0xf
lbl_0807daea:
    strb r0, [r1]
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #9
    strb r1, [r0]
    b lbl_0807dafe
lbl_0807daf6:
    adds r1, r3, #0
    adds r1, #0x40
    movs r0, #0x15
    strb r0, [r1]
lbl_0807dafe:
    ldr r0, [r7]
    adds r0, #0x42
    movs r1, #0
    strh r1, [r0]
    bl lbl_0807e3e6
lbl_0807db0a:
    ldr r0, [r7]
    adds r0, #0x39
    ldrb r1, [r0]
    movs r0, #0
    bl sub_080790cc
    movs r0, #0
    movs r1, #0x14
    bl sub_080790cc
    movs r0, #0x1d
    bl sub_0807e6d8
    bl lbl_0807e3b6
lbl_0807db28:
    movs r0, #0x1e
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807db36
    bl lbl_0807e3e6
lbl_0807db36:
    ldr r4, lbl_0807db4c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x2f
    ldrb r1, [r0]
    movs r0, #5
    bl sub_0807e3fc
    ldr r1, [r4]
    bl lbl_0807e3b8
    .align 2, 0
lbl_0807db4c: .4byte 0x08754bc4
lbl_0807db50:
    movs r5, #0xff
    ldr r0, lbl_0807db7c @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_0807dc02
    movs r4, #1
    ands r4, r1
    cmp r4, #0
    beq lbl_0807db80
    movs r5, #0x80
    ldr r0, [r7]
    adds r0, #0x42
    movs r1, #0
    strh r1, [r0]
    movs r0, #1
    bl sub_0807ef7c
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0xd
    strb r1, [r0]
    b lbl_0807dc02
    .align 2, 0
lbl_0807db7c: .4byte 0x03001380
lbl_0807db80:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807dba8
    movs r0, #0x1f
    bl sub_0807e6d8
    movs r5, #0x81
    ldr r0, lbl_0807dba4 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r0, #0
    adds r1, #0x42
    strh r4, [r1]
    adds r0, #0x40
    movs r1, #0xc
    strb r1, [r0]
    b lbl_0807dc02
    .align 2, 0
lbl_0807dba4: .4byte 0x08754bc4
lbl_0807dba8:
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_0807dbc0
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x2f
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807dc02
    subs r0, #1
    b lbl_0807dbde
lbl_0807dbc0:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0807dc02
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x39
    ldrb r0, [r0]
    cmp r0, #0x10
    bne lbl_0807dbec
    adds r1, #0x2f
    ldrb r0, [r1]
    cmp r0, #1
    bhi lbl_0807dc02
    adds r0, #1
lbl_0807dbde:
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    movs r0, #0
    bl sub_0807ef7c
    b lbl_0807dc02
lbl_0807dbec:
    adds r1, #0x2f
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807dc02
    adds r0, #1
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    movs r0, #0
    bl sub_0807ef7c
lbl_0807dc02:
    adds r0, r5, #1
    cmp r0, #0
    bne lbl_0807dc0c
    bl lbl_0807e3e6
lbl_0807dc0c:
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    movs r0, #5
    bl sub_0807e3fc
    bl lbl_0807e3e6
lbl_0807dc1a:
    movs r0, #0x20
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807dc28
    bl lbl_0807e3e6
lbl_0807dc28:
    ldr r2, lbl_0807dc40 @ =0x08754bc4
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0x2f
    ldrb r0, [r1]
    cmp r0, #2
    bne lbl_0807dc3a
    movs r0, #0
    strb r0, [r1]
lbl_0807dc3a:
    ldr r0, [r2]
    b lbl_0807e20a
    .align 2, 0
lbl_0807dc40: .4byte 0x08754bc4
lbl_0807dc44:
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0x42
    movs r0, #0
    strh r0, [r2]
    adds r0, r1, #0
    adds r0, #0x2f
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0807dc5e
    adds r1, #0x3a
    movs r0, #1
    b lbl_0807df94
lbl_0807dc5e:
    adds r1, #0x40
    movs r0, #0xe
    strb r0, [r1]
    b lbl_0807e3e6
lbl_0807dc66:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0xa
    bhi lbl_0807dc74
    b lbl_0807e3e6
lbl_0807dc74:
    adds r1, #0x40
    movs r0, #0xf
    strb r0, [r1]
    b lbl_0807e3e6
lbl_0807dc7c:
    movs r0, #0x22
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807dc88
    b lbl_0807e3e6
lbl_0807dc88:
    ldr r4, lbl_0807dca4 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_0807dca8 @ =0x08760b38
    ldrb r1, [r1, #4]
    adds r0, #0x30
    strb r1, [r0]
    ldr r0, [r4]
    adds r0, #0x30
    ldrb r1, [r0]
    movs r0, #6
    bl sub_0807e3fc
    ldr r1, [r4]
    b lbl_0807e3b8
    .align 2, 0
lbl_0807dca4: .4byte 0x08754bc4
lbl_0807dca8: .4byte 0x08760b38
lbl_0807dcac:
    movs r5, #0xff
    ldr r0, lbl_0807dcdc @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_0807dd64
    movs r2, #1
    ands r2, r1
    cmp r2, #0
    beq lbl_0807dd00
    ldr r0, lbl_0807dce0 @ =0x08754bc4
    ldr r1, [r0]
    adds r2, r1, #0
    adds r2, #0x42
    movs r0, #0
    strh r0, [r2]
    movs r5, #0x80
    adds r1, #0x30
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807dce8
    ldr r0, lbl_0807dce4 @ =0x00000209
    bl SoundPlay
    b lbl_0807dcee
    .align 2, 0
lbl_0807dcdc: .4byte 0x03001380
lbl_0807dce0: .4byte 0x08754bc4
lbl_0807dce4: .4byte 0x00000209
lbl_0807dce8:
    movs r0, #1
    bl sub_0807ef7c
lbl_0807dcee:
    ldr r0, lbl_0807dcfc @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x40
    movs r1, #0x12
    strb r1, [r0]
    b lbl_0807dd64
    .align 2, 0
lbl_0807dcfc: .4byte 0x08754bc4
lbl_0807dd00:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807dd24
    ldr r0, [r7]
    adds r0, #0x42
    strh r2, [r0]
    movs r5, #0x81
    ldr r0, lbl_0807dd20 @ =0x00000209
    bl SoundPlay
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x13
    strb r1, [r0]
    b lbl_0807dd64
    .align 2, 0
lbl_0807dd20: .4byte 0x00000209
lbl_0807dd24:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_0807dd44
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x30
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807dd64
    movs r5, #0
    strb r5, [r1]
    movs r0, #0
    bl sub_0807ef7c
    b lbl_0807dd64
lbl_0807dd44:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0807dd64
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x30
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807dd64
    movs r5, #1
    movs r0, #1
    strb r0, [r1]
    movs r0, #0
    bl sub_0807ef7c
lbl_0807dd64:
    adds r0, r5, #1
    cmp r0, #0
    bne lbl_0807dd6c
    b lbl_0807e3e6
lbl_0807dd6c:
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    movs r0, #6
    bl sub_0807e3fc
    b lbl_0807e3e6
lbl_0807dd78:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0xa
    bhi lbl_0807dd86
    b lbl_0807e3e6
lbl_0807dd86:
    adds r0, r1, #0
    adds r0, #0x30
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807dd98
    adds r1, #0x40
    movs r0, #0x13
    strb r0, [r1]
    b lbl_0807e3e6
lbl_0807dd98:
    adds r0, r1, #0
    adds r0, #0x2f
    ldrb r0, [r0]
    movs r2, #2
    cmp r0, r2
    beq lbl_0807ddbc
    movs r0, #6
    movs r1, #0x81
    bl sub_0807e3fc
    movs r0, #0x23
    bl sub_0807e6d8
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x14
    strb r1, [r0]
    b lbl_0807e3e6
lbl_0807ddbc:
    adds r0, r1, #0
    adds r0, #0x3a
    strb r2, [r0]
    b lbl_0807df96
lbl_0807ddc4:
    movs r0, #0x25
    bl sub_0807e6d8
    ldr r4, lbl_0807dddc @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x2f
    ldrb r1, [r0]
    movs r0, #5
    bl sub_0807e3fc
    ldr r0, [r4]
    b lbl_0807e220
    .align 2, 0
lbl_0807dddc: .4byte 0x08754bc4
lbl_0807dde0:
    movs r0, #0x24
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807ddec
    b lbl_0807e3e6
lbl_0807ddec:
    ldr r0, lbl_0807ddf8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x40
    movs r1, #0x15
    strb r1, [r0]
    b lbl_0807e3e6
    .align 2, 0
lbl_0807ddf8: .4byte 0x08754bc4
lbl_0807ddfc:
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x1c
    strb r1, [r0]
    ldr r3, [r7]
    adds r0, r3, #0
    adds r0, #0x2f
    ldrb r0, [r0]
    cmp r0, #2
    bne lbl_0807de1a
    adds r1, r3, #0
    adds r1, #0x32
    movs r0, #1
    strb r0, [r1]
    b lbl_0807e3e6
lbl_0807de1a:
    ldr r2, lbl_0807de3c @ =0x03000c24
    adds r0, r3, #0
    adds r0, #0x3f
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r1, [r0, #0x11]
    movs r0, #0x36
    ands r0, r1
    cmp r0, #0
    beq lbl_0807de40
    adds r1, r3, #0
    adds r1, #0x38
    movs r0, #0x13
    b lbl_0807de46
    .align 2, 0
lbl_0807de3c: .4byte 0x03000c24
lbl_0807de40:
    adds r1, r3, #0
    adds r1, #0x38
    movs r0, #0x12
lbl_0807de46:
    strb r0, [r1]
    ldr r0, [r7]
    adds r0, #0x38
    ldrb r1, [r0]
    movs r0, #0
    bl sub_080790cc
    b lbl_0807e3e6
lbl_0807de56:
    movs r0, #2
    bl sub_0807e6d8
    ldr r0, lbl_0807de64 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_0807e3b8
    .align 2, 0
lbl_0807de64: .4byte 0x08754bc4
lbl_0807de68:
    movs r0, #3
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807de74
    b lbl_0807e3e6
lbl_0807de74:
    ldr r4, lbl_0807de88 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x31
    ldrb r1, [r0]
    movs r0, #1
    bl sub_0807e3fc
    ldr r1, [r4]
    b lbl_0807e3b8
    .align 2, 0
lbl_0807de88: .4byte 0x08754bc4
lbl_0807de8c:
    movs r5, #0xff
    ldr r0, lbl_0807deb8 @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_0807df24
    movs r4, #1
    ands r4, r1
    cmp r4, #0
    beq lbl_0807debc
    movs r5, #0x80
    ldr r0, [r7]
    adds r0, #0x42
    movs r1, #0
    strh r1, [r0]
    movs r0, #1
    bl sub_0807ef7c
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x1a
    strb r1, [r0]
    b lbl_0807df24
    .align 2, 0
lbl_0807deb8: .4byte 0x03001380
lbl_0807debc:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807dee4
    movs r0, #4
    bl sub_0807e6d8
    movs r5, #0x81
    ldr r0, lbl_0807dee0 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r0, #0
    adds r1, #0x42
    strh r4, [r1]
    adds r0, #0x40
    movs r1, #0x19
    strb r1, [r0]
    b lbl_0807df24
    .align 2, 0
lbl_0807dee0: .4byte 0x08754bc4
lbl_0807dee4:
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_0807df04
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x31
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807df24
    movs r5, #0
    strb r5, [r1]
    movs r0, #0
    bl sub_0807ef7c
    b lbl_0807df24
lbl_0807df04:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0807df24
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x31
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807df24
    movs r5, #1
    movs r0, #1
    strb r0, [r1]
    movs r0, #0
    bl sub_0807ef7c
lbl_0807df24:
    adds r0, r5, #1
    cmp r0, #0
    bne lbl_0807df2c
    b lbl_0807e3e6
lbl_0807df2c:
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    movs r0, #1
    bl sub_0807e3fc
    b lbl_0807e3e6
lbl_0807df38:
    movs r0, #5
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807df44
    b lbl_0807e3e6
lbl_0807df44:
    ldr r2, lbl_0807df70 @ =0x03000c24
    ldr r0, lbl_0807df74 @ =0x08754bc4
    ldr r3, [r0]
    adds r0, r3, #0
    adds r0, #0x3f
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0, #0x11]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0
    beq lbl_0807df64
    b lbl_0807e100
lbl_0807df64:
    adds r1, r3, #0
    adds r1, #0x40
    movs r0, #5
    strb r0, [r1]
    b lbl_0807e3e6
    .align 2, 0
lbl_0807df70: .4byte 0x03000c24
lbl_0807df74: .4byte 0x08754bc4
lbl_0807df78:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0xa
    bhi lbl_0807df86
    b lbl_0807e3e6
lbl_0807df86:
    adds r0, r1, #0
    adds r0, #0x2f
    ldrb r0, [r0]
    cmp r0, #2
    bne lbl_0807dfa0
    adds r1, #0x3a
    movs r0, #3
lbl_0807df94:
    strb r0, [r1]
lbl_0807df96:
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x22
    strb r1, [r0]
    b lbl_0807e3e6
lbl_0807dfa0:
    movs r0, #4
    bl sub_0807e6d8
    movs r0, #1
    movs r1, #0x81
    bl sub_0807e3fc
    b lbl_0807e3b6
lbl_0807dfb0:
    movs r0, #5
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807dfbc
    b lbl_0807e3e6
lbl_0807dfbc:
    ldr r2, lbl_0807dfd8 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x40
    movs r1, #0x1c
    strb r1, [r0]
    ldr r2, [r2]
    adds r0, r2, #0
    adds r0, #0x31
    ldrb r0, [r0]
    movs r1, #1
    eors r0, r1
    adds r2, #0x32
    strb r0, [r2]
    b lbl_0807e3e6
    .align 2, 0
lbl_0807dfd8: .4byte 0x08754bc4
lbl_0807dfdc:
    movs r0, #6
    bl sub_0807e6d8
    ldr r0, lbl_0807dfe8 @ =0x08754bc4
    ldr r1, [r0]
    b lbl_0807e3b8
    .align 2, 0
lbl_0807dfe8: .4byte 0x08754bc4
lbl_0807dfec:
    movs r0, #7
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807dff8
    b lbl_0807e3e6
lbl_0807dff8:
    ldr r4, lbl_0807e00c @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x32
    ldrb r1, [r0]
    movs r0, #2
    bl sub_0807e3fc
    ldr r1, [r4]
    b lbl_0807e3b8
    .align 2, 0
lbl_0807e00c: .4byte 0x08754bc4
lbl_0807e010:
    movs r5, #0xff
    ldr r0, lbl_0807e040 @ =0x03001380
    ldrh r1, [r0]
    cmp r1, #0
    beq lbl_0807e0c6
    movs r4, #1
    ands r4, r1
    cmp r4, #0
    beq lbl_0807e044
    movs r5, #0x80
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0x42
    movs r0, #0
    strh r0, [r2]
    adds r1, #0x3a
    movs r0, #4
    strb r0, [r1]
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x22
    strb r1, [r0]
    b lbl_0807e0c6
    .align 2, 0
lbl_0807e040: .4byte 0x03001380
lbl_0807e044:
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807e06c
    movs r0, #8
    bl sub_0807e6d8
    movs r5, #0x81
    ldr r0, lbl_0807e068 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r0, #0
    adds r1, #0x42
    strh r4, [r1]
    adds r0, #0x40
    movs r1, #0x1f
    strb r1, [r0]
    b lbl_0807e0c6
    .align 2, 0
lbl_0807e068: .4byte 0x08754bc4
lbl_0807e06c:
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_0807e084
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x32
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0807e0c6
    subs r0, #1
    b lbl_0807e0a2
lbl_0807e084:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0807e0c6
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x38
    ldrb r0, [r0]
    cmp r0, #0x13
    bne lbl_0807e0b0
    adds r1, #0x32
    ldrb r0, [r1]
    cmp r0, #1
    bhi lbl_0807e0c6
    adds r0, #1
lbl_0807e0a2:
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    movs r0, #0
    bl sub_0807ef7c
    b lbl_0807e0c6
lbl_0807e0b0:
    adds r1, #0x32
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_0807e0c6
    adds r0, #1
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    movs r0, #0
    bl sub_0807ef7c
lbl_0807e0c6:
    adds r0, r5, #1
    cmp r0, #0
    bne lbl_0807e0ce
    b lbl_0807e3e6
lbl_0807e0ce:
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    movs r0, #2
    bl sub_0807e3fc
    b lbl_0807e3e6
lbl_0807e0da:
    movs r0, #9
    bl sub_0807e6d8
    cmp r0, #0
    bne lbl_0807e0e6
    b lbl_0807e3e6
lbl_0807e0e6:
    ldr r2, lbl_0807e10c @ =0x03000c24
    ldr r0, lbl_0807e110 @ =0x08754bc4
    ldr r3, [r0]
    adds r0, r3, #0
    adds r0, #0x3f
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807e114
lbl_0807e100:
    adds r1, r3, #0
    adds r1, #0x40
    movs r0, #8
    strb r0, [r1]
    b lbl_0807e3e6
    .align 2, 0
lbl_0807e10c: .4byte 0x03000c24
lbl_0807e110: .4byte 0x08754bc4
lbl_0807e114:
    adds r1, r3, #0
    adds r1, #0x40
    movs r0, #6
    strb r0, [r1]
    b lbl_0807e3e6
lbl_0807e11e:
    ldr r0, [r7]
    adds r0, #0x3f
    ldrb r1, [r0]
    movs r0, #7
    bl sub_08078504
    movs r0, #4
    bl sub_0807ef7c
    b lbl_0807e3b6
lbl_0807e132:
    ldr r0, lbl_0807e160 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0
    bne lbl_0807e170
    ldr r2, [r7]
    adds r0, r2, #0
    adds r0, #0xef
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    bne lbl_0807e154
    b lbl_0807e3e6
lbl_0807e154:
    adds r0, r2, #0
    adds r0, #0x42
    strh r3, [r0]
    adds r1, r2, #0
    b lbl_0807e3b8
    .align 2, 0
lbl_0807e160: .4byte 0x03001380
lbl_0807e164:
    ldr r0, lbl_0807e17c @ =0x03001380
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_0807e180
lbl_0807e170:
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x25
    strb r1, [r0]
    b lbl_0807e3e6
    .align 2, 0
lbl_0807e17c: .4byte 0x03001380
lbl_0807e180:
    ldr r0, [r7]
    adds r0, #0x42
    ldrh r0, [r0]
    cmp r0, #0x10
    bhi lbl_0807e18c
    b lbl_0807e3e6
lbl_0807e18c:
    movs r5, #2
    b lbl_0807e3e4
lbl_0807e190:
    ldr r0, [r7]
    adds r0, #0x3f
    ldrb r1, [r0]
    movs r0, #8
    bl sub_08078504
    movs r0, #7
    bl sub_0807ef7c
    b lbl_0807e3b6
lbl_0807e1a4:
    ldr r5, [r7]
    adds r0, r5, #0
    adds r0, #0xee
    ldrb r4, [r0]
    ldr r2, lbl_0807e1e8 @ =0x08760b40
    ldr r3, lbl_0807e1ec @ =0x03000c24
    subs r0, #0xaf
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r3
    lsls r1, r1, #3
    ldrb r0, [r0, #0xc]
    adds r1, r1, r0
    adds r2, #5
    adds r1, r1, r2
    ldrb r0, [r1]
    adds r0, #3
    cmp r4, r0
    beq lbl_0807e1d0
    b lbl_0807e3e6
lbl_0807e1d0:
    adds r0, r5, #0
    adds r0, #0x3a
    ldrb r0, [r0]
    cmp r0, #4
    bls lbl_0807e1dc
    b lbl_0807e3e6
lbl_0807e1dc:
    lsls r0, r0, #2
    ldr r1, lbl_0807e1f0 @ =lbl_0807e1f4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807e1e8: .4byte 0x08760b40
lbl_0807e1ec: .4byte 0x03000c24
lbl_0807e1f0: .4byte lbl_0807e1f4
lbl_0807e1f4: @ jump table
    .4byte lbl_0807e208 @ case 0
    .4byte lbl_0807e212 @ case 1
    .4byte lbl_0807e228 @ case 2
    .4byte lbl_0807e23e @ case 3
    .4byte lbl_0807e254 @ case 4
lbl_0807e208:
    ldr r0, [r7]
lbl_0807e20a:
    adds r0, #0x40
    movs r1, #5
    strb r1, [r0]
    b lbl_0807e3e6
lbl_0807e212:
    ldr r0, [r7]
    adds r0, #0x2f
    ldrb r1, [r0]
    movs r0, #5
    bl sub_0807e3fc
    ldr r0, [r7]
lbl_0807e220:
    adds r0, #0x40
    movs r1, #0xb
    strb r1, [r0]
    b lbl_0807e3e6
lbl_0807e228:
    ldr r0, [r7]
    adds r0, #0x30
    ldrb r1, [r0]
    movs r0, #6
    bl sub_0807e3fc
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x11
    strb r1, [r0]
    b lbl_0807e3e6
lbl_0807e23e:
    ldr r0, [r7]
    adds r0, #0x31
    ldrb r1, [r0]
    movs r0, #1
    bl sub_0807e3fc
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x18
    strb r1, [r0]
    b lbl_0807e3e6
lbl_0807e254:
    ldr r0, [r7]
    adds r0, #0x32
    ldrb r1, [r0]
    movs r0, #2
    bl sub_0807e3fc
    ldr r0, [r7]
    adds r0, #0x40
    movs r1, #0x1e
    strb r1, [r0]
    b lbl_0807e3e6
lbl_0807e26a:
    ldr r1, [r7]
    ldr r0, lbl_0807e284 @ =0x00003f42
    strh r0, [r1, #2]
    movs r0, #0x97
    lsls r0, r0, #1
    adds r1, r1, r0
    movs r0, #0x23
    strb r0, [r1]
    movs r0, #6
    bl sub_0807ef7c
    b lbl_0807e3b6
    .align 2, 0
lbl_0807e284: .4byte 0x00003f42
lbl_0807e288:
    ldr r2, [r7]
    movs r1, #0x97
    lsls r1, r1, #1
    adds r0, r2, r1
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807e298
    b lbl_0807e3e6
lbl_0807e298:
    ldrh r1, [r2]
    movs r3, #0x80
    lsls r3, r3, #6
    adds r0, r3, #0
    orrs r0, r1
    strh r0, [r2]
    ldrh r0, [r2, #0x18]
    strh r0, [r2, #6]
    ldr r0, lbl_0807e2bc @ =0x03000bf8
    movs r5, #0x80
    lsls r5, r5, #4
    adds r1, r5, #0
    strh r1, [r0]
    ldr r0, lbl_0807e2c0 @ =0x03000bfa
    strh r1, [r0]
    adds r1, r2, #0
    b lbl_0807e3b8
    .align 2, 0
lbl_0807e2bc: .4byte 0x03000bf8
lbl_0807e2c0: .4byte 0x03000bfa
lbl_0807e2c4:
    ldr r0, [r7]
    adds r0, #0x3f
    ldrb r0, [r0]
    lsls r2, r0, #1
    adds r2, r2, r0
    lsls r2, r2, #6
    ldr r0, lbl_0807e304 @ =0x0600f000
    adds r2, r2, r0
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    movs r3, #0xc0
    bl BitFill
    ldr r1, [r7]
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_0807e2ec:
    movs r5, #0x80
    lsls r5, r5, #4
    ldr r1, lbl_0807e308 @ =0x03000bfe
    ldrh r0, [r1]
    cmp r5, r0
    beq lbl_0807e310
    subs r0, #0xc
    cmp r0, r5
    bge lbl_0807e30c

    non_word_aligned_thumb_func_start sub_0807e2fe
sub_0807e2fe: @ 0x0807e2fe
    strh r5, [r1]
    b lbl_0807e3e6
    .align 2, 0
lbl_0807e304: .4byte 0x0600f000
lbl_0807e308: .4byte 0x03000bfe
lbl_0807e30c:
    strh r0, [r1]
    b lbl_0807e3e6
lbl_0807e310:
    ldr r4, lbl_0807e340 @ =0x08754bc4
    ldr r1, [r4]
    adds r1, #0xff
    ldrb r3, [r1]
    movs r2, #0x21
    rsbs r2, r2, #0
    adds r0, r2, #0
    ands r0, r3
    strb r0, [r1]
    ldr r0, [r4]
    ldr r1, lbl_0807e344 @ =0x0000010f
    adds r3, r0, r1
    ldrb r1, [r3]
    adds r0, r2, #0
    ands r0, r1
    strb r0, [r3]
    ldr r0, [r4]
    ldr r3, lbl_0807e348 @ =0x0000011f
    adds r1, r0, r3
    ldrb r0, [r1]
    ands r2, r0
    strb r2, [r1]
    ldr r1, [r4]
    b lbl_0807e3b8
    .align 2, 0
lbl_0807e340: .4byte 0x08754bc4
lbl_0807e344: .4byte 0x0000010f
lbl_0807e348: .4byte 0x0000011f
lbl_0807e34c:
    movs r5, #1
    ldr r1, lbl_0807e364 @ =0x030013b2
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0807e36a
    movs r5, #0
    subs r0, #2
    cmp r0, #0
    bge lbl_0807e368
    strh r5, [r1]
    b lbl_0807e36a
    .align 2, 0
lbl_0807e364: .4byte 0x030013b2
lbl_0807e368:
    strh r0, [r1]
lbl_0807e36a:
    ldr r1, lbl_0807e3c4 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0x10
    beq lbl_0807e37e
    movs r5, #0
    adds r0, #2
    cmp r0, #0x10
    ble lbl_0807e37c
    movs r0, #0x10
lbl_0807e37c:
    strh r0, [r1]
lbl_0807e37e:
    cmp r5, #0
    beq lbl_0807e3e6
    ldr r1, [r7]
    ldrh r2, [r1]
    ldr r0, lbl_0807e3c8 @ =0x0000fbff
    ands r0, r2
    strh r0, [r1]
    ldr r5, lbl_0807e3cc @ =0x0000013f
    adds r3, r1, r5
    ldrb r2, [r3]
    movs r1, #0x21
    rsbs r1, r1, #0
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r7]
    ldr r2, lbl_0807e3d0 @ =0x0000014f
    adds r3, r0, r2
    ldrb r2, [r3]
    adds r0, r1, #0
    ands r0, r2
    strb r0, [r3]
    ldr r0, [r7]
    ldr r3, lbl_0807e3d4 @ =0x0000015f
    adds r2, r0, r3
    ldrb r0, [r2]
    ands r1, r0
    strb r1, [r2]
lbl_0807e3b6:
    ldr r1, [r7]
lbl_0807e3b8:
    adds r1, #0x40
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0807e3e6
    .align 2, 0
lbl_0807e3c4: .4byte 0x030013b0
lbl_0807e3c8: .4byte 0x0000fbff
lbl_0807e3cc: .4byte 0x0000013f
lbl_0807e3d0: .4byte 0x0000014f
lbl_0807e3d4: .4byte 0x0000015f
lbl_0807e3d8:
    ldr r2, [r7]
    ldrh r1, [r2]
    ldr r0, lbl_0807e3f8 @ =0x0000dfff
    ands r0, r1
    strh r0, [r2]
    movs r5, #1
lbl_0807e3e4:
    mov sl, r5
lbl_0807e3e6:
    mov r0, sl
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807e3f8: .4byte 0x0000dfff

    thumb_func_start sub_0807e3fc
sub_0807e3fc: @ 0x0807e3fc
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    cmp r0, #6
    bls lbl_0807e40c
    b lbl_0807e6d2
lbl_0807e40c:
    lsls r0, r0, #2
    ldr r1, lbl_0807e418 @ =lbl_0807e41c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807e418: .4byte lbl_0807e41c
lbl_0807e41c: @ jump table
    .4byte lbl_0807e438 @ case 0
    .4byte lbl_0807e4b0 @ case 1
    .4byte lbl_0807e4fc @ case 2
    .4byte lbl_0807e554 @ case 3
    .4byte lbl_0807e554 @ case 4
    .4byte lbl_0807e5a6 @ case 5
    .4byte lbl_0807e614 @ case 6
lbl_0807e438:
    cmp r4, #0x80
    bne lbl_0807e448
    ldr r0, lbl_0807e444 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xd4
    b lbl_0807e61e
    .align 2, 0
lbl_0807e444: .4byte 0x08754bc4
lbl_0807e448:
    cmp r4, #0x81
    bne lbl_0807e460
    ldr r2, lbl_0807e45c @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xde
    movs r1, #0
    strb r1, [r0]
    ldr r1, [r2]
    adds r1, #0xdf
    b lbl_0807e63e
    .align 2, 0
lbl_0807e45c: .4byte 0x08754bc4
lbl_0807e460:
    cmp r4, #0
    beq lbl_0807e466
    b lbl_0807e6d2
lbl_0807e466:
    ldr r3, lbl_0807e4ac @ =0x08754bc4
    ldr r1, [r3]
    adds r1, #0xaf
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    movs r4, #1
    orrs r0, r4
    strb r0, [r1]
    ldr r1, [r3]
    adds r1, #0xe0
    ldrb r2, [r1]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r4
    strb r0, [r1]
    ldr r1, [r3]
    adds r2, r1, #0
    adds r2, #0xd6
    movs r0, #0x80
    strh r0, [r2]
    subs r2, #2
    movs r0, #0x78
    strh r0, [r2]
    adds r0, r1, #0
    adds r0, #0xde
    ldrb r0, [r0]
    cmp r0, #0x17
    bne lbl_0807e4a6
    b lbl_0807e6d2
lbl_0807e4a6:
    adds r0, r2, #0
    b lbl_0807e60c
    .align 2, 0
lbl_0807e4ac: .4byte 0x08754bc4
lbl_0807e4b0:
    cmp r4, #0x80
    bne lbl_0807e4b6
    b lbl_0807e618
lbl_0807e4b6:
    cmp r4, #0x81
    bne lbl_0807e4bc
    b lbl_0807e630
lbl_0807e4bc:
    cmp r4, #1
    bls lbl_0807e4c2
    b lbl_0807e6d2
lbl_0807e4c2:
    ldr r3, lbl_0807e4f8 @ =0x08754bc4
    ldr r1, [r3]
    adds r1, #0xaf
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r1, #0xb0
    ldrb r2, [r1]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r2, r1, #0
    adds r2, #0xa6
    movs r0, #0x80
    strh r0, [r2]
    adds r5, r3, #0
    cmp r4, #0
    beq lbl_0807e4f2
    b lbl_0807e5f6
lbl_0807e4f2:
    adds r1, #0xa4
    movs r0, #0x98
    b lbl_0807e5fa
    .align 2, 0
lbl_0807e4f8: .4byte 0x08754bc4
lbl_0807e4fc:
    cmp r4, #0x80
    bne lbl_0807e502
    b lbl_0807e618
lbl_0807e502:
    cmp r4, #0x81
    bne lbl_0807e508
    b lbl_0807e630
lbl_0807e508:
    cmp r4, #2
    bls lbl_0807e50e
    b lbl_0807e6d2
lbl_0807e50e:
    ldr r3, lbl_0807e544 @ =0x08754bc4
    ldr r1, [r3]
    adds r1, #0xaf
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r1, #0xb0
    ldrb r2, [r1]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r2, r1, #0
    adds r2, #0xa6
    movs r0, #0x80
    strh r0, [r2]
    adds r5, r3, #0
    cmp r4, #0
    bne lbl_0807e548
    adds r1, #0xa4
    movs r0, #0x98
    b lbl_0807e5fa
    .align 2, 0
lbl_0807e544: .4byte 0x08754bc4
lbl_0807e548:
    cmp r4, #1
    beq lbl_0807e5f6
    adds r1, #0xa4
    movs r0, #0x8c
    lsls r0, r0, #1
    b lbl_0807e5fa
lbl_0807e554:
    cmp r4, #0x80
    beq lbl_0807e618
    cmp r4, #0x81
    beq lbl_0807e630
    cmp r4, #1
    bls lbl_0807e562
    b lbl_0807e6d2
lbl_0807e562:
    ldr r3, lbl_0807e598 @ =0x08754bc4
    ldr r1, [r3]
    adds r1, #0xaf
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r1, #0xb0
    ldrb r2, [r1]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r2, [r3]
    adds r1, r2, #0
    adds r1, #0xa4
    movs r0, #0xd8
    strh r0, [r1]
    adds r5, r3, #0
    cmp r4, #0
    bne lbl_0807e59c
    adds r1, #2
    movs r0, #0xd0
    b lbl_0807e5fa
    .align 2, 0
lbl_0807e598: .4byte 0x08754bc4
lbl_0807e59c:
    adds r1, r2, #0
    adds r1, #0xa6
    movs r0, #0xb8
    lsls r0, r0, #1
    b lbl_0807e5fa
lbl_0807e5a6:
    cmp r4, #0x80
    beq lbl_0807e618
    cmp r4, #0x81
    beq lbl_0807e630
    cmp r4, #2
    bls lbl_0807e5b4
    b lbl_0807e6d2
lbl_0807e5b4:
    ldr r3, lbl_0807e5e8 @ =0x08754bc4
    ldr r1, [r3]
    adds r1, #0xaf
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r1, #0xb0
    ldrb r2, [r1]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r2, r1, #0
    adds r2, #0xa6
    movs r0, #0x6c
    strh r0, [r2]
    adds r5, r3, #0
    cmp r4, #0
    bne lbl_0807e5ec
    adds r1, #0xa4
    movs r0, #0x58
    b lbl_0807e5fa
    .align 2, 0
lbl_0807e5e8: .4byte 0x08754bc4
lbl_0807e5ec:
    cmp r4, #1
    bne lbl_0807e5f6
    adds r1, #0xa4
    movs r0, #0x98
    b lbl_0807e5fa
lbl_0807e5f6:
    adds r1, #0xa4
    movs r0, #0xd8
lbl_0807e5fa:
    strh r0, [r1]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0xae
    ldrb r0, [r0]
    cmp r0, #0x17
    beq lbl_0807e6d2
    adds r0, r1, #0
    adds r0, #0xa4
lbl_0807e60c:
    movs r1, #0x17
    bl sub_08068128
    b lbl_0807e6d2
lbl_0807e614:
    cmp r4, #0x80
    bne lbl_0807e62c
lbl_0807e618:
    ldr r0, lbl_0807e628 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xa4
lbl_0807e61e:
    movs r1, #0x18
    bl sub_08068128
    b lbl_0807e6d2
    .align 2, 0
lbl_0807e628: .4byte 0x08754bc4
lbl_0807e62c:
    cmp r4, #0x81
    bne lbl_0807e64c
lbl_0807e630:
    ldr r2, lbl_0807e648 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0xae
    movs r1, #0
    strb r1, [r0]
    ldr r1, [r2]
    adds r1, #0xaf
lbl_0807e63e:
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    b lbl_0807e6d2
    .align 2, 0
lbl_0807e648: .4byte 0x08754bc4
lbl_0807e64c:
    cmp r4, #1
    bhi lbl_0807e6d2
    ldr r3, lbl_0807e688 @ =0x08754bc4
    ldr r1, [r3]
    adds r1, #0xaf
    ldrb r2, [r1]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r1, [r3]
    adds r1, #0xb0
    ldrb r2, [r1]
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r0, r2
    strb r0, [r1]
    ldr r2, [r3]
    adds r1, r2, #0
    adds r1, #0xa4
    movs r0, #0x8c
    lsls r0, r0, #1
    strh r0, [r1]
    adds r5, r3, #0
    cmp r4, #0
    bne lbl_0807e68c
    adds r1, #2
    movs r0, #0xb8
    b lbl_0807e694
    .align 2, 0
lbl_0807e688: .4byte 0x08754bc4
lbl_0807e68c:
    adds r1, r2, #0
    adds r1, #0xa6
    movs r0, #0xb8
    lsls r0, r0, #1
lbl_0807e694:
    strh r0, [r1]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0xae
    ldrb r0, [r0]
    cmp r0, #0x17
    beq lbl_0807e6ac
    adds r0, r1, #0
    adds r0, #0xa4
    movs r1, #0x17
    bl sub_08068128
lbl_0807e6ac:
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x7e
    ldrb r0, [r0]
    cmp r0, #0x21
    beq lbl_0807e6d2
    adds r0, r1, #0
    adds r0, #0x74
    movs r1, #0x21
    bl sub_08068128
    ldr r1, [r5]
    adds r2, r1, #0
    adds r2, #0x76
    movs r0, #0x78
    strh r0, [r2]
    adds r1, #0x74
    movs r0, #0xd0
    strh r0, [r1]
lbl_0807e6d2:
    pop {r4, r5}
    pop {r0}
    bx r0

    thumb_func_start sub_0807e6d8
sub_0807e6d8: @ 0x0807e6d8
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #4
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r6, #1
    cmp r0, #0x29
    bls lbl_0807e6ee
    bl lbl_0807eec8
lbl_0807e6ee:
    lsls r0, r0, #2
    ldr r1, lbl_0807e6f8 @ =lbl_0807e6fc
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0807e6f8: .4byte lbl_0807e6fc
lbl_0807e6fc: @ jump table
    .4byte lbl_0807e7a4 @ case 0
    .4byte lbl_0807e800 @ case 1
    .4byte lbl_0807e838 @ case 2
    .4byte lbl_0807e888 @ case 3
    .4byte lbl_0807e8b0 @ case 4
    .4byte lbl_0807eeb8 @ case 5
    .4byte lbl_0807e8cc @ case 6
    .4byte lbl_0807e910 @ case 7
    .4byte lbl_0807e96c @ case 8
    .4byte lbl_0807eeb8 @ case 9
    .4byte lbl_0807e988 @ case 10
    .4byte lbl_0807ea0c @ case 11
    .4byte lbl_0807ea44 @ case 12
    .4byte lbl_0807eb98 @ case 13
    .4byte lbl_0807ea64 @ case 14
    .4byte lbl_0807ea90 @ case 15
    .4byte lbl_0807eaa0 @ case 16
    .4byte lbl_0807ebd0 @ case 17
    .4byte lbl_0807eabc @ case 18
    .4byte lbl_0807eb40 @ case 19
    .4byte lbl_0807eb78 @ case 20
    .4byte lbl_0807eb98 @ case 21
    .4byte lbl_0807ebe4 @ case 22
    .4byte lbl_0807ec10 @ case 23
    .4byte lbl_0807ec40 @ case 24
    .4byte lbl_0807ebd0 @ case 25
    .4byte lbl_0807ec5c @ case 26
    .4byte lbl_0807ec74 @ case 27
    .4byte lbl_0807ec8c @ case 28
    .4byte lbl_0807eca4 @ case 29
    .4byte lbl_0807ecf4 @ case 30
    .4byte lbl_0807ed34 @ case 31
    .4byte lbl_0807eeb8 @ case 32
    .4byte lbl_0807eec8 @ case 33
    .4byte lbl_0807ed50 @ case 34
    .4byte lbl_0807ed78 @ case 35
    .4byte lbl_0807eeb8 @ case 36
    .4byte lbl_0807edb0 @ case 37
    .4byte lbl_0807eddc @ case 38
    .4byte lbl_0807ee6c @ case 39
    .4byte lbl_0807ee94 @ case 40
    .4byte lbl_0807eeb8 @ case 41
lbl_0807e7a4:
    ldr r0, lbl_0807e7ec @ =0x08754bc4
    ldr r2, [r0]
    movs r0, #0x93
    lsls r0, r0, #1
    adds r1, r2, r0
    subs r0, #0x26
    strh r0, [r1]
    movs r1, #0x92
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r1, #0x80
    strh r1, [r0]
    movs r1, #0x22
    bl sub_08068128
    movs r0, #5
    bl sub_0807ef7c
    ldr r1, lbl_0807e7f0 @ =0x03000bf8
    movs r2, #0xf8
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0807e7f4 @ =0x03000bfa
    movs r3, #0xed
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_0807e7f8 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xc0
    lsls r0, r0, #6
    adds r1, r1, r0
    ldr r2, lbl_0807e7fc @ =0x0600e800
    b lbl_0807ee54
    .align 2, 0
lbl_0807e7ec: .4byte 0x08754bc4
lbl_0807e7f0: .4byte 0x03000bf8
lbl_0807e7f4: .4byte 0x03000bfa
lbl_0807e7f8: .4byte 0x08754bb4
lbl_0807e7fc: .4byte 0x0600e800
lbl_0807e800:
    ldr r4, lbl_0807e830 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_0807e834 @ =0x0000012f
    adds r0, r0, r1
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    bne lbl_0807e814
    b lbl_0807eec6
lbl_0807e814:
    movs r0, #1
    movs r1, #0
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807e822
    b lbl_0807eec6
lbl_0807e822:
    ldr r0, [r4]
    movs r1, #0
    strh r1, [r0, #2]
    ldrh r1, [r0, #0x1c]
    strh r1, [r0, #6]
    b lbl_0807eec8
    .align 2, 0
lbl_0807e830: .4byte 0x08754bc4
lbl_0807e834: .4byte 0x0000012f
lbl_0807e838:
    ldr r0, lbl_0807e878 @ =0x08754bc4
    ldr r0, [r0]
    adds r2, r0, #0
    adds r2, #0xb6
    movs r1, #0xa0
    lsls r1, r1, #1
    strh r1, [r2]
    adds r0, #0xb4
    movs r1, #0xa0
    strh r1, [r0]
    movs r1, #0x26
    bl sub_08068128
    movs r0, #5
    bl sub_0807ef7c
    ldr r1, lbl_0807e87c @ =0x03000bf4
    movs r2, #0xe0
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0807e880 @ =0x03000bf6
    movs r3, #0xe4
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_0807e884 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xe4
    lsls r0, r0, #6
    adds r1, r1, r0
    b lbl_0807ee52
    .align 2, 0
lbl_0807e878: .4byte 0x08754bc4
lbl_0807e87c: .4byte 0x03000bf4
lbl_0807e880: .4byte 0x03000bf6
lbl_0807e884: .4byte 0x08754bb4
lbl_0807e888:
    ldr r4, lbl_0807e8ac @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0xbf
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    bne lbl_0807e89a
    b lbl_0807eec6
lbl_0807e89a:
    movs r0, #1
    movs r1, #0x11
    bl sub_080790cc
    cmp r0, #0
    beq lbl_0807e8a8
    b lbl_0807ed1a
lbl_0807e8a8:
    b lbl_0807eec6
    .align 2, 0
lbl_0807e8ac: .4byte 0x08754bc4
lbl_0807e8b0:
    ldr r0, lbl_0807e8c4 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    ldr r0, lbl_0807e8c8 @ =0x0000feff
    ands r0, r2
    strh r0, [r1]
    adds r1, #0xbe
    movs r0, #0x27
    strb r0, [r1]
    b lbl_0807ed9e
    .align 2, 0
lbl_0807e8c4: .4byte 0x08754bc4
lbl_0807e8c8: .4byte 0x0000feff
lbl_0807e8cc:
    ldr r0, lbl_0807e904 @ =0x08754bc4
    ldr r0, [r0]
    adds r2, r0, #0
    adds r2, #0xb6
    movs r1, #0xa0
    lsls r1, r1, #1
    strh r1, [r2]
    adds r0, #0xb4
    movs r1, #0xc0
    strh r1, [r0]
    movs r1, #0x24
    bl sub_08068128
    movs r0, #5
    bl sub_0807ef7c
    ldr r1, lbl_0807e908 @ =0x03000bf4
    movs r2, #0xe0
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0807e90c @ =0x03000bf6
    movs r3, #0xe4
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    b lbl_0807eec8
    .align 2, 0
lbl_0807e904: .4byte 0x08754bc4
lbl_0807e908: .4byte 0x03000bf4
lbl_0807e90c: .4byte 0x03000bf6
lbl_0807e910:
    ldr r0, lbl_0807e960 @ =0x08754bc4
    mov r8, r0
    ldr r2, [r0]
    adds r0, r2, #0
    adds r0, #0xbf
    ldrb r1, [r0]
    movs r7, #0x10
    adds r0, r7, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_0807e928
    b lbl_0807eec6
lbl_0807e928:
    adds r0, r2, #0
    adds r0, #0x38
    ldrb r1, [r0]
    movs r0, #1
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807e93a
    b lbl_0807eec6
lbl_0807e93a:
    ldr r5, lbl_0807e964 @ =0x08754bb4
    ldr r0, [r5]
    movs r4, #0xf0
    lsls r4, r4, #6
    adds r0, r0, r4
    bl sub_0807eedc
    ldr r1, [r5]
    adds r1, r1, r4
    ldr r2, lbl_0807e968 @ =0x0600e000
    movs r3, #0xc0
    lsls r3, r3, #2
    str r7, [sp]
    movs r0, #3
    bl DMATransfer
    mov r2, r8
    ldr r1, [r2]
    b lbl_0807ed1c
    .align 2, 0
lbl_0807e960: .4byte 0x08754bc4
lbl_0807e964: .4byte 0x08754bb4
lbl_0807e968: .4byte 0x0600e000
lbl_0807e96c:
    ldr r0, lbl_0807e980 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    ldr r0, lbl_0807e984 @ =0x0000feff
    ands r0, r2
    strh r0, [r1]
    adds r1, #0xbe
    movs r0, #0x25
    strb r0, [r1]
    b lbl_0807ed9e
    .align 2, 0
lbl_0807e980: .4byte 0x08754bc4
lbl_0807e984: .4byte 0x0000feff
lbl_0807e988:
    ldr r4, lbl_0807e9f4 @ =0x08754bc4
    ldr r2, [r4]
    movs r0, #0x93
    lsls r0, r0, #1
    adds r1, r2, r0
    adds r0, #0x1a
    strh r0, [r1]
    movs r1, #0x92
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r1, #0xa0
    strh r1, [r0]
    movs r1, #0x26
    bl sub_08068128
    movs r0, #5
    bl sub_0807ef7c
    ldr r1, lbl_0807e9f8 @ =0x03000bf8
    movs r2, #0xd9
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0807e9fc @ =0x03000bfa
    movs r3, #0xd5
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_0807ea00 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xfc
    lsls r0, r0, #6
    adds r1, r1, r0
    ldr r2, lbl_0807ea04 @ =0x0600e800
    movs r3, #0xc0
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r2, [r4]
    ldrh r0, [r2, #0x1c]
    strh r0, [r2, #6]
    ldrh r1, [r2]
    ldr r0, lbl_0807ea08 @ =0x0000fdff
    ands r0, r1
    ldrh r1, [r2, #0x1a]
    strh r1, [r2, #8]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r1, r3, #0
    b lbl_0807ee8a
    .align 2, 0
lbl_0807e9f4: .4byte 0x08754bc4
lbl_0807e9f8: .4byte 0x03000bf8
lbl_0807e9fc: .4byte 0x03000bfa
lbl_0807ea00: .4byte 0x08754bb4
lbl_0807ea04: .4byte 0x0600e800
lbl_0807ea08: .4byte 0x0000fdff
lbl_0807ea0c:
    ldr r4, lbl_0807ea3c @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_0807ea40 @ =0x0000012f
    adds r0, r0, r1
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    bne lbl_0807ea20
    b lbl_0807eec6
lbl_0807ea20:
    movs r0, #1
    movs r1, #5
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807ea2e
    b lbl_0807eec6
lbl_0807ea2e:
    ldr r1, [r4]
    ldrh r0, [r1, #0x1c]
    strh r0, [r1, #6]
    ldrh r2, [r1]
    movs r3, #0x80
    lsls r3, r3, #2
    b lbl_0807ed26
    .align 2, 0
lbl_0807ea3c: .4byte 0x08754bc4
lbl_0807ea40: .4byte 0x0000012f
lbl_0807ea44:
    ldr r0, lbl_0807ea5c @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    ldr r0, lbl_0807ea60 @ =0x0000fdff
    ands r0, r2
    strh r0, [r1]
    movs r0, #0x97
    lsls r0, r0, #1
    adds r1, r1, r0
    movs r0, #0x27
    strb r0, [r1]
    b lbl_0807ed9e
    .align 2, 0
lbl_0807ea5c: .4byte 0x08754bc4
lbl_0807ea60: .4byte 0x0000fdff
lbl_0807ea64:
    ldr r1, lbl_0807ea84 @ =0x03000bf4
    movs r3, #0xd9
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r1, lbl_0807ea88 @ =0x03000bf6
    movs r2, #0xd5
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_0807ea8c @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x84
    lsls r3, r3, #7
    b lbl_0807ee50
    .align 2, 0
lbl_0807ea84: .4byte 0x03000bf4
lbl_0807ea88: .4byte 0x03000bf6
lbl_0807ea8c: .4byte 0x08754bb4
lbl_0807ea90:
    movs r0, #1
    movs r1, #6
    bl sub_080790cc
    cmp r0, #0
    beq lbl_0807ea9e
    b lbl_0807ec1e
lbl_0807ea9e:
    b lbl_0807eec6
lbl_0807eaa0:
    ldr r0, lbl_0807eab4 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    ldr r0, lbl_0807eab8 @ =0x0000feff
    ands r0, r1
    movs r3, #0x80
    lsls r3, r3, #2
    adds r1, r3, #0
    b lbl_0807ee8a
    .align 2, 0
lbl_0807eab4: .4byte 0x08754bc4
lbl_0807eab8: .4byte 0x0000feff
lbl_0807eabc:
    ldr r4, lbl_0807eb28 @ =0x08754bc4
    ldr r2, [r4]
    movs r0, #0x93
    lsls r0, r0, #1
    adds r1, r2, r0
    adds r0, #0x1a
    strh r0, [r1]
    movs r1, #0x92
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r1, #0xa0
    strh r1, [r0]
    movs r1, #0x26
    bl sub_08068128
    movs r0, #5
    bl sub_0807ef7c
    ldr r1, lbl_0807eb2c @ =0x03000bf8
    movs r2, #0xd9
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0807eb30 @ =0x03000bfa
    movs r3, #0xd5
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_0807eb34 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xfc
    lsls r0, r0, #6
    adds r1, r1, r0
    ldr r2, lbl_0807eb38 @ =0x0600e800
    movs r3, #0xc0
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r2, [r4]
    ldrh r0, [r2, #0x1c]
    strh r0, [r2, #6]
    ldrh r1, [r2]
    ldr r0, lbl_0807eb3c @ =0x0000fdff
    ands r0, r1
    ldrh r1, [r2, #0x1a]
    strh r1, [r2, #8]
    movs r3, #0x80
    lsls r3, r3, #3
    adds r1, r3, #0
    b lbl_0807ee8a
    .align 2, 0
lbl_0807eb28: .4byte 0x08754bc4
lbl_0807eb2c: .4byte 0x03000bf8
lbl_0807eb30: .4byte 0x03000bfa
lbl_0807eb34: .4byte 0x08754bb4
lbl_0807eb38: .4byte 0x0600e800
lbl_0807eb3c: .4byte 0x0000fdff
lbl_0807eb40:
    ldr r4, lbl_0807eb70 @ =0x08754bc4
    ldr r0, [r4]
    ldr r1, lbl_0807eb74 @ =0x0000012f
    adds r0, r0, r1
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    bne lbl_0807eb54
    b lbl_0807eec6
lbl_0807eb54:
    movs r0, #1
    movs r1, #1
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807eb62
    b lbl_0807eec6
lbl_0807eb62:
    ldr r1, [r4]
    ldrh r0, [r1, #0x1c]
    strh r0, [r1, #6]
    ldrh r2, [r1]
    movs r3, #0x80
    lsls r3, r3, #2
    b lbl_0807ed26
    .align 2, 0
lbl_0807eb70: .4byte 0x08754bc4
lbl_0807eb74: .4byte 0x0000012f
lbl_0807eb78:
    ldr r0, lbl_0807eb90 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    ldr r0, lbl_0807eb94 @ =0x0000fdff
    ands r0, r2
    strh r0, [r1]
    movs r0, #0x97
    lsls r0, r0, #1
    adds r1, r1, r0
    movs r0, #0x27
    strb r0, [r1]
    b lbl_0807ed9e
    .align 2, 0
lbl_0807eb90: .4byte 0x08754bc4
lbl_0807eb94: .4byte 0x0000fdff
lbl_0807eb98:
    ldr r0, lbl_0807ebd4 @ =0x08754bc4
    ldr r2, [r0]
    movs r1, #0x97
    lsls r1, r1, #1
    adds r0, r2, r1
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0807ebaa
    b lbl_0807eec6
lbl_0807ebaa:
    ldrh r0, [r2, #0x18]
    strh r0, [r2, #6]
    ldrh r0, [r2, #0x16]
    strh r0, [r2, #8]
    ldrh r1, [r2]
    ldr r0, lbl_0807ebd8 @ =0x0000fbff
    ands r0, r1
    movs r3, #0x80
    lsls r3, r3, #2
    adds r1, r3, #0
    orrs r0, r1
    strh r0, [r2]
    ldr r0, lbl_0807ebdc @ =0x03000bf8
    movs r2, #0x80
    lsls r2, r2, #4
    adds r1, r2, #0
    strh r1, [r0]
    ldr r0, lbl_0807ebe0 @ =0x03000bfa
    strh r1, [r0]
lbl_0807ebd0:
    movs r6, #1
    b lbl_0807eec8
    .align 2, 0
lbl_0807ebd4: .4byte 0x08754bc4
lbl_0807ebd8: .4byte 0x0000fbff
lbl_0807ebdc: .4byte 0x03000bf8
lbl_0807ebe0: .4byte 0x03000bfa
lbl_0807ebe4:
    ldr r1, lbl_0807ec04 @ =0x03000bf4
    movs r3, #0xd9
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r1, lbl_0807ec08 @ =0x03000bf6
    movs r2, #0xd5
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_0807ec0c @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x84
    lsls r3, r3, #7
    b lbl_0807ee50
    .align 2, 0
lbl_0807ec04: .4byte 0x03000bf4
lbl_0807ec08: .4byte 0x03000bf6
lbl_0807ec0c: .4byte 0x08754bb4
lbl_0807ec10:
    movs r0, #1
    movs r1, #3
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807ec1e
    b lbl_0807eec6
lbl_0807ec1e:
    ldr r0, lbl_0807ec38 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0x1e]
    strh r0, [r2, #4]
    ldrh r1, [r2]
    movs r3, #0x80
    lsls r3, r3, #1
    adds r0, r3, #0
    orrs r0, r1
    ldr r1, lbl_0807ec3c @ =0x0000fdff
    ands r0, r1
    strh r0, [r2]
    b lbl_0807eec8
    .align 2, 0
lbl_0807ec38: .4byte 0x08754bc4
lbl_0807ec3c: .4byte 0x0000fdff
lbl_0807ec40:
    ldr r0, lbl_0807ec54 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2]
    ldr r0, lbl_0807ec58 @ =0x0000feff
    ands r0, r1
    movs r3, #0x80
    lsls r3, r3, #2
    adds r1, r3, #0
    b lbl_0807ee8a
    .align 2, 0
lbl_0807ec54: .4byte 0x08754bc4
lbl_0807ec58: .4byte 0x0000feff
lbl_0807ec5c:
    ldr r0, lbl_0807ec6c @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xfc
    lsls r0, r0, #6
    adds r1, r1, r0
    ldr r2, lbl_0807ec70 @ =0x0600e800
    b lbl_0807ee54
    .align 2, 0
lbl_0807ec6c: .4byte 0x08754bb4
lbl_0807ec70: .4byte 0x0600e800
lbl_0807ec74:
    ldr r0, lbl_0807ec84 @ =0x08754bb4
    ldr r1, [r0]
    movs r2, #0x8a
    lsls r2, r2, #7
    adds r1, r1, r2
    ldr r2, lbl_0807ec88 @ =0x0600e800
    b lbl_0807ee54
    .align 2, 0
lbl_0807ec84: .4byte 0x08754bb4
lbl_0807ec88: .4byte 0x0600e800
lbl_0807ec8c:
    ldr r0, lbl_0807ec9c @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0x84
    lsls r3, r3, #7
    adds r1, r1, r3
    ldr r2, lbl_0807eca0 @ =0x0600e800
    b lbl_0807ee54
    .align 2, 0
lbl_0807ec9c: .4byte 0x08754bb4
lbl_0807eca0: .4byte 0x0600e800
lbl_0807eca4:
    ldr r0, lbl_0807ece4 @ =0x08754bc4
    ldr r0, [r0]
    adds r2, r0, #0
    adds r2, #0xb6
    movs r1, #0xa0
    lsls r1, r1, #1
    strh r1, [r2]
    adds r0, #0xb4
    movs r1, #0xc0
    strh r1, [r0]
    movs r1, #0x24
    bl sub_08068128
    movs r0, #5
    bl sub_0807ef7c
    ldr r1, lbl_0807ece8 @ =0x03000bf4
    movs r2, #0xe0
    lsls r2, r2, #3
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, lbl_0807ecec @ =0x03000bf6
    movs r3, #0xe4
    lsls r3, r3, #3
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_0807ecf0 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xcc
    lsls r0, r0, #6
    adds r1, r1, r0
    b lbl_0807ee52
    .align 2, 0
lbl_0807ece4: .4byte 0x08754bc4
lbl_0807ece8: .4byte 0x03000bf4
lbl_0807ecec: .4byte 0x03000bf6
lbl_0807ecf0: .4byte 0x08754bb4
lbl_0807ecf4:
    ldr r4, lbl_0807ed30 @ =0x08754bc4
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0xbf
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    bne lbl_0807ed08
    b lbl_0807eec6
lbl_0807ed08:
    adds r0, r2, #0
    adds r0, #0x39
    ldrb r1, [r0]
    movs r0, #1
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807ed1a
    b lbl_0807eec6
lbl_0807ed1a:
    ldr r1, [r4]
lbl_0807ed1c:
    ldrh r0, [r1, #0x1e]
    strh r0, [r1, #4]
    ldrh r2, [r1]
    movs r3, #0x80
    lsls r3, r3, #1
lbl_0807ed26:
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    b lbl_0807eec8
    .align 2, 0
lbl_0807ed30: .4byte 0x08754bc4
lbl_0807ed34:
    ldr r0, lbl_0807ed48 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    ldr r0, lbl_0807ed4c @ =0x0000feff
    ands r0, r2
    strh r0, [r1]
    adds r1, #0xbe
    movs r0, #0x25
    strb r0, [r1]
    b lbl_0807ed9e
    .align 2, 0
lbl_0807ed48: .4byte 0x08754bc4
lbl_0807ed4c: .4byte 0x0000feff
lbl_0807ed50:
    ldr r0, lbl_0807ed70 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x39
    ldrb r1, [r0]
    movs r0, #1
    bl sub_080790cc
    cmp r0, #0
    bne lbl_0807ed64
    b lbl_0807eec6
lbl_0807ed64:
    ldr r0, lbl_0807ed74 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0xd8
    lsls r0, r0, #6
    adds r1, r1, r0
    b lbl_0807ee52
    .align 2, 0
lbl_0807ed70: .4byte 0x08754bc4
lbl_0807ed74: .4byte 0x08754bb4
lbl_0807ed78:
    ldr r3, lbl_0807eda8 @ =0x08754bc4
    ldr r1, [r3]
    ldrh r2, [r1]
    ldr r0, lbl_0807edac @ =0x0000feff
    ands r0, r2
    movs r2, #0
    strh r0, [r1]
    adds r1, #0x7e
    strb r2, [r1]
    ldr r1, [r3]
    adds r1, #0x7f
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    ldr r0, [r3]
    adds r0, #0xbe
    movs r1, #0x25
    strb r1, [r0]
lbl_0807ed9e:
    movs r0, #6
    bl sub_0807ef7c
    b lbl_0807eec8
    .align 2, 0
lbl_0807eda8: .4byte 0x08754bc4
lbl_0807edac: .4byte 0x0000feff
lbl_0807edb0:
    ldr r2, lbl_0807edd4 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x7e
    movs r1, #0
    strb r1, [r0]
    ldr r1, [r2]
    adds r1, #0x7f
    ldrb r2, [r1]
    movs r0, #0x3f
    ands r0, r2
    strb r0, [r1]
    ldr r0, lbl_0807edd8 @ =0x08754bb4
    ldr r1, [r0]
    movs r2, #0xcc
    lsls r2, r2, #6
    adds r1, r1, r2
    b lbl_0807ee52
    .align 2, 0
lbl_0807edd4: .4byte 0x08754bc4
lbl_0807edd8: .4byte 0x08754bb4
lbl_0807eddc:
    ldr r0, lbl_0807ee20 @ =0x000001fd
    bl SoundPlay
    ldr r4, lbl_0807ee24 @ =0x08754bc4
    ldr r0, [r4]
    adds r2, r0, #0
    adds r2, #0xb6
    movs r1, #0xa0
    lsls r1, r1, #1
    strh r1, [r2]
    adds r0, #0xb4
    movs r1, #0xa0
    strh r1, [r0]
    movs r1, #0x26
    bl sub_08068128
    ldr r0, lbl_0807ee28 @ =0x03000bf4
    movs r3, #0xec
    lsls r3, r3, #3
    adds r1, r3, #0
    strh r1, [r0]
    ldr r0, lbl_0807ee2c @ =0x03000bf6
    strh r1, [r0]
    ldr r0, [r4]
    adds r0, #0x47
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_0807ee34
    ldr r0, lbl_0807ee30 @ =0x08754bb4
    ldr r1, [r0]
    movs r0, #0x84
    lsls r0, r0, #7
    adds r1, r1, r0
    b lbl_0807ee52
    .align 2, 0
lbl_0807ee20: .4byte 0x000001fd
lbl_0807ee24: .4byte 0x08754bc4
lbl_0807ee28: .4byte 0x03000bf4
lbl_0807ee2c: .4byte 0x03000bf6
lbl_0807ee30: .4byte 0x08754bb4
lbl_0807ee34:
    cmp r0, #2
    bne lbl_0807ee48
    ldr r0, lbl_0807ee44 @ =0x08754bb4
    ldr r1, [r0]
    movs r2, #0x8a
    lsls r2, r2, #7
    adds r1, r1, r2
    b lbl_0807ee52
    .align 2, 0
lbl_0807ee44: .4byte 0x08754bb4
lbl_0807ee48:
    ldr r0, lbl_0807ee64 @ =0x08754bb4
    ldr r1, [r0]
    movs r3, #0xfc
    lsls r3, r3, #6
lbl_0807ee50:
    adds r1, r1, r3
lbl_0807ee52:
    ldr r2, lbl_0807ee68 @ =0x0600e000
lbl_0807ee54:
    movs r3, #0xc0
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    b lbl_0807eec8
    .align 2, 0
lbl_0807ee64: .4byte 0x08754bb4
lbl_0807ee68: .4byte 0x0600e000
lbl_0807ee6c:
    ldr r0, lbl_0807ee90 @ =0x08754bc4
    ldr r2, [r0]
    adds r0, r2, #0
    adds r0, #0xbf
    ldrb r1, [r0]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_0807eec6
    ldrh r0, [r2, #0x1e]
    strh r0, [r2, #4]
    ldrh r1, [r2]
    movs r3, #0x80
    lsls r3, r3, #1
    adds r0, r3, #0
lbl_0807ee8a:
    orrs r0, r1
    strh r0, [r2]
    b lbl_0807eec8
    .align 2, 0
lbl_0807ee90: .4byte 0x08754bc4
lbl_0807ee94:
    movs r0, #0xff
    lsls r0, r0, #1
    bl SoundPlay
    ldr r0, lbl_0807eeb0 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1]
    ldr r0, lbl_0807eeb4 @ =0x0000feff
    ands r0, r2
    strh r0, [r1]
    adds r1, #0xbe
    movs r0, #0x27
    strb r0, [r1]
    b lbl_0807eec8
    .align 2, 0
lbl_0807eeb0: .4byte 0x08754bc4
lbl_0807eeb4: .4byte 0x0000feff
lbl_0807eeb8:
    ldr r0, lbl_0807eed8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbe
    ldrb r0, [r0]
    movs r6, #1
    cmp r0, #0
    beq lbl_0807eec8
lbl_0807eec6:
    movs r6, #0
lbl_0807eec8:
    adds r0, r6, #0
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807eed8: .4byte 0x08754bc4

    thumb_func_start sub_0807eedc
sub_0807eedc: @ 0x0807eedc
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    mov ip, r0
    ldr r2, lbl_0807ef70 @ =0x03000c24
    ldr r0, lbl_0807ef74 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x3f
    ldrb r1, [r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r1, [r0, #0x11]
    movs r2, #7
    mov r8, r2
    ands r2, r1
    ldrb r0, [r0, #0x11]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x13
    movs r1, #7
    ands r0, r1
    orrs r2, r0
    mov r8, r2
    movs r0, #0x80
    lsls r0, r0, #1
    add ip, r0
    movs r2, #0
lbl_0807ef18:
    mov r1, r8
    asrs r1, r2
    movs r0, #1
    ands r1, r0
    movs r0, #0xf0
    lsls r0, r0, #8
    cmp r1, #0
    beq lbl_0807ef2c
    movs r0, #0xe0
    lsls r0, r0, #8
lbl_0807ef2c:
    adds r5, r0, #0
    adds r7, r2, #1
    ldr r6, lbl_0807ef78 @ =0x000003ff
    lsls r1, r2, #7
    mov r2, ip
    adds r0, r2, r1
    adds r3, r0, #0
    adds r3, #0x44
    add r1, ip
    adds r2, r1, #4
    movs r4, #0xf
lbl_0807ef42:
    ldrh r1, [r2]
    adds r0, r6, #0
    ands r0, r1
    orrs r0, r5
    strh r0, [r2]
    ldrh r1, [r3]
    adds r0, r6, #0
    ands r0, r1
    orrs r0, r5
    strh r0, [r3]
    adds r3, #2
    adds r2, #2
    subs r4, #1
    cmp r4, #0
    bge lbl_0807ef42
    adds r2, r7, #0
    cmp r2, #2
    ble lbl_0807ef18
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807ef70: .4byte 0x03000c24
lbl_0807ef74: .4byte 0x08754bc4
lbl_0807ef78: .4byte 0x000003ff

    thumb_func_start sub_0807ef7c
sub_0807ef7c: @ 0x0807ef7c
    push {lr}
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0xc
    bhi lbl_0807ef92
    ldr r0, lbl_0807ef98 @ =0x08760c4c
    lsls r1, r1, #1
    adds r1, r1, r0
    ldrh r0, [r1]
    bl SoundPlay
lbl_0807ef92:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807ef98: .4byte 0x08760c4c

    thumb_func_start softreset_main
softreset_main: @ 0x0807ef9c
    push {r4, lr}
    ldr r0, lbl_0807efb4 @ =0x03000c72
    movs r2, #0
    ldrsh r1, [r0, r2]
    adds r4, r0, #0
    cmp r1, #1
    beq lbl_0807efc4
    cmp r1, #1
    bgt lbl_0807efb8
    cmp r1, #0
    beq lbl_0807efbe
    b lbl_0807efe8
    .align 2, 0
lbl_0807efb4: .4byte 0x03000c72
lbl_0807efb8:
    cmp r1, #2
    beq lbl_0807efe4
    b lbl_0807efe8
lbl_0807efbe:
    bl sub_0807eff0
    b lbl_0807efd8
lbl_0807efc4:
    ldr r1, lbl_0807efe0 @ =0x030013ae
    ldrh r0, [r1]
    subs r0, #4
    cmp r0, #0
    bgt lbl_0807efd0
    movs r0, #0
lbl_0807efd0:
    strh r0, [r1]
    ldrh r0, [r1]
    cmp r0, #0
    bne lbl_0807efe8
lbl_0807efd8:
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    b lbl_0807efe8
    .align 2, 0
lbl_0807efe0: .4byte 0x030013ae
lbl_0807efe4:
    movs r0, #1
    b lbl_0807efea
lbl_0807efe8:
    movs r0, #0
lbl_0807efea:
    pop {r4}
    pop {r1}
    bx r1

    thumb_func_start sub_0807eff0
sub_0807eff0: @ 0x0807eff0
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    sub sp, #4
    ldr r0, lbl_0807f0ac @ =sub_0807f114
    bl CallbackSetVBlank
    movs r4, #0
    str r4, [sp]
    ldr r1, lbl_0807f0b0 @ =0x040000d4
    mov r0, sp
    str r0, [r1]
    ldr r0, lbl_0807f0b4 @ =0x030016c4
    str r0, [r1, #4]
    ldr r0, lbl_0807f0b8 @ =0x8500018a
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0x84
    ldr r0, lbl_0807f0bc @ =0x08754bc4
    mov r8, r0
    ldr r3, [r0]
    movs r5, #0
    movs r0, #0xbf
    strh r0, [r3, #0x1e]
    strh r0, [r1]
    ldr r2, lbl_0807f0c0 @ =0x04000054
    ldr r1, lbl_0807f0c4 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    strh r0, [r2]
    movs r6, #0x80
    lsls r6, r6, #0x13
    strh r4, [r3, #0x1c]
    strh r4, [r6]
    ldr r0, lbl_0807f0c8 @ =0x03001382
    strb r5, [r0]
    bl ClearGFXRAM
    bl ResetFreeOAM
    ldr r1, lbl_0807f0cc @ =0x03005806
    ldr r0, lbl_0807f0d0 @ =0x03005807
    strb r5, [r0]
    strb r5, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    strh r4, [r0]
    ldr r0, lbl_0807f0d4 @ =0x03000c75
    strb r5, [r0]
    ldr r1, lbl_0807f0d8 @ =0x03000bf4
    ldr r0, lbl_0807f0dc @ =0x03000bf6
    strh r4, [r0]
    strh r4, [r1]
    ldr r1, lbl_0807f0e0 @ =0x03000bf8
    ldr r0, lbl_0807f0e4 @ =0x03000bfa
    strh r4, [r0]
    strh r4, [r1]
    ldr r1, lbl_0807f0e8 @ =0x03000bfc
    ldr r0, lbl_0807f0ec @ =0x03000bfe
    strh r4, [r0]
    strh r4, [r1]
    ldr r1, lbl_0807f0f0 @ =0x03000c00
    ldr r0, lbl_0807f0f4 @ =0x03000c02
    strh r4, [r0]
    strh r4, [r1]
    ldr r0, lbl_0807f0f8 @ =0x04000010
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    mov r1, r8
    ldr r0, [r1]
    strh r4, [r0, #0x1c]
    strh r4, [r6]
    ldr r0, lbl_0807f0fc @ =sub_0807f100
    bl CallbackSetVBlank
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807f0ac: .4byte sub_0807f114
lbl_0807f0b0: .4byte 0x040000d4
lbl_0807f0b4: .4byte 0x030016c4
lbl_0807f0b8: .4byte 0x8500018a
lbl_0807f0bc: .4byte 0x08754bc4
lbl_0807f0c0: .4byte 0x04000054
lbl_0807f0c4: .4byte 0x030013ae
lbl_0807f0c8: .4byte 0x03001382
lbl_0807f0cc: .4byte 0x03005806
lbl_0807f0d0: .4byte 0x03005807
lbl_0807f0d4: .4byte 0x03000c75
lbl_0807f0d8: .4byte 0x03000bf4
lbl_0807f0dc: .4byte 0x03000bf6
lbl_0807f0e0: .4byte 0x03000bf8
lbl_0807f0e4: .4byte 0x03000bfa
lbl_0807f0e8: .4byte 0x03000bfc
lbl_0807f0ec: .4byte 0x03000bfe
lbl_0807f0f0: .4byte 0x03000c00
lbl_0807f0f4: .4byte 0x03000c02
lbl_0807f0f8: .4byte 0x04000010
lbl_0807f0fc: .4byte sub_0807f100

    thumb_func_start sub_0807f100
sub_0807f100: @ 0x0807f100
    ldr r0, lbl_0807f10c @ =0x04000054
    ldr r1, lbl_0807f110 @ =0x030013ae
    ldrh r1, [r1]
    strh r1, [r0]
    bx lr
    .align 2, 0
lbl_0807f10c: .4byte 0x04000054
lbl_0807f110: .4byte 0x030013ae

    thumb_func_start sub_0807f114
sub_0807f114: @ 0x0807f114
    sub sp, #4
    mov r1, sp
    movs r0, #0
    strb r0, [r1]
    add sp, #4
    bx lr

    thumb_func_start sub_0807f120
sub_0807f120: @ 0x0807f120
    push {r4, r5, r6, lr}
    adds r6, r0, #0
    adds r4, r1, #0
    lsls r2, r2, #0x18
    lsrs r5, r2, #0x18
    movs r3, #0
    cmp r3, r4
    bge lbl_0807f140
lbl_0807f130:
    adds r2, r6, r3
    ldrb r1, [r2]
    adds r0, r5, #0
    eors r0, r1
    strb r0, [r2]
    adds r3, #1
    cmp r3, r4
    blt lbl_0807f130
lbl_0807f140:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start get_value_from_seed
get_value_from_seed: @ 0x0807f148
    push {lr}
    adds r3, r0, #0
    adds r2, r1, #0
    adds r0, r2, #0
    cmp r2, #0
    bge lbl_0807f156
    adds r0, r2, #7
lbl_0807f156:
    asrs r0, r0, #3
    lsls r1, r0, #3
    subs r1, r2, r1
    adds r0, r3, r0
    ldrb r0, [r0]
    lsls r0, r1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x1f
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0807f16c
sub_0807f16c: @ 0x0807f16c
    push {r4, r5, lr}
    adds r5, r0, #0
    adds r0, r1, #0
    adds r3, r2, #0
    movs r4, #1
    ands r3, r4
    adds r2, r0, #0
    cmp r0, #0
    bge lbl_0807f180
    adds r2, r0, #7
lbl_0807f180:
    asrs r2, r2, #3
    lsls r1, r2, #3
    subs r1, r0, r1
    movs r0, #7
    subs r0, r0, r1
    lsls r3, r0
    lsls r4, r0
    lsls r0, r4, #0x18
    lsrs r4, r0, #0x18
    adds r2, r5, r2
    ldrb r0, [r2]
    bics r0, r4
    orrs r0, r3
    strb r0, [r2]
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0807f1a4
sub_0807f1a4: @ 0x0807f1a4
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r4, r0, #0
    adds r5, r1, #0
    adds r6, r2, #0
    bl get_value_from_seed
    mov r8, r0
    adds r0, r4, #0
    adds r1, r6, #0
    bl get_value_from_seed
    adds r2, r0, #0
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f16c
    adds r0, r4, #0
    adds r1, r6, #0
    mov r2, r8
    bl sub_0807f16c
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0

    thumb_func_start sub_0807f1dc
sub_0807f1dc: @ 0x0807f1dc
    push {r4, r5, r6, lr}
    adds r6, r0, #0
    lsls r5, r1, #2
    movs r4, #0
    cmp r4, r5
    bge lbl_0807f1f8
lbl_0807f1e8:
    adds r2, r4, r5
    adds r0, r6, #0
    adds r1, r4, #0
    bl sub_0807f1a4
    adds r4, #2
    cmp r4, r5
    blt lbl_0807f1e8
lbl_0807f1f8:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0807f200
sub_0807f200: @ 0x0807f200
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0
    lsls r6, r1, #2
    lsls r1, r1, #3
    subs r5, r1, #1
    movs r4, #0
    cmp r4, r6
    bge lbl_0807f222
lbl_0807f210:
    adds r0, r7, #0
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_0807f1a4
    adds r4, #1
    subs r5, #1
    cmp r4, r6
    blt lbl_0807f210
lbl_0807f222:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0

    thumb_func_start sub_0807f228
sub_0807f228: @ 0x0807f228
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0
    lsls r0, r1, #3
    movs r1, #9
    bl __divsi3
    adds r6, r0, #0
    adds r5, r6, #0
    movs r4, #0
    cmp r4, r6
    bge lbl_0807f250
lbl_0807f23e:
    adds r0, r7, #0
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_0807f1a4
    adds r4, #1
    adds r5, #8
    cmp r4, r6
    blt lbl_0807f23e
lbl_0807f250:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0807f258
sub_0807f258: @ 0x0807f258
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0
    adds r6, r1, #0
    adds r5, r6, #0
    movs r4, #0
    cmp r4, r6
    bge lbl_0807f278
lbl_0807f266:
    adds r0, r7, #0
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_0807f1a4
    adds r4, #1
    adds r5, #7
    cmp r4, r6
    blt lbl_0807f266
lbl_0807f278:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0807f280
sub_0807f280: @ 0x0807f280
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0
    lsls r0, r1, #3
    movs r1, #6
    bl __divsi3
    adds r6, r0, #0
    adds r5, r6, #0
    movs r4, #0
    cmp r4, r6
    bge lbl_0807f2a8
lbl_0807f296:
    adds r0, r7, #0
    adds r1, r4, #0
    adds r2, r5, #0
    bl sub_0807f1a4
    adds r4, #1
    adds r5, #5
    cmp r4, r6
    blt lbl_0807f296
lbl_0807f2a8:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start generate_time_attack_password
generate_time_attack_password: @ 0x0807f2b0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x14
    adds r7, r0, #0
    mov sb, r1
    cmp r2, #0
    ble lbl_0807f354
    movs r0, #4
    str r0, [sp]
    movs r1, #3
    str r1, [sp, #4]
    movs r0, #2
    str r0, [sp, #8]
    movs r1, #1
    str r1, [sp, #0xc]
    movs r0, #0
    str r0, [sp, #0x10]
    mov sl, r2
lbl_0807f2da:
    adds r0, r7, #0
    ldr r1, [sp, #0x10]
    bl get_value_from_seed
    adds r4, r0, #0
    adds r0, r7, #0
    ldr r1, [sp, #0xc]
    bl get_value_from_seed
    mov r8, r0
    adds r0, r7, #0
    ldr r1, [sp, #8]
    bl get_value_from_seed
    adds r6, r0, #0
    adds r0, r7, #0
    ldr r1, [sp, #4]
    bl get_value_from_seed
    adds r5, r0, #0
    adds r0, r7, #0
    ldr r1, [sp]
    bl get_value_from_seed
    lsls r4, r4, #4
    mov r1, r8
    lsls r1, r1, #3
    orrs r4, r1
    lsls r6, r6, #2
    orrs r4, r6
    lsls r5, r5, #1
    orrs r4, r5
    orrs r4, r0
    ldr r0, lbl_0807f36c @ =0x0845fcf4
    adds r4, r4, r0
    ldrb r0, [r4]
    mov r1, sb
    strb r0, [r1]
    movs r0, #1
    add sb, r0
    ldr r1, [sp]
    adds r1, #5
    str r1, [sp]
    ldr r0, [sp, #4]
    adds r0, #5
    str r0, [sp, #4]
    ldr r1, [sp, #8]
    adds r1, #5
    str r1, [sp, #8]
    ldr r0, [sp, #0xc]
    adds r0, #5
    str r0, [sp, #0xc]
    ldr r1, [sp, #0x10]
    adds r1, #5
    str r1, [sp, #0x10]
    movs r0, #1
    rsbs r0, r0, #0
    add sl, r0
    mov r1, sl
    cmp r1, #0
    bne lbl_0807f2da
lbl_0807f354:
    movs r0, #0
    mov r1, sb
    strb r0, [r1]
    add sp, #0x14
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807f36c: .4byte 0x0845fcf4

    thumb_func_start is_save_file_not_legit
is_save_file_not_legit: @ 0x0807f370
    push {r4, r5, lr}
    sub sp, #0x10
    movs r4, #0
    ldr r5, lbl_0807f3e0 @ =0x03000184
lbl_0807f378:
    lsls r2, r4, #2
    mov r0, sp
    adds r3, r0, r2
    adds r2, r2, r5
    ldrb r1, [r2]
    lsls r1, r1, #0x18
    ldrb r0, [r2, #1]
    lsls r0, r0, #0x10
    adds r1, r1, r0
    ldrb r0, [r2, #2]
    lsls r0, r0, #8
    adds r1, r1, r0
    ldrb r0, [r2, #3]
    adds r1, r1, r0
    str r1, [r3]
    adds r0, r4, #1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #3
    bls lbl_0807f378
    movs r4, #0
lbl_0807f3a2:
    adds r1, r4, #1
    lsls r0, r1, #0x18
    lsrs r3, r0, #0x18
    lsls r2, r4, #2
    adds r4, r1, #0
    cmp r3, #3
    bhi lbl_0807f3ca
    mov r1, sp
    adds r0, r1, r2
    ldr r1, [r0]
lbl_0807f3b6:
    lsls r0, r3, #2
    add r0, sp
    ldr r0, [r0]
    cmp r1, r0
    bhs lbl_0807f3da
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #3
    bls lbl_0807f3b6
lbl_0807f3ca:
    mov r0, sp
    adds r1, r0, r2
    ldr r0, lbl_0807f3e4 @ =0x0845fd14
    adds r0, r2, r0
    ldr r1, [r1]
    ldr r0, [r0]
    cmp r1, r0
    bhi lbl_0807f3e8
lbl_0807f3da:
    movs r0, #0
    b lbl_0807f3f2
    .align 2, 0
lbl_0807f3e0: .4byte 0x03000184
lbl_0807f3e4: .4byte 0x0845fd14
lbl_0807f3e8:
    lsls r0, r4, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #3
    bls lbl_0807f3a2
    movs r0, #1
lbl_0807f3f2:
    add sp, #0x10
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0807f3fc
sub_0807f3fc: @ 0x0807f3fc
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    sub sp, #0x30
    ldr r7, lbl_0807f604 @ =0x03000014
    ldr r0, [r7, #8]
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807f414
    b lbl_0807f5f4
lbl_0807f414:
    bl is_save_file_not_legit
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_0807f420
    b lbl_0807f5f4
lbl_0807f420:
    bl GetPercentAndEndingNumber
    adds r3, r0, #0
    movs r0, #0xff
    lsrs r1, r3, #0x18
    lsrs r6, r3, #0x10
    ands r6, r0
    lsrs r5, r3, #0xc
    movs r0, #0xf
    ands r5, r0
    lsrs r4, r3, #8
    ands r4, r0
    lsrs r2, r3, #4
    ands r2, r0
    cmp r1, #0xc
    bls lbl_0807f442
    b lbl_0807f5f4
lbl_0807f442:
    cmp r6, #0x32
    bls lbl_0807f448
    b lbl_0807f5f4
lbl_0807f448:
    cmp r5, #0xf
    bls lbl_0807f44e
    b lbl_0807f5f4
lbl_0807f44e:
    cmp r4, #9
    bls lbl_0807f454
    b lbl_0807f5f4
lbl_0807f454:
    cmp r2, #0xe
    bls lbl_0807f45a
    b lbl_0807f5f4
lbl_0807f45a:
    cmp r2, #7
    bhi lbl_0807f460
    b lbl_0807f5f4
lbl_0807f460:
    cmp r6, #0
    bne lbl_0807f466
    b lbl_0807f5f4
lbl_0807f466:
    movs r4, #0
    mov sb, r7
    add r3, sp, #0x10
    movs r1, #0
lbl_0807f46e:
    lsls r0, r4, #2
    add r0, sp
    str r1, [r0]
    adds r0, r4, #1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #3
    bls lbl_0807f46e
    movs r4, #0
    ldr r6, lbl_0807f608 @ =0x03000184
lbl_0807f482:
    lsls r2, r4, #2
    adds r2, r2, r6
    ldrb r1, [r2]
    ldr r0, [sp]
    adds r5, r0, r1
    str r5, [sp]
    ldrb r1, [r2, #1]
    ldr r0, [sp, #4]
    adds r0, r0, r1
    str r0, [sp, #4]
    ldrb r1, [r2, #2]
    ldr r0, [sp, #8]
    adds r0, r0, r1
    str r0, [sp, #8]
    ldrb r1, [r2, #3]
    ldr r0, [sp, #0xc]
    adds r1, r0, r1
    str r1, [sp, #0xc]
    adds r0, r4, #1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #3
    bls lbl_0807f482
    movs r0, #0x1f
    ands r5, r0
    str r5, [sp]
    lsrs r0, r1, #7
    movs r1, #1
    ands r0, r1
    strb r0, [r3]
    ldr r0, [sp, #4]
    movs r2, #1
    ands r0, r2
    strb r0, [r3, #1]
    ldr r0, [sp, #8]
    lsrs r0, r0, #7
    ands r0, r1
    strb r0, [r3, #2]
    ldr r0, [sp, #0xc]
    lsrs r0, r0, #6
    ands r0, r1
    strb r0, [r3, #3]
    ldr r0, [sp]
    ands r0, r2
    strb r0, [r3, #4]
    ldr r0, [sp, #4]
    lsrs r0, r0, #1
    ands r0, r1
    strb r0, [r3, #5]
    ldr r0, [sp, #8]
    lsrs r0, r0, #6
    ands r0, r1
    strb r0, [r3, #6]
    ldr r0, [sp, #0xc]
    lsrs r0, r0, #5
    ands r0, r1
    strb r0, [r3, #7]
    ldr r0, [sp]
    lsrs r0, r0, #1
    ands r0, r1
    strb r0, [r3, #8]
    ldr r0, [sp, #8]
    lsrs r0, r0, #5
    ands r0, r1
    strb r0, [r3, #9]
    ldr r0, [sp, #0xc]
    lsrs r0, r0, #4
    ands r0, r1
    strb r0, [r3, #0xa]
    ldr r0, [sp, #4]
    lsrs r0, r0, #2
    ands r0, r1
    strb r0, [r3, #0xb]
    ldr r0, [sp, #8]
    lsrs r0, r0, #4
    ands r0, r1
    strb r0, [r3, #0xc]
    ldr r0, [sp, #0xc]
    lsrs r0, r0, #3
    ands r0, r1
    strb r0, [r3, #0xd]
    ldr r0, [sp]
    lsrs r0, r0, #2
    ands r0, r1
    strb r0, [r3, #0xe]
    ldr r0, [sp, #4]
    lsrs r0, r0, #3
    ands r0, r1
    strb r0, [r3, #0xf]
    ldr r0, [sp, #4]
    lsrs r0, r0, #7
    ands r0, r1
    strb r0, [r3, #0x10]
    ldr r0, [sp, #8]
    lsrs r0, r0, #3
    ands r0, r1
    strb r0, [r3, #0x11]
    ldr r0, [sp]
    lsrs r0, r0, #3
    ands r0, r1
    strb r0, [r3, #0x12]
    ldr r0, [sp, #0xc]
    lsrs r0, r0, #2
    ands r0, r1
    strb r0, [r3, #0x13]
    ldr r0, [sp, #8]
    lsrs r0, r0, #2
    ands r0, r1
    strb r0, [r3, #0x14]
    ldr r0, [sp, #0xc]
    lsrs r0, r0, #1
    ands r0, r1
    strb r0, [r3, #0x15]
    ldr r0, [sp, #4]
    lsrs r0, r0, #4
    ands r0, r1
    strb r0, [r3, #0x16]
    ldr r0, [sp, #8]
    lsrs r0, r0, #1
    ands r0, r1
    strb r0, [r3, #0x17]
    ldr r0, [sp, #8]
    ands r0, r2
    strb r0, [r3, #0x18]
    ldr r0, [sp, #0xc]
    ands r0, r2
    strb r0, [r3, #0x19]
    ldr r0, [sp, #4]
    lsrs r0, r0, #6
    ands r0, r1
    strb r0, [r3, #0x1a]
    ldr r0, [sp]
    lsrs r0, r0, #4
    ands r0, r1
    strb r0, [r3, #0x1b]
    ldr r0, [sp, #4]
    lsrs r0, r0, #5
    ands r0, r1
    strb r0, [r3, #0x1c]
    movs r0, #1
    ands r0, r1
    strb r0, [r3, #0x1d]
    movs r0, #2
    ands r0, r2
    strb r0, [r3, #0x1e]
    strb r2, [r3, #0x1f]
    movs r0, #0
    mov r8, r0
    movs r1, #0x18
    mov ip, r1
    movs r4, #0
    adds r7, r3, #0
lbl_0807f5b2:
    movs r3, #0
    movs r2, #7
    movs r1, #0
    adds r6, r4, #1
    mov r5, ip
    subs r5, #8
    lsls r4, r4, #3
lbl_0807f5c0:
    adds r0, r4, r1
    adds r0, r7, r0
    ldrb r0, [r0]
    lsls r0, r2
    adds r3, r3, r0
    subs r0, r2, #1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    adds r0, r1, #1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #7
    bls lbl_0807f5c0
    mov r0, ip
    lsls r3, r0
    add r8, r3
    lsls r0, r5, #0x18
    lsrs r0, r0, #0x18
    mov ip, r0
    lsls r0, r6, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #3
    bls lbl_0807f5b2
    mov r1, r8
    mov r0, sb
    str r1, [r0, #8]
lbl_0807f5f4:
    add sp, #0x30
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0807f604: .4byte 0x03000014
lbl_0807f608: .4byte 0x03000184

    thumb_func_start sub_0807f60c
sub_0807f60c: @ 0x0807f60c
    push {r4, r5, r6, lr}
    adds r6, r0, #0
    ldr r0, lbl_0807f620 @ =0x03000014
    ldr r1, [r0, #8]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0807f624
    movs r0, #0
    b lbl_0807f688
    .align 2, 0
lbl_0807f620: .4byte 0x03000014
lbl_0807f624:
    adds r3, r1, #0
    movs r4, #0
    movs r2, #0x1f
    movs r1, #0
    movs r5, #1
lbl_0807f62e:
    adds r0, r3, #0
    lsrs r0, r1
    ands r0, r5
    lsls r0, r2
    adds r4, r4, r0
    subs r0, r2, #1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    adds r0, r1, #1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x1f
    bls lbl_0807f62e
    lsls r0, r4, #3
    lsrs r4, r0, #6
    ldr r3, lbl_0807f690 @ =0x00989680
    movs r1, #0
lbl_0807f650:
    movs r2, #0
    adds r5, r1, #1
    cmp r4, r3
    blo lbl_0807f664
lbl_0807f658:
    subs r4, r4, r3
    adds r0, r2, #1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    cmp r4, r3
    bhs lbl_0807f658
lbl_0807f664:
    adds r1, r6, r1
    adds r0, r2, #0
    adds r0, #0x30
    strb r0, [r1]
    adds r0, r3, #0
    movs r1, #0xa
    bl __udivsi3
    adds r3, r0, #0
    lsls r0, r5, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #6
    bls lbl_0807f650
    adds r1, r6, r1
    adds r0, r4, #0
    adds r0, #0x30
    strb r0, [r1]
    movs r0, #1
lbl_0807f688:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807f690: .4byte 0x00989680

    thumb_func_start sub_0807f694
sub_0807f694: @ 0x0807f694
    push {r4, r5, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    movs r2, #0x46
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f200
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x49
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f228
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    pop {r4, r5}
    pop {r0}
    bx r0

    thumb_func_start sub_0807f6d8
sub_0807f6d8: @ 0x0807f6d8
    push {r4, r5, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    movs r2, #0x90
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f200
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f228
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x5e
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    pop {r4, r5}
    pop {r0}
    bx r0

    thumb_func_start sub_0807f71c
sub_0807f71c: @ 0x0807f71c
    push {r4, r5, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    movs r2, #0x91
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f200
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f228
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0xe3
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    pop {r4, r5}
    pop {r0}
    bx r0

    thumb_func_start sub_0807f760
sub_0807f760: @ 0x0807f760
    push {r4, r5, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    movs r2, #0x59
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f228
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x63
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x39
    bl sub_0807f120
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0807f7b0
sub_0807f7b0: @ 0x0807f7b0
    push {r4, r5, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    movs r2, #0x95
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f200
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0xfc
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f228
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    pop {r4, r5}
    pop {r0}
    bx r0

    thumb_func_start sub_0807f7f4
sub_0807f7f4: @ 0x0807f7f4
    push {r4, r5, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    movs r2, #0x4d
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f200
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x4a
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x53
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f228
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0807f844
sub_0807f844: @ 0x0807f844
    push {r4, r5, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    movs r2, #0x41
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f200
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x59
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f228
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x4f
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0807f89c
sub_0807f89c: @ 0x0807f89c
    push {r4, r5, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    movs r2, #0x54
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f228
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x4f
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f1dc
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f200
    adds r0, r4, #0
    adds r1, r5, #0
    movs r2, #0x4d
    bl sub_0807f120
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f258
    adds r0, r4, #0
    adds r1, r5, #0
    bl sub_0807f280
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start randomize_time_attack_password_seed
randomize_time_attack_password_seed: @ 0x0807f8fc
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldrb r4, [r0]
    movs r2, #0x80
    mov ip, r2
    movs r3, #0x80
    ands r3, r4
    ldrb r5, [r0, #4]
    movs r2, #0x40
    ands r2, r5
    orrs r3, r2
    ldrb r6, [r0, #8]
    movs r7, #0x20
    mov sl, r7
    movs r2, #0x20
    ands r2, r6
    orrs r3, r2
    ldrb r2, [r0, #0xa]
    mov r8, r2
    movs r7, #0x10
    mov sb, r7
    movs r2, #0x10
    mov r7, r8
    ands r2, r7
    orrs r3, r2
    strb r3, [r0, #0xc]
    movs r3, #0x7f
    ands r3, r4
    movs r4, #0xbf
    ands r4, r5
    movs r5, #0xdf
    ands r5, r6
    movs r6, #0xef
    mov r2, r8
    ands r6, r2
    lsls r1, r1, #4
    adds r2, r1, #0
    mov r7, ip
    ands r2, r7
    orrs r3, r2
    strb r3, [r0]
    adds r2, r1, #0
    movs r3, #0x40
    ands r2, r3
    orrs r4, r2
    strb r4, [r0, #4]
    adds r2, r1, #0
    mov r7, sl
    ands r2, r7
    orrs r5, r2
    strb r5, [r0, #8]
    mov r2, sb
    ands r1, r2
    orrs r6, r1
    strb r6, [r0, #0xa]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start generate_time_attack_password_seed
generate_time_attack_password_seed: @ 0x0807f980
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x10
    adds r7, r0, #0
    movs r5, #0
    movs r4, #1
    adds r6, r7, #0
    adds r6, #0x25
    mov ip, r6
    movs r3, #0x1f
lbl_0807f99a:
    mov r0, ip
    adds r2, r0, r5
    ldr r1, [r7]
    ands r1, r4
    rsbs r0, r1, #0
    orrs r0, r1
    lsrs r0, r0, #0x1f
    strb r0, [r2]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807f99a
    movs r4, #1
    movs r1, #0x10
    adds r1, r1, r7
    mov sl, r1
    adds r2, r6, #0
    movs r3, #6
lbl_0807f9c0:
    adds r1, r2, r5
    ldrb r0, [r7, #4]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807f9c0
    movs r4, #1
    adds r2, r6, #0
    movs r3, #5
lbl_0807f9dc:
    adds r1, r2, r5
    ldrb r0, [r7, #5]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807f9dc
    movs r4, #1
    adds r2, r6, #0
    movs r3, #5
lbl_0807f9f8:
    adds r1, r2, r5
    ldrb r0, [r7, #6]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807f9f8
    movs r4, #1
    adds r2, r6, #0
    movs r3, #5
lbl_0807fa14:
    adds r1, r2, r5
    ldrb r0, [r7, #7]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807fa14
    movs r4, #1
    adds r2, r6, #0
    movs r3, #4
lbl_0807fa30:
    adds r1, r2, r5
    ldrb r0, [r7, #8]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807fa30
    movs r4, #1
    adds r2, r6, #0
    movs r3, #3
lbl_0807fa4c:
    adds r1, r2, r5
    ldrb r0, [r7, #9]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807fa4c
    movs r4, #1
    adds r2, r6, #0
    movs r3, #3
lbl_0807fa68:
    adds r1, r2, r5
    ldrb r0, [r7, #0xa]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807fa68
    movs r4, #1
    adds r1, r6, r5
    ldrb r0, [r7, #0xb]
    ands r0, r4
    strb r0, [r1]
    adds r5, #1
    adds r1, r6, r5
    ldrb r0, [r7, #0xc]
    ands r0, r4
    strb r0, [r1]
    adds r5, #1
    adds r2, r6, #0
    movs r3, #7
lbl_0807fa98:
    adds r1, r2, r5
    ldrb r0, [r7, #0xd]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807fa98
    movs r4, #1
    adds r2, r6, #0
    movs r3, #7
lbl_0807fab4:
    adds r1, r2, r5
    ldrb r0, [r7, #0xe]
    ands r0, r4
    rsbs r0, r0, #0
    lsrs r0, r0, #0x1f
    strb r0, [r1]
    lsls r4, r4, #1
    adds r5, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807fab4
    movs r2, #0
    mov ip, r2
    movs r5, #0
    ldrb r3, [r7, #0xf]
    mov sb, r3
    mov r8, r6
lbl_0807fad6:
    movs r4, #0
    movs r1, #0
    adds r6, r5, #1
    lsls r0, r5, #3
    mov r3, r8
    adds r2, r0, r3
    movs r3, #7
lbl_0807fae4:
    ldrb r0, [r2]
    lsls r0, r4
    adds r0, r1, r0
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    adds r4, #1
    adds r2, #1
    subs r3, #1
    cmp r3, #0
    bge lbl_0807fae4
    mov r2, sp
    adds r0, r2, r5
    strb r1, [r0]
    add ip, r1
    adds r5, r6, #0
    cmp r6, #0xa
    ble lbl_0807fad6
    adds r0, r2, r6
    mov r3, ip
    strb r3, [r0]
    mov r1, sb
    lsls r0, r1, #2
    ldr r2, lbl_0807fb44 @ =0x08760c68
    adds r0, r0, r2
    ldr r2, [r0]
    mov r0, sp
    movs r1, #0xc
    bl _call_via_r2
    ldrb r1, [r7, #0xf]
    mov r0, sp
    bl randomize_time_attack_password_seed
    mov r0, sp
    mov r1, sl
    movs r2, #0x14
    bl generate_time_attack_password
    movs r0, #0
    add sp, #0x10
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807fb44: .4byte 0x08760c68

    thumb_func_start check_set_new_time_attack_record
check_set_new_time_attack_record: @ 0x0807fb48
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    ldr r2, lbl_0807fbf8 @ =0x03000150
    ldrb r1, [r2]
    lsls r1, r1, #0x18
    ldrb r0, [r2, #1]
    lsls r0, r0, #0x10
    adds r1, r1, r0
    ldrb r0, [r2, #2]
    lsls r0, r0, #8
    adds r6, r1, r0
    ldr r2, lbl_0807fbfc @ =0x03001694
    ldrb r1, [r2, #0x14]
    lsls r1, r1, #0x18
    ldrb r0, [r2, #0x15]
    lsls r0, r0, #0x10
    adds r1, r1, r0
    ldrb r0, [r2, #0x16]
    lsls r0, r0, #8
    adds r1, r1, r0
    str r1, [sp, #8]
    adds r0, r2, #0
    adds r0, #0x2c
    ldrb r1, [r0]
    lsls r1, r1, #0x18
    adds r0, #1
    ldrb r0, [r0]
    lsls r0, r0, #0x10
    adds r1, r1, r0
    adds r0, r2, #0
    adds r0, #0x2e
    ldrb r0, [r0]
    lsls r0, r0, #8
    adds r5, r1, r0
    bl GetPercentAndEndingNumber
    movs r1, #0xff
    lsrs r2, r0, #0x18
    mov sl, r2
    lsrs r7, r0, #0x10
    ands r7, r1
    lsrs r1, r0, #0xc
    mov sb, r1
    movs r1, #0xf
    mov r2, sb
    ands r2, r1
    mov sb, r2
    lsrs r2, r0, #8
    ands r2, r1
    mov r8, r2
    lsrs r4, r0, #4
    ands r4, r1
    mov r1, sl
    adds r0, r1, r7
    add r0, sb
    add r0, r8
    adds r0, r0, r4
    movs r2, #0
    str r2, [sp, #4]
    cmp r4, #0xd
    bls lbl_0807fbce
    movs r1, #1
    str r1, [sp, #4]
lbl_0807fbce:
    movs r2, #0
    str r2, [sp]
    ldr r1, [sp, #8]
    cmp r6, r1
    bhs lbl_0807fbdc
    movs r2, #1
    str r2, [sp]
lbl_0807fbdc:
    cmp r0, #0x63
    bls lbl_0807fbec
    cmp r6, r5
    bhs lbl_0807fbec
    movs r0, #2
    ldr r1, [sp]
    orrs r1, r0
    str r1, [sp]
lbl_0807fbec:
    ldr r2, [sp]
    cmp r2, #0
    bne lbl_0807fc00
    movs r0, #0
    b lbl_0807fd38
    .align 2, 0
lbl_0807fbf8: .4byte 0x03000150
lbl_0807fbfc: .4byte 0x03001694
lbl_0807fc00:
    movs r0, #0
    mov ip, r0
    ldr r0, lbl_0807fd48 @ =0x03000014
    ldr r0, [r0, #8]
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0807fc1a
    bl is_save_file_not_legit
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov ip, r0
lbl_0807fc1a:
    mov r1, sl
    cmp r1, #0xc
    bhi lbl_0807fc3c
    cmp r7, #0x32
    bhi lbl_0807fc3c
    mov r2, sb
    cmp r2, #0xf
    bhi lbl_0807fc3c
    mov r0, r8
    cmp r0, #9
    bhi lbl_0807fc3c
    cmp r4, #0xe
    bhi lbl_0807fc3c
    cmp r4, #7
    bls lbl_0807fc3c
    cmp r7, #0
    bne lbl_0807fc40
lbl_0807fc3c:
    movs r1, #0
    mov ip, r1
lbl_0807fc40:
    ldr r5, lbl_0807fd4c @ =0x03000184
    ldrb r0, [r5, #3]
    movs r3, #0xf
    adds r4, r3, #0
    ands r4, r0
    lsls r4, r4, #4
    ldrb r1, [r5, #0xb]
    adds r0, r3, #0
    ands r0, r1
    orrs r4, r0
    ldrb r0, [r5, #0xf]
    adds r2, r3, #0
    ands r2, r0
    lsls r2, r2, #4
    ldrb r1, [r5, #7]
    adds r0, r3, #0
    ands r0, r1
    orrs r2, r0
    ldr r6, lbl_0807fd50 @ =0x0300160c
    ldr r0, lbl_0807fd48 @ =0x03000014
    ldr r0, [r0, #8]
    str r0, [r6]
    ldr r5, lbl_0807fd54 @ =0x03000150
    ldrb r0, [r5]
    strb r0, [r6, #4]
    ldrb r0, [r5, #1]
    strb r0, [r6, #5]
    ldrb r0, [r5, #2]
    strb r0, [r6, #6]
    strb r7, [r6, #7]
    mov r0, sb
    strb r0, [r6, #8]
    mov r1, r8
    strb r1, [r6, #9]
    mov r0, sl
    strb r0, [r6, #0xa]
    mov r1, sp
    ldrb r1, [r1, #4]
    strb r1, [r6, #0xb]
    mov r0, ip
    strb r0, [r6, #0xc]
    strb r4, [r6, #0xd]
    strb r2, [r6, #0xe]
    ldr r0, lbl_0807fd58 @ =0x03000c77
    ldrb r0, [r0]
    ands r3, r0
    strb r3, [r6, #0xf]
    adds r0, r6, #0
    bl generate_time_attack_password_seed
    movs r0, #1
    ldr r1, [sp]
    ands r0, r1
    cmp r0, #0
    beq lbl_0807fcda
    movs r2, #0
    ldr r3, lbl_0807fd5c @ =0x03001694
    adds r4, r3, #0
    adds r7, r6, #0
    adds r7, #0x10
lbl_0807fcb8:
    adds r1, r2, r4
    adds r0, r7, r2
    ldrb r0, [r0]
    strb r0, [r1]
    adds r0, r2, #1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    cmp r2, #0x13
    bls lbl_0807fcb8
    ldrb r0, [r5]
    strb r0, [r3, #0x14]
    ldrb r0, [r5, #1]
    strb r0, [r3, #0x15]
    ldrb r0, [r5, #2]
    strb r0, [r3, #0x16]
    ldrb r0, [r5, #3]
    strb r0, [r3, #0x17]
lbl_0807fcda:
    movs r0, #2
    ldr r2, [sp]
    ands r0, r2
    cmp r0, #0
    beq lbl_0807fd22
    movs r2, #0
    ldr r5, lbl_0807fd54 @ =0x03000150
    ldr r3, lbl_0807fd5c @ =0x03001694
    adds r7, r3, #0
    adds r7, #0x18
    adds r4, r6, #0
    adds r4, #0x10
lbl_0807fcf2:
    adds r1, r2, r7
    adds r0, r4, r2
    ldrb r0, [r0]
    strb r0, [r1]
    adds r0, r2, #1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    cmp r2, #0x13
    bls lbl_0807fcf2
    ldrb r1, [r5]
    adds r0, r3, #0
    adds r0, #0x2c
    strb r1, [r0]
    ldrb r0, [r5, #1]
    adds r1, r3, #0
    adds r1, #0x2d
    strb r0, [r1]
    ldrb r0, [r5, #2]
    adds r1, #1
    strb r0, [r1]
    ldrb r1, [r5, #3]
    adds r0, r3, #0
    adds r0, #0x2f
    strb r1, [r0]
lbl_0807fd22:
    ldr r0, [sp]
    cmp r0, #0
    beq lbl_0807fd36
    bl backup_time_attack_for_sram
    ldr r0, lbl_0807fd60 @ =0x03001604
    ldrb r1, [r0]
    movs r2, #1
    orrs r1, r2
    strb r1, [r0]
lbl_0807fd36:
    movs r0, #1
lbl_0807fd38:
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807fd48: .4byte 0x03000014
lbl_0807fd4c: .4byte 0x03000184
lbl_0807fd50: .4byte 0x0300160c
lbl_0807fd54: .4byte 0x03000150
lbl_0807fd58: .4byte 0x03000c77
lbl_0807fd5c: .4byte 0x03001694
lbl_0807fd60: .4byte 0x03001604

    thumb_func_start sub_0807fd64
sub_0807fd64: @ 0x0807fd64
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x10
    str r0, [sp]
    ldr r4, [sp, #0x30]
    ldr r0, [sp, #0x34]
    mov r8, r0
    ldr r0, [sp, #0x38]
    lsls r1, r1, #0x10
    lsls r2, r2, #0x10
    lsls r3, r3, #0x10
    lsrs r3, r3, #0x10
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    mov r5, r8
    lsls r5, r5, #0x18
    mov r8, r5
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #4]
    movs r0, #0x80
    lsls r0, r0, #0xf
    adds r1, r1, r0
    asrs r1, r1, #0x10
    str r1, [sp, #8]
    adds r2, r2, r0
    asrs r2, r2, #0x10
    str r2, [sp, #0xc]
    ldr r1, [sp]
    lsls r0, r1, #3
    ldr r5, lbl_0807fe84 @ =0x03000e7c
    adds r7, r0, r5
    ldrb r0, [r7, #1]
    mov sb, r0
    mov r1, sb
    lsrs r2, r1, #6
    ldrb r0, [r7, #3]
    lsrs r0, r0, #6
    ldr r1, lbl_0807fe88 @ =0x0845fd24
    lsls r2, r2, #2
    adds r0, r0, r2
    adds r1, r0, r1
    ldrb r1, [r1]
    mov ip, r1
    ldr r1, lbl_0807fe8c @ =0x0845fd30
    adds r0, r0, r1
    ldrb r0, [r0]
    mov sl, r0
    ldrh r0, [r7, #2]
    lsls r0, r0, #0x17
    lsrs r0, r0, #0x17
    ldr r1, [sp, #8]
    adds r5, r0, r1
    ldr r1, lbl_0807fe90 @ =0x000001ff
    adds r0, r1, #0
    ands r5, r0
    ldrb r0, [r7]
    ldr r1, [sp, #0xc]
    adds r6, r0, r1
    movs r0, #0xff
    ands r6, r0
    ldr r1, [sp, #8]
    subs r0, r5, r1
    add r0, ip
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    ldr r1, [sp, #0xc]
    subs r2, r6, r1
    add r2, sl
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    adds r1, r0, #0
    muls r1, r4, r1
    asrs r1, r1, #8
    subs r1, r1, r0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    adds r0, r2, #0
    muls r0, r4, r0
    asrs r0, r0, #8
    subs r0, r0, r2
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    adds r1, r5, r1
    lsls r1, r1, #0x10
    asrs r5, r1, #0x10
    adds r0, r6, r0
    lsls r0, r0, #0x10
    asrs r6, r0, #0x10
    ldr r0, [sp, #8]
    subs r4, r5, r0
    add r4, ip
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    ldr r1, [sp, #0xc]
    subs r2, r6, r1
    add r2, sl
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    ldr r5, lbl_0807fe94 @ =0x0808c71c
    adds r0, r3, #0
    adds r0, #0x40
    lsls r0, r0, #1
    adds r0, r0, r5
    movs r1, #0
    ldrsh r6, [r0, r1]
    adds r1, r4, #0
    muls r1, r6, r1
    lsls r3, r3, #1
    adds r3, r3, r5
    movs r5, #0
    ldrsh r3, [r3, r5]
    adds r0, r2, #0
    muls r0, r3, r0
    subs r1, r1, r0
    lsls r1, r1, #8
    asrs r5, r1, #0x10
    adds r0, r4, #0
    muls r0, r3, r0
    adds r1, r2, #0
    muls r1, r6, r1
    adds r0, r0, r1
    lsls r0, r0, #8
    asrs r6, r0, #0x10
    mov r0, r8
    cmp r0, #0
    bne lbl_0807fe98
    movs r0, #4
    rsbs r0, r0, #0
    mov r1, sb
    ands r0, r1
    movs r1, #1
    orrs r0, r1
    strb r0, [r7, #1]
    mov r1, ip
    subs r0, r5, r1
    lsls r0, r0, #0x10
    asrs r5, r0, #0x10
    mov r1, sl
    subs r0, r6, r1
    b lbl_0807feb0
    .align 2, 0
lbl_0807fe84: .4byte 0x03000e7c
lbl_0807fe88: .4byte 0x0845fd24
lbl_0807fe8c: .4byte 0x0845fd30
lbl_0807fe90: .4byte 0x000001ff
lbl_0807fe94: .4byte 0x0808c71c
lbl_0807fe98:
    movs r0, #3
    mov r1, sb
    orrs r0, r1
    strb r0, [r7, #1]
    mov r1, ip
    lsls r0, r1, #1
    subs r0, r5, r0
    lsls r0, r0, #0x10
    asrs r5, r0, #0x10
    mov r1, sl
    lsls r0, r1, #1
    subs r0, r6, r0
lbl_0807feb0:
    lsls r0, r0, #0x10
    asrs r6, r0, #0x10
    ldr r0, [sp]
    lsls r3, r0, #3
    ldr r1, lbl_0807feec @ =0x03000e7c
    adds r7, r3, r1
    ldr r0, [sp, #8]
    adds r1, r5, r0
    subs r1, #0x40
    ldr r0, lbl_0807fef0 @ =0x000001ff
    ands r1, r0
    ldrh r2, [r7, #2]
    ldr r0, lbl_0807fef4 @ =0xfffffe00
    ands r0, r2
    orrs r0, r1
    strh r0, [r7, #2]
    ldr r1, [sp, #0xc]
    adds r0, r6, r1
    subs r0, #0x40
    strb r0, [r7]
    ldrb r4, [r7, #3]
    lsls r0, r4, #0x1b
    cmp r0, #0
    bge lbl_0807fefe
    lsls r0, r4, #0x1a
    cmp r0, #0
    bge lbl_0807fef8
    ldr r0, [sp, #4]
    adds r0, #3
    b lbl_0807ff08
    .align 2, 0
lbl_0807feec: .4byte 0x03000e7c
lbl_0807fef0: .4byte 0x000001ff
lbl_0807fef4: .4byte 0xfffffe00
lbl_0807fef8:
    ldr r0, [sp, #4]
    adds r0, #1
    b lbl_0807ff08
lbl_0807fefe:
    lsls r0, r4, #0x1a
    cmp r0, #0
    bge lbl_0807ff1a
    ldr r0, [sp, #4]
    adds r0, #2
lbl_0807ff08:
    movs r1, #7
    ands r0, r1
    lsls r0, r0, #1
    movs r1, #0xf
    rsbs r1, r1, #0
    ands r1, r4
    orrs r1, r0
    strb r1, [r7, #3]
    b lbl_0807ff2c
lbl_0807ff1a:
    movs r0, #7
    ldr r1, [sp, #4]
    ands r1, r0
    lsls r1, r1, #1
    movs r0, #0xf
    rsbs r0, r0, #0
    ands r0, r4
    orrs r0, r1
    strb r0, [r7, #3]
lbl_0807ff2c:
    ldr r5, lbl_0807ff54 @ =0x03000e7c
    adds r2, r3, r5
    ldrb r1, [r2, #3]
    movs r0, #0x11
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #0x21
    rsbs r1, r1, #0
    ands r0, r1
    strb r0, [r2, #3]
    movs r0, #0
    add sp, #0x10
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0807ff54: .4byte 0x03000e7c

    thumb_func_start sub_0807ff58
sub_0807ff58: @ 0x0807ff58
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    adds r4, r0, #0
    adds r5, r1, #0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r5, r5, #0x10
    asrs r5, r5, #0x10
    lsls r2, r2, #0x18
    lsrs r7, r2, #0x18
    ldr r6, lbl_080800ec @ =0x0808c71c
    adds r0, r4, #0
    adds r0, #0x40
    lsls r0, r0, #1
    adds r0, r0, r6
    movs r2, #0
    ldrsh r1, [r0, r2]
    str r1, [sp]
    adds r0, r5, #0
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    ldr r0, [sp]
    bl FixedMultiplication
    mov r8, r0
    mov r3, r8
    lsls r3, r3, #0x10
    asrs r3, r3, #0x10
    mov r8, r3
    lsls r4, r4, #1
    adds r4, r4, r6
    movs r1, #0
    ldrsh r0, [r4, r1]
    mov sl, r0
    adds r0, r5, #0
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    mov r0, sl
    bl FixedMultiplication
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    str r0, [sp, #4]
    ldrh r4, [r4]
    rsbs r4, r4, #0
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    adds r0, r5, #0
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    adds r0, r4, #0
    bl FixedMultiplication
    mov sb, r0
    mov r2, sb
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    mov sb, r2
    rsbs r5, r5, #0
    lsls r5, r5, #0x10
    asrs r5, r5, #0x10
    adds r0, r5, #0
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    ldr r0, [sp]
    bl FixedMultiplication
    adds r6, r0, #0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    adds r0, r5, #0
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    mov r0, sl
    bl FixedMultiplication
    mov sl, r0
    mov r3, sl
    lsls r3, r3, #0x10
    asrs r3, r3, #0x10
    mov sl, r3
    adds r0, r5, #0
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    adds r0, r4, #0
    bl FixedMultiplication
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    ldr r2, lbl_080800f0 @ =0x03000e7c
    lsls r1, r7, #3
    adds r1, r1, r2
    mov r4, r8
    strh r4, [r1, #6]
    adds r1, r7, #1
    lsls r1, r1, #3
    adds r1, r1, r2
    mov r3, sp
    ldrh r3, [r3, #4]
    strh r3, [r1, #6]
    adds r1, r7, #2
    lsls r1, r1, #3
    adds r1, r1, r2
    mov r4, sb
    strh r4, [r1, #6]
    adds r1, r7, #3
    lsls r1, r1, #3
    adds r1, r1, r2
    mov r3, r8
    strh r3, [r1, #6]
    adds r1, r7, #4
    lsls r1, r1, #3
    adds r1, r1, r2
    strh r6, [r1, #6]
    adds r1, r7, #5
    lsls r1, r1, #3
    adds r1, r1, r2
    mov r4, sl
    strh r4, [r1, #6]
    adds r1, r7, #6
    lsls r1, r1, #3
    adds r1, r1, r2
    mov r3, sb
    strh r3, [r1, #6]
    adds r1, r7, #7
    lsls r1, r1, #3
    adds r1, r1, r2
    mov r4, r8
    strh r4, [r1, #6]
    adds r1, r7, #0
    adds r1, #8
    lsls r1, r1, #3
    adds r1, r1, r2
    strh r4, [r1, #6]
    adds r1, r7, #0
    adds r1, #9
    lsls r1, r1, #3
    adds r1, r1, r2
    mov r3, sp
    ldrh r3, [r3, #4]
    strh r3, [r1, #6]
    adds r1, r7, #0
    adds r1, #0xa
    lsls r1, r1, #3
    adds r1, r1, r2
    strh r0, [r1, #6]
    adds r1, r7, #0
    adds r1, #0xb
    lsls r1, r1, #3
    adds r1, r1, r2
    strh r6, [r1, #6]
    adds r1, r7, #0
    adds r1, #0xc
    lsls r1, r1, #3
    adds r1, r1, r2
    strh r6, [r1, #6]
    adds r1, r7, #0
    adds r1, #0xd
    lsls r1, r1, #3
    adds r1, r1, r2
    mov r4, sl
    strh r4, [r1, #6]
    adds r1, r7, #0
    adds r1, #0xe
    lsls r1, r1, #3
    adds r1, r1, r2
    strh r0, [r1, #6]
    adds r0, r7, #0
    adds r0, #0xf
    lsls r0, r0, #3
    adds r0, r0, r2
    strh r6, [r0, #6]
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080800ec: .4byte 0x0808c71c
lbl_080800f0: .4byte 0x03000e7c

    thumb_func_start sub_080800f4
sub_080800f4: @ 0x080800f4
    ldr r1, lbl_08080150 @ =0x040000d4
    ldr r0, lbl_08080154 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08080158 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldr r0, lbl_0808015c @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0x44
    ldrh r0, [r0]
    strh r0, [r2]
    adds r2, #0x50
    adds r1, #0x46
    ldrh r0, [r1]
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_08080160 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_08080164 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_08080168 @ =0x04000054
    ldr r0, lbl_0808016c @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r3, lbl_08080170 @ =0x04000010
    ldr r0, lbl_08080174 @ =0x030013b4
    ldrh r2, [r0]
    ldr r1, lbl_08080178 @ =0x000001ff
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    ldr r2, lbl_0808017c @ =0x04000012
    ldr r0, lbl_08080180 @ =0x030013b6
    ldrh r0, [r0]
    ands r1, r0
    strh r1, [r2]
    bx lr
    .align 2, 0
lbl_08080150: .4byte 0x040000d4
lbl_08080154: .4byte 0x03000e7c
lbl_08080158: .4byte 0x84000100
lbl_0808015c: .4byte 0x08754bc4
lbl_08080160: .4byte 0x030013b2
lbl_08080164: .4byte 0x030013b0
lbl_08080168: .4byte 0x04000054
lbl_0808016c: .4byte 0x030013ae
lbl_08080170: .4byte 0x04000010
lbl_08080174: .4byte 0x030013b4
lbl_08080178: .4byte 0x000001ff
lbl_0808017c: .4byte 0x04000012
lbl_08080180: .4byte 0x030013b6

    thumb_func_start vblank_code_during_intro_fuzz
vblank_code_during_intro_fuzz: @ 0x08080184
    ldr r1, lbl_080801c4 @ =0x040000d4
    ldr r0, lbl_080801c8 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_080801cc @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldr r0, lbl_080801d0 @ =0x08754bc4
    ldr r3, [r0]
    adds r0, r3, #0
    adds r0, #0x44
    ldrh r0, [r0]
    strh r0, [r2]
    adds r2, #0x50
    adds r0, r3, #0
    adds r0, #0x46
    ldrh r0, [r0]
    strh r0, [r2]
    adds r0, r3, #0
    adds r0, #0x14
    str r0, [r1]
    ldr r0, lbl_080801d4 @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_080801d8 @ =0x80000010
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    bx lr
    .align 2, 0
lbl_080801c4: .4byte 0x040000d4
lbl_080801c8: .4byte 0x03000e7c
lbl_080801cc: .4byte 0x84000100
lbl_080801d0: .4byte 0x08754bc4
lbl_080801d4: .4byte 0x05000200
lbl_080801d8: .4byte 0x80000010

    thumb_func_start intro_init
intro_init: @ 0x080801dc
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #4
    ldr r4, lbl_0808031c @ =0x04000208
    movs r6, #0
    strh r6, [r4]
    ldr r2, lbl_08080320 @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_08080324 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_08080328 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_0808032c @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_08080330 @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r5, #1
    strh r5, [r4]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r6, [r0]
    strh r6, [r4]
    ldr r0, lbl_08080334 @ =sub_080800f4
    mov sb, r0
    bl CallbackSetVBlank
    strh r5, [r4]
    movs r5, #0
    str r5, [sp]
    ldr r4, lbl_08080338 @ =0x040000d4
    mov r2, sp
    str r2, [r4]
    ldr r0, lbl_0808033c @ =0x030016c4
    str r0, [r4, #4]
    ldr r0, lbl_08080340 @ =0x8500018a
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r0, lbl_08080344 @ =0x08754bc4
    mov r8, r0
    ldr r1, [r0]
    movs r0, #0x20
    strh r0, [r1, #0x36]
    movs r0, #0x38
    strh r0, [r1, #4]
    movs r0, #0x60
    strh r0, [r1, #6]
    bl ClearGFXRAM
    ldr r0, lbl_08080348 @ =0x0845fdb4
    ldr r1, lbl_0808034c @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, lbl_08080350 @ =0x0846122c
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, lbl_08080354 @ =0x084643e0
    ldr r1, lbl_08080358 @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_0808035c @ =0x0847920c
    ldr r1, lbl_08080360 @ =0x06009000
    bl LZ77UncompVRAM
    ldr r2, lbl_08080364 @ =0x0845f914
    str r2, [r4]
    ldr r0, lbl_08080368 @ =0x05000200
    str r0, [r4, #4]
    ldr r1, lbl_0808036c @ =0x80000060
    str r1, [r4, #8]
    ldr r0, [r4, #8]
    str r2, [r4]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r4, #4]
    str r1, [r4, #8]
    ldr r0, [r4, #8]
    ldr r0, lbl_08080370 @ =0x0845f9d4
    str r0, [r4]
    ldr r0, lbl_08080374 @ =0x050001e0
    str r0, [r4, #4]
    ldr r0, lbl_08080378 @ =0x80000010
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r1, lbl_0808037c @ =0x04000008
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08080380 @ =0x00001201
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08080384 @ =0x03001382
    strb r6, [r0]
    bl ResetFreeOAM
    ldr r0, lbl_08080388 @ =0x030013b4
    strh r5, [r0]
    ldr r0, lbl_0808038c @ =0x030013b6
    strh r5, [r0]
    ldr r0, lbl_08080390 @ =0x030013b8
    strh r5, [r0]
    ldr r0, lbl_08080394 @ =0x030013ba
    strh r5, [r0]
    ldr r0, lbl_08080398 @ =0x030013bc
    strh r5, [r0]
    ldr r0, lbl_0808039c @ =0x030013be
    strh r5, [r0]
    ldr r0, lbl_080803a0 @ =0x030013c0
    strh r5, [r0]
    ldr r0, lbl_080803a4 @ =0x030013c2
    strh r5, [r0]
    ldr r0, lbl_080803a8 @ =0x04000010
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    movs r0, #1
    bl UpdateMusicPriority
    mov r0, r8
    ldr r1, [r0]
    adds r2, r1, #0
    adds r2, #0x44
    movs r0, #0x80
    lsls r0, r0, #5
    strh r0, [r2]
    adds r1, #0x46
    movs r0, #0xff
    strh r0, [r1]
    ldr r1, lbl_080803ac @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    bl _call_via_r9
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808031c: .4byte 0x04000208
lbl_08080320: .4byte 0x04000004
lbl_08080324: .4byte 0x0000ffef
lbl_08080328: .4byte 0x04000200
lbl_0808032c: .4byte 0x0000fffd
lbl_08080330: .4byte 0x04000202
lbl_08080334: .4byte sub_080800f4
lbl_08080338: .4byte 0x040000d4
lbl_0808033c: .4byte 0x030016c4
lbl_08080340: .4byte 0x8500018a
lbl_08080344: .4byte 0x08754bc4
lbl_08080348: .4byte 0x0845fdb4
lbl_0808034c: .4byte 0x06010000
lbl_08080350: .4byte 0x0846122c
lbl_08080354: .4byte 0x084643e0
lbl_08080358: .4byte 0x06008000
lbl_0808035c: .4byte 0x0847920c
lbl_08080360: .4byte 0x06009000
lbl_08080364: .4byte 0x0845f914
lbl_08080368: .4byte 0x05000200
lbl_0808036c: .4byte 0x80000060
lbl_08080370: .4byte 0x0845f9d4
lbl_08080374: .4byte 0x050001e0
lbl_08080378: .4byte 0x80000010
lbl_0808037c: .4byte 0x04000008
lbl_08080380: .4byte 0x00001201
lbl_08080384: .4byte 0x03001382
lbl_08080388: .4byte 0x030013b4
lbl_0808038c: .4byte 0x030013b6
lbl_08080390: .4byte 0x030013b8
lbl_08080394: .4byte 0x030013ba
lbl_08080398: .4byte 0x030013bc
lbl_0808039c: .4byte 0x030013be
lbl_080803a0: .4byte 0x030013c0
lbl_080803a4: .4byte 0x030013c2
lbl_080803a8: .4byte 0x04000010
lbl_080803ac: .4byte 0x030013ae

    thumb_func_start intro_text_process_oam
intro_text_process_oam: @ 0x080803b0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r3, lbl_080803dc @ =0x08754bc4
    ldr r2, [r3]
    ldrb r0, [r2, #9]
    adds r1, r0, #1
    strb r1, [r2, #9]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov ip, r3
    cmp r0, #1
    beq lbl_080803f4
    cmp r0, #1
    bgt lbl_080803e0
    cmp r0, #0
    beq lbl_080803ea
    b lbl_0808040c
    .align 2, 0
lbl_080803dc: .4byte 0x08754bc4
lbl_080803e0:
    cmp r0, #3
    beq lbl_080803ea
    cmp r0, #4
    beq lbl_080803fe
    b lbl_0808040c
lbl_080803ea:
    mov r0, ip
    ldr r1, [r0]
    movs r0, #1
    strb r0, [r1, #8]
    b lbl_0808040c
lbl_080803f4:
    mov r2, ip
    ldr r1, [r2]
    movs r0, #2
    strb r0, [r1, #8]
    b lbl_0808040c
lbl_080803fe:
    mov r1, ip
    ldr r0, [r1]
    movs r1, #0
    strb r1, [r0, #8]
    mov r2, ip
    ldr r0, [r2]
    strb r1, [r0, #9]
lbl_0808040c:
    ldr r5, lbl_08080488 @ =0x03000e7c
    movs r6, #0
    movs r0, #0x80
    str r0, [sp]
    movs r1, #0x78
    mov sl, r1
    mov r2, ip
    ldr r1, [r2]
    ldrb r0, [r1, #3]
    cmp r0, #0
    beq lbl_080804b2
    ldr r4, [r1, #0x10]
    ldrh r7, [r4]
    adds r4, #2
    cmp r6, r7
    bhs lbl_080804b2
    ldrb r1, [r1, #3]
    cmp r6, r1
    bhs lbl_080804b2
    mov r8, ip
    movs r0, #0xf
    mov sb, r0
lbl_08080438:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    lsls r0, r6, #3
    ldr r2, lbl_08080488 @ =0x03000e7c
    adds r3, r0, r2
    ldr r2, [sp]
    adds r0, r1, r2
    strb r0, [r3]
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    add r1, sl
    ldr r0, lbl_0808048c @ =0x000001ff
    ands r1, r0
    ldrh r2, [r3, #2]
    ldr r0, lbl_08080490 @ =0xfffffe00
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #2
    mov r0, r8
    ldr r1, [r0]
    ldrb r0, [r1, #3]
    subs r0, #1
    cmp r6, r0
    bne lbl_08080494
    ldrb r0, [r1, #2]
    lsls r0, r0, #4
    ldrb r2, [r3, #5]
    mov r1, sb
    ands r1, r2
    orrs r1, r0
    strb r1, [r3, #5]
    b lbl_0808049c
    .align 2, 0
lbl_08080488: .4byte 0x03000e7c
lbl_0808048c: .4byte 0x000001ff
lbl_08080490: .4byte 0xfffffe00
lbl_08080494:
    ldrb r1, [r3, #5]
    mov r0, sb
    ands r0, r1
    strb r0, [r3, #5]
lbl_0808049c:
    adds r5, #2
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, r7
    bhs lbl_080804b2
    mov r1, r8
    ldr r0, [r1]
    ldrb r0, [r0, #3]
    cmp r6, r0
    blo lbl_08080438
lbl_080804b2:
    ldr r4, lbl_0808053c @ =0x0845f744
    ldrh r0, [r4]
    adds r0, r6, r0
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    adds r4, #2
    mov r2, ip
    ldr r0, [r2]
    ldrh r1, [r0, #6]
    str r1, [sp]
    ldrh r0, [r0, #4]
    mov sl, r0
    cmp r6, r7
    bhs lbl_08080526
    ldr r2, lbl_08080540 @ =0x000001ff
    mov r8, r2
    ldr r0, lbl_08080544 @ =0xfffffe00
    mov sb, r0
lbl_080804d6:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    lsls r3, r6, #3
    ldr r2, lbl_08080548 @ =0x03000e7c
    adds r3, r3, r2
    ldr r2, [sp]
    adds r0, r1, r2
    strb r0, [r3]
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    add r1, sl
    mov r0, r8
    ands r1, r0
    ldrh r2, [r3, #2]
    mov r0, sb
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    mov r1, ip
    ldr r0, [r1]
    ldrb r1, [r0, #8]
    lsls r1, r1, #4
    ldrb r2, [r3, #5]
    movs r0, #0xf
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #5]
    adds r5, #4
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, r7
    blo lbl_080804d6
lbl_08080526:
    ldr r2, lbl_0808054c @ =0x03001382
    strb r6, [r2]
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808053c: .4byte 0x0845f744
lbl_08080540: .4byte 0x000001ff
lbl_08080544: .4byte 0xfffffe00
lbl_08080548: .4byte 0x03000e7c
lbl_0808054c: .4byte 0x03001382

    thumb_func_start sub_08080550
sub_08080550: @ 0x08080550
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov ip, r0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    mov sb, r1
    movs r3, #0
    movs r6, #0
    movs r5, #0
    movs r4, #0
    ldr r1, lbl_0808058c @ =0x08754bc4
    ldr r0, [r1]
    movs r7, #4
    ldrsh r2, [r0, r7]
    mov r8, r2
    mov r0, ip
    subs r0, #1
    adds r2, r1, #0
    cmp r0, #4
    bhi lbl_08080616
    lsls r0, r0, #2
    ldr r1, lbl_08080590 @ =lbl_08080594
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0808058c: .4byte 0x08754bc4
lbl_08080590: .4byte lbl_08080594
lbl_08080594: @ jump table
    .4byte lbl_080805cc @ case 0
    .4byte lbl_080805da @ case 1
    .4byte lbl_08080610 @ case 2
    .4byte lbl_0808060a @ case 3
    .4byte lbl_080805a8 @ case 4
lbl_080805a8:
    ldr r1, [r2]
    ldrb r0, [r1, #0xa]
    cmp r0, #1
    beq lbl_080805ba
    cmp r0, #0x14
    bhi lbl_080805b6
    b lbl_080806b6
lbl_080805b6:
    movs r0, #2
    b lbl_080806c2
lbl_080805ba:
    ldrh r0, [r1, #4]
    adds r0, #8
    strh r0, [r1, #4]
    ldr r0, lbl_080805c8 @ =0x00000226
    bl SoundPlay
    b lbl_080806b6
    .align 2, 0
lbl_080805c8: .4byte 0x00000226
lbl_080805cc:
    ldr r1, [r2]
    ldrb r0, [r1, #0xa]
    cmp r0, #3
    bls lbl_08080602
    ldrb r0, [r1, #3]
    adds r0, #2
    b lbl_080805f2
lbl_080805da:
    ldr r1, [r2]
    ldrb r0, [r1, #0xa]
    cmp r0, #1
    bne lbl_080805ea
    ldrh r0, [r1, #4]
    adds r0, #8
    strh r0, [r1, #4]
    b lbl_08080602
lbl_080805ea:
    cmp r0, #3
    bls lbl_08080602
    ldrb r0, [r1, #3]
    adds r0, #1
lbl_080805f2:
    strb r0, [r1, #3]
    ldr r1, [r2]
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    adds r0, r4, #1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
lbl_08080602:
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    b lbl_08080616
lbl_0808060a:
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
lbl_08080610:
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
lbl_08080616:
    cmp r3, #0
    bne lbl_0808069c
    ldr r0, [r2]
    ldrb r0, [r0, #0xa]
    cmp r0, #5
    bhi lbl_0808069c
    lsls r0, r0, #2
    ldr r1, lbl_0808062c @ =lbl_08080630
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0808062c: .4byte lbl_08080630
lbl_08080630: @ jump table
    .4byte lbl_08080648 @ case 0
    .4byte lbl_08080650 @ case 1
    .4byte lbl_0808069c @ case 2
    .4byte lbl_08080648 @ case 3
    .4byte lbl_08080672 @ case 4
    .4byte lbl_0808067a @ case 5
lbl_08080648:
    ldr r1, [r2]
    movs r0, #1
    strb r0, [r1, #2]
    b lbl_0808069c
lbl_08080650:
    ldr r1, [r2]
    movs r0, #2
    strb r0, [r1, #2]
    cmp r5, #0
    beq lbl_08080668
    ldr r1, [r2]
    mov r0, sb
    strh r0, [r1, #4]
    ldrh r0, [r1, #6]
    adds r0, #0x18
    strh r0, [r1, #6]
    b lbl_0808069c
lbl_08080668:
    ldr r1, [r2]
    ldrh r0, [r1, #4]
    adds r0, #8
    strh r0, [r1, #4]
    b lbl_0808069c
lbl_08080672:
    ldr r1, [r2]
    movs r0, #0
    strb r0, [r1, #2]
    b lbl_0808069c
lbl_0808067a:
    ldr r1, [r2]
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    cmp r6, #0
    beq lbl_0808068e
    ldr r1, [r2]
    ldrb r0, [r1, #3]
    adds r0, #2
    b lbl_08080694
lbl_0808068e:
    ldr r1, [r2]
    ldrb r0, [r1, #3]
    adds r0, #1
lbl_08080694:
    strb r0, [r1, #3]
    adds r0, r4, #1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
lbl_0808069c:
    ldr r0, [r2]
    movs r1, #4
    ldrsh r0, [r0, r1]
    cmp r8, r0
    beq lbl_080806b2
    mov r2, ip
    cmp r2, #2
    beq lbl_080806b2
    ldr r0, lbl_080806bc @ =0x00000226
    bl SoundPlay
lbl_080806b2:
    cmp r4, #0
    bne lbl_080806c0
lbl_080806b6:
    movs r0, #0
    b lbl_080806c2
    .align 2, 0
lbl_080806bc: .4byte 0x00000226
lbl_080806c0:
    movs r0, #1
lbl_080806c2:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start intro_emergency_order
intro_emergency_order: @ 0x080806d0
    push {r4, r5, lr}
    ldr r0, lbl_080806ec @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0xc]
    adds r1, r0, #1
    strh r1, [r2, #0xc]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0
    beq lbl_080806f0
    cmp r0, #0xa
    beq lbl_08080708
    b lbl_08080712
    .align 2, 0
lbl_080806ec: .4byte 0x08754bc4
lbl_080806f0:
    ldr r0, lbl_08080704 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_08080712
    movs r0, #3
    bl start_story_text
    b lbl_08080712
    .align 2, 0
lbl_08080704: .4byte 0x03000020
lbl_08080708:
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0x90
    lsls r0, r0, #5
    strh r0, [r1]
lbl_08080712:
    ldr r4, lbl_08080784 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x42
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08080734
    ldr r0, lbl_08080788 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_08080734
    bl sub_0806f424
    ldr r1, [r4]
    adds r1, #0x42
    strb r0, [r1]
lbl_08080734:
    ldr r1, lbl_0808078c @ =0x0845fd3c
    ldr r4, lbl_08080784 @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0, #1]
    adds r0, r0, r1
    ldrb r0, [r0]
    movs r1, #0x38
    bl sub_08080550
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #2
    bne lbl_08080790
    ldr r2, [r4]
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #0
    strb r0, [r2]
    ldr r0, [r4]
    strb r1, [r0, #3]
    ldr r0, [r4]
    strb r1, [r0, #1]
    ldr r0, [r4]
    strb r1, [r0, #0xa]
    ldr r0, [r4]
    movs r2, #0
    strh r1, [r0, #0xc]
    adds r0, #0x42
    strb r2, [r0]
    ldr r1, [r4]
    movs r0, #0x18
    strh r0, [r1, #4]
    movs r0, #0x50
    strh r0, [r1, #6]
    movs r0, #0x78
    strh r0, [r1, #0x3e]
    adds r1, #0x40
    movs r0, #0x1c
    strh r0, [r1]
    b lbl_080807b0
    .align 2, 0
lbl_08080784: .4byte 0x08754bc4
lbl_08080788: .4byte 0x03000020
lbl_0808078c: .4byte 0x0845fd3c
lbl_08080790:
    ldr r1, [r4]
    ldr r0, lbl_080807a4 @ =0x0845f45c
    str r0, [r1, #0x10]
    bl intro_text_process_oam
    cmp r5, #0
    beq lbl_080807a8
    ldr r1, [r4]
    movs r0, #0
    b lbl_080807ae
    .align 2, 0
lbl_080807a4: .4byte 0x0845f45c
lbl_080807a8:
    ldr r1, [r4]
    ldrb r0, [r1, #0xa]
    adds r0, #1
lbl_080807ae:
    strb r0, [r1, #0xa]
lbl_080807b0:
    movs r0, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start intro_ship_flying_towards_camera_process_oam
intro_ship_flying_towards_camera_process_oam: @ 0x080807b8
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    ldr r6, lbl_080807dc @ =0x03000e7c
    ldr r0, lbl_080807e0 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r2, [r1, #0xc]
    adds r3, r0, #0
    cmp r2, #3
    bhi lbl_080807e4
    adds r1, #0x40
    ldrh r0, [r1]
    adds r0, #8
    b lbl_08080812
    .align 2, 0
lbl_080807dc: .4byte 0x03000e7c
lbl_080807e0: .4byte 0x08754bc4
lbl_080807e4:
    cmp r2, #7
    bhi lbl_080807f0
    adds r1, #0x40
    ldrh r0, [r1]
    adds r0, #6
    b lbl_08080812
lbl_080807f0:
    cmp r2, #0xf
    bhi lbl_080807fc
    adds r1, #0x40
    ldrh r0, [r1]
    adds r0, #3
    b lbl_08080812
lbl_080807fc:
    cmp r2, #0x13
    bhi lbl_08080808
    adds r1, #0x40
    ldrh r0, [r1]
    adds r0, #1
    b lbl_08080812
lbl_08080808:
    cmp r2, #0x1b
    bhi lbl_08080814
    adds r1, #0x40
    ldrh r0, [r1]
    subs r0, #1
lbl_08080812:
    strh r0, [r1]
lbl_08080814:
    ldr r3, [r3]
    ldrh r2, [r3, #0x36]
    adds r1, r2, #0
    cmp r1, #0x7f
    bhi lbl_08080824
    adds r0, r2, #0
    adds r0, #8
    b lbl_0808083e
lbl_08080824:
    ldr r0, lbl_08080830 @ =0x0000013f
    cmp r1, r0
    bhi lbl_08080834
    adds r0, r2, #0
    adds r0, #0x10
    b lbl_0808083e
    .align 2, 0
lbl_08080830: .4byte 0x0000013f
lbl_08080834:
    ldr r0, lbl_080808d8 @ =0x000001df
    cmp r1, r0
    bhi lbl_08080840
    adds r0, r2, #0
    adds r0, #0x20
lbl_0808083e:
    strh r0, [r3, #0x36]
lbl_08080840:
    ldr r0, lbl_080808dc @ =0x08754bc4
    ldr r3, [r0]
    ldrh r1, [r3, #0xc]
    movs r0, #7
    ands r0, r1
    ldr r4, lbl_080808e0 @ =0x0845f77e
    cmp r0, #3
    bhi lbl_08080852
    ldr r4, lbl_080808e4 @ =0x0845f758
lbl_08080852:
    ldrh r0, [r4]
    mov sl, r0
    adds r4, #2
    adds r0, r3, #0
    adds r0, #0x40
    ldrh r2, [r0]
    ldrh r0, [r3, #0x3e]
    movs r5, #0
    cmp r5, sl
    bhs lbl_080808b2
    lsls r0, r0, #0x10
    mov sb, r0
    lsls r2, r2, #0x10
    mov r8, r2
lbl_0808086e:
    ldrh r0, [r4]
    adds r4, #2
    strh r0, [r6]
    adds r6, #2
    ldrh r0, [r4]
    adds r4, #2
    strh r0, [r6]
    adds r6, #2
    ldrh r0, [r4]
    strh r0, [r6]
    adds r4, #2
    adds r6, #4
    ldr r0, lbl_080808dc @ =0x08754bc4
    ldr r0, [r0]
    ldrh r3, [r0, #0x34]
    movs r1, #0x36
    ldrsh r0, [r0, r1]
    str r0, [sp]
    movs r0, #1
    str r0, [sp, #4]
    movs r0, #0
    str r0, [sp, #8]
    adds r0, r5, #0
    mov r2, sb
    asrs r1, r2, #0x10
    mov r7, r8
    asrs r2, r7, #0x10
    bl sub_0807fd64
    adds r0, r5, #1
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    cmp r5, sl
    blo lbl_0808086e
lbl_080808b2:
    ldr r0, lbl_080808e8 @ =0x03001382
    strb r5, [r0]
    ldr r0, lbl_080808dc @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0x34]
    movs r2, #0x36
    ldrsh r1, [r1, r2]
    movs r2, #0
    bl sub_0807ff58
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080808d8: .4byte 0x000001df
lbl_080808dc: .4byte 0x08754bc4
lbl_080808e0: .4byte 0x0845f77e
lbl_080808e4: .4byte 0x0845f758
lbl_080808e8: .4byte 0x03001382

    thumb_func_start intro_ship_flying_towards_camera
intro_ship_flying_towards_camera: @ 0x080808ec
    push {r4, lr}
    movs r4, #0
    ldr r0, lbl_08080904 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0xc]
    cmp r0, #1
    beq lbl_0808092c
    cmp r0, #1
    bgt lbl_08080908
    cmp r0, #0
    beq lbl_0808090e
    b lbl_0808095a
    .align 2, 0
lbl_08080904: .4byte 0x08754bc4
lbl_08080908:
    cmp r0, #0x20
    beq lbl_08080948
    b lbl_0808095a
lbl_0808090e:
    adds r1, #0x46
    movs r0, #0x8a
    lsls r0, r0, #5
    strh r0, [r1]
    ldr r1, lbl_08080924 @ =0x030013b0
    movs r0, #9
    strh r0, [r1]
    ldr r1, lbl_08080928 @ =0x030013b2
    movs r0, #7
    strh r0, [r1]
    b lbl_0808095a
    .align 2, 0
lbl_08080924: .4byte 0x030013b0
lbl_08080928: .4byte 0x030013b2
lbl_0808092c:
    adds r0, r1, #0
    adds r0, #0x44
    movs r1, #0x88
    lsls r1, r1, #5
    strh r1, [r0]
    movs r0, #4
    bl SoundPlay
    ldr r0, lbl_08080944 @ =0x00000227
    bl SoundPlay
    b lbl_0808095a
    .align 2, 0
lbl_08080944: .4byte 0x00000227
lbl_08080948:
    adds r0, r1, #0
    adds r0, #0x44
    strh r4, [r0]
    adds r0, #2
    strh r4, [r0]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r4, #1
lbl_0808095a:
    bl intro_ship_flying_towards_camera_process_oam
    cmp r4, #0
    beq lbl_08080970
    ldr r0, lbl_0808096c @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0
    b lbl_08080978
    .align 2, 0
lbl_0808096c: .4byte 0x08754bc4
lbl_08080970:
    ldr r0, lbl_08080984 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r0, [r1, #0xc]
    adds r0, #1
lbl_08080978:
    strh r0, [r1, #0xc]
    movs r0, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08080984: .4byte 0x08754bc4

    thumb_func_start intro_samus_in_her_ship
intro_samus_in_her_ship: @ 0x08080988
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_080809a4 @ =0x08754bc4
    ldr r0, [r4]
    ldrh r1, [r0, #0xc]
    cmp r1, #2
    beq lbl_080809d8
    cmp r1, #2
    bgt lbl_080809a8
    cmp r1, #0
    beq lbl_080809b2
    cmp r1, #1
    beq lbl_080809c4
    b lbl_08080a22
    .align 2, 0
lbl_080809a4: .4byte 0x08754bc4
lbl_080809a8:
    cmp r1, #3
    beq lbl_080809f8
    cmp r1, #0x50
    beq lbl_08080a0a
    b lbl_08080a22
lbl_080809b2:
    ldr r0, lbl_080809c0 @ =0x08464ce4
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_08080a22
    .align 2, 0
lbl_080809c0: .4byte 0x08464ce4
lbl_080809c4:
    ldr r0, lbl_080809d0 @ =0x084697e4
    ldr r1, lbl_080809d4 @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_08080a22
    .align 2, 0
lbl_080809d0: .4byte 0x084697e4
lbl_080809d4: .4byte 0x06008000
lbl_080809d8:
    ldr r1, lbl_080809ec @ =0x040000d4
    ldr r0, lbl_080809f0 @ =0x0845f9f4
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_080809f4 @ =0x80000050
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    b lbl_08080a22
    .align 2, 0
lbl_080809ec: .4byte 0x040000d4
lbl_080809f0: .4byte 0x0845f9f4
lbl_080809f4: .4byte 0x80000050
lbl_080809f8:
    adds r0, #0x44
    movs r1, #0x80
    lsls r1, r1, #1
    strh r1, [r0]
    movs r0, #0x8a
    lsls r0, r0, #2
    bl SoundPlay
    b lbl_08080a22
lbl_08080a0a:
    adds r0, #0x44
    strh r5, [r0]
    movs r0, #0x8a
    lsls r0, r0, #2
    movs r1, #0
    bl SoundFade
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r5, #1
lbl_08080a22:
    ldr r2, lbl_08080a3c @ =0x08754bc4
    ldr r0, [r2]
    ldrb r1, [r0, #0xa]
    movs r0, #3
    ands r0, r1
    cmp r0, #1
    bhi lbl_08080a48
    ldr r0, lbl_08080a40 @ =0x030013b4
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_08080a44 @ =0x030013b6
    strh r1, [r0]
    b lbl_08080a58
    .align 2, 0
lbl_08080a3c: .4byte 0x08754bc4
lbl_08080a40: .4byte 0x030013b4
lbl_08080a44: .4byte 0x030013b6
lbl_08080a48:
    ldr r1, lbl_08080a70 @ =0x030013b4
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
    ldr r1, lbl_08080a74 @ =0x030013b6
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_08080a58:
    ldr r1, [r2]
    ldrb r0, [r1, #0xa]
    adds r0, #1
    strb r0, [r1, #0xa]
    cmp r5, #0
    beq lbl_08080a78
    ldr r0, [r2]
    movs r2, #0
    movs r1, #0
    strh r1, [r0, #0xc]
    strb r2, [r0, #0xa]
    b lbl_08080a80
    .align 2, 0
lbl_08080a70: .4byte 0x030013b4
lbl_08080a74: .4byte 0x030013b6
lbl_08080a78:
    ldr r1, [r2]
    ldrh r0, [r1, #0xc]
    adds r0, #1
    strh r0, [r1, #0xc]
lbl_08080a80:
    movs r0, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start intro_exterminate
intro_exterminate: @ 0x08080a88
    push {r4, r5, lr}
    ldr r0, lbl_08080aa4 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0xc]
    adds r1, r0, #1
    strh r1, [r2, #0xc]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0
    beq lbl_08080aa8
    cmp r0, #0xa
    beq lbl_08080acc
    b lbl_08080ad6
    .align 2, 0
lbl_08080aa4: .4byte 0x08754bc4
lbl_08080aa8:
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0x80
    lsls r0, r0, #5
    strh r0, [r1]
    ldr r0, lbl_08080ac8 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_08080ad6
    movs r0, #4
    bl start_story_text
    b lbl_08080ad6
    .align 2, 0
lbl_08080ac8: .4byte 0x03000020
lbl_08080acc:
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0x90
    lsls r0, r0, #5
    strh r0, [r1]
lbl_08080ad6:
    ldr r4, lbl_08080b44 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x42
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08080af8
    ldr r0, lbl_08080b48 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_08080af8
    bl sub_0806f424
    ldr r1, [r4]
    adds r1, #0x42
    strb r0, [r1]
lbl_08080af8:
    ldr r1, lbl_08080b4c @ =0x0845fd4c
    ldr r4, lbl_08080b44 @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0, #1]
    adds r0, r0, r1
    ldrb r0, [r0]
    movs r1, #8
    bl sub_08080550
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #2
    bne lbl_08080b50
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r4]
    strb r2, [r0, #3]
    ldr r0, [r4]
    strb r2, [r0, #1]
    ldr r0, [r4]
    strb r2, [r0, #0xa]
    ldr r0, [r4]
    movs r1, #0
    strh r2, [r0, #0xc]
    adds r0, #0x42
    strb r1, [r0]
    ldr r0, [r4]
    movs r1, #0x18
    strh r1, [r0, #4]
    movs r1, #0x50
    strh r1, [r0, #6]
    adds r0, #0x44
    strh r2, [r0]
    b lbl_08080b70
    .align 2, 0
lbl_08080b44: .4byte 0x08754bc4
lbl_08080b48: .4byte 0x03000020
lbl_08080b4c: .4byte 0x0845fd4c
lbl_08080b50:
    ldr r1, [r4]
    ldr r0, lbl_08080b64 @ =0x0845f4c4
    str r0, [r1, #0x10]
    bl intro_text_process_oam
    cmp r5, #0
    beq lbl_08080b68
    ldr r1, [r4]
    movs r0, #0
    b lbl_08080b6e
    .align 2, 0
lbl_08080b64: .4byte 0x0845f4c4
lbl_08080b68:
    ldr r1, [r4]
    ldrb r0, [r1, #0xa]
    adds r0, #1
lbl_08080b6e:
    strb r0, [r1, #0xa]
lbl_08080b70:
    movs r0, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start intro_view_of_zebes_process_oam
intro_view_of_zebes_process_oam: @ 0x08080b78
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r5, lbl_08080ba0 @ =0x03000e7c
    ldr r2, lbl_08080ba4 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x3d
    ldrb r1, [r0]
    movs r0, #3
    ands r0, r1
    cmp r0, #1
    bhi lbl_08080ba8
    movs r0, #0x5f
    mov r8, r0
    movs r1, #0x80
    mov ip, r1
    b lbl_08080bb0
    .align 2, 0
lbl_08080ba0: .4byte 0x03000e7c
lbl_08080ba4: .4byte 0x08754bc4
lbl_08080ba8:
    movs r2, #0x60
    mov r8, r2
    movs r0, #0x7f
    mov ip, r0
lbl_08080bb0:
    ldr r4, lbl_08080cac @ =0x0845f7b6
    ldrh r7, [r4]
    adds r4, #2
    movs r6, #0
    cmp r6, r7
    bhs lbl_08080c10
    ldr r1, lbl_08080cb0 @ =0xfffffe00
    mov sl, r1
    ldr r2, lbl_08080cb4 @ =0x000001ff
    mov sb, r2
lbl_08080bc4:
    ldrh r0, [r4]
    adds r4, #2
    strh r0, [r5]
    adds r5, #2
    lsls r3, r6, #3
    ldr r1, lbl_08080cb8 @ =0x03000e7c
    adds r3, r3, r1
    add r0, r8
    strb r0, [r3]
    ldrb r1, [r3, #1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r3, #1]
    ldrh r0, [r4]
    adds r4, #2
    strh r0, [r5]
    adds r5, #2
    mov r2, ip
    adds r1, r0, r2
    mov r0, sb
    ands r1, r0
    ldrh r2, [r3, #2]
    mov r0, sl
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, r7
    blo lbl_08080bc4
lbl_08080c10:
    movs r1, #0x60
    mov r8, r1
    movs r2, #0x80
    mov ip, r2
    ldr r1, lbl_08080cbc @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x3d
    ldrb r1, [r0]
    movs r0, #7
    ands r0, r1
    ldr r4, lbl_08080cc0 @ =0x0845f81a
    cmp r0, #3
    bhi lbl_08080c2c
    ldr r4, lbl_08080cc4 @ =0x0845f7d0
lbl_08080c2c:
    ldrh r0, [r4]
    adds r0, r7, r0
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    adds r4, #2
    cmp r6, r7
    bhs lbl_08080c8e
    ldr r2, lbl_08080cb0 @ =0xfffffe00
    mov sl, r2
    ldr r0, lbl_08080cb4 @ =0x000001ff
    mov sb, r0
lbl_08080c42:
    ldrh r0, [r4]
    adds r4, #2
    strh r0, [r5]
    adds r5, #2
    lsls r3, r6, #3
    ldr r1, lbl_08080cb8 @ =0x03000e7c
    adds r3, r3, r1
    add r0, r8
    strb r0, [r3]
    ldrb r1, [r3, #1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r3, #1]
    ldrh r0, [r4]
    adds r4, #2
    strh r0, [r5]
    adds r5, #2
    mov r2, ip
    adds r1, r0, r2
    mov r0, sb
    ands r1, r0
    ldrh r2, [r3, #2]
    mov r0, sl
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, r7
    blo lbl_08080c42
lbl_08080c8e:
    ldr r1, lbl_08080cc8 @ =0x03001382
    strb r6, [r1]
    ldr r2, lbl_08080cbc @ =0x08754bc4
    ldr r1, [r2]
    adds r1, #0x3d
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08080cac: .4byte 0x0845f7b6
lbl_08080cb0: .4byte 0xfffffe00
lbl_08080cb4: .4byte 0x000001ff
lbl_08080cb8: .4byte 0x03000e7c
lbl_08080cbc: .4byte 0x08754bc4
lbl_08080cc0: .4byte 0x0845f81a
lbl_08080cc4: .4byte 0x0845f7d0
lbl_08080cc8: .4byte 0x03001382

    thumb_func_start intro_view_of_zebes
intro_view_of_zebes: @ 0x08080ccc
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_08080ce8 @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #0xc]
    cmp r0, #2
    beq lbl_08080d18
    cmp r0, #2
    bgt lbl_08080cec
    cmp r0, #0
    beq lbl_08080cf6
    cmp r0, #1
    beq lbl_08080d08
    b lbl_08080da8
    .align 2, 0
lbl_08080ce8: .4byte 0x08754bc4
lbl_08080cec:
    cmp r0, #3
    beq lbl_08080d60
    cmp r0, #0x50
    beq lbl_08080d8c
    b lbl_08080da8
lbl_08080cf6:
    ldr r0, lbl_08080d00 @ =0x08469e6c
    ldr r1, lbl_08080d04 @ =0x06010800
    bl LZ77UncompVRAM
    b lbl_08080da8
    .align 2, 0
lbl_08080d00: .4byte 0x08469e6c
lbl_08080d04: .4byte 0x06010800
lbl_08080d08:
    ldr r0, lbl_08080d14 @ =0x0846b18c
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_08080da8
    .align 2, 0
lbl_08080d14: .4byte 0x0846b18c
lbl_08080d18:
    ldr r0, lbl_08080d44 @ =0x0846e034
    ldr r1, lbl_08080d48 @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_08080d4c @ =0x040000d4
    ldr r3, lbl_08080d50 @ =0x0845fa94
    str r3, [r0]
    movs r1, #0xa0
    lsls r1, r1, #0x13
    str r1, [r0, #4]
    ldr r2, lbl_08080d54 @ =0x800000a0
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_08080d58 @ =0x05000200
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    ldr r1, lbl_08080d5c @ =0x030013b4
    movs r0, #0x10
    strh r0, [r1]
    b lbl_08080da8
    .align 2, 0
lbl_08080d44: .4byte 0x0846e034
lbl_08080d48: .4byte 0x06008000
lbl_08080d4c: .4byte 0x040000d4
lbl_08080d50: .4byte 0x0845fa94
lbl_08080d54: .4byte 0x800000a0
lbl_08080d58: .4byte 0x05000200
lbl_08080d5c: .4byte 0x030013b4
lbl_08080d60:
    ldr r1, lbl_08080d80 @ =0x04000052
    ldr r3, lbl_08080d84 @ =0x00000709
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r1]
    adds r1, #2
    adds r0, #0x40
    strh r0, [r1]
    ldr r0, lbl_08080d88 @ =0x00000229
    bl SoundPlay
    b lbl_08080da8
    .align 2, 0
lbl_08080d80: .4byte 0x04000052
lbl_08080d84: .4byte 0x00000709
lbl_08080d88: .4byte 0x00000229
lbl_08080d8c:
    adds r0, r2, #0
    adds r0, #0x44
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    ldr r0, lbl_08080dd8 @ =0x00000229
    movs r1, #0
    bl SoundFade
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r5, #1
lbl_08080da8:
    ldr r3, lbl_08080ddc @ =0x08754bc4
    ldr r0, [r3]
    ldrb r1, [r0, #0xa]
    adds r2, r1, #1
    strb r2, [r0, #0xa]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #4
    bls lbl_08080dc8
    ldr r1, [r3]
    movs r0, #0
    strb r0, [r1, #0xa]
    ldr r1, lbl_08080de0 @ =0x030013b4
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_08080dc8:
    cmp r5, #0
    beq lbl_08080de4
    ldr r0, [r3]
    movs r1, #0
    strb r1, [r0, #0xa]
    ldr r0, [r3]
    strh r1, [r0, #0xc]
    b lbl_08080dec
    .align 2, 0
lbl_08080dd8: .4byte 0x00000229
lbl_08080ddc: .4byte 0x08754bc4
lbl_08080de0: .4byte 0x030013b4
lbl_08080de4:
    ldr r1, [r3]
    ldrh r0, [r1, #0xc]
    adds r0, #1
    strh r0, [r1, #0xc]
lbl_08080dec:
    bl intro_view_of_zebes_process_oam
    movs r0, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start intro_defeat
intro_defeat: @ 0x08080df8
    push {r4, r5, lr}
    ldr r0, lbl_08080e18 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0xc]
    adds r1, r0, #1
    strh r1, [r2, #0xc]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #1
    beq lbl_08080e4c
    cmp r0, #1
    bgt lbl_08080e1c
    cmp r0, #0
    beq lbl_08080e22
    b lbl_08080e60
    .align 2, 0
lbl_08080e18: .4byte 0x08754bc4
lbl_08080e1c:
    cmp r0, #0xa
    beq lbl_08080e56
    b lbl_08080e60
lbl_08080e22:
    ldr r0, lbl_08080e40 @ =0x0845fdb4
    ldr r1, lbl_08080e44 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, lbl_08080e48 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_08080e60
    movs r0, #5
    bl start_story_text
    b lbl_08080e60
    .align 2, 0
lbl_08080e40: .4byte 0x0845fdb4
lbl_08080e44: .4byte 0x06010000
lbl_08080e48: .4byte 0x03000020
lbl_08080e4c:
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0x80
    lsls r0, r0, #5
    b lbl_08080e5e
lbl_08080e56:
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0x90
    lsls r0, r0, #5
lbl_08080e5e:
    strh r0, [r1]
lbl_08080e60:
    ldr r4, lbl_08080ec4 @ =0x08754bc4
    ldr r0, [r4]
    adds r0, #0x42
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08080e82
    ldr r0, lbl_08080ec8 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #2
    beq lbl_08080e82
    bl sub_0806f424
    ldr r1, [r4]
    adds r1, #0x42
    strb r0, [r1]
lbl_08080e82:
    ldr r1, lbl_08080ecc @ =0x0845fd80
    ldr r4, lbl_08080ec4 @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0, #1]
    adds r0, r0, r1
    ldrb r0, [r0]
    movs r1, #0x20
    bl sub_08080550
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #2
    bne lbl_08080ed0
    ldr r2, [r4]
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #0
    strb r0, [r2]
    ldr r0, [r4]
    strb r1, [r0, #3]
    ldr r0, [r4]
    strb r1, [r0, #1]
    ldr r0, [r4]
    strb r1, [r0, #0xa]
    ldr r0, [r4]
    movs r2, #0
    strh r1, [r0, #0xc]
    adds r0, #0x42
    strb r2, [r0]
    ldr r0, [r4]
    adds r0, #0x44
    strh r1, [r0]
    b lbl_08080ef0
    .align 2, 0
lbl_08080ec4: .4byte 0x08754bc4
lbl_08080ec8: .4byte 0x03000020
lbl_08080ecc: .4byte 0x0845fd80
lbl_08080ed0:
    ldr r1, [r4]
    ldr r0, lbl_08080ee4 @ =0x0845f60a
    str r0, [r1, #0x10]
    bl intro_text_process_oam
    cmp r5, #0
    beq lbl_08080ee8
    ldr r1, [r4]
    movs r0, #0
    b lbl_08080eee
    .align 2, 0
lbl_08080ee4: .4byte 0x0845f60a
lbl_08080ee8:
    ldr r1, [r4]
    ldrb r0, [r1, #0xa]
    adds r0, #1
lbl_08080eee:
    strb r0, [r1, #0xa]
lbl_08080ef0:
    movs r0, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start intro_mother_brain
intro_mother_brain: @ 0x08080ef8
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_08080f14 @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #0xc]
    cmp r0, #2
    beq lbl_08080f50
    cmp r0, #2
    bgt lbl_08080f18
    cmp r0, #0
    beq lbl_08080f2c
    cmp r0, #1
    beq lbl_08080f40
    b lbl_08080fda
    .align 2, 0
lbl_08080f14: .4byte 0x08754bc4
lbl_08080f18:
    cmp r0, #0xbf
    beq lbl_08080fb0
    cmp r0, #0xbf
    bgt lbl_08080f26
    cmp r0, #3
    beq lbl_08080f74
    b lbl_08080fda
lbl_08080f26:
    cmp r0, #0xc0
    beq lbl_08080fc0
    b lbl_08080fda
lbl_08080f2c:
    ldr r0, lbl_08080f38 @ =0x0847406c
    ldr r1, lbl_08080f3c @ =0x06010000
    bl LZ77UncompVRAM
    b lbl_08080fda
    .align 2, 0
lbl_08080f38: .4byte 0x0847406c
lbl_08080f3c: .4byte 0x06010000
lbl_08080f40:
    ldr r0, lbl_08080f4c @ =0x0846e938
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_08080fda
    .align 2, 0
lbl_08080f4c: .4byte 0x0846e938
lbl_08080f50:
    ldr r0, lbl_08080f64 @ =0x08473768
    ldr r1, lbl_08080f68 @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_08080f6c @ =0x030013b4
    strh r5, [r0]
    ldr r1, lbl_08080f70 @ =0x030013b6
    movs r0, #0x60
    strh r0, [r1]
    b lbl_08080fda
    .align 2, 0
lbl_08080f64: .4byte 0x08473768
lbl_08080f68: .4byte 0x06008000
lbl_08080f6c: .4byte 0x030013b4
lbl_08080f70: .4byte 0x030013b6
lbl_08080f74:
    ldr r1, lbl_08080fa0 @ =0x040000d4
    ldr r0, lbl_08080fa4 @ =0x0845fbd4
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08080fa8 @ =0x80000050
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0x80
    lsls r0, r0, #1
    strh r0, [r1]
    ldr r0, lbl_08080fac @ =0x0000022a
    bl SoundPlay
    movs r0, #0x39
    bl SoundPlay
    b lbl_08080fda
    .align 2, 0
lbl_08080fa0: .4byte 0x040000d4
lbl_08080fa4: .4byte 0x0845fbd4
lbl_08080fa8: .4byte 0x80000050
lbl_08080fac: .4byte 0x0000022a
lbl_08080fb0:
    ldr r0, lbl_08080fbc @ =0x0000022a
    movs r1, #0
    bl SoundFade
    b lbl_08080fda
    .align 2, 0
lbl_08080fbc: .4byte 0x0000022a
lbl_08080fc0:
    ldr r0, lbl_08080ffc @ =vblank_code_during_intro_fuzz
    bl CallbackSetVBlank
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x44
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r2]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r5, #1
lbl_08080fda:
    ldr r0, lbl_08081000 @ =0x08754bc4
    ldr r1, [r0]
    ldrh r1, [r1, #0xc]
    adds r2, r0, #0
    cmp r1, #0x28
    bls lbl_08080ff2
    ldr r1, lbl_08081004 @ =0x030013b6
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08080ff2
    subs r0, #1
    strh r0, [r1]
lbl_08080ff2:
    cmp r5, #0
    beq lbl_08081008
    ldr r1, [r2]
    movs r0, #0
    b lbl_0808100e
    .align 2, 0
lbl_08080ffc: .4byte vblank_code_during_intro_fuzz
lbl_08081000: .4byte 0x08754bc4
lbl_08081004: .4byte 0x030013b6
lbl_08081008:
    ldr r1, [r2]
    ldrh r0, [r1, #0xc]
    adds r0, #1
lbl_0808100e:
    strh r0, [r1, #0xc]
    movs r0, #0
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start intro_fuzz_process_oam
intro_fuzz_process_oam: @ 0x08081018
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r5, lbl_0808108c @ =0x03000e7c
    ldr r4, lbl_08081090 @ =0x0845f8ac
    ldrh r7, [r4]
    adds r4, #2
    movs r0, #0x80
    mov sl, r0
    movs r6, #0
    cmp r6, r7
    bhs lbl_08081078
    mov sb, r5
    ldr r0, lbl_08081094 @ =0x000001ff
    mov ip, r0
    ldr r0, lbl_08081098 @ =0xfffffe00
    mov r8, r0
lbl_0808103e:
    ldrh r0, [r4]
    adds r4, #2
    strh r0, [r5]
    adds r5, #2
    lsls r3, r6, #3
    add r3, sb
    adds r0, #0x80
    strb r0, [r3]
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    add r1, sl
    mov r0, ip
    ands r1, r0
    ldrh r2, [r3, #2]
    mov r0, r8
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, r7
    blo lbl_0808103e
lbl_08081078:
    ldr r0, lbl_0808109c @ =0x03001382
    strb r6, [r0]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808108c: .4byte 0x03000e7c
lbl_08081090: .4byte 0x0845f8ac
lbl_08081094: .4byte 0x000001ff
lbl_08081098: .4byte 0xfffffe00
lbl_0808109c: .4byte 0x03001382

    thumb_func_start intro_fuzz
intro_fuzz: @ 0x080810a0
    push {r4, lr}
    ldr r0, lbl_080810c0 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #0xc]
    adds r1, r0, #1
    strh r1, [r2, #0xc]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #1
    beq lbl_080810e8
    cmp r0, #1
    bgt lbl_080810c4
    cmp r0, #0
    beq lbl_080810da
    b lbl_080810f2
    .align 2, 0
lbl_080810c0: .4byte 0x08754bc4
lbl_080810c4:
    cmp r0, #0x20
    beq lbl_080810ce
    cmp r0, #0x60
    beq lbl_080810d6
    b lbl_080810f2
lbl_080810ce:
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0
    b lbl_080810f0
lbl_080810d6:
    movs r0, #1
    b lbl_08081168
lbl_080810da:
    ldr r0, lbl_080810e4 @ =0x0000022b
    bl SoundPlay
    b lbl_080810f2
    .align 2, 0
lbl_080810e4: .4byte 0x0000022b
lbl_080810e8:
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #0x80
    lsls r0, r0, #5
lbl_080810f0:
    strh r0, [r1]
lbl_080810f2:
    ldr r1, lbl_0808110c @ =0x08754bc4
    ldr r3, [r1]
    ldrb r0, [r3, #0xa]
    movs r2, #7
    ands r2, r0
    adds r4, r1, #0
    cmp r2, #2
    beq lbl_08081128
    cmp r2, #2
    bgt lbl_08081110
    cmp r2, #0
    beq lbl_0808111a
    b lbl_0808115a
    .align 2, 0
lbl_0808110c: .4byte 0x08754bc4
lbl_08081110:
    cmp r2, #4
    beq lbl_08081138
    cmp r2, #6
    beq lbl_08081148
    b lbl_0808115a
lbl_0808111a:
    ldr r1, lbl_08081120 @ =0x040000d4
    ldr r0, lbl_08081124 @ =0x0845fc74
    b lbl_0808114c
    .align 2, 0
lbl_08081120: .4byte 0x040000d4
lbl_08081124: .4byte 0x0845fc74
lbl_08081128:
    ldr r1, lbl_08081130 @ =0x040000d4
    ldr r0, lbl_08081134 @ =0x0845fcb4
    b lbl_0808114c
    .align 2, 0
lbl_08081130: .4byte 0x040000d4
lbl_08081134: .4byte 0x0845fcb4
lbl_08081138:
    ldr r1, lbl_08081140 @ =0x040000d4
    ldr r0, lbl_08081144 @ =0x0845fcf4
    b lbl_0808114c
    .align 2, 0
lbl_08081140: .4byte 0x040000d4
lbl_08081144: .4byte 0x0845fcf4
lbl_08081148:
    ldr r1, lbl_08081170 @ =0x040000d4
    ldr r0, lbl_08081174 @ =0x0845fd34
lbl_0808114c:
    str r0, [r1]
    adds r0, r3, #0
    adds r0, #0x14
    str r0, [r1, #4]
    ldr r0, lbl_08081178 @ =0x80000010
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_0808115a:
    ldr r1, [r4]
    ldrb r0, [r1, #0xa]
    adds r0, #1
    strb r0, [r1, #0xa]
    bl intro_fuzz_process_oam
    movs r0, #0
lbl_08081168:
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08081170: .4byte 0x040000d4
lbl_08081174: .4byte 0x0845fd34
lbl_08081178: .4byte 0x80000010

    thumb_func_start intro_main
intro_main: @ 0x0808117c
    push {r4, r5, lr}
    movs r5, #0
    ldr r0, lbl_08081198 @ =0x03001382
    strb r5, [r0]
    ldr r4, lbl_0808119c @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r4, r1]
    cmp r0, #1
    beq lbl_080811b0
    cmp r0, #1
    bgt lbl_080811a0
    cmp r0, #0
    beq lbl_080811aa
    b lbl_0808123e
    .align 2, 0
lbl_08081198: .4byte 0x03001382
lbl_0808119c: .4byte 0x03000c72
lbl_080811a0:
    cmp r0, #2
    beq lbl_080811d8
    cmp r0, #3
    beq lbl_0808123c
    b lbl_0808123e
lbl_080811aa:
    bl intro_init
    b lbl_080811cc
lbl_080811b0:
    ldr r1, lbl_080811c0 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_080811c4
    subs r0, #1
    strh r0, [r1]
    b lbl_0808123e
    .align 2, 0
lbl_080811c0: .4byte 0x030013ae
lbl_080811c4:
    ldr r0, lbl_080811d4 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x46
    strh r5, [r0]
lbl_080811cc:
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    b lbl_0808123e
    .align 2, 0
lbl_080811d4: .4byte 0x08754bc4
lbl_080811d8:
    ldr r0, lbl_08081200 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #0xb
    ands r0, r1
    cmp r0, #0
    beq lbl_08081208
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    ldr r1, lbl_08081204 @ =0x03000c74
    movs r0, #1
    strb r0, [r1]
    movs r0, #0xa
    bl sub_08002acc
    movs r0, #0xa
    bl FadeMusic
    b lbl_0808122a
    .align 2, 0
lbl_08081200: .4byte 0x03001380
lbl_08081204: .4byte 0x03000c74
lbl_08081208:
    ldr r1, lbl_08081230 @ =0x08760ca8
    ldr r0, lbl_08081234 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0808122a
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    ldr r0, lbl_08081238 @ =0x03000c74
    strb r5, [r0]
lbl_0808122a:
    bl ResetFreeOAM
    b lbl_0808123e
    .align 2, 0
lbl_08081230: .4byte 0x08760ca8
lbl_08081234: .4byte 0x08754bc4
lbl_08081238: .4byte 0x03000c74
lbl_0808123c:
    movs r5, #1
lbl_0808123e:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start vblank_code_during_intro
vblank_code_during_intro: @ 0x08081248
    push {lr}
    ldr r1, lbl_080812e4 @ =0x040000d4
    ldr r0, lbl_080812e8 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_080812ec @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldr r0, lbl_080812f0 @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0xc0
    ldrh r0, [r0]
    strh r0, [r2]
    adds r2, #0x50
    adds r1, #0xc2
    ldrh r0, [r1]
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_080812f4 @ =0x03000088
    ldrb r1, [r0, #5]
    lsls r1, r1, #8
    ldrb r0, [r0, #4]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_080812f8 @ =0x04000054
    ldr r0, lbl_080812fc @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    subs r1, #0x44
    ldr r0, lbl_08081300 @ =0x030013b4
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08081304 @ =0x030013b6
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08081308 @ =0x030013b8
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0808130c @ =0x030013ba
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08081310 @ =0x030013bc
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08081314 @ =0x030013be
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08081318 @ =0x030013c0
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_0808131c @ =0x030013c2
    ldrh r0, [r0]
    lsrs r0, r0, #2
    strh r0, [r1]
    bl sub_0805dd5c
    pop {r0}
    bx r0
    .align 2, 0
lbl_080812e4: .4byte 0x040000d4
lbl_080812e8: .4byte 0x03000e7c
lbl_080812ec: .4byte 0x84000100
lbl_080812f0: .4byte 0x08754bc4
lbl_080812f4: .4byte 0x03000088
lbl_080812f8: .4byte 0x04000054
lbl_080812fc: .4byte 0x030013ae
lbl_08081300: .4byte 0x030013b4
lbl_08081304: .4byte 0x030013b6
lbl_08081308: .4byte 0x030013b8
lbl_0808130c: .4byte 0x030013ba
lbl_08081310: .4byte 0x030013bc
lbl_08081314: .4byte 0x030013be
lbl_08081318: .4byte 0x030013c0
lbl_0808131c: .4byte 0x030013c2

    thumb_func_start sub_08081320
sub_08081320: @ 0x08081320
    ldr r1, lbl_080813c8 @ =0x040000d4
    ldr r0, lbl_080813cc @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_080813d0 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xd4
    ldr r0, lbl_080813d4 @ =0x08754bc4
    ldr r0, [r0]
    mov ip, r0
    adds r0, #0xc0
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #0x50
    mov r0, ip
    adds r0, #0xc2
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r2, lbl_080813d8 @ =0x04000052
    ldr r0, lbl_080813dc @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_080813e0 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_080813e4 @ =0x04000054
    ldr r0, lbl_080813e8 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r3, lbl_080813ec @ =0x04000010
    ldr r0, lbl_080813f0 @ =0x030013b4
    ldrh r2, [r0]
    ldr r1, lbl_080813f4 @ =0x000001ff
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    ldr r2, lbl_080813f8 @ =0x04000012
    ldr r0, lbl_080813fc @ =0x030013b6
    ldrb r0, [r0]
    strh r0, [r2]
    adds r3, #4
    ldr r0, lbl_08081400 @ =0x030013b8
    ldrh r2, [r0]
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    ldr r2, lbl_08081404 @ =0x04000016
    ldr r0, lbl_08081408 @ =0x030013ba
    ldrb r0, [r0]
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0808140c @ =0x030013bc
    ldrh r0, [r0]
    ands r1, r0
    strh r1, [r2]
    ldr r1, lbl_08081410 @ =0x0400001a
    ldr r0, lbl_08081414 @ =0x030013be
    ldrb r0, [r0]
    strh r0, [r1]
    adds r2, #0x28
    mov r0, ip
    adds r0, #0xc4
    ldrh r0, [r0]
    lsls r0, r0, #8
    mov r1, ip
    adds r1, #0xc6
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    adds r2, #4
    mov r0, ip
    adds r0, #0xc8
    ldrh r0, [r0]
    lsls r0, r0, #8
    mov r1, ip
    adds r1, #0xca
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    bx lr
    .align 2, 0
lbl_080813c8: .4byte 0x040000d4
lbl_080813cc: .4byte 0x03000e7c
lbl_080813d0: .4byte 0x84000100
lbl_080813d4: .4byte 0x08754bc4
lbl_080813d8: .4byte 0x04000052
lbl_080813dc: .4byte 0x030013b2
lbl_080813e0: .4byte 0x030013b0
lbl_080813e4: .4byte 0x04000054
lbl_080813e8: .4byte 0x030013ae
lbl_080813ec: .4byte 0x04000010
lbl_080813f0: .4byte 0x030013b4
lbl_080813f4: .4byte 0x000001ff
lbl_080813f8: .4byte 0x04000012
lbl_080813fc: .4byte 0x030013b6
lbl_08081400: .4byte 0x030013b8
lbl_08081404: .4byte 0x04000016
lbl_08081408: .4byte 0x030013ba
lbl_0808140c: .4byte 0x030013bc
lbl_08081410: .4byte 0x0400001a
lbl_08081414: .4byte 0x030013be

    thumb_func_start sub_08081418
sub_08081418: @ 0x08081418
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldr r0, lbl_080814c0 @ =0x08754bc4
    ldr r1, [r0]
    adds r0, r1, #0
    adds r0, #0xc0
    ldrh r0, [r0]
    strh r0, [r2]
    adds r2, #0x50
    adds r1, #0xc2
    ldrh r0, [r1]
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_080814c4 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_080814c8 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_080814cc @ =0x04000020
    ldr r0, lbl_080814d0 @ =0x030013a6
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080814d4 @ =0x030013a8
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080814d8 @ =0x030013aa
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080814dc @ =0x030013ac
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080814e0 @ =0x03001394
    ldr r0, [r0]
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_080814e4 @ =0x0fff0000
    ands r0, r2
    asrs r0, r0, #0x10
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_080814e8 @ =0x03001398
    ldr r0, [r0]
    strh r0, [r1]
    adds r1, #2
    ands r0, r2
    asrs r0, r0, #0x10
    strh r0, [r1]
    ldr r3, lbl_080814ec @ =0x04000010
    ldr r0, lbl_080814f0 @ =0x030013b4
    ldrh r2, [r0]
    ldr r1, lbl_080814f4 @ =0x000001ff
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    ldr r2, lbl_080814f8 @ =0x04000012
    ldr r0, lbl_080814fc @ =0x030013b6
    ldrb r0, [r0]
    strh r0, [r2]
    adds r3, #4
    ldr r0, lbl_08081500 @ =0x030013b8
    ldrh r2, [r0]
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    ldr r2, lbl_08081504 @ =0x04000016
    ldr r0, lbl_08081508 @ =0x030013ba
    ldrb r0, [r0]
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_0808150c @ =0x030013bc
    ldrh r0, [r0]
    ands r1, r0
    strh r1, [r2]
    ldr r1, lbl_08081510 @ =0x0400001a
    ldr r0, lbl_08081514 @ =0x030013be
    ldrb r0, [r0]
    strh r0, [r1]
    bx lr
    .align 2, 0
lbl_080814c0: .4byte 0x08754bc4
lbl_080814c4: .4byte 0x030013b2
lbl_080814c8: .4byte 0x030013b0
lbl_080814cc: .4byte 0x04000020
lbl_080814d0: .4byte 0x030013a6
lbl_080814d4: .4byte 0x030013a8
lbl_080814d8: .4byte 0x030013aa
lbl_080814dc: .4byte 0x030013ac
lbl_080814e0: .4byte 0x03001394
lbl_080814e4: .4byte 0x0fff0000
lbl_080814e8: .4byte 0x03001398
lbl_080814ec: .4byte 0x04000010
lbl_080814f0: .4byte 0x030013b4
lbl_080814f4: .4byte 0x000001ff
lbl_080814f8: .4byte 0x04000012
lbl_080814fc: .4byte 0x030013b6
lbl_08081500: .4byte 0x030013b8
lbl_08081504: .4byte 0x04000016
lbl_08081508: .4byte 0x030013ba
lbl_0808150c: .4byte 0x030013bc
lbl_08081510: .4byte 0x0400001a
lbl_08081514: .4byte 0x030013be

    thumb_func_start tourian_escape_process_oam
tourian_escape_process_oam: @ 0x08081518
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r5, lbl_0808166c @ =0x03000e7c
    movs r0, #0
    mov ip, r0
    movs r7, #0
    ldr r0, lbl_08081670 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xbe
    ldrb r0, [r0]
    cmp r0, #2
    bls lbl_080815a2
    ldr r4, lbl_08081674 @ =0x08375cc4
    ldrh r1, [r4]
    adds r4, #2
    movs r0, #0xff
    ands r1, r0
    mov ip, r1
    movs r0, #0x80
    mov sb, r0
    movs r1, #0x50
    mov r8, r1
    cmp r7, ip
    bhs lbl_080815a2
    ldr r0, lbl_08081678 @ =0xfffffe00
    mov sl, r0
    ldr r6, lbl_0808167c @ =0x000001ff
lbl_08081556:
    ldrh r2, [r4]
    adds r4, #2
    strh r2, [r5]
    adds r5, #2
    lsls r3, r7, #3
    ldr r1, lbl_0808166c @ =0x03000e7c
    adds r3, r3, r1
    ldrb r1, [r3, #1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r3, #1]
    mov r1, r8
    adds r0, r2, r1
    strb r0, [r3]
    ldrh r2, [r4]
    adds r4, #2
    strh r2, [r5]
    adds r5, #2
    mov r0, sb
    adds r1, r2, r0
    ands r1, r6
    ldrh r2, [r3, #2]
    mov r0, sl
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    adds r0, r7, #1
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    cmp r7, ip
    blo lbl_08081556
lbl_080815a2:
    movs r6, #0
lbl_080815a4:
    ldr r1, lbl_08081670 @ =0x08754bc4
    ldr r3, [r1]
    adds r0, r3, #0
    adds r0, #8
    adds r0, r0, r6
    ldrb r0, [r0]
    adds r1, r6, #1
    str r1, [sp]
    cmp r0, #0
    beq lbl_0808164c
    lsls r1, r6, #2
    adds r0, r3, #0
    adds r0, #0x14
    adds r0, r0, r1
    ldr r4, [r0]
    ldrh r2, [r4]
    adds r4, #2
    movs r0, #0xff
    ands r2, r0
    mov r1, ip
    adds r0, r1, r2
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov ip, r0
    lsls r1, r6, #1
    adds r0, r3, #0
    adds r0, #0x50
    adds r0, r0, r1
    ldrh r0, [r0]
    mov sb, r0
    adds r0, r3, #0
    adds r0, #0x64
    adds r0, r0, r1
    ldrh r0, [r0]
    mov r8, r0
    cmp r7, ip
    bhs lbl_0808164c
    ldr r0, lbl_0808167c @ =0x000001ff
    mov sl, r0
lbl_080815f2:
    ldrh r2, [r4]
    adds r4, #2
    strh r2, [r5]
    adds r5, #2
    lsls r3, r7, #3
    ldr r1, lbl_0808166c @ =0x03000e7c
    adds r3, r3, r1
    mov r1, r8
    adds r0, r2, r1
    strb r0, [r3]
    ldrh r2, [r4]
    adds r4, #2
    strh r2, [r5]
    adds r5, #2
    mov r0, sb
    adds r1, r2, r0
    mov r0, sl
    ands r1, r0
    ldrh r2, [r3, #2]
    ldr r0, lbl_08081678 @ =0xfffffe00
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    ldr r1, lbl_08081670 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x78
    adds r0, r0, r6
    ldrb r1, [r0]
    movs r0, #3
    ands r1, r0
    lsls r1, r1, #2
    ldrb r2, [r3, #5]
    subs r0, #0x10
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #5]
    adds r5, #4
    adds r0, r7, #1
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    cmp r7, ip
    blo lbl_080815f2
lbl_0808164c:
    ldr r1, [sp]
    lsls r0, r1, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #9
    bls lbl_080815a4
    ldr r0, lbl_08081680 @ =0x03001382
    strb r7, [r0]
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808166c: .4byte 0x03000e7c
lbl_08081670: .4byte 0x08754bc4
lbl_08081674: .4byte 0x08375cc4
lbl_08081678: .4byte 0xfffffe00
lbl_0808167c: .4byte 0x000001ff
lbl_08081680: .4byte 0x03001382

    thumb_func_start tourian_escape_samus_surrounded_calculate_bg2_pos
tourian_escape_samus_surrounded_calculate_bg2_pos: @ 0x08081684
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    ldr r6, lbl_08081760 @ =0x0808c71c
    ldr r5, lbl_08081764 @ =0x030013a4
    ldrh r0, [r5]
    adds r0, #0x40
    lsls r0, r0, #1
    adds r0, r0, r6
    movs r1, #0
    ldrsh r4, [r0, r1]
    ldr r2, lbl_08081768 @ =0x030013a0
    mov r8, r2
    movs r1, #0
    ldrsh r0, [r2, r1]
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    adds r0, r4, #0
    bl FixedMultiplication
    ldr r2, lbl_0808176c @ =0x030013a6
    mov sb, r2
    strh r0, [r2]
    ldrh r0, [r5]
    lsls r0, r0, #1
    adds r0, r0, r6
    movs r1, #0
    ldrsh r4, [r0, r1]
    mov r2, r8
    movs r1, #0
    ldrsh r0, [r2, r1]
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    adds r0, r4, #0
    bl FixedMultiplication
    ldr r2, lbl_08081770 @ =0x030013a8
    mov r8, r2
    strh r0, [r2]
    ldrh r0, [r5]
    lsls r0, r0, #1
    adds r0, r0, r6
    ldrh r4, [r0]
    rsbs r4, r4, #0
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    ldr r0, lbl_08081774 @ =0x030013a2
    movs r6, #0
    ldrsh r0, [r0, r6]
    bl FixedInverse
    adds r1, r0, #0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    adds r0, r4, #0
    bl FixedMultiplication
    ldr r5, lbl_08081778 @ =0x030013aa
    strh r0, [r5]
    ldr r3, lbl_0808177c @ =0x030013ac
    mov r1, sb
    ldrh r0, [r1]
    strh r0, [r3]
    ldr r4, lbl_08081780 @ =0x03001394
    mov r2, r8
    movs r6, #0
    ldrsh r1, [r2, r6]
    lsls r0, r1, #2
    adds r0, r0, r1
    lsls r0, r0, #4
    movs r1, #0xf0
    lsls r1, r1, #7
    subs r1, r1, r0
    mov r0, sb
    movs r6, #0
    ldrsh r2, [r0, r6]
    lsls r0, r2, #4
    subs r0, r0, r2
    lsls r0, r0, #3
    subs r1, r1, r0
    str r1, [r4]
    ldr r4, lbl_08081784 @ =0x03001398
    movs r0, #0
    ldrsh r1, [r3, r0]
    lsls r0, r1, #2
    adds r0, r0, r1
    lsls r0, r0, #4
    movs r1, #0xa0
    lsls r1, r1, #7
    subs r1, r1, r0
    movs r6, #0
    ldrsh r2, [r5, r6]
    lsls r0, r2, #4
    subs r0, r0, r2
    lsls r0, r0, #3
    subs r1, r1, r0
    str r1, [r4]
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08081760: .4byte 0x0808c71c
lbl_08081764: .4byte 0x030013a4
lbl_08081768: .4byte 0x030013a0
lbl_0808176c: .4byte 0x030013a6
lbl_08081770: .4byte 0x030013a8
lbl_08081774: .4byte 0x030013a2
lbl_08081778: .4byte 0x030013aa
lbl_0808177c: .4byte 0x030013ac
lbl_08081780: .4byte 0x03001394
lbl_08081784: .4byte 0x03001398

    thumb_func_start sub_08081788
sub_08081788: @ 0x08081788
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov sl, r0
    movs r5, #4
    ldr r7, lbl_080817cc @ =0x08754bc4
    ldr r0, lbl_080817d0 @ =0x0847ce20
    mov sb, r0
    movs r4, #8
    movs r1, #0x10
    mov r8, r1
lbl_080817a6:
    ldr r2, [r7]
    adds r0, r2, #0
    adds r0, #0x46
    adds r0, r0, r5
    ldrb r0, [r0]
    lsrs r3, r0, #2
    adds r0, r2, #0
    adds r0, #8
    adds r0, r0, r5
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080817d8
    adds r1, r2, #0
    adds r1, #0x14
    add r1, r8
    ldr r2, lbl_080817d4 @ =0x0847ce00
    b lbl_080817e0
    .align 2, 0
lbl_080817cc: .4byte 0x08754bc4
lbl_080817d0: .4byte 0x0847ce20
lbl_080817d4: .4byte 0x0847ce00
lbl_080817d8:
    adds r1, r2, #0
    adds r1, #0x14
    add r1, r8
    ldr r2, lbl_0808180c @ =0x0847ce10
lbl_080817e0:
    lsls r0, r3, #2
    adds r0, r0, r2
    ldr r0, [r0]
    str r0, [r1]
    movs r6, #0
    mov r0, sl
    cmp r0, #0
    bne lbl_08081810
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x50
    adds r3, r0, r4
    ldrh r2, [r3]
    cmp r2, #0xff
    bhi lbl_08081830
    adds r0, #0x46
    adds r0, r0, r4
    ldrh r0, [r0]
    adds r0, r2, r0
    strh r0, [r3]
    b lbl_0808182c
    .align 2, 0
lbl_0808180c: .4byte 0x0847ce10
lbl_08081810:
    ldr r1, [r7]
    adds r0, r1, #0
    adds r0, #0x64
    adds r3, r0, r4
    ldrh r2, [r3]
    cmp r2, #0xfb
    bhi lbl_0808182a
    adds r0, #0x32
    adds r0, r0, r4
    ldrh r0, [r0]
    subs r0, r2, r0
    strh r0, [r3]
    b lbl_0808182c
lbl_0808182a:
    movs r6, #1
lbl_0808182c:
    cmp r6, #0
    beq lbl_0808189a
lbl_08081830:
    ldr r2, [r7]
    adds r2, #8
    adds r2, r2, r5
    ldrb r0, [r2]
    movs r1, #3
    eors r0, r1
    strb r0, [r2]
    ldr r2, [r7]
    adds r2, #0x3c
    adds r2, r2, r5
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #0xf
    ands r0, r1
    strb r0, [r2]
    ldr r1, [r7]
    mov ip, r1
    mov r2, ip
    adds r2, #0x50
    adds r2, r2, r4
    mov r3, ip
    adds r3, #0x3c
    adds r3, r3, r5
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    add r0, sb
    ldrh r0, [r0]
    strh r0, [r2]
    mov r2, ip
    adds r2, #0x64
    adds r2, r2, r4
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    mov r1, sb
    adds r1, #2
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r2]
    mov r2, ip
    adds r2, #0x96
    adds r2, r2, r4
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    ldr r1, lbl_080818c8 @ =0x0847ce24
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r2]
lbl_0808189a:
    ldr r0, [r7]
    adds r0, #0x46
    adds r0, r0, r5
    ldrb r1, [r0]
    adds r1, #1
    movs r2, #0xf
    ands r1, r2
    strb r1, [r0]
    adds r4, #2
    movs r0, #4
    add r8, r0
    adds r5, #1
    cmp r5, #9
    bgt lbl_080818b8
    b lbl_080817a6
lbl_080818b8:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080818c8: .4byte 0x0847ce24

    thumb_func_start sub_080818cc
sub_080818cc: @ 0x080818cc
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x10
    ldr r5, lbl_08081ac4 @ =0x03000e7c
    ldr r0, lbl_08081ac8 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    cmp r0, #0
    beq lbl_08081966
    ldr r4, [r1, #0x14]
    ldrh r0, [r4]
    mov sb, r0
    adds r4, #2
    movs r0, #0xff
    mov r2, sb
    ands r2, r0
    mov sb, r2
    adds r0, r1, #0
    adds r0, #0x64
    ldrh r0, [r0]
    mov ip, r0
    adds r0, r1, #0
    adds r0, #0x50
    ldrh r6, [r0]
    movs r7, #0
    cmp r7, sb
    bhs lbl_08081954
    lsls r6, r6, #0x10
    mov r8, r6
    mov r3, ip
    lsls r6, r3, #0x10
lbl_08081910:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    ldr r0, lbl_08081ac8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x82
    movs r1, #0
    ldrsh r0, [r0, r1]
    str r0, [sp]
    movs r0, #1
    str r0, [sp, #4]
    movs r0, #0
    str r0, [sp, #8]
    adds r0, r7, #0
    mov r2, r8
    asrs r1, r2, #0x10
    asrs r2, r6, #0x10
    movs r3, #0
    bl sub_0807fd64
    adds r0, r7, #1
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    cmp r7, sb
    blo lbl_08081910
lbl_08081954:
    ldr r0, lbl_08081ac8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x82
    movs r3, #0
    ldrsh r1, [r0, r3]
    movs r0, #0
    movs r2, #0
    bl sub_0807ff58
lbl_08081966:
    ldr r0, lbl_08081ac8 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r0, [r2, #9]
    cmp r0, #0
    beq lbl_080819f4
    ldr r4, [r2, #0x18]
    ldrh r1, [r4]
    adds r4, #2
    movs r0, #0xff
    ands r1, r0
    mov r3, sb
    adds r0, r3, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov sb, r0
    adds r0, r2, #0
    adds r0, #0x66
    ldrh r0, [r0]
    mov ip, r0
    adds r0, r2, #0
    adds r0, #0x52
    ldrh r6, [r0]
    cmp r7, sb
    bhs lbl_080819e2
    lsls r6, r6, #0x10
    mov r8, r6
    mov r0, ip
    lsls r6, r0, #0x10
lbl_0808199e:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    ldr r0, lbl_08081ac8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x84
    movs r1, #0
    ldrsh r0, [r0, r1]
    str r0, [sp]
    movs r0, #1
    str r0, [sp, #4]
    movs r0, #4
    str r0, [sp, #8]
    adds r0, r7, #0
    mov r2, r8
    asrs r1, r2, #0x10
    asrs r2, r6, #0x10
    movs r3, #0
    bl sub_0807fd64
    adds r0, r7, #1
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    cmp r7, sb
    blo lbl_0808199e
lbl_080819e2:
    ldr r0, lbl_08081ac8 @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x84
    movs r3, #0
    ldrsh r1, [r0, r3]
    movs r0, #0
    movs r2, #0x10
    bl sub_0807ff58
lbl_080819f4:
    movs r0, #4
    mov r8, r0
lbl_080819f8:
    ldr r1, lbl_08081ac8 @ =0x08754bc4
    ldr r2, [r1]
    adds r0, r2, #0
    adds r0, #8
    add r0, r8
    ldrb r0, [r0]
    mov r3, r8
    adds r3, #1
    str r3, [sp, #0xc]
    cmp r0, #0
    beq lbl_08081aa4
    mov r0, r8
    lsls r1, r0, #2
    adds r0, r2, #0
    adds r0, #0x14
    adds r0, r0, r1
    ldr r4, [r0]
    ldrh r1, [r4]
    adds r4, #2
    movs r0, #0xff
    ands r1, r0
    mov r3, sb
    adds r0, r3, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov sb, r0
    mov r0, r8
    lsls r1, r0, #1
    adds r0, r2, #0
    adds r0, #0x64
    adds r0, r0, r1
    ldrh r0, [r0]
    mov ip, r0
    adds r0, r2, #0
    adds r0, #0x50
    adds r0, r0, r1
    ldrh r6, [r0]
    cmp r7, sb
    bhs lbl_08081aa4
    ldr r1, lbl_08081acc @ =0x000001ff
    mov sl, r1
lbl_08081a4a:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    lsls r3, r7, #3
    ldr r2, lbl_08081ac4 @ =0x03000e7c
    adds r3, r3, r2
    mov r2, ip
    adds r0, r1, r2
    strb r0, [r3]
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    adds r1, r1, r6
    mov r0, sl
    ands r1, r0
    ldrh r2, [r3, #2]
    ldr r0, lbl_08081ad0 @ =0xfffffe00
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    ldr r1, lbl_08081ac8 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x78
    add r0, r8
    ldrb r1, [r0]
    movs r2, #3
    ands r1, r2
    lsls r1, r1, #2
    ldrb r2, [r3, #5]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #5]
    adds r5, #4
    adds r0, r7, #1
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    cmp r7, sb
    blo lbl_08081a4a
lbl_08081aa4:
    ldr r3, [sp, #0xc]
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    cmp r0, #9
    bls lbl_080819f8
    ldr r0, lbl_08081ad4 @ =0x03001382
    strb r7, [r0]
    add sp, #0x10
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08081ac4: .4byte 0x03000e7c
lbl_08081ac8: .4byte 0x08754bc4
lbl_08081acc: .4byte 0x000001ff
lbl_08081ad0: .4byte 0xfffffe00
lbl_08081ad4: .4byte 0x03001382

    thumb_func_start sub_08081ad8
sub_08081ad8: @ 0x08081ad8
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r2, lbl_08081b04 @ =0x08754bc4
    ldr r3, [r2]
    adds r0, r3, #0
    adds r0, #0x46
    ldrb r1, [r0]
    movs r0, #3
    ands r0, r1
    cmp r0, #1
    bhi lbl_08081b08
    adds r1, r3, #0
    adds r1, #0x50
    movs r0, #0x6d
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #0x46
    b lbl_08081b14
    .align 2, 0
lbl_08081b04: .4byte 0x08754bc4
lbl_08081b08:
    adds r1, r3, #0
    adds r1, #0x50
    movs r0, #0x6c
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #0x47
lbl_08081b14:
    strh r0, [r1]
    ldr r1, lbl_08081cd4 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x46
    ldrb r1, [r0]
    adds r1, #1
    strb r1, [r0]
    ldr r4, lbl_08081cd4 @ =0x08754bc4
    ldr r1, [r4]
    ldrb r0, [r1, #9]
    cmp r0, #0
    beq lbl_08081b88
    adds r0, r1, #0
    adds r0, #0x47
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x1a
    cmp r4, #7
    bls lbl_08081b5a
    ldr r7, lbl_08081cd4 @ =0x08754bc4
    ldr r0, [r7]
    adds r0, #0x47
    movs r1, #0
    strb r1, [r0]
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0x52
    movs r0, #0x6d
    strh r0, [r2]
    adds r1, #0x66
    movs r0, #0x46
    strh r0, [r1]
    movs r4, #0
lbl_08081b5a:
    ldr r0, lbl_08081cd4 @ =0x08754bc4
    ldr r2, [r0]
    ldr r1, lbl_08081cd8 @ =0x0847cea0
    lsls r0, r4, #2
    adds r0, r0, r1
    ldr r0, [r0]
    str r0, [r2, #0x18]
    adds r3, r2, #0
    adds r3, #0x52
    ldr r0, lbl_08081cdc @ =0x0847ce80
    lsls r1, r4, #1
    adds r0, r1, r0
    ldrh r0, [r0]
    ldrh r4, [r3]
    adds r0, r0, r4
    strh r0, [r3]
    adds r2, #0x66
    ldr r0, lbl_08081ce0 @ =0x0847ce90
    adds r1, r1, r0
    ldrh r0, [r1]
    ldrh r7, [r2]
    adds r0, r0, r7
    strh r0, [r2]
lbl_08081b88:
    ldr r0, lbl_08081cd4 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #0xa]
    cmp r0, #0
    beq lbl_08081bf0
    adds r0, r1, #0
    adds r0, #0x48
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x1a
    cmp r4, #7
    bls lbl_08081bc2
    ldr r1, lbl_08081cd4 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x48
    movs r1, #0
    strb r1, [r0]
    ldr r4, lbl_08081cd4 @ =0x08754bc4
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x54
    movs r0, #0x6d
    strh r0, [r2]
    adds r1, #0x68
    movs r0, #0x46
    strh r0, [r1]
    movs r4, #0
lbl_08081bc2:
    ldr r7, lbl_08081cd4 @ =0x08754bc4
    ldr r2, [r7]
    ldr r1, lbl_08081cd8 @ =0x0847cea0
    lsls r0, r4, #2
    adds r0, r0, r1
    ldr r0, [r0]
    str r0, [r2, #0x1c]
    adds r3, r2, #0
    adds r3, #0x54
    ldr r0, lbl_08081cdc @ =0x0847ce80
    lsls r1, r4, #1
    adds r0, r1, r0
    ldrh r0, [r0]
    ldrh r4, [r3]
    adds r0, r0, r4
    strh r0, [r3]
    adds r2, #0x68
    ldr r0, lbl_08081ce0 @ =0x0847ce90
    adds r1, r1, r0
    ldrh r0, [r2]
    ldrh r1, [r1]
    subs r0, r0, r1
    strh r0, [r2]
lbl_08081bf0:
    ldr r7, lbl_08081cd4 @ =0x08754bc4
    ldr r0, [r7]
    ldrh r1, [r0, #6]
    movs r0, #7
    ands r0, r1
    ldr r2, lbl_08081ce4 @ =0x08479f00
    cmp r0, #3
    bhi lbl_08081c02
    subs r2, #0x20
lbl_08081c02:
    ldr r1, lbl_08081ce8 @ =0x040000d4
    str r2, [r1]
    ldr r0, lbl_08081cec @ =0x050002a0
    str r0, [r1, #4]
    ldr r0, lbl_08081cf0 @ =0x80000010
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r5, lbl_08081cf4 @ =0x03000e7c
    movs r0, #0
    mov r8, r0
    movs r6, #0
    movs r3, #0
lbl_08081c1a:
    ldr r1, lbl_08081cd4 @ =0x08754bc4
    ldr r2, [r1]
    adds r0, r2, #0
    adds r0, #8
    adds r0, r0, r3
    ldrb r0, [r0]
    adds r4, r3, #1
    str r4, [sp]
    cmp r0, #0
    beq lbl_08081cb4
    lsls r1, r3, #2
    adds r0, r2, #0
    adds r0, #0x14
    adds r0, r0, r1
    ldr r4, [r0]
    ldrh r1, [r4]
    adds r4, #2
    movs r0, #0xff
    ands r1, r0
    mov r7, r8
    adds r0, r7, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    lsls r1, r3, #1
    adds r0, r2, #0
    adds r0, #0x50
    adds r0, r0, r1
    ldrh r0, [r0]
    mov ip, r0
    adds r0, r2, #0
    adds r0, #0x64
    adds r0, r0, r1
    ldrh r7, [r0]
    cmp r6, r8
    bhs lbl_08081cb4
    ldr r0, lbl_08081cf8 @ =0xfffffe00
    mov sl, r0
    ldr r1, lbl_08081cfc @ =0x000001ff
    mov sb, r1
lbl_08081c6a:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    lsls r3, r6, #3
    ldr r0, lbl_08081cf4 @ =0x03000e7c
    adds r3, r3, r0
    adds r0, r1, r7
    strb r0, [r3]
    ldrb r1, [r3, #1]
    movs r0, #0xd
    rsbs r0, r0, #0
    ands r0, r1
    movs r1, #4
    orrs r0, r1
    strb r0, [r3, #1]
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    add r1, ip
    mov r0, sb
    ands r1, r0
    ldrh r2, [r3, #2]
    mov r0, sl
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, r8
    blo lbl_08081c6a
lbl_08081cb4:
    ldr r1, [sp]
    lsls r0, r1, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #3
    bls lbl_08081c1a
    ldr r4, lbl_08081d00 @ =0x03001382
    strb r6, [r4]
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08081cd4: .4byte 0x08754bc4
lbl_08081cd8: .4byte 0x0847cea0
lbl_08081cdc: .4byte 0x0847ce80
lbl_08081ce0: .4byte 0x0847ce90
lbl_08081ce4: .4byte 0x08479f00
lbl_08081ce8: .4byte 0x040000d4
lbl_08081cec: .4byte 0x050002a0
lbl_08081cf0: .4byte 0x80000010
lbl_08081cf4: .4byte 0x03000e7c
lbl_08081cf8: .4byte 0xfffffe00
lbl_08081cfc: .4byte 0x000001ff
lbl_08081d00: .4byte 0x03001382

    thumb_func_start tourian_escape_init
tourian_escape_init: @ 0x08081d04
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #4
    ldr r6, lbl_08081dd8 @ =0x04000208
    movs r5, #0
    strh r5, [r6]
    ldr r2, lbl_08081ddc @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_08081de0 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_08081de4 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_08081de8 @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_08081dec @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r0, #1
    mov r8, r0
    strh r0, [r6]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r5, [r0]
    adds r0, #0x50
    strh r5, [r0]
    ldr r1, lbl_08081df0 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08081df4 @ =0x030013b2
    strh r5, [r0]
    ldr r0, lbl_08081df8 @ =0x030013ae
    strh r5, [r0]
    strh r5, [r6]
    movs r0, #0
    bl CallbackSetVBlank
    mov r0, r8
    strh r0, [r6]
    movs r0, #0
    mov sb, r0
    str r0, [sp]
    ldr r4, lbl_08081dfc @ =0x040000d4
    mov r0, sp
    str r0, [r4]
    ldr r0, lbl_08081e00 @ =0x030016c4
    str r0, [r4, #4]
    ldr r0, lbl_08081e04 @ =0x8500018a
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    bl ClearGFXRAM
    ldr r0, lbl_08081e08 @ =0x08480148
    ldr r1, lbl_08081e0c @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, lbl_08081e10 @ =0x0847cd7c
    ldr r1, lbl_08081e14 @ =0x06013000
    bl LZ77UncompVRAM
    ldr r0, lbl_08081e18 @ =0x08479520
    str r0, [r4]
    ldr r0, lbl_08081e1c @ =0x05000200
    str r0, [r4, #4]
    ldr r0, lbl_08081e20 @ =0x80000060
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    movs r2, #0xa0
    lsls r2, r2, #1
    movs r3, #0xa0
    lsls r3, r3, #2
    movs r0, #4
    movs r1, #5
    bl load_room_cutscene_escape
    mov r0, sb
    strh r0, [r6]
    ldr r4, lbl_08081e24 @ =vblank_code_during_intro
    adds r0, r4, #0
    bl CallbackSetVBlank
    mov r0, r8
    strh r0, [r6]
    ldr r0, lbl_08081e28 @ =0x03001382
    strb r5, [r0]
    bl ResetFreeOAM
    ldr r0, lbl_08081e2c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xc0
    movs r1, #0xf0
    lsls r1, r1, #5
    strh r1, [r0]
    bl _call_via_r4
    add sp, #4
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08081dd8: .4byte 0x04000208
lbl_08081ddc: .4byte 0x04000004
lbl_08081de0: .4byte 0x0000ffef
lbl_08081de4: .4byte 0x04000200
lbl_08081de8: .4byte 0x0000fffd
lbl_08081dec: .4byte 0x04000202
lbl_08081df0: .4byte 0x030013b0
lbl_08081df4: .4byte 0x030013b2
lbl_08081df8: .4byte 0x030013ae
lbl_08081dfc: .4byte 0x040000d4
lbl_08081e00: .4byte 0x030016c4
lbl_08081e04: .4byte 0x8500018a
lbl_08081e08: .4byte 0x08480148
lbl_08081e0c: .4byte 0x06010000
lbl_08081e10: .4byte 0x0847cd7c
lbl_08081e14: .4byte 0x06013000
lbl_08081e18: .4byte 0x08479520
lbl_08081e1c: .4byte 0x05000200
lbl_08081e20: .4byte 0x80000060
lbl_08081e24: .4byte vblank_code_during_intro
lbl_08081e28: .4byte 0x03001382
lbl_08081e2c: .4byte 0x08754bc4

    thumb_func_start tourian_escape_zebes_exploding
tourian_escape_zebes_exploding: @ 0x08081e30
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    movs r0, #0
    mov sb, r0
    mov r8, r0
    ldr r0, lbl_08081e70 @ =0x08754bc4
    ldr r4, [r0]
    ldrh r1, [r4, #6]
    adds r2, r1, #1
    strh r2, [r4, #6]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    adds r6, r0, #0
    cmp r1, #0xb0
    bne lbl_08081e54
    b lbl_08082048
lbl_08081e54:
    cmp r1, #0xb0
    bgt lbl_08081e8e
    cmp r1, #0x41
    bne lbl_08081e5e
    b lbl_08081fb4
lbl_08081e5e:
    cmp r1, #0x41
    bgt lbl_08081e74
    cmp r1, #0
    beq lbl_08081ed0
    cmp r1, #0x40
    bne lbl_08081e6c
    b lbl_08081f9c
lbl_08081e6c:
    b lbl_0808222a
    .align 2, 0
lbl_08081e70: .4byte 0x08754bc4
lbl_08081e74:
    cmp r1, #0x88
    bne lbl_08081e7a
    b lbl_08081f9c
lbl_08081e7a:
    cmp r1, #0x88
    bgt lbl_08081e86
    cmp r1, #0x68
    bne lbl_08081e84
    b lbl_08081fd8
lbl_08081e84:
    b lbl_0808222a
lbl_08081e86:
    cmp r1, #0x89
    bne lbl_08081e8c
    b lbl_08081fc0
lbl_08081e8c:
    b lbl_0808222a
lbl_08081e8e:
    cmp r1, #0xf7
    bne lbl_08081e94
    b lbl_080820e8
lbl_08081e94:
    cmp r1, #0xf7
    bgt lbl_08081eb0
    cmp r1, #0xd1
    bne lbl_08081e9e
    b lbl_08081fcc
lbl_08081e9e:
    cmp r1, #0xd1
    bgt lbl_08081ea8
    cmp r1, #0xd0
    beq lbl_08081f9c
    b lbl_0808222a
lbl_08081ea8:
    cmp r1, #0xf6
    bne lbl_08081eae
    b lbl_080820c0
lbl_08081eae:
    b lbl_0808222a
lbl_08081eb0:
    movs r0, #0xb0
    lsls r0, r0, #1
    cmp r1, r0
    beq lbl_08081f9c
    cmp r1, r0
    bgt lbl_08081ec4
    cmp r1, #0xf8
    bne lbl_08081ec2
    b lbl_080821a4
lbl_08081ec2:
    b lbl_0808222a
lbl_08081ec4:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_08081ece
    b lbl_0808221c
lbl_08081ece:
    b lbl_0808222a
lbl_08081ed0:
    movs r3, #1
    strb r3, [r4, #8]
    ldr r4, [r6]
    ldr r2, lbl_08081f84 @ =0x0847ced0
    ldrh r1, [r2]
    adds r0, r4, #0
    adds r0, #0x50
    strh r1, [r0]
    ldrh r1, [r2, #2]
    adds r0, #0x14
    strh r1, [r0]
    strb r3, [r4, #9]
    ldr r4, [r6]
    ldr r1, lbl_08081f88 @ =0x0847cef0
    ldrh r0, [r1]
    adds r2, r4, #0
    adds r2, #0x52
    strh r0, [r2]
    ldrh r0, [r1, #2]
    adds r1, r4, #0
    adds r1, #0x66
    strh r0, [r1]
    strb r3, [r4, #0xa]
    ldr r4, [r6]
    ldr r2, lbl_08081f8c @ =0x0847cf10
    ldrh r1, [r2]
    adds r0, r4, #0
    adds r0, #0x54
    strh r1, [r0]
    ldrh r1, [r2, #2]
    adds r0, #0x14
    strh r1, [r0]
    strb r3, [r4, #0xb]
    ldr r0, [r6]
    adds r0, #0x3f
    movs r1, #8
    strb r1, [r0]
    ldr r0, [r6]
    ldr r2, lbl_08081f90 @ =0x0847cf30
    ldrh r1, [r2]
    adds r3, r0, #0
    adds r3, #0x56
    strh r1, [r3]
    ldrh r1, [r2, #2]
    adds r0, #0x6a
    strh r1, [r0]
    movs r4, #4
    adds r5, r6, #0
    ldr r6, lbl_08081f94 @ =0x0847cf50
    adds r7, r6, #2
lbl_08081f34:
    ldr r0, [r5]
    adds r0, #8
    adds r0, r0, r4
    movs r1, #1
    strb r1, [r0]
    ldr r0, [r5]
    adds r0, #0x3c
    adds r0, r0, r4
    strb r4, [r0]
    ldr r1, [r5]
    mov ip, r1
    lsls r3, r4, #1
    adds r1, #0x50
    adds r1, r1, r3
    mov r2, ip
    adds r2, #0x3c
    adds r2, r2, r4
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrh r0, [r0]
    strh r0, [r1]
    mov r1, ip
    adds r1, #0x64
    adds r1, r1, r3
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r7
    ldrh r0, [r0]
    strh r0, [r1]
    adds r0, r4, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #8
    bls lbl_08081f34
    ldr r0, lbl_08081f98 @ =0x0000023e
    bl SoundPlay
    b lbl_0808222a
    .align 2, 0
lbl_08081f84: .4byte 0x0847ced0
lbl_08081f88: .4byte 0x0847cef0
lbl_08081f8c: .4byte 0x0847cf10
lbl_08081f90: .4byte 0x0847cf30
lbl_08081f94: .4byte 0x0847cf50
lbl_08081f98: .4byte 0x0000023e
lbl_08081f9c:
    ldr r0, lbl_08081fb0 @ =0x08754bc4
    ldr r1, [r0]
    adds r2, r1, #0
    adds r2, #0xc2
    movs r0, #0xbf
    strh r0, [r2]
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    b lbl_0808222a
    .align 2, 0
lbl_08081fb0: .4byte 0x08754bc4
lbl_08081fb4:
    ldr r0, lbl_08081fbc @ =0x0000023f
    bl SoundPlay
    b lbl_0808222a
    .align 2, 0
lbl_08081fbc: .4byte 0x0000023f
lbl_08081fc0:
    ldr r0, lbl_08081fc8 @ =0x00000241
    bl SoundPlay
    b lbl_0808222a
    .align 2, 0
lbl_08081fc8: .4byte 0x00000241
lbl_08081fcc:
    ldr r0, lbl_08081fd4 @ =0x00000243
    bl SoundPlay
    b lbl_0808222a
    .align 2, 0
lbl_08081fd4: .4byte 0x00000243
lbl_08081fd8:
    movs r3, #0xc0
    lsls r3, r3, #2
    movs r0, #4
    movs r1, #6
    movs r2, #0x80
    bl load_room_cutscene_escape
    movs r4, #4
    movs r2, #1
    mov r8, r2
    adds r5, r6, #0
    ldr r6, lbl_08082044 @ =0x0847cf50
    adds r7, r6, #2
lbl_08081ff2:
    ldr r0, [r5]
    adds r0, #0x46
    adds r0, r0, r4
    movs r1, #0
    strb r1, [r0]
    ldr r2, [r5]
    adds r2, #0x3c
    adds r2, r2, r4
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    strb r0, [r2]
    ldr r0, [r5]
    mov ip, r0
    lsls r3, r4, #1
    mov r1, ip
    adds r1, #0x50
    adds r1, r1, r3
    mov r2, ip
    adds r2, #0x3c
    adds r2, r2, r4
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrh r0, [r0]
    strh r0, [r1]
    mov r1, ip
    adds r1, #0x64
    adds r1, r1, r3
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r7
    ldrh r0, [r0]
    strh r0, [r1]
    adds r0, r4, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #8
    bls lbl_08081ff2
    b lbl_080820b0
    .align 2, 0
lbl_08082044: .4byte 0x0847cf50
lbl_08082048:
    movs r3, #0x80
    lsls r3, r3, #3
    movs r0, #5
    movs r1, #2
    movs r2, #0x80
    bl load_room_cutscene_escape
    movs r4, #4
    movs r1, #1
    mov r8, r1
    adds r5, r6, #0
    ldr r6, lbl_080820bc @ =0x0847cf50
    adds r7, r6, #2
lbl_08082062:
    ldr r0, [r5]
    adds r0, #0x46
    adds r0, r0, r4
    movs r1, #0
    strb r1, [r0]
    ldr r2, [r5]
    adds r2, #0x3c
    adds r2, r2, r4
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    strb r0, [r2]
    ldr r2, [r5]
    mov ip, r2
    lsls r3, r4, #1
    mov r1, ip
    adds r1, #0x50
    adds r1, r1, r3
    adds r2, #0x3c
    adds r2, r2, r4
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r6
    ldrh r0, [r0]
    strh r0, [r1]
    mov r1, ip
    adds r1, #0x64
    adds r1, r1, r3
    ldrb r0, [r2]
    lsls r0, r0, #2
    adds r0, r0, r7
    ldrh r0, [r0]
    strh r0, [r1]
    adds r0, r4, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #8
    bls lbl_08082062
lbl_080820b0:
    movs r0, #0x90
    lsls r0, r0, #2
    bl SoundPlay
    b lbl_0808222a
    .align 2, 0
lbl_080820bc: .4byte 0x0847cf50
lbl_080820c0:
    ldr r4, lbl_080820dc @ =0x04000208
    mov r0, sb
    strh r0, [r4]
    ldr r0, lbl_080820e0 @ =sub_08081320
    bl CallbackSetVBlank
    movs r0, #1
    strh r0, [r4]
    ldr r0, lbl_080820e4 @ =0x0848a17c
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_0808222a
    .align 2, 0
lbl_080820dc: .4byte 0x04000208
lbl_080820e0: .4byte sub_08081320
lbl_080820e4: .4byte 0x0848a17c
lbl_080820e8:
    ldr r0, lbl_08082184 @ =0x0848e048
    ldr r1, lbl_08082188 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r1, [r6]
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    ldr r0, [r6]
    mov r1, sb
    strb r1, [r0, #5]
    ldr r0, [r6]
    movs r2, #1
    strb r2, [r0, #8]
    ldr r4, [r6]
    adds r1, r4, #0
    adds r1, #0x50
    movs r3, #0
    movs r0, #0xc0
    strh r0, [r1]
    adds r0, r4, #0
    adds r0, #0x64
    movs r1, #0x40
    strh r1, [r0]
    subs r0, #0x1e
    strb r3, [r0]
    ldr r0, [r6]
    strb r2, [r0, #9]
    ldr r2, [r6]
    adds r0, r2, #0
    adds r0, #0x52
    strh r1, [r0]
    adds r1, r2, #0
    adds r1, #0x66
    movs r0, #0x59
    strh r0, [r1]
    adds r0, r2, #0
    adds r0, #0x47
    strb r3, [r0]
    movs r4, #2
    adds r2, r6, #0
    movs r1, #0
lbl_0808213c:
    ldr r0, [r2]
    adds r0, #8
    adds r0, r0, r4
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x3c
    adds r0, r0, r4
    strb r1, [r0]
    ldr r0, [r2]
    adds r0, #0x46
    adds r0, r0, r4
    strb r1, [r0]
    adds r0, r4, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #8
    bls lbl_0808213c
    ldr r0, lbl_0808218c @ =0x030013b4
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_08082190 @ =0x030013b6
    strh r1, [r0]
    ldr r0, lbl_08082194 @ =0x030013b8
    strh r1, [r0]
    ldr r0, lbl_08082198 @ =0x030013ba
    strh r1, [r0]
    ldr r0, lbl_0808219c @ =0x030013bc
    strh r1, [r0]
    ldr r0, lbl_080821a0 @ =0x030013be
    strh r1, [r0]
    movs r0, #0
    movs r1, #0x14
    movs r2, #0
    bl sub_08003b30
    b lbl_0808222a
    .align 2, 0
lbl_08082184: .4byte 0x0848e048
lbl_08082188: .4byte 0x06010000
lbl_0808218c: .4byte 0x030013b4
lbl_08082190: .4byte 0x030013b6
lbl_08082194: .4byte 0x030013b8
lbl_08082198: .4byte 0x030013ba
lbl_0808219c: .4byte 0x030013bc
lbl_080821a0: .4byte 0x030013be
lbl_080821a4:
    ldr r0, lbl_080821f8 @ =0x0848d744
    ldr r1, lbl_080821fc @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r0, lbl_08082200 @ =0x040000d4
    ldr r3, lbl_08082204 @ =0x08479400
    str r3, [r0]
    movs r1, #0xa0
    lsls r1, r1, #0x13
    str r1, [r0, #4]
    ldr r2, lbl_08082208 @ =0x80000090
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_0808220c @ =0x05000200
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    ldr r1, lbl_08082210 @ =0x04000008
    movs r2, #0xf0
    lsls r2, r2, #5
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, [r6]
    adds r0, #0xc0
    movs r1, #0x88
    lsls r1, r1, #5
    strh r1, [r0]
    ldr r1, lbl_08082214 @ =0x030013b0
    movs r0, #0xa
    strh r0, [r1]
    ldr r1, lbl_08082218 @ =0x030013b2
    movs r0, #6
    strh r0, [r1]
    movs r0, #2
    mov r8, r0
    movs r0, #0x91
    lsls r0, r0, #2
    bl SoundPlay
    b lbl_0808222a
    .align 2, 0
lbl_080821f8: .4byte 0x0848d744
lbl_080821fc: .4byte 0x0600f000
lbl_08082200: .4byte 0x040000d4
lbl_08082204: .4byte 0x08479400
lbl_08082208: .4byte 0x80000090
lbl_0808220c: .4byte 0x05000200
lbl_08082210: .4byte 0x04000008
lbl_08082214: .4byte 0x030013b0
lbl_08082218: .4byte 0x030013b2
lbl_0808221c:
    ldr r0, lbl_08082284 @ =0x030013b4
    mov r1, sb
    strh r1, [r0]
    ldr r0, lbl_08082288 @ =0x030013b6
    strh r1, [r0]
    movs r2, #1
    mov sb, r2
lbl_0808222a:
    ldr r5, lbl_0808228c @ =0x08754bc4
    ldr r0, [r5]
    ldrh r0, [r0, #6]
    cmp r0, #0xef
    bhi lbl_08082238
    bl update_animated_graphics
lbl_08082238:
    mov r0, r8
    cmp r0, #0
    beq lbl_08082254
    ldr r2, [r5]
    adds r4, r2, #0
    adds r4, #0xc2
    movs r3, #0
    movs r1, #0
    movs r0, #0xfc
    lsls r0, r0, #6
    strh r0, [r4]
    ldr r0, lbl_08082290 @ =0x030013ae
    strh r1, [r0]
    strb r3, [r2, #1]
lbl_08082254:
    ldr r2, [r5]
    ldrb r0, [r2, #1]
    cmp r0, #0
    beq lbl_080822ae
    ldrh r0, [r2, #6]
    cmp r0, #0xff
    bls lbl_08082294
    ldrb r0, [r2, #5]
    adds r1, r0, #1
    strb r1, [r2, #5]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #5
    bls lbl_080822ae
    ldr r1, lbl_08082290 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_0808227c
    adds r0, #1
    strh r0, [r1]
lbl_0808227c:
    ldr r1, [r5]
    movs r0, #0
    strb r0, [r1, #5]
    b lbl_080822ae
    .align 2, 0
lbl_08082284: .4byte 0x030013b4
lbl_08082288: .4byte 0x030013b6
lbl_0808228c: .4byte 0x08754bc4
lbl_08082290: .4byte 0x030013ae
lbl_08082294:
    ldrb r1, [r2, #5]
    adds r0, r1, #1
    strb r0, [r2, #5]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080822ae
    ldr r1, lbl_080822c8 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_080822ae
    adds r0, #1
    strh r0, [r1]
lbl_080822ae:
    ldr r0, lbl_080822cc @ =0x08754bc4
    ldr r3, [r0]
    ldrb r5, [r3, #2]
    adds r6, r0, #0
    cmp r5, #0
    beq lbl_0808232c
    ldrh r1, [r3, #6]
    movs r0, #7
    ands r0, r1
    cmp r0, #3
    bhi lbl_080822d4
    ldr r0, lbl_080822d0 @ =0x0847a4e0
    b lbl_080822d6
    .align 2, 0
lbl_080822c8: .4byte 0x030013ae
lbl_080822cc: .4byte 0x08754bc4
lbl_080822d0: .4byte 0x0847a4e0
lbl_080822d4:
    ldr r0, lbl_080822e8 @ =0x0847a506
lbl_080822d6:
    str r0, [r3, #0x14]
    ldr r2, [r6]
    ldrh r1, [r2, #6]
    movs r0, #3
    ands r0, r1
    cmp r0, #1
    bhi lbl_080822f0
    ldr r0, lbl_080822ec @ =0x0847a52c
    b lbl_080822f2
    .align 2, 0
lbl_080822e8: .4byte 0x0847a506
lbl_080822ec: .4byte 0x0847a52c
lbl_080822f0:
    ldr r0, lbl_0808231c @ =0x0847a540
lbl_080822f2:
    str r0, [r2, #0x18]
    ldr r2, [r6]
    movs r1, #0x47
    adds r1, r1, r2
    mov ip, r1
    ldrb r0, [r1]
    cmp r0, #0xb
    bls lbl_08082324
    ldr r1, lbl_08082320 @ =0x030013b4
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    adds r2, #0x52
    ldrh r0, [r2]
    subs r0, #1
    movs r1, #0
    strh r0, [r2]
    mov r2, ip
    strb r1, [r2]
    b lbl_08082610
    .align 2, 0
lbl_0808231c: .4byte 0x0847a540
lbl_08082320: .4byte 0x030013b4
lbl_08082324:
    adds r0, #1
    mov r1, ip
    strb r0, [r1]
    b lbl_08082610
lbl_0808232c:
    adds r4, r3, #0
    adds r4, #0x46
    ldr r2, lbl_08082624 @ =0x0847cbe4
    adds r0, r3, #0
    adds r0, #0x3c
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r1, [r4]
    adds r7, r2, #0
    ldrb r0, [r0, #4]
    cmp r1, r0
    blo lbl_08082394
    strb r5, [r4]
    ldr r1, [r6]
    adds r1, #0x3c
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r6]
    adds r1, r0, #0
    adds r1, #0x3c
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08082394
    strb r0, [r1]
    ldr r2, [r6]
    ldrb r0, [r2, #8]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    adds r0, #1
    strb r0, [r2, #8]
    ldr r4, [r6]
    ldrb r0, [r4, #8]
    subs r0, #1
    lsls r0, r0, #0x18
    ldr r2, lbl_08082628 @ =0x0847ced0
    lsrs r0, r0, #0x16
    adds r1, r0, r2
    ldrh r3, [r1]
    adds r1, r4, #0
    adds r1, #0x50
    strh r3, [r1]
    adds r2, #2
    adds r0, r0, r2
    ldrh r0, [r0]
    adds r4, #0x64
    strh r0, [r4]
lbl_08082394:
    ldr r0, [r6]
    adds r3, r0, #0
    adds r3, #0x47
    ldr r2, lbl_0808262c @ =0x0847cc64
    adds r0, #0x3d
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r1, [r3]
    mov r8, r2
    ldrb r0, [r0, #4]
    cmp r1, r0
    blo lbl_080823fe
    movs r0, #0
    strb r0, [r3]
    ldr r1, [r6]
    adds r1, #0x3d
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r6]
    adds r1, r0, #0
    adds r1, #0x3d
    ldrb r0, [r1]
    lsls r0, r0, #3
    add r0, r8
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_080823fe
    strb r0, [r1]
    ldr r2, [r6]
    ldrb r0, [r2, #9]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    adds r0, #1
    strb r0, [r2, #9]
    ldr r3, [r6]
    ldrb r0, [r3, #9]
    subs r0, #1
    lsls r0, r0, #0x18
    ldr r2, lbl_08082630 @ =0x0847cef0
    lsrs r0, r0, #0x16
    adds r1, r0, r2
    ldrh r1, [r1]
    adds r4, r3, #0
    adds r4, #0x52
    strh r1, [r4]
    adds r2, #2
    adds r0, r0, r2
    ldrh r0, [r0]
    adds r3, #0x66
    strh r0, [r3]
lbl_080823fe:
    ldr r0, [r6]
    adds r3, r0, #0
    adds r3, #0x48
    ldr r2, lbl_08082634 @ =0x0847ccbc
    adds r0, #0x3e
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r2
    ldrb r1, [r3]
    adds r5, r2, #0
    ldrb r0, [r0, #4]
    cmp r1, r0
    blo lbl_08082468
    movs r0, #0
    strb r0, [r3]
    ldr r1, [r6]
    adds r1, #0x3e
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r6]
    adds r1, r0, #0
    adds r1, #0x3e
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_08082468
    strb r0, [r1]
    ldr r2, [r6]
    ldrb r0, [r2, #0xa]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    adds r0, #1
    strb r0, [r2, #0xa]
    ldr r4, [r6]
    ldrb r0, [r4, #0xa]
    subs r0, #1
    lsls r0, r0, #0x18
    ldr r2, lbl_08082638 @ =0x0847cf10
    lsrs r0, r0, #0x16
    adds r1, r0, r2
    ldrh r3, [r1]
    adds r1, r4, #0
    adds r1, #0x54
    strh r3, [r1]
    adds r2, #2
    adds r0, r0, r2
    ldrh r0, [r0]
    adds r4, #0x68
    strh r0, [r4]
lbl_08082468:
    ldr r0, [r6]
    adds r2, r0, #0
    adds r2, #0x49
    adds r0, #0x3f
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrb r1, [r2]
    ldrb r0, [r0, #4]
    cmp r1, r0
    blo lbl_080824ce
    movs r0, #0
    strb r0, [r2]
    ldr r1, [r6]
    adds r1, #0x3f
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r6]
    adds r1, r0, #0
    adds r1, #0x3f
    ldrb r0, [r1]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_080824ce
    strb r0, [r1]
    ldr r2, [r6]
    ldrb r0, [r2, #0xb]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    adds r0, #1
    strb r0, [r2, #0xb]
    ldr r3, [r6]
    ldrb r0, [r3, #0xb]
    subs r0, #1
    lsls r0, r0, #0x18
    ldr r2, lbl_0808263c @ =0x0847cf30
    lsrs r0, r0, #0x16
    adds r1, r0, r2
    ldrh r1, [r1]
    adds r4, r3, #0
    adds r4, #0x56
    strh r1, [r4]
    adds r2, #2
    adds r0, r0, r2
    ldrh r0, [r0]
    adds r3, #0x6a
    strh r0, [r3]
lbl_080824ce:
    ldr r1, [r6]
    adds r0, r1, #0
    adds r0, #0x3c
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldr r0, [r0]
    str r0, [r1, #0x14]
    adds r0, r1, #0
    adds r0, #0x3d
    ldrb r0, [r0]
    lsls r0, r0, #3
    add r0, r8
    ldr r0, [r0]
    str r0, [r1, #0x18]
    adds r0, r1, #0
    adds r0, #0x3e
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r5
    ldr r0, [r0]
    str r0, [r1, #0x1c]
    adds r0, r1, #0
    adds r0, #0x3f
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r0, r0, r7
    ldr r0, [r0]
    str r0, [r1, #0x20]
    adds r1, #0x46
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r6]
    adds r1, #0x47
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r6]
    adds r1, #0x48
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r6]
    adds r1, #0x49
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r4, #4
    adds r5, r6, #0
    ldr r7, lbl_08082640 @ =0x0847cec0
lbl_08082534:
    ldr r0, [r5]
    adds r0, #0x46
    adds r1, r0, r4
    ldrb r0, [r1]
    cmp r0, #0xe
    bhi lbl_08082544
    adds r0, #1
    strb r0, [r1]
lbl_08082544:
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x46
    adds r0, r0, r4
    ldrb r0, [r0]
    lsrs r3, r0, #2
    lsls r0, r4, #2
    adds r1, r2, #0
    adds r1, #0x14
    adds r1, r1, r0
    lsls r0, r3, #2
    adds r0, r0, r7
    ldr r0, [r0]
    str r0, [r1]
    lsls r0, r4, #1
    adds r1, r2, #0
    adds r1, #0x64
    adds r1, r1, r0
    ldrh r0, [r1]
    adds r0, #4
    strh r0, [r1]
    adds r0, r4, #1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #8
    bls lbl_08082534
    ldr r0, [r6]
    ldrh r0, [r0, #6]
    movs r4, #7
    ands r4, r0
    cmp r4, #1
    bne lbl_080825b4
    ldr r1, lbl_08082644 @ =0x030013b4
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082648 @ =0x030013b6
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
    ldr r1, lbl_0808264c @ =0x030013b8
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082650 @ =0x030013ba
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082654 @ =0x030013bc
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082658 @ =0x030013be
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
lbl_080825b4:
    cmp r4, #3
    bne lbl_080825c8
    ldr r1, lbl_0808265c @ =0x030013c0
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082660 @ =0x030013c2
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
lbl_080825c8:
    cmp r4, #4
    bne lbl_080825fc
    ldr r1, lbl_08082644 @ =0x030013b4
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082648 @ =0x030013b6
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
    ldr r1, lbl_0808264c @ =0x030013b8
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082650 @ =0x030013ba
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082654 @ =0x030013bc
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082658 @ =0x030013be
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
lbl_080825fc:
    cmp r4, #6
    bne lbl_08082610
    ldr r1, lbl_0808265c @ =0x030013c0
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
    ldr r1, lbl_08082660 @ =0x030013c2
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
lbl_08082610:
    bl tourian_escape_process_oam
    mov r0, sb
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08082624: .4byte 0x0847cbe4
lbl_08082628: .4byte 0x0847ced0
lbl_0808262c: .4byte 0x0847cc64
lbl_08082630: .4byte 0x0847cef0
lbl_08082634: .4byte 0x0847ccbc
lbl_08082638: .4byte 0x0847cf10
lbl_0808263c: .4byte 0x0847cf30
lbl_08082640: .4byte 0x0847cec0
lbl_08082644: .4byte 0x030013b4
lbl_08082648: .4byte 0x030013b6
lbl_0808264c: .4byte 0x030013b8
lbl_08082650: .4byte 0x030013ba
lbl_08082654: .4byte 0x030013bc
lbl_08082658: .4byte 0x030013be
lbl_0808265c: .4byte 0x030013c0
lbl_08082660: .4byte 0x030013c2

    thumb_func_start tourian_escape_samus_in_her_ship
tourian_escape_samus_in_her_ship: @ 0x08082664
    push {r4, r5, lr}
    movs r5, #0
    ldr r0, lbl_08082694 @ =0x08754bc4
    ldr r3, [r0]
    ldrh r0, [r3, #6]
    adds r1, r0, #1
    strh r1, [r3, #6]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0xa0
    bne lbl_0808267c
    b lbl_08082800
lbl_0808267c:
    cmp r1, #0xa0
    bgt lbl_080826a4
    cmp r1, #2
    beq lbl_080826ec
    cmp r1, #2
    bgt lbl_08082698
    cmp r1, #0
    beq lbl_080826d0
    cmp r1, #1
    beq lbl_080826d8
    b lbl_080828be
    .align 2, 0
lbl_08082694: .4byte 0x08754bc4
lbl_08082698:
    cmp r1, #3
    beq lbl_08082754
    cmp r1, #0x38
    bne lbl_080826a2
    b lbl_080827a0
lbl_080826a2:
    b lbl_080828be
lbl_080826a4:
    cmp r1, #0xc8
    bne lbl_080826aa
    b lbl_0808286c
lbl_080826aa:
    cmp r1, #0xc8
    bgt lbl_080826bc
    cmp r1, #0xa1
    bne lbl_080826b4
    b lbl_08082810
lbl_080826b4:
    cmp r1, #0xa2
    bne lbl_080826ba
    b lbl_08082850
lbl_080826ba:
    b lbl_080828be
lbl_080826bc:
    movs r0, #0xb0
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_080826c6
    b lbl_08082894
lbl_080826c6:
    adds r0, #0x14
    cmp r1, r0
    bne lbl_080826ce
    b lbl_080828a4
lbl_080826ce:
    b lbl_080828be
lbl_080826d0:
    ldr r0, lbl_080826d4 @ =0x08481ccc
    b lbl_08082802
    .align 2, 0
lbl_080826d4: .4byte 0x08481ccc
lbl_080826d8:
    ldr r0, lbl_080826e4 @ =0x0847d014
    ldr r1, lbl_080826e8 @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_080828be
    .align 2, 0
lbl_080826e4: .4byte 0x0847d014
lbl_080826e8: .4byte 0x06008000
lbl_080826ec:
    ldr r0, lbl_08082718 @ =0x08484d5c
    ldr r1, lbl_0808271c @ =0x06007000
    bl LZ77UncompVRAM
    ldr r0, lbl_08082720 @ =0x0847f884
    ldr r1, lbl_08082724 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r0, lbl_08082728 @ =0x03001530
    ldrb r1, [r0, #0xf]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08082738
    ldr r1, lbl_0808272c @ =0x040000d4
    ldr r0, lbl_08082730 @ =0x084796c0
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08082734 @ =0x80000070
    b lbl_0808282e
    .align 2, 0
lbl_08082718: .4byte 0x08484d5c
lbl_0808271c: .4byte 0x06007000
lbl_08082720: .4byte 0x0847f884
lbl_08082724: .4byte 0x0600f000
lbl_08082728: .4byte 0x03001530
lbl_0808272c: .4byte 0x040000d4
lbl_08082730: .4byte 0x084796c0
lbl_08082734: .4byte 0x80000070
lbl_08082738:
    ldr r1, lbl_08082748 @ =0x040000d4
    ldr r0, lbl_0808274c @ =0x084795e0
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08082750 @ =0x80000070
    b lbl_0808282e
    .align 2, 0
lbl_08082748: .4byte 0x040000d4
lbl_0808274c: .4byte 0x084795e0
lbl_08082750: .4byte 0x80000070
lbl_08082754:
    ldr r1, lbl_08082788 @ =0x04000008
    ldr r2, lbl_0808278c @ =0x00001e08
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r4, lbl_08082790 @ =0x00000e01
    adds r0, r4, #0
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0xc0
    movs r0, #0x90
    lsls r0, r0, #5
    strh r0, [r1]
    adds r1, #2
    movs r0, #0xfc
    lsls r0, r0, #6
    strh r0, [r1]
    ldr r1, lbl_08082794 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08082798 @ =0x030013b2
    strh r5, [r0]
    ldr r0, lbl_0808279c @ =0x030013ae
    strh r5, [r0]
    b lbl_080828be
    .align 2, 0
lbl_08082788: .4byte 0x04000008
lbl_0808278c: .4byte 0x00001e08
lbl_08082790: .4byte 0x00000e01
lbl_08082794: .4byte 0x030013b0
lbl_08082798: .4byte 0x030013b2
lbl_0808279c: .4byte 0x030013ae
lbl_080827a0:
    adds r2, r3, #0
    adds r2, #0xc0
    ldrh r1, [r2]
    movs r4, #0x80
    lsls r4, r4, #6
    adds r0, r4, #0
    orrs r0, r1
    strh r0, [r2]
    adds r1, r3, #0
    adds r1, #0xc2
    movs r0, #0xbf
    strh r0, [r1]
    ldr r1, lbl_080827f4 @ =0x030013ae
    movs r0, #0xa
    strh r0, [r1]
    ldr r1, lbl_080827f8 @ =0x04000048
    movs r0, #0x3f
    strh r0, [r1]
    adds r1, #2
    movs r0, #0x1f
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0xc4
    movs r0, #0x77
    strh r0, [r1]
    adds r1, #2
    movs r0, #0x79
    strh r0, [r1]
    adds r1, #2
    movs r0, #0x4f
    strh r0, [r1]
    adds r1, #2
    movs r0, #0x51
    strh r0, [r1]
    ldrb r0, [r3, #2]
    adds r0, #1
    strb r0, [r3, #2]
    ldr r0, lbl_080827fc @ =0x00000245
    bl SoundPlay
    b lbl_080828be
    .align 2, 0
lbl_080827f4: .4byte 0x030013ae
lbl_080827f8: .4byte 0x04000048
lbl_080827fc: .4byte 0x00000245
lbl_08082800:
    ldr r0, lbl_0808280c @ =0x0848531c
lbl_08082802:
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_080828be
    .align 2, 0
lbl_0808280c: .4byte 0x0848531c
lbl_08082810:
    ldr r0, lbl_08082834 @ =0x084895fc
    ldr r1, lbl_08082838 @ =0x06007000
    bl LZ77UncompVRAM
    ldr r0, lbl_0808283c @ =0x08489bbc
    ldr r1, lbl_08082840 @ =0x06007800
    bl LZ77UncompVRAM
    ldr r1, lbl_08082844 @ =0x040000d4
    ldr r0, lbl_08082848 @ =0x084797a0
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0808284c @ =0x80000080
lbl_0808282e:
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    b lbl_080828be
    .align 2, 0
lbl_08082834: .4byte 0x084895fc
lbl_08082838: .4byte 0x06007000
lbl_0808283c: .4byte 0x08489bbc
lbl_08082840: .4byte 0x06007800
lbl_08082844: .4byte 0x040000d4
lbl_08082848: .4byte 0x084797a0
lbl_0808284c: .4byte 0x80000080
lbl_08082850:
    adds r1, r3, #0
    adds r1, #0xc0
    movs r0, #0x98
    lsls r0, r0, #5
    strh r0, [r1]
    ldrb r0, [r3, #2]
    adds r0, #1
    strb r0, [r3, #2]
    ldr r0, lbl_08082868 @ =0x00000246
    bl SoundPlay
    b lbl_080828be
    .align 2, 0
lbl_08082868: .4byte 0x00000246
lbl_0808286c:
    adds r1, r3, #0
    adds r1, #0xc2
    ldr r0, lbl_08082888 @ =0x00000241
    strh r0, [r1]
    ldr r1, lbl_0808288c @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldrb r0, [r3, #2]
    adds r0, #1
    strb r0, [r3, #2]
    ldr r0, lbl_08082890 @ =0x00000247
    bl SoundPlay
    b lbl_080828be
    .align 2, 0
lbl_08082888: .4byte 0x00000241
lbl_0808288c: .4byte 0x030013b0
lbl_08082890: .4byte 0x00000247
lbl_08082894:
    ldr r1, lbl_080828a0 @ =0x0400000a
    movs r2, #0xf0
    lsls r2, r2, #4
    adds r0, r2, #0
    strh r0, [r1]
    b lbl_080828be
    .align 2, 0
lbl_080828a0: .4byte 0x0400000a
lbl_080828a4:
    adds r0, r3, #0
    adds r0, #0xc0
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    ldr r1, lbl_080828ec @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_080828f0 @ =0x030013b2
    strh r5, [r0]
    ldr r0, lbl_080828f4 @ =0x030013ae
    strh r5, [r0]
    movs r5, #1
lbl_080828be:
    ldr r0, lbl_080828f8 @ =0x08754bc4
    ldr r3, [r0]
    ldrb r2, [r3, #2]
    adds r4, r0, #0
    cmp r2, #1
    bne lbl_0808297c
    ldrb r0, [r3, #5]
    adds r1, r0, #1
    strb r1, [r3, #5]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x27
    bhi lbl_080828fc
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0xc8
    ldrh r0, [r2]
    subs r0, #3
    strh r0, [r2]
    adds r1, #0xca
    ldrh r0, [r1]
    adds r0, #3
    b lbl_0808290e
    .align 2, 0
lbl_080828ec: .4byte 0x030013b0
lbl_080828f0: .4byte 0x030013b2
lbl_080828f4: .4byte 0x030013ae
lbl_080828f8: .4byte 0x08754bc4
lbl_080828fc:
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0xc4
    ldrh r0, [r2]
    subs r0, #4
    strh r0, [r2]
    adds r1, #0xc6
    ldrh r0, [r1]
    adds r0, #4
lbl_0808290e:
    strh r0, [r1]
    adds r2, r4, #0
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc8
    movs r3, #0
    ldrsh r0, [r1, r3]
    cmp r0, #0
    bge lbl_08082924
    movs r0, #0
    strh r0, [r1]
lbl_08082924:
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xca
    movs r3, #0
    ldrsh r0, [r1, r3]
    cmp r0, #0xa0
    ble lbl_08082936
    movs r0, #0xa0
    strh r0, [r1]
lbl_08082936:
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc4
    movs r3, #0
    ldrsh r0, [r1, r3]
    cmp r0, #0
    bge lbl_08082948
    movs r0, #0
    strh r0, [r1]
lbl_08082948:
    ldr r0, [r2]
    adds r1, r0, #0
    adds r1, #0xc6
    movs r2, #0
    ldrsh r0, [r1, r2]
    cmp r0, #0xf0
    ble lbl_0808295a
    movs r0, #0xf0
    strh r0, [r1]
lbl_0808295a:
    ldr r0, [r4]
    ldrh r1, [r0, #6]
    cmp r1, #0x7f
    bls lbl_080829be
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080829be
    ldr r1, lbl_08082978 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_080829be
    adds r0, #1
    strh r0, [r1]
    b lbl_080829be
    .align 2, 0
lbl_08082978: .4byte 0x030013ae
lbl_0808297c:
    cmp r2, #2
    bne lbl_0808299c
    ldrh r1, [r3, #6]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080829be
    ldr r1, lbl_08082998 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_080829be
    subs r0, #1
    strh r0, [r1]
    b lbl_080829be
    .align 2, 0
lbl_08082998: .4byte 0x030013ae
lbl_0808299c:
    cmp r2, #0
    beq lbl_080829be
    ldrh r1, [r3, #6]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    bne lbl_080829be
    ldr r1, lbl_080829c8 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_080829be
    subs r0, #1
    strh r0, [r1]
    ldr r2, lbl_080829cc @ =0x030013b2
    movs r1, #0x10
    subs r1, r1, r0
    strh r1, [r2]
lbl_080829be:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080829c8: .4byte 0x030013b0
lbl_080829cc: .4byte 0x030013b2

    thumb_func_start tourian_escape_samus_looking_around
tourian_escape_samus_looking_around: @ 0x080829d0
    push {r4, r5, lr}
    movs r5, #0
    ldr r0, lbl_080829f4 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #6]
    adds r1, r0, #1
    strh r1, [r2, #6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x38
    bls lbl_080829e8
    b lbl_08082c1c
lbl_080829e8:
    lsls r0, r0, #2
    ldr r1, lbl_080829f8 @ =lbl_080829fc
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080829f4: .4byte 0x08754bc4
lbl_080829f8: .4byte lbl_080829fc
lbl_080829fc: @ jump table
    .4byte lbl_08082ae0 @ case 0
    .4byte lbl_08082af0 @ case 1
    .4byte lbl_08082b58 @ case 2
    .4byte lbl_08082ba8 @ case 3
    .4byte lbl_08082c1c @ case 4
    .4byte lbl_08082c1c @ case 5
    .4byte lbl_08082c1c @ case 6
    .4byte lbl_08082c1c @ case 7
    .4byte lbl_08082c1c @ case 8
    .4byte lbl_08082c1c @ case 9
    .4byte lbl_08082c1c @ case 10
    .4byte lbl_08082c1c @ case 11
    .4byte lbl_08082c1c @ case 12
    .4byte lbl_08082c1c @ case 13
    .4byte lbl_08082c1c @ case 14
    .4byte lbl_08082c1c @ case 15
    .4byte lbl_08082bd4 @ case 16
    .4byte lbl_08082c1c @ case 17
    .4byte lbl_08082c1c @ case 18
    .4byte lbl_08082c1c @ case 19
    .4byte lbl_08082c1c @ case 20
    .4byte lbl_08082c1c @ case 21
    .4byte lbl_08082c1c @ case 22
    .4byte lbl_08082c1c @ case 23
    .4byte lbl_08082c1c @ case 24
    .4byte lbl_08082c1c @ case 25
    .4byte lbl_08082c1c @ case 26
    .4byte lbl_08082c1c @ case 27
    .4byte lbl_08082c1c @ case 28
    .4byte lbl_08082c1c @ case 29
    .4byte lbl_08082c1c @ case 30
    .4byte lbl_08082c1c @ case 31
    .4byte lbl_08082be4 @ case 32
    .4byte lbl_08082c1c @ case 33
    .4byte lbl_08082c1c @ case 34
    .4byte lbl_08082c1c @ case 35
    .4byte lbl_08082c1c @ case 36
    .4byte lbl_08082c1c @ case 37
    .4byte lbl_08082c1c @ case 38
    .4byte lbl_08082c1c @ case 39
    .4byte lbl_08082c1c @ case 40
    .4byte lbl_08082c1c @ case 41
    .4byte lbl_08082c1c @ case 42
    .4byte lbl_08082c1c @ case 43
    .4byte lbl_08082c1c @ case 44
    .4byte lbl_08082c1c @ case 45
    .4byte lbl_08082c1c @ case 46
    .4byte lbl_08082c1c @ case 47
    .4byte lbl_08082c1c @ case 48
    .4byte lbl_08082c1c @ case 49
    .4byte lbl_08082c1c @ case 50
    .4byte lbl_08082c1c @ case 51
    .4byte lbl_08082c1c @ case 52
    .4byte lbl_08082c1c @ case 53
    .4byte lbl_08082c1c @ case 54
    .4byte lbl_08082c1c @ case 55
    .4byte lbl_08082bf4 @ case 56
lbl_08082ae0:
    ldr r0, lbl_08082aec @ =0x08498028
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_08082c1c
    .align 2, 0
lbl_08082aec: .4byte 0x08498028
lbl_08082af0:
    ldr r0, lbl_08082b3c @ =0x08498028
    ldr r1, lbl_08082b40 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, lbl_08082b44 @ =0x030013b0
    movs r1, #8
    strh r1, [r0]
    ldr r0, lbl_08082b48 @ =0x030013b2
    strh r1, [r0]
    ldr r1, lbl_08082b4c @ =0x08754bc4
    ldr r0, [r1]
    movs r4, #0
    movs r3, #1
    strb r3, [r0, #8]
    ldr r0, [r1]
    mov ip, r0
    ldr r0, lbl_08082b50 @ =0x0847a554
    mov r2, ip
    str r0, [r2, #0x14]
    mov r0, ip
    adds r0, #0x50
    movs r2, #0x80
    strh r2, [r0]
    adds r0, #0x14
    strh r4, [r0]
    mov r0, ip
    strb r3, [r0, #9]
    ldr r1, [r1]
    ldr r0, lbl_08082b54 @ =0x0847a56e
    str r0, [r1, #0x18]
    adds r0, r1, #0
    adds r0, #0x52
    strh r2, [r0]
    adds r1, #0x66
    movs r0, #0xa0
    strh r0, [r1]
    b lbl_08082c1c
    .align 2, 0
lbl_08082b3c: .4byte 0x08498028
lbl_08082b40: .4byte 0x06010000
lbl_08082b44: .4byte 0x030013b0
lbl_08082b48: .4byte 0x030013b2
lbl_08082b4c: .4byte 0x08754bc4
lbl_08082b50: .4byte 0x0847a554
lbl_08082b54: .4byte 0x0847a56e
lbl_08082b58:
    ldr r0, lbl_08082b88 @ =0x0849c010
    ldr r1, lbl_08082b8c @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_08082b90 @ =0x0849c5d0
    ldr r1, lbl_08082b94 @ =0x06008800
    bl LZ77UncompVRAM
    ldr r0, lbl_08082b98 @ =0x040000d4
    ldr r3, lbl_08082b9c @ =0x084798a0
    str r3, [r0]
    movs r1, #0xa0
    lsls r1, r1, #0x13
    str r1, [r0, #4]
    ldr r2, lbl_08082ba0 @ =0x80000070
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_08082ba4 @ =0x05000200
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    b lbl_08082c1c
    .align 2, 0
lbl_08082b88: .4byte 0x0849c010
lbl_08082b8c: .4byte 0x06008000
lbl_08082b90: .4byte 0x0849c5d0
lbl_08082b94: .4byte 0x06008800
lbl_08082b98: .4byte 0x040000d4
lbl_08082b9c: .4byte 0x084798a0
lbl_08082ba0: .4byte 0x80000070
lbl_08082ba4: .4byte 0x05000200
lbl_08082ba8:
    ldr r1, lbl_08082bcc @ =0x04000008
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08082bd0 @ =0x08754bc4
    ldr r1, [r0]
    adds r2, r1, #0
    adds r2, #0xc0
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r2]
    adds r1, #0xc2
    movs r0, #0xa8
    lsls r0, r0, #1
    strh r0, [r1]
    b lbl_08082c1c
    .align 2, 0
lbl_08082bcc: .4byte 0x04000008
lbl_08082bd0: .4byte 0x08754bc4
lbl_08082bd4:
    ldr r0, lbl_08082be0 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    b lbl_08082c1c
    .align 2, 0
lbl_08082be0: .4byte 0x08754bc4
lbl_08082be4:
    ldr r1, lbl_08082bf0 @ =0x04000008
    movs r2, #0x88
    lsls r2, r2, #5
    adds r0, r2, #0
    strh r0, [r1]
    b lbl_08082c1c
    .align 2, 0
lbl_08082bf0: .4byte 0x04000008
lbl_08082bf4:
    ldr r0, lbl_08082c48 @ =0x08754bc4
    ldr r0, [r0]
    adds r2, r0, #0
    adds r2, #0xc0
    movs r1, #0
    strh r1, [r2]
    adds r0, #0xc2
    strh r1, [r0]
    ldr r0, lbl_08082c4c @ =0x030013a4
    strh r1, [r0]
    ldr r0, lbl_08082c50 @ =0x030013a0
    movs r2, #0xc0
    lsls r2, r2, #3
    adds r1, r2, #0
    strh r1, [r0]
    ldr r0, lbl_08082c54 @ =0x030013a2
    strh r1, [r0]
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
lbl_08082c1c:
    ldr r0, lbl_08082c48 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #2]
    cmp r0, #0
    beq lbl_08082c3c
    adds r2, r1, #0
    adds r2, #0x64
    ldrh r0, [r2]
    cmp r0, #0x4f
    bhi lbl_08082c3c
    adds r0, #8
    strh r0, [r2]
    adds r1, #0x66
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
lbl_08082c3c:
    bl tourian_escape_process_oam
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08082c48: .4byte 0x08754bc4
lbl_08082c4c: .4byte 0x030013a4
lbl_08082c50: .4byte 0x030013a0
lbl_08082c54: .4byte 0x030013a2

    thumb_func_start tourian_escape_samus_surrounded
tourian_escape_samus_surrounded: @ 0x08082c58
    push {r4, r5, lr}
    movs r5, #0
    ldr r0, lbl_08082c80 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #6]
    adds r1, r0, #1
    strh r1, [r2, #6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #3
    beq lbl_08082d20
    cmp r0, #3
    bgt lbl_08082c84
    cmp r0, #1
    beq lbl_08082ca8
    cmp r0, #1
    bgt lbl_08082cbc
    cmp r0, #0
    beq lbl_08082c98
    b lbl_08082d86
    .align 2, 0
lbl_08082c80: .4byte 0x08754bc4
lbl_08082c84:
    cmp r0, #0x20
    beq lbl_08082d6c
    cmp r0, #0x20
    bgt lbl_08082c92
    cmp r0, #4
    beq lbl_08082d38
    b lbl_08082d86
lbl_08082c92:
    cmp r0, #0x70
    beq lbl_08082d74
    b lbl_08082d86
lbl_08082c98:
    ldr r0, lbl_08082ca4 @ =0x08495308
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_08082d86
    .align 2, 0
lbl_08082ca4: .4byte 0x08495308
lbl_08082ca8:
    ldr r0, lbl_08082cb4 @ =0x0849cb90
    ldr r1, lbl_08082cb8 @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_08082d86
    .align 2, 0
lbl_08082cb4: .4byte 0x0849cb90
lbl_08082cb8: .4byte 0x06008000
lbl_08082cbc:
    ldr r0, lbl_08082cf4 @ =0x0849778c
    ldr r1, lbl_08082cf8 @ =0x06007000
    bl LZ77UncompVRAM
    ldr r0, lbl_08082cfc @ =0x0849fb70
    ldr r1, lbl_08082d00 @ =0x06007800
    bl LZ77UncompVRAM
    ldr r1, lbl_08082d04 @ =0x040000d4
    ldr r0, lbl_08082d08 @ =0x08479ac0
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08082d0c @ =0x80000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_08082d10 @ =0x030013b4
    strh r5, [r0]
    ldr r0, lbl_08082d14 @ =0x030013b6
    strh r5, [r0]
    ldr r1, lbl_08082d18 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08082d1c @ =0x030013b2
    strh r5, [r0]
    b lbl_08082d86
    .align 2, 0
lbl_08082cf4: .4byte 0x0849778c
lbl_08082cf8: .4byte 0x06007000
lbl_08082cfc: .4byte 0x0849fb70
lbl_08082d00: .4byte 0x06007800
lbl_08082d04: .4byte 0x040000d4
lbl_08082d08: .4byte 0x08479ac0
lbl_08082d0c: .4byte 0x80000100
lbl_08082d10: .4byte 0x030013b4
lbl_08082d14: .4byte 0x030013b6
lbl_08082d18: .4byte 0x030013b0
lbl_08082d1c: .4byte 0x030013b2
lbl_08082d20:
    ldr r4, lbl_08082d30 @ =0x04000208
    strh r5, [r4]
    ldr r0, lbl_08082d34 @ =sub_08081418
    bl CallbackSetVBlank
    movs r0, #1
    strh r0, [r4]
    b lbl_08082d86
    .align 2, 0
lbl_08082d30: .4byte 0x04000208
lbl_08082d34: .4byte sub_08081418
lbl_08082d38:
    ldr r1, lbl_08082d5c @ =0x04000008
    ldr r3, lbl_08082d60 @ =0x00000e01
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    adds r3, #1
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_08082d64 @ =0x00004f88
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, r2, #0
    adds r1, #0xc0
    ldr r0, lbl_08082d68 @ =0x00001501
    strh r0, [r1]
    b lbl_08082d86
    .align 2, 0
lbl_08082d5c: .4byte 0x04000008
lbl_08082d60: .4byte 0x00000e01
lbl_08082d64: .4byte 0x00004f88
lbl_08082d68: .4byte 0x00001501
lbl_08082d6c:
    ldrb r0, [r2, #2]
    adds r0, #1
    strb r0, [r2, #2]
    b lbl_08082d86
lbl_08082d74:
    adds r0, r2, #0
    adds r0, #0xc0
    strh r5, [r0]
    adds r1, r2, #0
    adds r1, #0xc2
    movs r0, #0xfc
    lsls r0, r0, #6
    strh r0, [r1]
    movs r5, #1
lbl_08082d86:
    ldr r0, lbl_08082dac @ =0x08754bc4
    ldr r0, [r0]
    ldrb r0, [r0, #2]
    cmp r0, #0
    beq lbl_08082dbe
    ldr r2, lbl_08082db0 @ =0x030013a0
    ldrh r0, [r2]
    movs r1, #0x80
    lsls r1, r1, #1
    cmp r0, r1
    bls lbl_08082db8
    subs r0, #0x50
    strh r0, [r2]
    ldr r1, lbl_08082db4 @ =0x030013a2
    ldrh r0, [r1]
    subs r0, #0x50
    strh r0, [r1]
    b lbl_08082dbe
    .align 2, 0
lbl_08082dac: .4byte 0x08754bc4
lbl_08082db0: .4byte 0x030013a0
lbl_08082db4: .4byte 0x030013a2
lbl_08082db8:
    strh r1, [r2]
    ldr r0, lbl_08082dcc @ =0x030013a2
    strh r1, [r0]
lbl_08082dbe:
    bl tourian_escape_samus_surrounded_calculate_bg2_pos
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08082dcc: .4byte 0x030013a2

    thumb_func_start tourian_escape_samus_flying_in
tourian_escape_samus_flying_in: @ 0x08082dd0
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_08082df0 @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #6]
    adds r1, r0, #1
    strh r1, [r2, #6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #1
    beq lbl_08082e30
    cmp r0, #1
    bgt lbl_08082df4
    cmp r0, #0
    beq lbl_08082dfe
    b lbl_08082edc
    .align 2, 0
lbl_08082df0: .4byte 0x08754bc4
lbl_08082df4:
    cmp r0, #2
    beq lbl_08082e40
    cmp r0, #0x20
    beq lbl_08082ed0
    b lbl_08082edc
lbl_08082dfe:
    ldr r4, lbl_08082e1c @ =0x04000208
    strh r5, [r4]
    ldr r0, lbl_08082e20 @ =sub_08081320
    bl CallbackSetVBlank
    movs r0, #1
    strh r0, [r4]
    ldr r0, lbl_08082e24 @ =0x0845fdb4
    ldr r1, lbl_08082e28 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, lbl_08082e2c @ =0x00000235
    bl SoundPlay
    b lbl_08082edc
    .align 2, 0
lbl_08082e1c: .4byte 0x04000208
lbl_08082e20: .4byte sub_08081320
lbl_08082e24: .4byte 0x0845fdb4
lbl_08082e28: .4byte 0x06010000
lbl_08082e2c: .4byte 0x00000235
lbl_08082e30:
    ldr r0, lbl_08082e3c @ =0x0846122c
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_08082edc
    .align 2, 0
lbl_08082e3c: .4byte 0x0846122c
lbl_08082e40:
    ldr r0, lbl_08082eac @ =0x084643e0
    ldr r1, lbl_08082eb0 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r0, lbl_08082eb4 @ =0x040000d4
    ldr r3, lbl_08082eb8 @ =0x0845f914
    str r3, [r0]
    movs r1, #0xa0
    lsls r1, r1, #0x13
    str r1, [r0, #4]
    ldr r2, lbl_08082ebc @ =0x80000070
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_08082ec0 @ =0x05000200
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    ldr r1, lbl_08082ec4 @ =0x04000008
    movs r2, #0xf0
    lsls r2, r2, #5
    adds r0, r2, #0
    strh r0, [r1]
    ldr r2, [r4]
    adds r1, r2, #0
    adds r1, #0xc0
    movs r3, #0
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r1]
    ldr r1, lbl_08082ec8 @ =0x030013b0
    movs r0, #9
    strh r0, [r1]
    ldr r1, lbl_08082ecc @ =0x030013b2
    movs r0, #7
    strh r0, [r1]
    movs r0, #1
    strb r0, [r2, #8]
    ldr r2, [r4]
    adds r1, r2, #0
    adds r1, #0x82
    movs r0, #0x20
    strh r0, [r1]
    subs r1, #0x32
    movs r0, #0x78
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #0x1c
    strh r0, [r1]
    adds r0, r2, #0
    adds r0, #0x46
    strb r3, [r0]
    b lbl_08082edc
    .align 2, 0
lbl_08082eac: .4byte 0x084643e0
lbl_08082eb0: .4byte 0x0600f000
lbl_08082eb4: .4byte 0x040000d4
lbl_08082eb8: .4byte 0x0845f914
lbl_08082ebc: .4byte 0x80000070
lbl_08082ec0: .4byte 0x05000200
lbl_08082ec4: .4byte 0x04000008
lbl_08082ec8: .4byte 0x030013b0
lbl_08082ecc: .4byte 0x030013b2
lbl_08082ed0:
    adds r0, r2, #0
    adds r0, #0xc0
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    movs r5, #1
lbl_08082edc:
    ldr r0, lbl_08082efc @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #8]
    adds r4, r0, #0
    cmp r1, #0
    beq lbl_08082f8e
    adds r0, r2, #0
    adds r0, #0x46
    ldrb r0, [r0]
    cmp r0, #3
    bhi lbl_08082f00
    adds r1, r2, #0
    adds r1, #0x64
    ldrh r0, [r1]
    adds r0, #8
    b lbl_08082f36
    .align 2, 0
lbl_08082efc: .4byte 0x08754bc4
lbl_08082f00:
    cmp r0, #7
    bhi lbl_08082f0e
    adds r1, r2, #0
    adds r1, #0x64
    ldrh r0, [r1]
    adds r0, #6
    b lbl_08082f36
lbl_08082f0e:
    cmp r0, #0xf
    bhi lbl_08082f1c
    adds r1, r2, #0
    adds r1, #0x64
    ldrh r0, [r1]
    adds r0, #3
    b lbl_08082f36
lbl_08082f1c:
    cmp r0, #0x13
    bhi lbl_08082f2a
    adds r1, r2, #0
    adds r1, #0x64
    ldrh r0, [r1]
    adds r0, #1
    b lbl_08082f36
lbl_08082f2a:
    cmp r0, #0x1b
    bhi lbl_08082f38
    adds r1, r2, #0
    adds r1, #0x64
    ldrh r0, [r1]
    subs r0, #1
lbl_08082f36:
    strh r0, [r1]
lbl_08082f38:
    ldr r0, [r4]
    adds r3, r0, #0
    adds r3, #0x82
    ldrh r2, [r3]
    adds r1, r2, #0
    cmp r1, #0x7f
    bhi lbl_08082f4c
    adds r0, r2, #0
    adds r0, #8
    b lbl_08082f66
lbl_08082f4c:
    ldr r0, lbl_08082f58 @ =0x0000013f
    cmp r1, r0
    bhi lbl_08082f5c
    adds r0, r2, #0
    adds r0, #0x10
    b lbl_08082f66
    .align 2, 0
lbl_08082f58: .4byte 0x0000013f
lbl_08082f5c:
    ldr r0, lbl_08082f80 @ =0x000001df
    cmp r1, r0
    bhi lbl_08082f68
    adds r0, r2, #0
    adds r0, #0x20
lbl_08082f66:
    strh r0, [r3]
lbl_08082f68:
    ldr r0, [r4]
    adds r0, #0x46
    ldrb r2, [r0]
    adds r1, r2, #1
    strb r1, [r0]
    movs r0, #7
    ands r0, r2
    cmp r0, #3
    bhi lbl_08082f88
    ldr r1, [r4]
    ldr r0, lbl_08082f84 @ =0x0845f758
    b lbl_08082f8c
    .align 2, 0
lbl_08082f80: .4byte 0x000001df
lbl_08082f84: .4byte 0x0845f758
lbl_08082f88:
    ldr r1, [r4]
    ldr r0, lbl_08082f9c @ =0x0845f77e
lbl_08082f8c:
    str r0, [r1, #0x14]
lbl_08082f8e:
    bl sub_080818cc
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08082f9c: .4byte 0x0845f77e

    thumb_func_start tourian_escape_samus_chased_by_pirates
tourian_escape_samus_chased_by_pirates: @ 0x08082fa0
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    movs r7, #0
    ldr r5, lbl_08082fd8 @ =0x08754bc4
    ldr r2, [r5]
    ldrh r0, [r2, #6]
    adds r1, r0, #1
    strh r1, [r2, #6]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0x77
    bne lbl_08082fbc
    b lbl_08083298
lbl_08082fbc:
    cmp r1, #0x77
    bgt lbl_08082ffc
    cmp r1, #3
    bne lbl_08082fc6
    b lbl_08083204
lbl_08082fc6:
    cmp r1, #3
    bgt lbl_08082fdc
    cmp r1, #1
    beq lbl_0808305c
    cmp r1, #1
    bgt lbl_08083070
    cmp r1, #0
    beq lbl_0808304a
    b lbl_080832fc
    .align 2, 0
lbl_08082fd8: .4byte 0x08754bc4
lbl_08082fdc:
    cmp r1, #0x40
    bne lbl_08082fe2
    b lbl_08083230
lbl_08082fe2:
    cmp r1, #0x40
    bgt lbl_08082fee
    cmp r1, #0x28
    bne lbl_08082fec
    b lbl_08083220
lbl_08082fec:
    b lbl_080832fc
lbl_08082fee:
    cmp r1, #0x48
    bne lbl_08082ff4
    b lbl_08083248
lbl_08082ff4:
    cmp r1, #0x74
    bne lbl_08082ffa
    b lbl_0808325a
lbl_08082ffa:
    b lbl_080832fc
lbl_08082ffc:
    cmp r1, #0xb8
    bne lbl_08083002
    b lbl_080832de
lbl_08083002:
    cmp r1, #0xb8
    bgt lbl_08083026
    cmp r1, #0xb0
    bne lbl_0808300c
    b lbl_080832c6
lbl_0808300c:
    cmp r1, #0xb0
    bgt lbl_08083018
    cmp r1, #0xa0
    bne lbl_08083016
    b lbl_080832b8
lbl_08083016:
    b lbl_080832fc
lbl_08083018:
    cmp r1, #0xb1
    bne lbl_0808301e
    b lbl_080832e4
lbl_0808301e:
    cmp r1, #0xb6
    bne lbl_08083024
    b lbl_080832d8
lbl_08083024:
    b lbl_080832fc
lbl_08083026:
    cmp r1, #0xc6
    bne lbl_0808302c
    b lbl_080832ec
lbl_0808302c:
    cmp r1, #0xc6
    bgt lbl_08083038
    cmp r1, #0xc0
    bne lbl_08083036
    b lbl_080832e8
lbl_08083036:
    b lbl_080832fc
lbl_08083038:
    cmp r1, #0xc8
    bne lbl_0808303e
    b lbl_080832f0
lbl_0808303e:
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_08083048
    b lbl_080832f4
lbl_08083048:
    b lbl_080832fc
lbl_0808304a:
    ldr r0, lbl_08083058 @ =0x0848f48c
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_080832fc
    .align 2, 0
lbl_08083058: .4byte 0x0848f48c
lbl_0808305c:
    ldr r0, lbl_08083068 @ =0x0849fd34
    ldr r1, lbl_0808306c @ =0x06010000
    bl LZ77UncompVRAM
    b lbl_080832fc
    .align 2, 0
lbl_08083068: .4byte 0x0849fd34
lbl_0808306c: .4byte 0x06010000
lbl_08083070:
    ldr r0, lbl_080831c4 @ =0x08494a04
    ldr r1, lbl_080831c8 @ =0x0600e000
    bl LZ77UncompVRAM
    ldr r1, lbl_080831cc @ =0x040000d4
    ldr r0, lbl_080831d0 @ =0x08479980
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_080831d4 @ =0x80000050
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_080831d8 @ =0x08479cc0
    str r0, [r1]
    ldr r0, lbl_080831dc @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_080831e0 @ =0x80000060
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, [r5]
    strb r7, [r0, #8]
    ldr r3, [r5]
    ldr r0, lbl_080831e4 @ =0x0847a602
    str r0, [r3, #0x14]
    adds r0, r3, #0
    adds r0, #0x50
    movs r2, #0
    movs r1, #0xdc
    strh r1, [r0]
    adds r0, #0x14
    strh r1, [r0]
    adds r0, #0x14
    strb r2, [r0]
    ldr r0, [r5]
    strb r2, [r0, #9]
    ldr r1, [r5]
    ldr r0, lbl_080831e8 @ =0x0847a622
    str r0, [r1, #0x18]
    adds r3, r1, #0
    adds r3, #0x52
    movs r0, #0x80
    lsls r0, r0, #1
    strh r0, [r3]
    adds r0, r1, #0
    adds r0, #0x66
    movs r3, #0xf0
    strh r3, [r0]
    adds r0, #0x13
    strb r2, [r0]
    ldr r0, [r5]
    strb r2, [r0, #0xa]
    ldr r4, [r5]
    ldr r0, lbl_080831ec @ =0x0847a642
    str r0, [r4, #0x1c]
    adds r1, r4, #0
    adds r1, #0x54
    movs r0, #0xb4
    strh r0, [r1]
    adds r0, r4, #0
    adds r0, #0x68
    strh r3, [r0]
    adds r0, #0x12
    strb r2, [r0]
    ldr r0, [r5]
    strb r2, [r0, #0xb]
    ldr r1, [r5]
    ldr r0, lbl_080831f0 @ =0x0847a662
    str r0, [r1, #0x20]
    adds r3, r1, #0
    adds r3, #0x56
    movs r0, #0xd4
    strh r0, [r3]
    adds r3, #0x14
    movs r0, #0xbe
    strh r0, [r3]
    adds r0, r1, #0
    adds r0, #0x7b
    strb r2, [r0]
    ldr r0, [r5]
    movs r3, #1
    strb r3, [r0, #0xc]
    ldr r0, [r5]
    adds r0, #0x40
    strb r2, [r0]
    ldr r0, [r5]
    movs r2, #2
    strb r2, [r0, #0xd]
    ldr r0, [r5]
    adds r0, #0x41
    movs r1, #6
    strb r1, [r0]
    ldr r0, [r5]
    strb r3, [r0, #0xe]
    ldr r0, [r5]
    adds r0, #0x42
    movs r1, #0xe
    strb r1, [r0]
    ldr r0, [r5]
    strb r3, [r0, #0xf]
    ldr r0, [r5]
    adds r0, #0x43
    movs r1, #9
    strb r1, [r0]
    ldr r0, [r5]
    strb r2, [r0, #0x10]
    ldr r0, [r5]
    adds r0, #0x44
    movs r1, #3
    strb r1, [r0]
    ldr r0, [r5]
    strb r2, [r0, #0x11]
    ldr r0, [r5]
    adds r0, #0x45
    movs r1, #0xb
    strb r1, [r0]
    movs r5, #4
    ldr r6, lbl_080831f4 @ =0x0847ce20
    adds r0, r6, #4
    mov r8, r0
lbl_08083160:
    ldr r0, lbl_080831f8 @ =0x08754bc4
    ldr r0, [r0]
    mov ip, r0
    lsls r4, r5, #1
    mov r2, ip
    adds r2, #0x50
    adds r2, r2, r4
    mov r3, ip
    adds r3, #0x3c
    adds r3, r3, r5
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    adds r0, r0, r6
    ldrh r0, [r0]
    strh r0, [r2]
    mov r2, ip
    adds r2, #0x64
    adds r2, r2, r4
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    adds r1, r6, #2
    adds r0, r0, r1
    ldrh r0, [r0]
    strh r0, [r2]
    mov r2, ip
    adds r2, #0x96
    adds r2, r2, r4
    ldrb r1, [r3]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #1
    add r0, r8
    ldrh r0, [r0]
    strh r0, [r2]
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #9
    bls lbl_08083160
    ldr r0, lbl_080831fc @ =0x030013b4
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_08083200 @ =0x030013b6
    strh r1, [r0]
    b lbl_080832fc
    .align 2, 0
lbl_080831c4: .4byte 0x08494a04
lbl_080831c8: .4byte 0x0600e000
lbl_080831cc: .4byte 0x040000d4
lbl_080831d0: .4byte 0x08479980
lbl_080831d4: .4byte 0x80000050
lbl_080831d8: .4byte 0x08479cc0
lbl_080831dc: .4byte 0x05000200
lbl_080831e0: .4byte 0x80000060
lbl_080831e4: .4byte 0x0847a602
lbl_080831e8: .4byte 0x0847a622
lbl_080831ec: .4byte 0x0847a642
lbl_080831f0: .4byte 0x0847a662
lbl_080831f4: .4byte 0x0847ce20
lbl_080831f8: .4byte 0x08754bc4
lbl_080831fc: .4byte 0x030013b4
lbl_08083200: .4byte 0x030013b6
lbl_08083204:
    ldr r1, lbl_0808321c @ =0x04000008
    movs r3, #0xe0
    lsls r3, r3, #5
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, r2, #0
    adds r1, #0xc0
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r1]
    b lbl_080832fc
    .align 2, 0
lbl_0808321c: .4byte 0x04000008
lbl_08083220:
    movs r0, #1
    strb r0, [r2, #8]
    ldr r0, lbl_0808322c @ =0x00000236
    bl SoundPlay
    b lbl_080832fc
    .align 2, 0
lbl_0808322c: .4byte 0x00000236
lbl_08083230:
    movs r1, #1
    strb r1, [r2, #9]
    ldr r0, [r5]
    strb r1, [r0, #0xa]
    ldr r0, [r5]
    strb r1, [r0, #0xb]
    ldr r0, lbl_08083244 @ =0x00000237
    bl SoundPlay
    b lbl_080832fc
    .align 2, 0
lbl_08083244: .4byte 0x00000237
lbl_08083248:
    strb r7, [r2, #8]
    ldr r1, [r5]
    adds r2, r1, #0
    adds r2, #0x50
    movs r0, #0xe8
    lsls r0, r0, #1
    strh r0, [r2]
    adds r1, #0x64
    b lbl_080832ac
lbl_0808325a:
    strb r7, [r2, #9]
    ldr r2, [r5]
    ldr r0, lbl_08083290 @ =0x0847a5d4
    str r0, [r2, #0x18]
    adds r3, r2, #0
    adds r3, #0x52
    movs r1, #0
    movs r0, #0xd8
    lsls r0, r0, #1
    strh r0, [r3]
    adds r0, r2, #0
    adds r0, #0x66
    movs r3, #0xe0
    strh r3, [r0]
    strb r1, [r2, #0xa]
    ldr r1, [r5]
    ldr r0, lbl_08083294 @ =0x0847a5f4
    str r0, [r1, #0x1c]
    adds r2, r1, #0
    adds r2, #0x54
    movs r0, #0xf8
    lsls r0, r0, #1
    strh r0, [r2]
    adds r1, #0x68
    strh r3, [r1]
    b lbl_080832fc
    .align 2, 0
lbl_08083290: .4byte 0x0847a5d4
lbl_08083294: .4byte 0x0847a5f4
lbl_08083298:
    strb r7, [r2, #0xb]
    ldr r1, [r5]
    ldr r0, lbl_080832b4 @ =0x0847a5f4
    str r0, [r1, #0x20]
    adds r2, r1, #0
    adds r2, #0x56
    movs r0, #0xd8
    lsls r0, r0, #1
    strh r0, [r2]
    adds r1, #0x6a
lbl_080832ac:
    movs r0, #0xe0
    strh r0, [r1]
    b lbl_080832fc
    .align 2, 0
lbl_080832b4: .4byte 0x0847a5f4
lbl_080832b8:
    movs r0, #2
    strb r0, [r2, #8]
    movs r0, #0x8e
    lsls r0, r0, #2
    bl SoundPlay
    b lbl_080832fc
lbl_080832c6:
    movs r0, #2
    strb r0, [r2, #9]
    ldr r0, lbl_080832d4 @ =0x00000239
    bl SoundPlay
    b lbl_080832fc
    .align 2, 0
lbl_080832d4: .4byte 0x00000239
lbl_080832d8:
    movs r0, #2
    strb r0, [r2, #0xa]
    b lbl_080832fc
lbl_080832de:
    movs r0, #2
    strb r0, [r2, #0xb]
    b lbl_080832fc
lbl_080832e4:
    strb r7, [r2, #8]
    b lbl_080832fc
lbl_080832e8:
    strb r7, [r2, #9]
    b lbl_080832fc
lbl_080832ec:
    strb r7, [r2, #0xa]
    b lbl_080832fc
lbl_080832f0:
    strb r7, [r2, #0xb]
    b lbl_080832fc
lbl_080832f4:
    adds r0, r2, #0
    adds r0, #0xc0
    strh r7, [r0]
    movs r7, #1
lbl_080832fc:
    ldr r2, lbl_08083340 @ =0x08754bc4
    ldr r0, [r2]
    ldrh r1, [r0, #6]
    movs r0, #7
    ands r0, r1
    adds r4, r2, #0
    cmp r0, #0
    bne lbl_08083314
    ldr r1, lbl_08083344 @ =0x030013b4
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_08083314:
    movs r5, #0
lbl_08083316:
    ldr r3, [r4]
    adds r0, r3, #0
    adds r0, #8
    adds r0, r0, r5
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08083348
    lsls r2, r5, #1
    adds r1, r3, #0
    adds r1, #0x50
    adds r1, r1, r2
    ldrh r0, [r1]
    subs r0, #6
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0x64
    adds r1, r1, r2
    ldrh r0, [r1]
    adds r0, #6
    b lbl_08083364
    .align 2, 0
lbl_08083340: .4byte 0x08754bc4
lbl_08083344: .4byte 0x030013b4
lbl_08083348:
    cmp r0, #2
    bne lbl_08083366
    lsls r2, r5, #1
    adds r1, r3, #0
    adds r1, #0x50
    adds r1, r1, r2
    ldrh r0, [r1]
    adds r0, #0xe
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0x64
    adds r1, r1, r2
    ldrh r0, [r1]
    subs r0, #0xe
lbl_08083364:
    strh r0, [r1]
lbl_08083366:
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #3
    bls lbl_08083316
    ldr r0, [r4]
    ldrb r0, [r0, #0xc]
    cmp r0, #0
    beq lbl_0808337e
    movs r0, #0
    bl sub_08081788
lbl_0808337e:
    ldr r2, [r4]
    ldrb r0, [r2, #8]
    cmp r0, #2
    bne lbl_080833ac
    adds r0, r2, #0
    adds r0, #0x46
    ldrb r0, [r0]
    cmp r0, #3
    bhi lbl_08083398
    ldr r0, lbl_08083394 @ =0x0847a588
    b lbl_0808339a
    .align 2, 0
lbl_08083394: .4byte 0x0847a588
lbl_08083398:
    ldr r0, lbl_080833bc @ =0x0847a5ae
lbl_0808339a:
    str r0, [r2, #0x14]
    ldr r0, lbl_080833c0 @ =0x08754bc4
    ldr r2, [r0]
    adds r2, #0x46
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    strb r0, [r2]
lbl_080833ac:
    bl tourian_escape_process_oam
    adds r0, r7, #0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080833bc: .4byte 0x0847a5ae
lbl_080833c0: .4byte 0x08754bc4

    thumb_func_start tourian_escape_samus_chased_pirates_firing
tourian_escape_samus_chased_pirates_firing: @ 0x080833c4
    push {r4, r5, r6, lr}
    movs r6, #0
    ldr r4, lbl_080833f0 @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #6]
    adds r1, r0, #1
    strh r1, [r2, #6]
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0x7e
    bne lbl_080833dc
    b lbl_08083564
lbl_080833dc:
    cmp r3, #0x7e
    bgt lbl_08083402
    cmp r3, #1
    beq lbl_0808343c
    cmp r3, #1
    bgt lbl_080833f4
    cmp r3, #0
    beq lbl_08083428
    b lbl_0808358a
    .align 2, 0
lbl_080833f0: .4byte 0x08754bc4
lbl_080833f4:
    cmp r3, #2
    bne lbl_080833fa
    b lbl_08083530
lbl_080833fa:
    cmp r3, #0x78
    bne lbl_08083400
    b lbl_08083550
lbl_08083400:
    b lbl_0808358a
lbl_08083402:
    cmp r3, #0xc0
    bne lbl_08083408
    b lbl_08083574
lbl_08083408:
    cmp r3, #0xc0
    bgt lbl_08083414
    cmp r3, #0xa0
    bne lbl_08083412
    b lbl_08083558
lbl_08083412:
    b lbl_0808358a
lbl_08083414:
    movs r0, #0xb8
    lsls r0, r0, #1
    cmp r3, r0
    bne lbl_0808341e
    b lbl_0808357c
lbl_0808341e:
    adds r0, #0x10
    cmp r3, r0
    bne lbl_08083426
    b lbl_08083588
lbl_08083426:
    b lbl_0808358a
lbl_08083428:
    ldr r0, lbl_08083434 @ =0x084a2460
    ldr r1, lbl_08083438 @ =0x06010000
    bl LZ77UncompVRAM
    b lbl_0808358a
    .align 2, 0
lbl_08083434: .4byte 0x084a2460
lbl_08083438: .4byte 0x06010000
lbl_0808343c:
    ldr r1, lbl_08083508 @ =0x040000d4
    ldr r0, lbl_0808350c @ =0x08479d80
    str r0, [r1]
    ldr r0, lbl_08083510 @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_08083514 @ =0x80000040
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    strb r3, [r2, #8]
    ldr r0, [r4]
    mov ip, r0
    adds r0, #0x50
    movs r2, #0x78
    strh r2, [r0]
    mov r1, ip
    adds r1, #0x64
    movs r0, #0x60
    strh r0, [r1]
    adds r1, #0x1e
    movs r0, #0xc0
    strh r0, [r1]
    mov r1, ip
    strb r3, [r1, #9]
    ldr r0, [r4]
    mov ip, r0
    adds r0, #0x52
    strh r2, [r0]
    mov r1, ip
    adds r1, #0x66
    movs r0, #0x20
    strh r0, [r1]
    adds r1, #0x1e
    adds r0, #0xe0
    strh r0, [r1]
    mov r1, ip
    strb r3, [r1, #0xc]
    ldr r0, [r4]
    movs r1, #2
    strb r1, [r0, #0xd]
    ldr r0, [r4]
    strb r1, [r0, #0xe]
    ldr r0, [r4]
    strb r3, [r0, #0xf]
    ldr r0, [r4]
    strb r1, [r0, #0x10]
    ldr r0, [r4]
    strb r3, [r0, #0x11]
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0x50
    ldrh r0, [r0]
    lsls r0, r0, #3
    adds r1, r2, #0
    adds r1, #0x54
    strh r0, [r1]
    adds r0, r2, #0
    adds r0, #0x64
    ldrh r0, [r0]
    lsls r0, r0, #3
    adds r1, #0x14
    strh r0, [r1]
    ldr r1, lbl_08083518 @ =0x0847cfa4
    adds r3, r2, #0
    adds r3, #0x3f
    ldrb r0, [r3]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    adds r1, r2, #0
    adds r1, #0x9a
    strh r0, [r1]
    ldr r1, lbl_0808351c @ =0x0847cfb4
    ldrb r0, [r3]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    adds r1, r2, #0
    adds r1, #0xae
    strh r0, [r1]
    ldr r1, lbl_08083520 @ =0x0847cfc4
    ldrb r0, [r3]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    adds r0, r2, #0
    adds r0, #0x9c
    strh r1, [r0]
    ldr r1, lbl_08083524 @ =0x0847cfd4
    ldrb r0, [r3]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    adds r0, r2, #0
    adds r0, #0xb0
    strh r1, [r0]
    ldr r1, lbl_08083528 @ =0x030013b4
    movs r0, #0x30
    strh r0, [r1]
    ldr r1, lbl_0808352c @ =0x030013b6
    movs r0, #0x50
    strh r0, [r1]
    b lbl_0808358a
    .align 2, 0
lbl_08083508: .4byte 0x040000d4
lbl_0808350c: .4byte 0x08479d80
lbl_08083510: .4byte 0x05000200
lbl_08083514: .4byte 0x80000040
lbl_08083518: .4byte 0x0847cfa4
lbl_0808351c: .4byte 0x0847cfb4
lbl_08083520: .4byte 0x0847cfc4
lbl_08083524: .4byte 0x0847cfd4
lbl_08083528: .4byte 0x030013b4
lbl_0808352c: .4byte 0x030013b6
lbl_08083530:
    adds r1, r2, #0
    adds r1, #0xc0
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r1]
    ldr r0, lbl_0808354c @ =0x0000023a
    bl SoundPlay
    movs r0, #0x92
    lsls r0, r0, #2
    bl SoundPlay
    b lbl_0808358a
    .align 2, 0
lbl_0808354c: .4byte 0x0000023a
lbl_08083550:
    ldrb r0, [r2, #9]
    adds r0, #1
    strb r0, [r2, #9]
    b lbl_0808358a
lbl_08083558:
    adds r0, r2, #0
    adds r0, #0x46
    strb r6, [r0]
    ldr r0, [r4]
    adds r0, #0x3c
    strb r6, [r0]
lbl_08083564:
    ldr r0, lbl_08083570 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    b lbl_0808358a
    .align 2, 0
lbl_08083570: .4byte 0x08754bc4
lbl_08083574:
    adds r0, r2, #0
    adds r0, #0xc0
    strh r6, [r0]
    b lbl_0808358a
lbl_0808357c:
    ldr r0, lbl_08083584 @ =0x0000023b
    bl SoundPlay
    b lbl_0808358a
    .align 2, 0
lbl_08083584: .4byte 0x0000023b
lbl_08083588:
    movs r6, #1
lbl_0808358a:
    ldr r2, lbl_0808363c @ =0x08754bc4
    ldr r0, [r2]
    ldrh r1, [r0, #6]
    movs r0, #7
    ands r0, r1
    adds r5, r2, #0
    cmp r0, #0
    bne lbl_080835a2
    ldr r1, lbl_08083640 @ =0x030013b6
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_080835a2:
    ldr r3, [r5]
    ldrb r0, [r3, #8]
    cmp r0, #0
    bne lbl_080835ac
    b lbl_080837c0
lbl_080835ac:
    cmp r0, #1
    beq lbl_080835b2
    b lbl_0808372c
lbl_080835b2:
    movs r2, #0x9a
    adds r2, r2, r3
    mov ip, r2
    movs r0, #0
    ldrsh r2, [r2, r0]
    cmp r2, #0x30
    ble lbl_080835c2
    movs r2, #0x30
lbl_080835c2:
    movs r0, #0x30
    rsbs r0, r0, #0
    cmp r2, r0
    bge lbl_080835cc
    adds r2, r0, #0
lbl_080835cc:
    adds r0, r3, #0
    adds r0, #0x54
    ldrh r1, [r0]
    adds r1, r1, r2
    strh r1, [r0]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x13
    subs r0, #4
    strh r1, [r0]
    adds r4, r3, #0
    adds r4, #0xae
    movs r1, #0
    ldrsh r2, [r4, r1]
    cmp r2, #0x18
    ble lbl_080835ec
    movs r2, #0x18
lbl_080835ec:
    movs r0, #0x18
    rsbs r0, r0, #0
    cmp r2, r0
    bge lbl_080835f6
    adds r2, r0, #0
lbl_080835f6:
    adds r1, r3, #0
    adds r1, #0x68
    ldrh r0, [r1]
    adds r0, r0, r2
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x13
    subs r1, #4
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0x9c
    ldrh r0, [r0]
    mov r2, ip
    ldrh r2, [r2]
    adds r0, r0, r2
    mov r1, ip
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0xb0
    ldrh r0, [r0]
    ldrh r2, [r4]
    adds r0, r0, r2
    strh r0, [r4]
    movs r4, #0
    adds r0, r3, #0
    adds r0, #0x3e
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_0808365a
    cmp r0, #1
    bgt lbl_08083644
    cmp r0, #0
    beq lbl_0808364e
    b lbl_08083684
    .align 2, 0
lbl_0808363c: .4byte 0x08754bc4
lbl_08083640: .4byte 0x030013b6
lbl_08083644:
    cmp r0, #2
    beq lbl_08083678
    cmp r0, #3
    beq lbl_0808365a
    b lbl_08083684
lbl_0808364e:
    mov r1, ip
    movs r2, #0
    ldrsh r0, [r1, r2]
    cmp r0, #0
    blt lbl_08083684
    b lbl_08083682
lbl_0808365a:
    ldr r0, [r5]
    adds r0, #0x48
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #0x13
    bls lbl_08083684
    ldr r0, [r5]
    adds r0, #0x48
    movs r1, #0
    strb r1, [r0]
    movs r4, #2
    b lbl_08083684
lbl_08083678:
    mov r1, ip
    movs r2, #0
    ldrsh r0, [r1, r2]
    cmp r0, #0
    bgt lbl_08083684
lbl_08083682:
    movs r4, #1
lbl_08083684:
    cmp r4, #1
    bne lbl_080836a0
    ldr r1, [r5]
    adds r1, #0x3e
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x9c
    strh r2, [r1]
    adds r0, #0xb0
    strh r2, [r0]
lbl_080836a0:
    cmp r4, #2
    bne lbl_08083712
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x3e
    ldrb r0, [r1]
    cmp r0, #2
    bhi lbl_080836b4
    adds r0, #1
    b lbl_080836b6
lbl_080836b4:
    movs r0, #0
lbl_080836b6:
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x3f
    ldrb r0, [r1]
    cmp r0, #6
    bhi lbl_080836c8
    adds r0, #1
    b lbl_080836ca
lbl_080836c8:
    movs r0, #0
lbl_080836ca:
    strb r0, [r1]
    ldr r3, [r5]
    ldr r1, lbl_08083744 @ =0x0847cfa4
    adds r2, r3, #0
    adds r2, #0x3f
    ldrb r0, [r2]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    adds r1, r3, #0
    adds r1, #0x9a
    strh r0, [r1]
    ldr r1, lbl_08083748 @ =0x0847cfb4
    ldrb r0, [r2]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r0, [r0]
    adds r1, r3, #0
    adds r1, #0xae
    strh r0, [r1]
    ldr r1, lbl_0808374c @ =0x0847cfc4
    ldrb r0, [r2]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    adds r0, r3, #0
    adds r0, #0x9c
    strh r1, [r0]
    ldr r1, lbl_08083750 @ =0x0847cfd4
    ldrb r0, [r2]
    lsls r0, r0, #1
    adds r0, r0, r1
    ldrh r1, [r0]
    adds r0, r3, #0
    adds r0, #0xb0
    strh r1, [r0]
lbl_08083712:
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x46
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0808372c
    adds r1, r2, #0
    adds r1, #0x82
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
lbl_0808372c:
    ldr r1, [r5]
    ldrb r0, [r1, #8]
    cmp r0, #2
    bhi lbl_08083754
    adds r1, #0x3c
    ldrb r0, [r1]
    cmp r0, #0xe
    bls lbl_0808379c
    movs r0, #0
    strb r0, [r1]
    b lbl_0808379c
    .align 2, 0
lbl_08083744: .4byte 0x0847cfa4
lbl_08083748: .4byte 0x0847cfb4
lbl_0808374c: .4byte 0x0847cfc4
lbl_08083750: .4byte 0x0847cfd4
lbl_08083754:
    adds r1, #0x3c
    ldrb r0, [r1]
    cmp r0, #0x16
    bls lbl_08083760
    movs r0, #0x17
    strb r0, [r1]
lbl_08083760:
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x46
    ldrb r0, [r0]
    cmp r0, #3
    bhi lbl_08083774
    adds r1, #0x64
    ldrh r0, [r1]
    adds r0, #4
    b lbl_08083786
lbl_08083774:
    cmp r0, #7
    bhi lbl_08083780
    adds r1, #0x64
    ldrh r0, [r1]
    adds r0, #2
    b lbl_08083786
lbl_08083780:
    adds r1, #0x64
    ldrh r0, [r1]
    adds r0, #1
lbl_08083786:
    strh r0, [r1]
    ldr r0, [r5]
    adds r2, r0, #0
    adds r2, #0x82
    ldrh r1, [r2]
    ldr r0, lbl_08083814 @ =0x000001f7
    cmp r1, r0
    bhi lbl_0808379c
    adds r0, r1, #0
    adds r0, #8
    strh r0, [r2]
lbl_0808379c:
    ldr r3, [r5]
    adds r2, r3, #0
    adds r2, #0x3c
    ldrb r0, [r2]
    lsrs r4, r0, #2
    ldr r1, lbl_08083818 @ =0x0847cf70
    lsls r0, r4, #2
    adds r0, r0, r1
    ldr r0, [r0]
    str r0, [r3, #0x14]
    ldrb r0, [r2]
    adds r0, #1
    strb r0, [r2]
    ldr r1, [r5]
    adds r1, #0x46
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_080837c0:
    ldr r0, [r5]
    ldrb r0, [r0, #0xc]
    cmp r0, #0
    beq lbl_080837ce
    movs r0, #1
    bl sub_08081788
lbl_080837ce:
    ldr r1, [r5]
    ldrb r0, [r1, #9]
    cmp r0, #0
    beq lbl_08083852
    movs r4, #0
    adds r0, r1, #0
    adds r0, #0x84
    ldrh r0, [r0]
    cmp r0, #0xa0
    bls lbl_080837f4
    adds r1, #0x3d
    ldrb r0, [r1]
    cmp r0, #0x1a
    bls lbl_080837ec
    strb r4, [r1]
lbl_080837ec:
    ldr r0, [r5]
    adds r0, #0x3d
    ldrb r0, [r0]
    lsrs r4, r0, #2
lbl_080837f4:
    ldr r2, lbl_0808381c @ =0x08754bc4
    ldr r3, [r2]
    ldr r1, lbl_08083820 @ =0x0847cf88
    lsls r0, r4, #2
    adds r0, r0, r1
    ldr r0, [r0]
    str r0, [r3, #0x18]
    ldrb r0, [r3, #9]
    adds r5, r2, #0
    cmp r0, #1
    bne lbl_08083824
    adds r1, r3, #0
    adds r1, #0x84
    ldrh r0, [r1]
    subs r0, #1
    b lbl_0808382c
    .align 2, 0
lbl_08083814: .4byte 0x000001f7
lbl_08083818: .4byte 0x0847cf70
lbl_0808381c: .4byte 0x08754bc4
lbl_08083820: .4byte 0x0847cf88
lbl_08083824:
    adds r1, r3, #0
    adds r1, #0x84
    ldrh r0, [r1]
    subs r0, #2
lbl_0808382c:
    strh r0, [r1]
    ldr r1, [r5]
    adds r0, r1, #0
    adds r0, #0x84
    ldrh r0, [r0]
    cmp r0, #7
    bhi lbl_0808383e
    movs r0, #0
    strb r0, [r1, #9]
lbl_0808383e:
    ldr r1, [r5]
    adds r1, #0x3d
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r1, [r5]
    adds r1, #0x47
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_08083852:
    bl sub_080818cc
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start tourian_escape_samus_getting_shot
tourian_escape_samus_getting_shot: @ 0x08083860
    push {r4, r5, r6, r7, lr}
    movs r6, #0
    ldr r4, lbl_0808388c @ =0x08754bc4
    ldr r3, [r4]
    ldrh r0, [r3, #6]
    adds r1, r0, #1
    strh r1, [r3, #6]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0x18
    bne lbl_08083878
    b lbl_0808397c
lbl_08083878:
    cmp r1, #0x18
    bgt lbl_0808389a
    cmp r1, #1
    beq lbl_080838d4
    cmp r1, #1
    bgt lbl_08083890
    cmp r1, #0
    beq lbl_080838c0
    b lbl_08083a38
    .align 2, 0
lbl_0808388c: .4byte 0x08754bc4
lbl_08083890:
    cmp r1, #2
    beq lbl_080838f8
    cmp r1, #3
    beq lbl_08083948
    b lbl_08083a38
lbl_0808389a:
    cmp r1, #0x88
    bne lbl_080838a0
    b lbl_080839da
lbl_080838a0:
    cmp r1, #0x88
    bgt lbl_080838ac
    cmp r1, #0x80
    bne lbl_080838aa
    b lbl_080839d0
lbl_080838aa:
    b lbl_08083a38
lbl_080838ac:
    movs r0, #0xa8
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_080838b6
    b lbl_080839ec
lbl_080838b6:
    adds r0, #0x40
    cmp r1, r0
    bne lbl_080838be
    b lbl_08083a30
lbl_080838be:
    b lbl_08083a38
lbl_080838c0:
    ldr r0, lbl_080838cc @ =0x084a4400
    ldr r1, lbl_080838d0 @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_08083a38
    .align 2, 0
lbl_080838cc: .4byte 0x084a4400
lbl_080838d0: .4byte 0x06008000
lbl_080838d4:
    ldr r0, lbl_080838ec @ =0x084a3b34
    ldr r1, lbl_080838f0 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, [r4]
    adds r0, #0xc2
    movs r1, #0xff
    strh r1, [r0]
    ldr r1, lbl_080838f4 @ =0x030013ae
    movs r0, #0x10
    strh r0, [r1]
    b lbl_08083a38
    .align 2, 0
lbl_080838ec: .4byte 0x084a3b34
lbl_080838f0: .4byte 0x06010000
lbl_080838f4: .4byte 0x030013ae
lbl_080838f8:
    ldr r0, lbl_08083928 @ =0x084a72dc
    ldr r1, lbl_0808392c @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r1, lbl_08083930 @ =0x040000d4
    ldr r0, lbl_08083934 @ =0x08479a20
    str r0, [r1]
    ldr r0, lbl_08083938 @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_0808393c @ =0x80000050
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r1, lbl_08083940 @ =0x030013b4
    movs r0, #0x60
    strh r0, [r1]
    ldr r1, lbl_08083944 @ =0x030013b6
    movs r0, #0x30
    strh r0, [r1]
    ldr r1, [r4]
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    b lbl_08083a38
    .align 2, 0
lbl_08083928: .4byte 0x084a72dc
lbl_0808392c: .4byte 0x0600f000
lbl_08083930: .4byte 0x040000d4
lbl_08083934: .4byte 0x08479a20
lbl_08083938: .4byte 0x05000200
lbl_0808393c: .4byte 0x80000050
lbl_08083940: .4byte 0x030013b4
lbl_08083944: .4byte 0x030013b6
lbl_08083948:
    ldr r1, lbl_08083978 @ =0x04000008
    movs r2, #0xe0
    lsls r2, r2, #5
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0xc0
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r1]
    movs r2, #1
    strb r2, [r3, #0xc]
    ldr r0, [r4]
    movs r1, #2
    strb r1, [r0, #0xd]
    ldr r0, [r4]
    strb r1, [r0, #0xe]
    ldr r0, [r4]
    strb r2, [r0, #0xf]
    ldr r0, [r4]
    strb r1, [r0, #0x10]
    ldr r0, [r4]
    strb r2, [r0, #0x11]
    b lbl_08083a38
    .align 2, 0
lbl_08083978: .4byte 0x04000008
lbl_0808397c:
    ldrb r0, [r3, #8]
    adds r0, #1
    strb r0, [r3, #8]
    ldr r3, [r4]
    ldr r0, lbl_080839c8 @ =0x0847a904
    str r0, [r3, #0x14]
    adds r1, r3, #0
    adds r1, #0x50
    movs r2, #0
    ldr r0, lbl_080839cc @ =0x0000012d
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #0xae
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0x78
    strb r2, [r0]
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0x50
    ldrh r0, [r0]
    lsls r0, r0, #5
    adds r1, r2, #0
    adds r1, #0x52
    strh r0, [r1]
    adds r0, r2, #0
    adds r0, #0x64
    ldrh r0, [r0]
    lsls r0, r0, #5
    adds r1, #2
    strh r0, [r1]
    adds r1, #0x44
    movs r0, #0x38
    strh r0, [r1]
    adds r1, #2
    movs r0, #0x1c
    strh r0, [r1]
    b lbl_08083a38
    .align 2, 0
lbl_080839c8: .4byte 0x0847a904
lbl_080839cc: .4byte 0x0000012d
lbl_080839d0:
    adds r0, r3, #0
    adds r0, #0x98
    strh r6, [r0]
    adds r0, #2
    strh r6, [r0]
lbl_080839da:
    ldr r0, lbl_080839e8 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    b lbl_08083a38
    .align 2, 0
lbl_080839e8: .4byte 0x08754bc4
lbl_080839ec:
    ldr r1, lbl_08083a20 @ =0x040000d4
    ldr r0, lbl_08083a24 @ =0x08479a20
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08083a28 @ =0x80000050
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xca
    ldr r2, lbl_08083a2c @ =0x00001e09
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0xc0
    movs r2, #0
    movs r0, #0x90
    lsls r0, r0, #5
    strh r0, [r1]
    strb r2, [r3, #8]
    movs r0, #0x8f
    lsls r0, r0, #2
    bl SoundPlay
    b lbl_08083a38
    .align 2, 0
lbl_08083a20: .4byte 0x040000d4
lbl_08083a24: .4byte 0x08479a20
lbl_08083a28: .4byte 0x80000050
lbl_08083a2c: .4byte 0x00001e09
lbl_08083a30:
    adds r0, r3, #0
    adds r0, #0xc0
    strh r6, [r0]
    movs r6, #1
lbl_08083a38:
    ldr r0, lbl_08083a60 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #1]
    adds r7, r0, #0
    cmp r1, #0
    beq lbl_08083a72
    ldr r5, lbl_08083a64 @ =0x030013ae
    ldrh r4, [r5]
    adds r3, r4, #0
    cmp r3, #0
    beq lbl_08083a68
    ldrh r1, [r2, #6]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08083a86
    subs r0, r4, #1
    strh r0, [r5]
    b lbl_08083a72
    .align 2, 0
lbl_08083a60: .4byte 0x08754bc4
lbl_08083a64: .4byte 0x030013ae
lbl_08083a68:
    adds r1, r2, #0
    adds r1, #0xc2
    movs r0, #0
    strh r3, [r1]
    strb r0, [r2, #1]
lbl_08083a72:
    ldr r0, [r7]
    ldrh r1, [r0, #6]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08083a86
    ldr r1, lbl_08083afc @ =0x030013b4
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_08083a86:
    ldr r0, [r7]
    ldrb r0, [r0, #0xc]
    cmp r0, #0
    beq lbl_08083a94
    movs r0, #0
    bl sub_08081788
lbl_08083a94:
    ldr r3, [r7]
    ldrb r2, [r3, #8]
    cmp r2, #1
    bne lbl_08083b04
    ldrh r0, [r3, #6]
    cmp r0, #0x6f
    bls lbl_08083abe
    adds r0, r3, #0
    adds r0, #0x98
    ldrh r1, [r0]
    subs r1, #1
    strh r1, [r0]
    ldrh r0, [r3, #6]
    ands r2, r0
    cmp r2, #0
    beq lbl_08083abe
    adds r1, r3, #0
    adds r1, #0x9a
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_08083abe:
    ldr r0, lbl_08083b00 @ =0x08754bc4
    ldr r3, [r0]
    movs r0, #0x52
    adds r0, r0, r3
    mov ip, r0
    adds r1, r3, #0
    adds r1, #0x98
    ldrh r0, [r0]
    ldrh r1, [r1]
    subs r0, r0, r1
    mov r1, ip
    strh r0, [r1]
    adds r2, r3, #0
    adds r2, #0x54
    adds r1, r3, #0
    adds r1, #0x9a
    ldrh r0, [r2]
    ldrh r1, [r1]
    subs r0, r0, r1
    strh r0, [r2]
    mov r1, ip
    ldrh r0, [r1]
    lsrs r0, r0, #5
    adds r1, r3, #0
    adds r1, #0x50
    strh r0, [r1]
    ldrh r0, [r2]
    lsrs r0, r0, #5
    adds r1, #0x14
    strh r0, [r1]
    b lbl_08083d04
    .align 2, 0
lbl_08083afc: .4byte 0x030013b4
lbl_08083b00: .4byte 0x08754bc4
lbl_08083b04:
    cmp r2, #3
    beq lbl_08083b0a
    b lbl_08083d04
lbl_08083b0a:
    adds r0, r3, #0
    adds r0, #0x3d
    ldrb r0, [r0]
    cmp r0, #5
    bhi lbl_08083bee
    lsls r0, r0, #2
    ldr r1, lbl_08083b20 @ =lbl_08083b24
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08083b20: .4byte lbl_08083b24
lbl_08083b24: @ jump table
    .4byte lbl_08083b3c @ case 0
    .4byte lbl_08083b64 @ case 1
    .4byte lbl_08083b78 @ case 2
    .4byte lbl_08083bb2 @ case 3
    .4byte lbl_08083bd0 @ case 4
    .4byte lbl_08083b78 @ case 5
lbl_08083b3c:
    ldr r2, lbl_08083b5c @ =0x08754bc4
    ldr r4, [r2]
    adds r1, r4, #0
    adds r1, #0x98
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
    lsls r0, r0, #0x10
    ldr r1, lbl_08083b60 @ =0xffe50000
    adds r7, r2, #0
    cmp r0, r1
    bge lbl_08083bee
    adds r1, r4, #0
    adds r1, #0x3d
    b lbl_08083be8
    .align 2, 0
lbl_08083b5c: .4byte 0x08754bc4
lbl_08083b60: .4byte 0xffe50000
lbl_08083b64:
    ldr r2, lbl_08083b74 @ =0x08754bc4
    ldr r3, [r2]
    adds r1, r3, #0
    adds r1, #0x98
    ldrh r0, [r1]
    adds r0, #1
    b lbl_08083bdc
    .align 2, 0
lbl_08083b74: .4byte 0x08754bc4
lbl_08083b78:
    ldr r3, lbl_08083ba0 @ =0x08754bc4
    ldr r0, [r3]
    adds r0, #0x49
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r7, r3, #0
    cmp r1, #3
    bls lbl_08083bee
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x3d
    ldrb r0, [r1]
    cmp r0, #2
    bne lbl_08083ba4
    adds r0, #1
    b lbl_08083ba6
    .align 2, 0
lbl_08083ba0: .4byte 0x08754bc4
lbl_08083ba4:
    movs r0, #0
lbl_08083ba6:
    strb r0, [r1]
    ldr r0, [r7]
    adds r0, #0x49
    movs r1, #0
    strb r1, [r0]
    b lbl_08083bee
lbl_08083bb2:
    ldr r2, lbl_08083bcc @ =0x08754bc4
    ldr r3, [r2]
    adds r1, r3, #0
    adds r1, #0x98
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    adds r7, r2, #0
    cmp r0, #0x27
    ble lbl_08083bee
    b lbl_08083be6
    .align 2, 0
lbl_08083bcc: .4byte 0x08754bc4
lbl_08083bd0:
    ldr r2, lbl_08083c30 @ =0x08754bc4
    ldr r3, [r2]
    adds r1, r3, #0
    adds r1, #0x98
    ldrh r0, [r1]
    subs r0, #1
lbl_08083bdc:
    strh r0, [r1]
    lsls r0, r0, #0x10
    adds r7, r2, #0
    cmp r0, #0
    bne lbl_08083bee
lbl_08083be6:
    subs r1, #0x5b
lbl_08083be8:
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_08083bee:
    ldr r3, [r7]
    adds r0, r3, #0
    adds r0, #0x98
    movs r1, #0
    ldrsh r2, [r0, r1]
    cmp r2, #0x10
    ble lbl_08083bfe
    movs r2, #0x10
lbl_08083bfe:
    movs r0, #0x10
    rsbs r0, r0, #0
    cmp r2, r0
    bge lbl_08083c08
    adds r2, r0, #0
lbl_08083c08:
    adds r1, r3, #0
    adds r1, #0x52
    ldrh r0, [r1]
    adds r0, r0, r2
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x15
    subs r1, #2
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0x3e
    ldrb r0, [r0]
    cmp r0, #5
    bhi lbl_08083cd8
    lsls r0, r0, #2
    ldr r1, lbl_08083c34 @ =lbl_08083c38
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08083c30: .4byte 0x08754bc4
lbl_08083c34: .4byte lbl_08083c38
lbl_08083c38: @ jump table
    .4byte lbl_08083c50 @ case 0
    .4byte lbl_08083c6c @ case 1
    .4byte lbl_08083c78 @ case 2
    .4byte lbl_08083ca8 @ case 3
    .4byte lbl_08083cbe @ case 4
    .4byte lbl_08083c78 @ case 5
lbl_08083c50:
    ldr r2, [r7]
    adds r1, r2, #0
    adds r1, #0x9a
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
    lsls r0, r0, #0x10
    ldr r1, lbl_08083c68 @ =0xffed0000
    cmp r0, r1
    bge lbl_08083cd8
    adds r1, r2, #0
    b lbl_08083cd0
    .align 2, 0
lbl_08083c68: .4byte 0xffed0000
lbl_08083c6c:
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0x9a
    ldrh r0, [r2]
    adds r0, #1
    b lbl_08083cc8
lbl_08083c78:
    ldr r0, [r7]
    adds r0, #0x4a
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #3
    bls lbl_08083cd8
    ldr r0, [r7]
    adds r1, r0, #0
    adds r1, #0x3e
    ldrb r0, [r1]
    cmp r0, #2
    bne lbl_08083c9a
    adds r0, #1
    b lbl_08083c9c
lbl_08083c9a:
    movs r0, #0
lbl_08083c9c:
    strb r0, [r1]
    ldr r0, [r7]
    adds r0, #0x4a
    movs r1, #0
    strb r1, [r0]
    b lbl_08083cd8
lbl_08083ca8:
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0x9a
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x13
    ble lbl_08083cd8
    b lbl_08083cd0
lbl_08083cbe:
    ldr r1, [r7]
    adds r2, r1, #0
    adds r2, #0x9a
    ldrh r0, [r2]
    subs r0, #1
lbl_08083cc8:
    strh r0, [r2]
    lsls r0, r0, #0x10
    cmp r0, #0
    bne lbl_08083cd8
lbl_08083cd0:
    adds r1, #0x3e
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_08083cd8:
    ldr r3, [r7]
    adds r0, r3, #0
    adds r0, #0x9a
    movs r1, #0
    ldrsh r2, [r0, r1]
    cmp r2, #8
    ble lbl_08083ce8
    movs r2, #8
lbl_08083ce8:
    movs r0, #8
    rsbs r0, r0, #0
    cmp r2, r0
    bge lbl_08083cf2
    adds r2, r0, #0
lbl_08083cf2:
    adds r0, r3, #0
    adds r0, #0x54
    ldrh r1, [r0]
    adds r1, r1, r2
    strh r1, [r0]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x15
    adds r0, #0x10
    strh r1, [r0]
lbl_08083d04:
    bl tourian_escape_process_oam
    adds r0, r6, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start tourian_escape_samus_going_to_crash
tourian_escape_samus_going_to_crash: @ 0x08083d10
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_08083d38 @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #6]
    adds r1, r0, #1
    strh r1, [r2, #6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #3
    beq lbl_08083e14
    cmp r0, #3
    bgt lbl_08083d3c
    cmp r0, #1
    beq lbl_08083d68
    cmp r0, #1
    bgt lbl_08083da0
    cmp r0, #0
    beq lbl_08083d56
    b lbl_08083e74
    .align 2, 0
lbl_08083d38: .4byte 0x08754bc4
lbl_08083d3c:
    cmp r0, #0xc
    bne lbl_08083d42
    b lbl_08083e52
lbl_08083d42:
    cmp r0, #0xc
    bgt lbl_08083d4e
    cmp r0, #6
    bne lbl_08083d4c
    b lbl_08083e40
lbl_08083d4c:
    b lbl_08083e74
lbl_08083d4e:
    cmp r0, #0x50
    bne lbl_08083d54
    b lbl_08083e68
lbl_08083d54:
    b lbl_08083e74
lbl_08083d56:
    ldr r0, lbl_08083d64 @ =0x0848a17c
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_08083e74
    .align 2, 0
lbl_08083d64: .4byte 0x0848a17c
lbl_08083d68:
    ldr r0, lbl_08083d88 @ =0x084ad56c
    ldr r1, lbl_08083d8c @ =0x06010000
    bl LZ77UncompVRAM
    ldr r1, lbl_08083d90 @ =0x030013b4
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08083d94 @ =0x030013b6
    strh r5, [r0]
    ldr r1, lbl_08083d98 @ =0x030013b0
    movs r0, #9
    strh r0, [r1]
    ldr r1, lbl_08083d9c @ =0x030013b2
    movs r0, #7
    strh r0, [r1]
    b lbl_08083e74
    .align 2, 0
lbl_08083d88: .4byte 0x084ad56c
lbl_08083d8c: .4byte 0x06010000
lbl_08083d90: .4byte 0x030013b4
lbl_08083d94: .4byte 0x030013b6
lbl_08083d98: .4byte 0x030013b0
lbl_08083d9c: .4byte 0x030013b2
lbl_08083da0:
    ldr r0, lbl_08083dec @ =0x0848d744
    ldr r1, lbl_08083df0 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r1, lbl_08083df4 @ =0x040000d4
    ldr r0, lbl_08083df8 @ =0x08479400
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08083dfc @ =0x80000090
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_08083e00 @ =0x08479e00
    str r0, [r1]
    ldr r0, lbl_08083e04 @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_08083e08 @ =0x80000070
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, [r4]
    movs r2, #1
    strb r2, [r0, #8]
    ldr r1, [r4]
    ldr r0, lbl_08083e0c @ =0x0847a98a
    str r0, [r1, #0x14]
    strb r2, [r1, #0xb]
    ldr r1, [r4]
    ldr r0, lbl_08083e10 @ =0x0847a958
    str r0, [r1, #0x20]
    adds r2, r1, #0
    adds r2, #0x56
    movs r0, #0x88
    strh r0, [r2]
    adds r1, #0x6a
    movs r0, #0x58
    strh r0, [r1]
    b lbl_08083e74
    .align 2, 0
lbl_08083dec: .4byte 0x0848d744
lbl_08083df0: .4byte 0x0600f000
lbl_08083df4: .4byte 0x040000d4
lbl_08083df8: .4byte 0x08479400
lbl_08083dfc: .4byte 0x80000090
lbl_08083e00: .4byte 0x08479e00
lbl_08083e04: .4byte 0x05000200
lbl_08083e08: .4byte 0x80000070
lbl_08083e0c: .4byte 0x0847a98a
lbl_08083e10: .4byte 0x0847a958
lbl_08083e14:
    ldr r1, lbl_08083e38 @ =0x04000008
    movs r3, #0xf0
    lsls r3, r3, #5
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, r2, #0
    adds r1, #0xc0
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r1]
    adds r1, #2
    movs r0, #0xfd
    lsls r0, r0, #6
    strh r0, [r1]
    ldr r0, lbl_08083e3c @ =0x0000023d
    bl SoundPlay
    b lbl_08083e74
    .align 2, 0
lbl_08083e38: .4byte 0x04000008
lbl_08083e3c: .4byte 0x0000023d
lbl_08083e40:
    movs r0, #1
    strb r0, [r2, #9]
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x52
    movs r0, #0x6d
    strh r0, [r2]
    adds r1, #0x66
    b lbl_08083e62
lbl_08083e52:
    movs r0, #1
    strb r0, [r2, #0xa]
    ldr r1, [r4]
    adds r2, r1, #0
    adds r2, #0x54
    movs r0, #0x6d
    strh r0, [r2]
    adds r1, #0x68
lbl_08083e62:
    movs r0, #0x46
    strh r0, [r1]
    b lbl_08083e74
lbl_08083e68:
    adds r0, r2, #0
    adds r0, #0xc0
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    movs r5, #1
lbl_08083e74:
    ldr r3, lbl_08083ea0 @ =0x08754bc4
    ldr r0, [r3]
    ldrb r1, [r0, #5]
    adds r2, r1, #1
    strb r2, [r0, #5]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #4
    bls lbl_08083e94
    ldr r1, [r3]
    movs r0, #0
    strb r0, [r1, #5]
    ldr r1, lbl_08083ea4 @ =0x030013b4
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_08083e94:
    bl sub_08081ad8
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08083ea0: .4byte 0x08754bc4
lbl_08083ea4: .4byte 0x030013b4

    thumb_func_start tourian_escape_samus_crashing
tourian_escape_samus_crashing: @ 0x08083ea8
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_08083ed0 @ =0x08754bc4
    ldr r3, [r4]
    ldrh r0, [r3, #6]
    adds r1, r0, #1
    strh r1, [r3, #6]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #4
    beq lbl_08083f80
    cmp r1, #4
    bgt lbl_08083ede
    cmp r1, #1
    beq lbl_08083f18
    cmp r1, #1
    bgt lbl_08083ed4
    cmp r1, #0
    beq lbl_08083f08
    b lbl_0808407a
    .align 2, 0
lbl_08083ed0: .4byte 0x08754bc4
lbl_08083ed4:
    cmp r1, #2
    beq lbl_08083f2c
    cmp r1, #3
    beq lbl_08083f40
    b lbl_0808407a
lbl_08083ede:
    cmp r1, #0x40
    bne lbl_08083ee4
    b lbl_08084024
lbl_08083ee4:
    cmp r1, #0x40
    bgt lbl_08083ef6
    cmp r1, #5
    bne lbl_08083eee
    b lbl_08083fe0
lbl_08083eee:
    cmp r1, #0xa
    bne lbl_08083ef4
    b lbl_08084008
lbl_08083ef4:
    b lbl_0808407a
lbl_08083ef6:
    cmp r1, #0x68
    bne lbl_08083efc
    b lbl_08084028
lbl_08083efc:
    movs r0, #0x90
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_08083f06
    b lbl_08084078
lbl_08083f06:
    b lbl_0808407a
lbl_08083f08:
    ldr r0, lbl_08083f14 @ =0x084aae80
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_0808407a
    .align 2, 0
lbl_08083f14: .4byte 0x084aae80
lbl_08083f18:
    ldr r0, lbl_08083f24 @ =0x084ae878
    ldr r1, lbl_08083f28 @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_0808407a
    .align 2, 0
lbl_08083f24: .4byte 0x084ae878
lbl_08083f28: .4byte 0x06008000
lbl_08083f2c:
    ldr r0, lbl_08083f38 @ =0x084a7bb4
    ldr r1, lbl_08083f3c @ =0x06010000
    bl LZ77UncompVRAM
    b lbl_0808407a
    .align 2, 0
lbl_08083f38: .4byte 0x084a7bb4
lbl_08083f3c: .4byte 0x06010000
lbl_08083f40:
    ldr r0, lbl_08083f64 @ =0x084acc68
    ldr r1, lbl_08083f68 @ =0x06007000
    bl LZ77UncompVRAM
    ldr r0, lbl_08083f6c @ =0x084b0500
    ldr r1, lbl_08083f70 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r1, lbl_08083f74 @ =0x040000d4
    ldr r0, lbl_08083f78 @ =0x08479f20
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08083f7c @ =0x80000030
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    b lbl_0808407a
    .align 2, 0
lbl_08083f64: .4byte 0x084acc68
lbl_08083f68: .4byte 0x06007000
lbl_08083f6c: .4byte 0x084b0500
lbl_08083f70: .4byte 0x0600f000
lbl_08083f74: .4byte 0x040000d4
lbl_08083f78: .4byte 0x08479f20
lbl_08083f7c: .4byte 0x80000030
lbl_08083f80:
    ldr r1, lbl_08083fc0 @ =0x040000d4
    ldr r0, lbl_08083fc4 @ =0x0847a060
    str r0, [r1]
    ldr r0, lbl_08083fc8 @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_08083fcc @ =0x80000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r0, #1
    strb r0, [r3, #9]
    ldr r1, [r4]
    ldr r0, lbl_08083fd0 @ =0x0847aa96
    str r0, [r1, #0x18]
    adds r2, r1, #0
    adds r2, #0x52
    movs r0, #0x78
    strh r0, [r2]
    adds r2, #0x14
    movs r0, #0x68
    strh r0, [r2]
    adds r1, #0x79
    movs r0, #2
    strb r0, [r1]
    ldr r0, lbl_08083fd4 @ =0x030013b4
    strh r5, [r0]
    ldr r0, lbl_08083fd8 @ =0x030013b6
    strh r5, [r0]
    ldr r0, lbl_08083fdc @ =0x00000249
    bl SoundPlay
    b lbl_0808407a
    .align 2, 0
lbl_08083fc0: .4byte 0x040000d4
lbl_08083fc4: .4byte 0x0847a060
lbl_08083fc8: .4byte 0x05000200
lbl_08083fcc: .4byte 0x80000100
lbl_08083fd0: .4byte 0x0847aa96
lbl_08083fd4: .4byte 0x030013b4
lbl_08083fd8: .4byte 0x030013b6
lbl_08083fdc: .4byte 0x00000249
lbl_08083fe0:
    ldr r1, lbl_08084000 @ =0x04000008
    movs r2, #0xe0
    lsls r2, r2, #4
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08084004 @ =0x00001e09
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0xc0
    movs r0, #0x88
    lsls r0, r0, #5
    strh r0, [r1]
    b lbl_0808407a
    .align 2, 0
lbl_08084000: .4byte 0x04000008
lbl_08084004: .4byte 0x00001e09
lbl_08084008:
    movs r0, #1
    strb r0, [r3, #8]
    ldr r2, [r4]
    adds r1, r2, #0
    adds r1, #0x50
    movs r0, #0xfa
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #0x10
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #2
    strb r0, [r1]
    b lbl_0808407a
lbl_08084024:
    strb r5, [r3, #8]
    b lbl_0808407a
lbl_08084028:
    ldr r1, lbl_08084064 @ =0x040000d4
    ldr r0, lbl_08084068 @ =0x08479f80
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0808406c @ =0x80000070
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    adds r1, r3, #0
    adds r1, #0xc0
    movs r2, #0
    movs r0, #0x98
    lsls r0, r0, #5
    strh r0, [r1]
    strb r2, [r3, #8]
    ldr r1, [r4]
    ldr r0, lbl_08084070 @ =0x0847ab28
    str r0, [r1, #0x18]
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    ldr r0, [r4]
    adds r0, #0xc2
    movs r1, #0xbf
    strh r1, [r0]
    ldr r0, lbl_08084074 @ =0x0000024a
    bl SoundPlay
    b lbl_0808407a
    .align 2, 0
lbl_08084064: .4byte 0x040000d4
lbl_08084068: .4byte 0x08479f80
lbl_0808406c: .4byte 0x80000070
lbl_08084070: .4byte 0x0847ab28
lbl_08084074: .4byte 0x0000024a
lbl_08084078:
    movs r5, #1
lbl_0808407a:
    ldr r0, lbl_080840f8 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #2]
    adds r3, r0, #0
    cmp r1, #0
    beq lbl_080840a4
    ldrb r1, [r2, #5]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0808409c
    ldr r1, lbl_080840fc @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_0808409c
    adds r0, #1
    strh r0, [r1]
lbl_0808409c:
    ldr r1, [r3]
    ldrb r0, [r1, #5]
    adds r0, #1
    strb r0, [r1, #5]
lbl_080840a4:
    ldr r2, [r3]
    ldrb r0, [r2, #8]
    cmp r0, #0
    beq lbl_080840ea
    adds r0, r2, #0
    adds r0, #0x46
    ldrb r1, [r0]
    movs r0, #0x1f
    ands r0, r1
    lsrs r0, r0, #3
    adds r1, r2, #0
    adds r1, #0x3c
    strb r0, [r1]
    ldr r2, [r3]
    ldr r1, lbl_08084100 @ =0x0847cfe4
    adds r0, r2, #0
    adds r0, #0x3c
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    str r0, [r2, #0x14]
    adds r1, r2, #0
    adds r1, #0x50
    ldrh r0, [r1]
    subs r0, #4
    strh r0, [r1]
    adds r1, #0x14
    ldrh r0, [r1]
    adds r0, #2
    strh r0, [r1]
    subs r1, #0x1e
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_080840ea:
    bl tourian_escape_process_oam
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080840f8: .4byte 0x08754bc4
lbl_080840fc: .4byte 0x030013ae
lbl_08084100: .4byte 0x0847cfe4

    thumb_func_start tourian_escape_samus_looking_at_sky
tourian_escape_samus_looking_at_sky: @ 0x08084104
    push {r4, r5, r6, lr}
    movs r5, #0
    ldr r3, lbl_08084134 @ =0x08754bc4
    ldr r2, [r3]
    ldrh r0, [r2, #6]
    adds r1, r0, #1
    strh r1, [r2, #6]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0x10
    bne lbl_0808411c
    b lbl_0808425c
lbl_0808411c:
    cmp r1, #0x10
    bgt lbl_08084142
    cmp r1, #2
    beq lbl_08084190
    cmp r1, #2
    bgt lbl_08084138
    cmp r1, #0
    beq lbl_0808416a
    cmp r1, #1
    beq lbl_0808417c
    b lbl_080842ce
    .align 2, 0
lbl_08084134: .4byte 0x08754bc4
lbl_08084138:
    cmp r1, #3
    beq lbl_080841a4
    cmp r1, #4
    beq lbl_0808421c
    b lbl_080842ce
lbl_08084142:
    cmp r1, #0x68
    bne lbl_08084148
    b lbl_080842b4
lbl_08084148:
    cmp r1, #0x68
    bgt lbl_0808415a
    cmp r1, #0x18
    bne lbl_08084152
    b lbl_0808428c
lbl_08084152:
    cmp r1, #0x60
    bne lbl_08084158
    b lbl_080842b0
lbl_08084158:
    b lbl_080842ce
lbl_0808415a:
    cmp r1, #0xa0
    beq lbl_0808423e
    movs r0, #0xd8
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_08084168
    b lbl_080842b8
lbl_08084168:
    b lbl_080842ce
lbl_0808416a:
    ldr r0, lbl_08084178 @ =0x084b518c
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_080842ce
    .align 2, 0
lbl_08084178: .4byte 0x084b518c
lbl_0808417c:
    ldr r0, lbl_08084188 @ =0x084b1b90
    ldr r1, lbl_0808418c @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_080842ce
    .align 2, 0
lbl_08084188: .4byte 0x084b1b90
lbl_0808418c: .4byte 0x06008000
lbl_08084190:
    ldr r0, lbl_0808419c @ =0x084b0e04
    ldr r1, lbl_080841a0 @ =0x06010000
    bl LZ77UncompVRAM
    b lbl_080842ce
    .align 2, 0
lbl_0808419c: .4byte 0x084b0e04
lbl_080841a0: .4byte 0x06010000
lbl_080841a4:
    ldr r0, lbl_080841e8 @ =0x084b4b50
    ldr r1, lbl_080841ec @ =0x0600e000
    bl LZ77UncompVRAM
    ldr r0, lbl_080841f0 @ =0x084b90fc
    ldr r1, lbl_080841f4 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r0, lbl_080841f8 @ =0x084b97b4
    ldr r1, lbl_080841fc @ =0x0600f800
    bl LZ77UncompVRAM
    ldr r0, lbl_08084200 @ =0x040000d4
    ldr r3, lbl_08084204 @ =0x0847a260
    str r3, [r0]
    movs r1, #0xa0
    lsls r1, r1, #0x13
    str r1, [r0, #4]
    ldr r2, lbl_08084208 @ =0x800000a0
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_0808420c @ =0x05000200
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    ldr r0, lbl_08084210 @ =0x030013b6
    strh r5, [r0]
    ldr r0, lbl_08084214 @ =0x030013ba
    strh r5, [r0]
    ldr r1, lbl_08084218 @ =0x030013be
    movs r0, #0x60
    strh r0, [r1]
    b lbl_080842ce
    .align 2, 0
lbl_080841e8: .4byte 0x084b4b50
lbl_080841ec: .4byte 0x0600e000
lbl_080841f0: .4byte 0x084b90fc
lbl_080841f4: .4byte 0x0600f000
lbl_080841f8: .4byte 0x084b97b4
lbl_080841fc: .4byte 0x0600f800
lbl_08084200: .4byte 0x040000d4
lbl_08084204: .4byte 0x0847a260
lbl_08084208: .4byte 0x800000a0
lbl_0808420c: .4byte 0x05000200
lbl_08084210: .4byte 0x030013b6
lbl_08084214: .4byte 0x030013ba
lbl_08084218: .4byte 0x030013be
lbl_0808421c:
    ldr r1, lbl_0808424c @ =0x04000008
    ldr r3, lbl_08084250 @ =0x00001c0a
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_08084254 @ =0x00001e01
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    adds r3, #0xff
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, r2, #0
    adds r1, #0xc0
    movs r0, #0xb8
    lsls r0, r0, #5
    strh r0, [r1]
lbl_0808423e:
    ldr r0, lbl_08084258 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    b lbl_080842ce
    .align 2, 0
lbl_0808424c: .4byte 0x04000008
lbl_08084250: .4byte 0x00001c0a
lbl_08084254: .4byte 0x00001e01
lbl_08084258: .4byte 0x08754bc4
lbl_0808425c:
    movs r0, #1
    strb r0, [r2, #8]
    ldr r2, [r3]
    ldr r0, lbl_08084284 @ =0x0847abba
    str r0, [r2, #0x14]
    adds r1, r2, #0
    adds r1, #0x50
    movs r0, #0x70
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #0xd0
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #2
    strb r0, [r1]
    ldr r0, lbl_08084288 @ =0x0000024b
    bl SoundPlay
    b lbl_080842ce
    .align 2, 0
lbl_08084284: .4byte 0x0847abba
lbl_08084288: .4byte 0x0000024b
lbl_0808428c:
    movs r0, #1
    strb r0, [r2, #9]
    ldr r1, [r3]
    ldr r0, lbl_080842ac @ =0x0847abc8
    str r0, [r1, #0x18]
    adds r2, r1, #0
    adds r2, #0x52
    movs r0, #0x20
    strh r0, [r2]
    adds r2, #0x14
    movs r0, #0xd0
    strh r0, [r2]
    adds r1, #0x79
    movs r0, #2
    strb r0, [r1]
    b lbl_080842ce
    .align 2, 0
lbl_080842ac: .4byte 0x0847abc8
lbl_080842b0:
    strb r5, [r2, #8]
    b lbl_080842ce
lbl_080842b4:
    strb r5, [r2, #9]
    b lbl_080842ce
lbl_080842b8:
    movs r0, #0xa0
    lsls r0, r0, #0x13
    strh r5, [r0]
    adds r0, r2, #0
    adds r0, #0xc0
    strh r5, [r0]
    ldr r0, lbl_080842f0 @ =0x030013b6
    strh r5, [r0]
    ldr r0, lbl_080842f4 @ =0x030013ba
    strh r5, [r0]
    movs r5, #1
lbl_080842ce:
    ldr r3, lbl_080842f8 @ =0x08754bc4
    ldr r2, [r3]
    ldrb r1, [r2, #2]
    cmp r1, #1
    bne lbl_08084308
    ldrh r0, [r2, #6]
    ands r1, r0
    cmp r1, #0
    beq lbl_08084338
    ldr r3, lbl_080842fc @ =0x030013ae
    ldrh r0, [r3]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08084300
    subs r0, #1
    strh r0, [r3]
    b lbl_08084338
    .align 2, 0
lbl_080842f0: .4byte 0x030013b6
lbl_080842f4: .4byte 0x030013ba
lbl_080842f8: .4byte 0x08754bc4
lbl_080842fc: .4byte 0x030013ae
lbl_08084300:
    adds r0, r2, #0
    adds r0, #0xc2
    strh r1, [r0]
    b lbl_08084338
lbl_08084308:
    cmp r1, #2
    bne lbl_08084338
    ldr r0, lbl_0808437c @ =0x030013b6
    ldrh r1, [r0]
    adds r1, #1
    strh r1, [r0]
    ldr r2, lbl_08084380 @ =0x030013ba
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldr r2, lbl_08084384 @ =0x030013be
    cmp r1, #0x5f
    bls lbl_0808432c
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
lbl_0808432c:
    ldrb r0, [r2]
    cmp r0, #0xa0
    bne lbl_08084338
    ldr r1, [r3]
    movs r0, #0
    strb r0, [r1, #2]
lbl_08084338:
    movs r4, #0
    ldr r6, lbl_08084388 @ =0x08754bc4
lbl_0808433c:
    ldr r3, [r6]
    adds r0, r3, #0
    adds r0, #8
    adds r0, r0, r4
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08084364
    lsls r2, r4, #1
    adds r1, r3, #0
    adds r1, #0x50
    adds r1, r1, r2
    ldrh r0, [r1]
    adds r0, #2
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0x64
    adds r1, r1, r2
    ldrh r0, [r1]
    subs r0, #3
    strh r0, [r1]
lbl_08084364:
    adds r0, r4, #1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #1
    bls lbl_0808433c
    bl tourian_escape_process_oam
    adds r0, r5, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0808437c: .4byte 0x030013b6
lbl_08084380: .4byte 0x030013ba
lbl_08084384: .4byte 0x030013be
lbl_08084388: .4byte 0x08754bc4

    thumb_func_start tourian_escape_samus_looking_at_mother_ship
tourian_escape_samus_looking_at_mother_ship: @ 0x0808438c
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    movs r7, #0
    ldr r6, lbl_080843bc @ =0x08754bc4
    ldr r3, [r6]
    ldrh r2, [r3, #6]
    adds r0, r2, #1
    strh r0, [r3, #6]
    lsls r0, r2, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #5
    bne lbl_080843a6
    b lbl_0808457c
lbl_080843a6:
    cmp r1, #5
    bgt lbl_080843cc
    cmp r1, #2
    beq lbl_0808441c
    cmp r1, #2
    bgt lbl_080843c0
    cmp r1, #0
    beq lbl_080843f6
    cmp r1, #1
    beq lbl_08084408
    b lbl_0808459a
    .align 2, 0
lbl_080843bc: .4byte 0x08754bc4
lbl_080843c0:
    cmp r1, #3
    beq lbl_08084470
    cmp r1, #4
    bne lbl_080843ca
    b lbl_0808453c
lbl_080843ca:
    b lbl_0808459a
lbl_080843cc:
    cmp r1, #0xa0
    bne lbl_080843d2
    b lbl_0808455e
lbl_080843d2:
    cmp r1, #0xa0
    bgt lbl_080843e4
    cmp r1, #6
    bne lbl_080843dc
    b lbl_08084584
lbl_080843dc:
    cmp r1, #0x60
    bne lbl_080843e2
    b lbl_0808455e
lbl_080843e2:
    b lbl_0808459a
lbl_080843e4:
    cmp r1, #0xe0
    bne lbl_080843ea
    b lbl_08084584
lbl_080843ea:
    movs r0, #0xe0
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_080843f4
    b lbl_08084598
lbl_080843f4:
    b lbl_0808459a
lbl_080843f6:
    ldr r0, lbl_08084404 @ =0x084b9a98
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_0808459a
    .align 2, 0
lbl_08084404: .4byte 0x084b9a98
lbl_08084408:
    ldr r0, lbl_08084414 @ =0x084bc540
    ldr r1, lbl_08084418 @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_0808459a
    .align 2, 0
lbl_08084414: .4byte 0x084bc540
lbl_08084418: .4byte 0x06008000
lbl_0808441c:
    ldr r0, lbl_0808444c @ =0x084bbc3c
    ldr r1, lbl_08084450 @ =0x06007000
    bl LZ77UncompVRAM
    ldr r0, lbl_08084454 @ =0x084bf5e0
    ldr r1, lbl_08084458 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r1, lbl_0808445c @ =0x040000d4
    ldr r0, lbl_08084460 @ =0x0847a3a0
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08084464 @ =0x800000a0
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r1, lbl_08084468 @ =0x030013b4
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_0808446c @ =0x030013b8
    strh r7, [r0]
    b lbl_0808459a
    .align 2, 0
lbl_0808444c: .4byte 0x084bbc3c
lbl_08084450: .4byte 0x06007000
lbl_08084454: .4byte 0x084bf5e0
lbl_08084458: .4byte 0x0600f000
lbl_0808445c: .4byte 0x040000d4
lbl_08084460: .4byte 0x0847a3a0
lbl_08084464: .4byte 0x800000a0
lbl_08084468: .4byte 0x030013b4
lbl_0808446c: .4byte 0x030013b8
lbl_08084470:
    ldr r4, lbl_08084508 @ =0x06010000
    movs r3, #0x80
    lsls r3, r3, #8
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    movs r1, #0
    adds r2, r4, #0
    bl BitFill
    ldr r0, lbl_0808450c @ =0x0847abd8
    adds r1, r4, #0
    bl LZ77UncompVRAM
    ldr r0, lbl_08084510 @ =0x040000d4
    ldr r1, lbl_08084514 @ =0x0847ac26
    str r1, [r0]
    ldr r1, lbl_08084518 @ =0x05000200
    str r1, [r0, #4]
    ldr r2, lbl_0808451c @ =0x80000010
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    ldr r1, lbl_08084520 @ =0x08375738
    str r1, [r0]
    ldr r1, lbl_08084524 @ =0x050003e0
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    movs r5, #0
    adds r4, r6, #0
    movs r6, #0
lbl_080844ae:
    ldr r0, [r4]
    adds r0, #8
    adds r0, r0, r5
    movs r1, #1
    strb r1, [r0]
    ldr r1, [r4]
    adds r1, #0x46
    adds r1, r1, r5
    ldr r0, lbl_08084528 @ =0x0847cff4
    adds r0, r5, r0
    ldrb r0, [r0]
    strb r0, [r1]
    ldr r3, [r4]
    lsls r2, r5, #1
    adds r1, r3, #0
    adds r1, #0x50
    adds r1, r1, r2
    ldr r0, lbl_0808452c @ =0x0847cffe
    adds r0, r2, r0
    ldrh r0, [r0]
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0x64
    adds r0, r0, r2
    movs r1, #0xfc
    strh r1, [r0]
    adds r0, r3, #0
    adds r0, #0x78
    adds r0, r0, r5
    strb r6, [r0]
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #9
    bls lbl_080844ae
    ldr r0, lbl_08084530 @ =0x030013b0
    movs r2, #0
    strh r2, [r0]
    ldr r1, lbl_08084534 @ =0x030013b2
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08084538 @ =0x030013ae
    strh r2, [r0]
    b lbl_0808459a
    .align 2, 0
lbl_08084508: .4byte 0x06010000
lbl_0808450c: .4byte 0x0847abd8
lbl_08084510: .4byte 0x040000d4
lbl_08084514: .4byte 0x0847ac26
lbl_08084518: .4byte 0x05000200
lbl_0808451c: .4byte 0x80000010
lbl_08084520: .4byte 0x08375738
lbl_08084524: .4byte 0x050003e0
lbl_08084528: .4byte 0x0847cff4
lbl_0808452c: .4byte 0x0847cffe
lbl_08084530: .4byte 0x030013b0
lbl_08084534: .4byte 0x030013b2
lbl_08084538: .4byte 0x030013ae
lbl_0808453c:
    ldr r1, lbl_0808456c @ =0x04000008
    movs r2, #0xe0
    lsls r2, r2, #4
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08084570 @ =0x00001e09
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, r3, #0
    adds r1, #0xc0
    movs r0, #0x98
    lsls r0, r0, #5
    strh r0, [r1]
    adds r1, #2
    ldr r0, lbl_08084574 @ =0x00000fcf
    strh r0, [r1]
lbl_0808455e:
    ldr r0, lbl_08084578 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #2]
    adds r0, #1
    strb r0, [r1, #2]
    b lbl_0808459a
    .align 2, 0
lbl_0808456c: .4byte 0x04000008
lbl_08084570: .4byte 0x00001e09
lbl_08084574: .4byte 0x00000fcf
lbl_08084578: .4byte 0x08754bc4
lbl_0808457c:
    movs r0, #1
    bl start_story_text
    b lbl_0808459a
lbl_08084584:
    ldr r0, lbl_08084594 @ =0x08754bc4
    ldr r1, [r0]
    adds r1, #0xbe
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0808459a
    .align 2, 0
lbl_08084594: .4byte 0x08754bc4
lbl_08084598:
    strh r2, [r3, #6]
lbl_0808459a:
    ldr r0, lbl_080845d8 @ =0x08754bc4
    ldr r0, [r0]
    ldrh r1, [r0, #6]
    ldr r0, lbl_080845dc @ =0x000001bf
    cmp r1, r0
    bls lbl_080845b4
    ldr r0, lbl_080845e0 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    beq lbl_080845b4
    movs r7, #2
lbl_080845b4:
    ldr r4, lbl_080845d8 @ =0x08754bc4
    ldr r0, [r4]
    adds r1, r0, #0
    adds r1, #0xbe
    ldrb r3, [r1]
    cmp r3, #1
    bne lbl_080845e4
    bl sub_0806f424
    cmp r0, #0
    beq lbl_0808460a
    ldr r1, [r4]
    adds r1, #0xbe
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_0808460a
    .align 2, 0
lbl_080845d8: .4byte 0x08754bc4
lbl_080845dc: .4byte 0x000001bf
lbl_080845e0: .4byte 0x03001380
lbl_080845e4:
    cmp r3, #3
    bne lbl_0808460a
    adds r0, #0xbf
    ldrb r2, [r0]
    adds r1, r2, #1
    strb r1, [r0]
    ands r3, r2
    cmp r3, #0
    bne lbl_0808460a
    ldr r1, lbl_08084684 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_0808460a
    adds r0, #1
    strh r0, [r1]
    ldr r2, lbl_08084688 @ =0x030013b2
    movs r1, #0x10
    subs r1, r1, r0
    strh r1, [r2]
lbl_0808460a:
    ldr r0, lbl_0808468c @ =0x08754bc4
    ldr r2, [r0]
    ldrb r1, [r2, #2]
    adds r3, r0, #0
    cmp r1, #1
    bhi lbl_08084640
    ldrb r1, [r2, #5]
    adds r0, r1, #1
    strb r0, [r2, #5]
    movs r5, #0xf
    ands r5, r1
    cmp r5, #0
    bne lbl_08084634
    ldr r1, lbl_08084690 @ =0x030013b4
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
    ldr r1, lbl_08084694 @ =0x030013b8
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
lbl_08084634:
    cmp r5, #8
    bne lbl_08084640
    ldr r1, lbl_08084694 @ =0x030013b8
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
lbl_08084640:
    ldr r1, [r3]
    ldrb r0, [r1, #2]
    cmp r0, #3
    bne lbl_0808465e
    ldrh r1, [r1, #6]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_0808465e
    ldr r1, lbl_08084698 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #3
    bhi lbl_0808465e
    adds r0, #1
    strh r0, [r1]
lbl_0808465e:
    movs r5, #0
    ldr r6, lbl_0808468c @ =0x08754bc4
lbl_08084662:
    ldr r2, [r6]
    adds r0, r2, #0
    adds r0, #8
    adds r0, r0, r5
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_080846f8
    adds r0, r2, #0
    adds r0, #0x46
    adds r1, r0, r5
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0808469c
    subs r0, #1
    strb r0, [r1]
    b lbl_080846f8
    .align 2, 0
lbl_08084684: .4byte 0x030013b0
lbl_08084688: .4byte 0x030013b2
lbl_0808468c: .4byte 0x08754bc4
lbl_08084690: .4byte 0x030013b4
lbl_08084694: .4byte 0x030013b8
lbl_08084698: .4byte 0x030013ae
lbl_0808469c:
    lsls r3, r5, #1
    adds r0, r2, #0
    adds r0, #0x50
    adds r4, r0, r3
    ldrh r0, [r4]
    subs r0, #2
    strh r0, [r4]
    adds r0, r2, #0
    adds r0, #0x64
    adds r2, r0, r3
    ldrh r0, [r2]
    adds r1, r0, #4
    strh r1, [r2]
    subs r0, #0xa0
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0xc
    bhi lbl_080846cc
    ldr r0, lbl_080846e4 @ =0x0847cffe
    adds r0, r3, r0
    ldrh r0, [r0]
    strh r0, [r4]
    movs r0, #0xfc
    strh r0, [r2]
lbl_080846cc:
    ldr r2, [r6]
    ldrh r1, [r2, #6]
    movs r0, #7
    ands r0, r1
    cmp r0, #3
    bhi lbl_080846ec
    lsls r0, r5, #2
    adds r1, r2, #0
    adds r1, #0x14
    adds r1, r1, r0
    ldr r0, lbl_080846e8 @ =0x0847ac10
    b lbl_080846f6
    .align 2, 0
lbl_080846e4: .4byte 0x0847cffe
lbl_080846e8: .4byte 0x0847ac10
lbl_080846ec:
    lsls r0, r5, #2
    adds r1, r2, #0
    adds r1, #0x14
    adds r1, r1, r0
    ldr r0, lbl_08084710 @ =0x0847ac18
lbl_080846f6:
    str r0, [r1]
lbl_080846f8:
    adds r0, r5, #1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #9
    bls lbl_08084662
    bl tourian_escape_process_oam
    adds r0, r7, #0
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08084710: .4byte 0x0847ac18

    thumb_func_start tourian_escape_call_subroutines
tourian_escape_call_subroutines: @ 0x08084714
    push {r4, r5, r6, lr}
    movs r6, #0
    ldr r0, lbl_08084730 @ =0x03001382
    strb r6, [r0]
    ldr r5, lbl_08084734 @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r5, r1]
    cmp r0, #1
    beq lbl_08084748
    cmp r0, #1
    bgt lbl_08084738
    cmp r0, #0
    beq lbl_08084742
    b lbl_080847ee
    .align 2, 0
lbl_08084730: .4byte 0x03001382
lbl_08084734: .4byte 0x03000c72
lbl_08084738:
    cmp r0, #2
    beq lbl_08084770
    cmp r0, #3
    beq lbl_080847ec
    b lbl_080847ee
lbl_08084742:
    bl tourian_escape_init
    b lbl_08084764
lbl_08084748:
    ldr r1, lbl_08084758 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0808475c
    subs r0, #1
    strh r0, [r1]
    b lbl_080847ee
    .align 2, 0
lbl_08084758: .4byte 0x030013ae
lbl_0808475c:
    ldr r0, lbl_0808476c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0xc2
    strh r6, [r0]
lbl_08084764:
    ldrh r0, [r5]
    adds r0, #1
    strh r0, [r5]
    b lbl_080847ee
    .align 2, 0
lbl_0808476c: .4byte 0x08754bc4
lbl_08084770:
    ldr r1, lbl_080847d4 @ =0x08760cc8
    ldr r4, lbl_080847d8 @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_080847dc
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r4]
    strb r6, [r0, #2]
    ldr r0, [r4]
    strb r6, [r0, #5]
    ldr r0, [r4]
    movs r1, #0
    strh r6, [r0, #6]
    strb r1, [r0, #1]
    movs r1, #0
    adds r3, r4, #0
    movs r2, #0
lbl_080847a8:
    ldr r0, [r3]
    adds r0, #8
    adds r0, r0, r1
    strb r2, [r0]
    ldr r0, [r3]
    adds r0, #0x46
    adds r0, r0, r1
    strb r2, [r0]
    ldr r0, [r3]
    adds r0, #0x78
    adds r0, r0, r1
    strb r2, [r0]
    cmp r1, #3
    bgt lbl_080847cc
    ldr r0, [r4]
    adds r0, #0x3c
    adds r0, r0, r1
    strb r2, [r0]
lbl_080847cc:
    adds r1, #1
    cmp r1, #9
    ble lbl_080847a8
    b lbl_080847e6
    .align 2, 0
lbl_080847d4: .4byte 0x08760cc8
lbl_080847d8: .4byte 0x08754bc4
lbl_080847dc:
    cmp r0, #0
    beq lbl_080847e6
    ldrh r0, [r5]
    adds r0, #1
    strh r0, [r5]
lbl_080847e6:
    bl ResetFreeOAM
    b lbl_080847ee
lbl_080847ec:
    movs r6, #1
lbl_080847ee:
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_080847f8
sub_080847f8: @ 0x080847f8
    ldr r1, lbl_0808484c @ =0x040000d4
    ldr r0, lbl_08084850 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08084854 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldr r0, lbl_08084858 @ =0x08754bc4
    ldr r1, [r0]
    movs r3, #0xb0
    lsls r3, r3, #2
    adds r0, r1, r3
    ldrh r0, [r0]
    strh r0, [r2]
    adds r2, #0x50
    ldr r0, lbl_0808485c @ =0x000002c2
    adds r1, r1, r0
    ldrh r0, [r1]
    strh r0, [r2]
    ldr r1, lbl_08084860 @ =0x04000054
    ldr r0, lbl_08084864 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    subs r2, #0x3e
    ldr r0, lbl_08084868 @ =0x030013b6
    ldrh r0, [r0]
    lsrs r0, r0, #4
    subs r3, #0xc1
    adds r1, r3, #0
    ands r0, r1
    strh r0, [r2]
    adds r2, #4
    ldr r0, lbl_0808486c @ =0x030013ba
    ldrh r0, [r0]
    lsrs r0, r0, #4
    ands r0, r1
    strh r0, [r2]
    bx lr
    .align 2, 0
lbl_0808484c: .4byte 0x040000d4
lbl_08084850: .4byte 0x03000e7c
lbl_08084854: .4byte 0x84000100
lbl_08084858: .4byte 0x08754bc4
lbl_0808485c: .4byte 0x000002c2
lbl_08084860: .4byte 0x04000054
lbl_08084864: .4byte 0x030013ae
lbl_08084868: .4byte 0x030013b6
lbl_0808486c: .4byte 0x030013ba

    thumb_func_start fusion_gallery_init
fusion_gallery_init: @ 0x08084870
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #8
    ldr r4, lbl_080849c4 @ =0x04000208
    movs r7, #0
    strh r7, [r4]
    ldr r2, lbl_080849c8 @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_080849cc @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_080849d0 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_080849d4 @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_080849d8 @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r5, #1
    strh r5, [r4]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r7, [r0]
    strh r7, [r4]
    ldr r0, lbl_080849dc @ =sub_080847f8
    mov r8, r0
    bl CallbackSetVBlank
    strh r5, [r4]
    ldr r0, lbl_080849e0 @ =0x03000c72
    movs r1, #0
    ldrsh r4, [r0, r1]
    cmp r4, #0
    bne lbl_080848ce
    bl ClearGFXRAM
    str r4, [sp, #4]
    ldr r1, lbl_080849e4 @ =0x040000d4
    add r2, sp, #4
    str r2, [r1]
    ldr r0, lbl_080849e8 @ =0x030016c4
    str r0, [r1, #4]
    ldr r0, lbl_080849ec @ =0x8500018a
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_080848ce:
    ldr r6, lbl_080849f0 @ =0x08754bc4
    ldr r0, [r6]
    adds r0, #0x99
    ldrb r0, [r0]
    ldr r5, lbl_080849f4 @ =0x084c18e4
    lsls r4, r0, #2
    adds r4, r4, r0
    lsls r4, r4, #2
    adds r0, r4, r5
    ldr r0, [r0]
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    adds r0, r5, #4
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_080849f8 @ =0x06008000
    bl LZ77UncompVRAM
    adds r0, r5, #0
    adds r0, #8
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_080849fc @ =0x0600e000
    bl LZ77UncompVRAM
    adds r0, r5, #0
    adds r0, #0xc
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_08084a00 @ =0x0600f800
    bl LZ77UncompVRAM
    ldr r1, lbl_08084a04 @ =0x04ff04ff
    ldr r2, lbl_08084a08 @ =0x0600e800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    bl BitFill
    ldr r1, lbl_080849e4 @ =0x040000d4
    adds r5, #0x10
    adds r4, r4, r5
    ldr r0, [r4]
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08084a0c @ =0x80000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xcc
    movs r2, #0x9c
    lsls r2, r2, #8
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08084a10 @ =0x00009e09
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08084a14 @ =0x03001382
    strb r7, [r0]
    bl ResetFreeOAM
    ldr r0, lbl_08084a18 @ =0x030013b4
    strh r7, [r0]
    ldr r0, lbl_08084a1c @ =0x030013b6
    movs r2, #0x80
    lsls r2, r2, #5
    adds r1, r2, #0
    strh r1, [r0]
    ldr r0, lbl_08084a20 @ =0x030013b8
    strh r7, [r0]
    ldr r0, lbl_08084a24 @ =0x030013ba
    strh r1, [r0]
    ldr r0, lbl_08084a28 @ =0x030013bc
    strh r7, [r0]
    ldr r0, lbl_08084a2c @ =0x030013be
    strh r7, [r0]
    ldr r0, lbl_08084a30 @ =0x030013c0
    strh r7, [r0]
    ldr r0, lbl_08084a34 @ =0x030013c2
    strh r7, [r0]
    ldr r0, lbl_08084a38 @ =0x04000010
    strh r7, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r7, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r7, [r0]
    adds r0, #2
    strh r7, [r0]
    adds r0, #2
    strh r7, [r0]
    adds r0, #2
    strh r7, [r0]
    ldr r1, [r6]
    movs r0, #0
    strh r0, [r1, #2]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r2, r1, r0
    movs r0, #0x98
    lsls r0, r0, #5
    strh r0, [r2]
    ldr r2, lbl_08084a3c @ =0x000002c2
    adds r1, r1, r2
    movs r0, #0xff
    strh r0, [r1]
    bl _call_via_r8
    add sp, #8
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080849c4: .4byte 0x04000208
lbl_080849c8: .4byte 0x04000004
lbl_080849cc: .4byte 0x0000ffef
lbl_080849d0: .4byte 0x04000200
lbl_080849d4: .4byte 0x0000fffd
lbl_080849d8: .4byte 0x04000202
lbl_080849dc: .4byte sub_080847f8
lbl_080849e0: .4byte 0x03000c72
lbl_080849e4: .4byte 0x040000d4
lbl_080849e8: .4byte 0x030016c4
lbl_080849ec: .4byte 0x8500018a
lbl_080849f0: .4byte 0x08754bc4
lbl_080849f4: .4byte 0x084c18e4
lbl_080849f8: .4byte 0x06008000
lbl_080849fc: .4byte 0x0600e000
lbl_08084a00: .4byte 0x0600f800
lbl_08084a04: .4byte 0x04ff04ff
lbl_08084a08: .4byte 0x0600e800
lbl_08084a0c: .4byte 0x80000100
lbl_08084a10: .4byte 0x00009e09
lbl_08084a14: .4byte 0x03001382
lbl_08084a18: .4byte 0x030013b4
lbl_08084a1c: .4byte 0x030013b6
lbl_08084a20: .4byte 0x030013b8
lbl_08084a24: .4byte 0x030013ba
lbl_08084a28: .4byte 0x030013bc
lbl_08084a2c: .4byte 0x030013be
lbl_08084a30: .4byte 0x030013c0
lbl_08084a34: .4byte 0x030013c2
lbl_08084a38: .4byte 0x04000010
lbl_08084a3c: .4byte 0x000002c2

    thumb_func_start fusion_gallery_display
fusion_gallery_display: @ 0x08084a40
    push {r4, r5, r6, r7, lr}
    movs r7, #0
    movs r4, #0
    ldr r1, lbl_08084a70 @ =0x08754bc4
    ldr r5, [r1]
    adds r0, r5, #0
    adds r0, #0x99
    ldrb r3, [r0]
    ldr r0, lbl_08084a74 @ =0x03001380
    ldrh r2, [r0]
    movs r0, #2
    ands r0, r2
    adds r6, r1, #0
    cmp r0, #0
    beq lbl_08084a80
    ldr r1, lbl_08084a78 @ =0x000002c2
    adds r0, r5, r1
    movs r1, #0xff
    strh r1, [r0]
    ldr r0, lbl_08084a7c @ =0x030013ae
    strh r7, [r0]
    movs r7, #1
    b lbl_08084aac
    .align 2, 0
lbl_08084a70: .4byte 0x08754bc4
lbl_08084a74: .4byte 0x03001380
lbl_08084a78: .4byte 0x000002c2
lbl_08084a7c: .4byte 0x030013ae
lbl_08084a80:
    movs r0, #0x11
    ands r0, r2
    cmp r0, #0
    beq lbl_08084a94
    cmp r3, #0xb
    bhi lbl_08084a90
    adds r0, r3, #1
    b lbl_08084aa2
lbl_08084a90:
    movs r3, #0
    b lbl_08084aaa
lbl_08084a94:
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0
    beq lbl_08084aac
    cmp r3, #0
    beq lbl_08084aa8
    subs r0, r3, #1
lbl_08084aa2:
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    b lbl_08084aaa
lbl_08084aa8:
    movs r3, #0xc
lbl_08084aaa:
    adds r4, #1
lbl_08084aac:
    cmp r4, #0
    beq lbl_08084acc
    ldr r0, [r6]
    adds r0, #0x99
    movs r2, #0
    strb r3, [r0]
    ldr r0, [r6]
    ldr r1, lbl_08084b04 @ =0x000002c2
    adds r0, r0, r1
    movs r1, #0xff
    strh r1, [r0]
    ldr r0, lbl_08084b08 @ =0x030013ae
    strh r2, [r0]
    ldr r1, lbl_08084b0c @ =0x03000c72
    movs r0, #5
    strh r0, [r1]
lbl_08084acc:
    movs r4, #0
    movs r3, #8
    ldr r0, [r6]
    ldrh r0, [r0, #2]
    cmp r0, #0
    beq lbl_08084aea
    ldr r0, lbl_08084b10 @ =0x0300137c
    ldrh r1, [r0]
    movs r0, #0x80
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    rsbs r0, r0, #0
    lsrs r4, r0, #0x1f
    movs r3, #0xc
lbl_08084aea:
    cmp r4, #0
    bne lbl_08084b30
    ldr r1, lbl_08084b14 @ =0x030013b6
    ldrh r0, [r1]
    cmp r0, r3
    ble lbl_08084b1c
    subs r0, r0, r3
    strh r0, [r1]
    ldr r1, lbl_08084b18 @ =0x030013ba
    ldrh r0, [r1]
    subs r0, r0, r3
    strh r0, [r1]
    b lbl_08084b50
    .align 2, 0
lbl_08084b04: .4byte 0x000002c2
lbl_08084b08: .4byte 0x030013ae
lbl_08084b0c: .4byte 0x03000c72
lbl_08084b10: .4byte 0x0300137c
lbl_08084b14: .4byte 0x030013b6
lbl_08084b18: .4byte 0x030013ba
lbl_08084b1c:
    strh r4, [r1]
    ldr r0, lbl_08084b2c @ =0x030013ba
    strh r4, [r0]
    ldr r1, [r6]
    movs r0, #1
    strh r0, [r1, #2]
    b lbl_08084b50
    .align 2, 0
lbl_08084b2c: .4byte 0x030013ba
lbl_08084b30:
    ldr r4, lbl_08084b58 @ =0x030013b6
    ldrh r1, [r4]
    adds r1, r1, r3
    strh r1, [r4]
    ldr r2, lbl_08084b5c @ =0x030013ba
    ldrh r0, [r2]
    adds r0, r0, r3
    strh r0, [r2]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    movs r0, #0x80
    lsls r0, r0, #5
    cmp r1, r0
    bls lbl_08084b50
    strh r0, [r4]
    strh r0, [r2]
lbl_08084b50:
    adds r0, r7, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08084b58: .4byte 0x030013b6
lbl_08084b5c: .4byte 0x030013ba

    thumb_func_start fusion_gallery_main
fusion_gallery_main: @ 0x08084b60
    push {r4, r5, r6, r7, lr}
    movs r6, #0
    ldr r0, lbl_08084b84 @ =0x08754bc4
    ldr r1, [r0]
    strb r6, [r1]
    ldr r1, lbl_08084b88 @ =0x03000c72
    movs r3, #0
    ldrsh r2, [r1, r3]
    adds r7, r0, #0
    adds r4, r1, #0
    cmp r2, #5
    bhi lbl_08084c2c
    lsls r0, r2, #2
    ldr r1, lbl_08084b8c @ =lbl_08084b90
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08084b84: .4byte 0x08754bc4
lbl_08084b88: .4byte 0x03000c72
lbl_08084b8c: .4byte lbl_08084b90
lbl_08084b90: @ jump table
    .4byte lbl_08084ba8 @ case 0
    .4byte lbl_08084bb8 @ case 1
    .4byte lbl_08084be0 @ case 2
    .4byte lbl_08084bf8 @ case 3
    .4byte lbl_08084ba8 @ case 4
    .4byte lbl_08084bf8 @ case 5
lbl_08084ba8:
    bl fusion_gallery_init
    ldr r1, lbl_08084bb4 @ =0x03000c72
    movs r0, #1
    strh r0, [r1]
    b lbl_08084c2c
    .align 2, 0
lbl_08084bb4: .4byte 0x03000c72
lbl_08084bb8:
    ldr r2, lbl_08084bc8 @ =0x030013ae
    ldrh r0, [r2]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08084bcc
    subs r0, #1
    strh r0, [r2]
    b lbl_08084c2c
    .align 2, 0
lbl_08084bc8: .4byte 0x030013ae
lbl_08084bcc:
    ldr r0, [r7]
    ldr r2, lbl_08084bdc @ =0x000002c2
    adds r0, r0, r2
    strh r1, [r0]
    ldrh r0, [r4]
    adds r0, #1
    b lbl_08084c2a
    .align 2, 0
lbl_08084bdc: .4byte 0x000002c2
lbl_08084be0:
    bl fusion_gallery_display
    cmp r0, #0
    beq lbl_08084c2c
    ldr r1, lbl_08084bf4 @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    b lbl_08084c2c
    .align 2, 0
lbl_08084bf4: .4byte 0x03000c72
lbl_08084bf8:
    ldr r5, lbl_08084c18 @ =0x030013ae
    ldrh r3, [r5]
    cmp r3, #0xf
    bhi lbl_08084c1c
    ldr r0, [r7]
    adds r0, #0x94
    ldrh r2, [r0]
    adds r1, r2, #1
    strh r1, [r0]
    movs r0, #1
    ands r0, r2
    cmp r0, #0
    beq lbl_08084c2c
    adds r0, r3, #1
    strh r0, [r5]
    b lbl_08084c2c
    .align 2, 0
lbl_08084c18: .4byte 0x030013ae
lbl_08084c1c:
    movs r3, #0
    ldrsh r0, [r4, r3]
    cmp r0, #3
    bne lbl_08084c28
    adds r6, #1
    b lbl_08084c2c
lbl_08084c28:
    movs r0, #4
lbl_08084c2a:
    strh r0, [r4]
lbl_08084c2c:
    adds r0, r6, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start sub_08084c34
sub_08084c34: @ 0x08084c34
    push {r4, r5, lr}
    adds r3, r0, #0
    ldr r1, lbl_08084c78 @ =0x08754bc4
    ldr r2, [r1]
    movs r4, #0x92
    lsls r4, r4, #1
    adds r0, r2, r4
    adds r0, r0, r3
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08084c72
    movs r5, #0xa1
    lsls r5, r5, #1
    adds r0, r2, r5
    adds r2, r0, r3
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_08084c72
    subs r0, #1
    strb r0, [r2]
    ldr r1, [r1]
    adds r0, r1, r5
    adds r0, r0, r3
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08084c72
    adds r1, r1, r4
    adds r1, r1, r3
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
lbl_08084c72:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08084c78: .4byte 0x08754bc4

    thumb_func_start sub_08084c7c
sub_08084c7c: @ 0x08084c7c
    push {r4, r5, r6, r7, lr}
    adds r2, r0, #0
    ldr r3, lbl_08084d04 @ =0x08754bc4
    ldr r1, [r3]
    adds r0, r1, #0
    adds r0, #0x9a
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08084d80
    cmp r2, #0
    bne lbl_08084d0c
    adds r1, #0x9b
    movs r0, #0xc
    strb r0, [r1]
    movs r4, #0
    adds r6, r3, #0
    movs r7, #0x18
    movs r5, #0xc
    ldr r3, lbl_08084d08 @ =0x0854bfa0
lbl_08084ca2:
    ldr r1, [r6]
    adds r2, r4, #6
    movs r0, #0x92
    lsls r0, r0, #1
    adds r1, r1, r0
    adds r1, r1, r2
    ldrb r0, [r3]
    strb r0, [r1]
    ldr r0, [r6]
    movs r1, #0xa1
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #1]
    strb r1, [r0]
    ldr r0, [r6]
    movs r1, #0xb0
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #2]
    strb r1, [r0]
    ldr r2, [r6]
    movs r1, #0xbf
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #4]
    strh r1, [r0]
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #6]
    strh r1, [r0]
    movs r1, #0xfc
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r7
    ldr r1, [r3, #8]
    str r1, [r0]
    adds r7, #4
    adds r5, #2
    adds r3, #0xc
    adds r4, #1
    cmp r4, #5
    ble lbl_08084ca2
    b lbl_08084ede
    .align 2, 0
lbl_08084d04: .4byte 0x08754bc4
lbl_08084d08: .4byte 0x0854bfa0
lbl_08084d0c:
    adds r1, #0x9b
    movs r0, #0x11
    strb r0, [r1]
    movs r4, #0
    adds r6, r3, #0
    movs r7, #0x18
    movs r5, #0xc
    ldr r3, lbl_08084d7c @ =0x0854bfe8
lbl_08084d1c:
    ldr r1, [r6]
    adds r2, r4, #6
    movs r0, #0x92
    lsls r0, r0, #1
    adds r1, r1, r0
    adds r1, r1, r2
    ldrb r0, [r3]
    strb r0, [r1]
    ldr r0, [r6]
    movs r1, #0xa1
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #1]
    strb r1, [r0]
    ldr r0, [r6]
    movs r1, #0xb0
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #2]
    strb r1, [r0]
    ldr r2, [r6]
    movs r1, #0xbf
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #4]
    strh r1, [r0]
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #6]
    strh r1, [r0]
    movs r1, #0xfc
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r7
    ldr r1, [r3, #8]
    str r1, [r0]
    adds r7, #4
    adds r5, #2
    adds r3, #0xc
    adds r4, #1
    cmp r4, #0xa
    ble lbl_08084d1c
    b lbl_08084ede
    .align 2, 0
lbl_08084d7c: .4byte 0x0854bfe8
lbl_08084d80:
    cmp r2, #0
    bne lbl_08084df8
    adds r1, #0x9b
    movs r0, #0xf
    strb r0, [r1]
    movs r4, #0
    adds r6, r3, #0
    movs r7, #0x18
    movs r5, #0xc
    ldr r3, lbl_08084df4 @ =0x0854bd9c
lbl_08084d94:
    ldr r1, [r6]
    adds r2, r4, #6
    movs r0, #0x92
    lsls r0, r0, #1
    adds r1, r1, r0
    adds r1, r1, r2
    ldrb r0, [r3]
    strb r0, [r1]
    ldr r0, [r6]
    movs r1, #0xa1
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #1]
    strb r1, [r0]
    ldr r0, [r6]
    movs r1, #0xb0
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #2]
    strb r1, [r0]
    ldr r2, [r6]
    movs r1, #0xbf
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #4]
    strh r1, [r0]
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #6]
    strh r1, [r0]
    movs r1, #0xfc
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r7
    ldr r1, [r3, #8]
    str r1, [r0]
    adds r7, #4
    adds r5, #2
    adds r3, #0xc
    adds r4, #1
    cmp r4, #8
    ble lbl_08084d94
    b lbl_08084ede
    .align 2, 0
lbl_08084df4: .4byte 0x0854bd9c
lbl_08084df8:
    cmp r2, #1
    bne lbl_08084e70
    adds r1, #0x9b
    movs r0, #0x11
    strb r0, [r1]
    movs r4, #0
    adds r6, r3, #0
    movs r7, #0x18
    movs r5, #0xc
    ldr r3, lbl_08084e6c @ =0x0854be08
lbl_08084e0c:
    ldr r1, [r6]
    adds r2, r4, #6
    movs r0, #0x92
    lsls r0, r0, #1
    adds r1, r1, r0
    adds r1, r1, r2
    ldrb r0, [r3]
    strb r0, [r1]
    ldr r0, [r6]
    movs r1, #0xa1
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #1]
    strb r1, [r0]
    ldr r0, [r6]
    movs r1, #0xb0
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #2]
    strb r1, [r0]
    ldr r2, [r6]
    movs r1, #0xbf
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #4]
    strh r1, [r0]
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #6]
    strh r1, [r0]
    movs r1, #0xfc
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r7
    ldr r1, [r3, #8]
    str r1, [r0]
    adds r7, #4
    adds r5, #2
    adds r3, #0xc
    adds r4, #1
    cmp r4, #0xa
    ble lbl_08084e0c
    b lbl_08084ede
    .align 2, 0
lbl_08084e6c: .4byte 0x0854be08
lbl_08084e70:
    adds r1, #0x9b
    movs r0, #0x17
    strb r0, [r1]
    movs r4, #0
    adds r6, r3, #0
    movs r7, #0x18
    movs r5, #0xc
    ldr r3, lbl_08084ee4 @ =0x0854be8c
lbl_08084e80:
    ldr r1, [r6]
    adds r2, r4, #6
    movs r0, #0x92
    lsls r0, r0, #1
    adds r1, r1, r0
    adds r1, r1, r2
    ldrb r0, [r3]
    strb r0, [r1]
    ldr r0, [r6]
    movs r1, #0xa1
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #1]
    strb r1, [r0]
    ldr r0, [r6]
    movs r1, #0xb0
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r2
    ldrb r1, [r3, #2]
    strb r1, [r0]
    ldr r2, [r6]
    movs r1, #0xbf
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #4]
    strh r1, [r0]
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r5
    ldrh r1, [r3, #6]
    strh r1, [r0]
    movs r1, #0xfc
    lsls r1, r1, #1
    adds r0, r2, r1
    adds r0, r0, r7
    ldr r1, [r3, #8]
    str r1, [r0]
    adds r7, #4
    adds r5, #2
    adds r3, #0xc
    adds r4, #1
    cmp r4, #0x10
    ble lbl_08084e80
lbl_08084ede:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08084ee4: .4byte 0x0854be8c

    thumb_func_start sub_08084ee8
sub_08084ee8: @ 0x08084ee8
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0
    ldr r1, lbl_08084f08 @ =0x08754bc4
    ldr r2, [r1]
    adds r0, r2, #0
    adds r0, #0x9a
    ldrb r0, [r0]
    adds r7, r1, #0
    cmp r0, #1
    bne lbl_08084f10
    movs r0, #0x92
    lsls r0, r0, #1
    adds r1, r2, r0
    adds r1, r1, r6
    ldr r5, lbl_08084f0c @ =0x0854bf58
    b lbl_08084f1a
    .align 2, 0
lbl_08084f08: .4byte 0x08754bc4
lbl_08084f0c: .4byte 0x0854bf58
lbl_08084f10:
    movs r0, #0x92
    lsls r0, r0, #1
    adds r1, r2, r0
    adds r1, r1, r6
    ldr r5, lbl_08084fac @ =0x0854bd54
lbl_08084f1a:
    lsls r4, r6, #1
    adds r3, r4, r6
    lsls r3, r3, #2
    adds r2, r3, r5
    ldrb r0, [r2]
    strb r0, [r1]
    ldr r0, [r7]
    movs r1, #0xa1
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r6
    ldrb r1, [r2, #1]
    strb r1, [r0]
    ldr r0, [r7]
    movs r1, #0xb0
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r6
    ldrb r1, [r2, #2]
    strb r1, [r0]
    ldr r0, [r7]
    mov ip, r0
    movs r0, #0xbf
    lsls r0, r0, #1
    add r0, ip
    adds r0, r0, r4
    ldrh r1, [r2, #4]
    strh r1, [r0]
    movs r0, #0xdd
    lsls r0, r0, #1
    add r0, ip
    adds r0, r0, r4
    ldrh r1, [r2, #6]
    strh r1, [r0]
    lsls r0, r6, #2
    movs r1, #0xfc
    lsls r1, r1, #1
    add r1, ip
    adds r1, r1, r0
    adds r5, #8
    adds r3, r3, r5
    ldr r0, [r3]
    str r0, [r1]
    movs r2, #0
    ldr r0, [r7]
    adds r0, #0x9b
    ldrb r0, [r0]
    subs r0, #6
    cmp r2, r0
    bge lbl_08084f9e
    adds r3, r7, #0
    movs r5, #0x92
    lsls r5, r5, #1
    movs r4, #0
lbl_08084f86:
    ldr r0, [r3]
    adds r1, r2, #6
    adds r0, r0, r5
    adds r0, r0, r1
    strb r4, [r0]
    adds r2, #1
    ldr r0, [r3]
    adds r0, #0x9b
    ldrb r0, [r0]
    subs r0, #6
    cmp r2, r0
    blt lbl_08084f86
lbl_08084f9e:
    ldr r0, [r7]
    adds r0, #0x9b
    movs r1, #6
    strb r1, [r0]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08084fac: .4byte 0x0854bd54

    thumb_func_start load_in_game_timer_ending_graphics
load_in_game_timer_ending_graphics: @ 0x08084fb0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    movs r1, #0
    ldr r0, lbl_080850c8 @ =0x03000150
    ldrb r4, [r0]
    ldr r6, lbl_080850cc @ =0x085a0a30
    ldr r7, lbl_080850d0 @ =0x085a0cb0
    ldr r2, lbl_080850d4 @ =0x08754bc4
    mov sl, r2
    cmp r4, #9
    ble lbl_08084fd4
lbl_08084fcc:
    subs r4, #0xa
    adds r1, #1
    cmp r4, #9
    bgt lbl_08084fcc
lbl_08084fd4:
    movs r5, #0
    ldrb r2, [r0, #1]
    lsls r4, r4, #6
    mov r8, r4
    cmp r2, #9
    ble lbl_08084fe8
lbl_08084fe0:
    subs r2, #0xa
    adds r5, #1
    cmp r2, #9
    bgt lbl_08084fe0
lbl_08084fe8:
    movs r3, #0
    mov ip, r3
    ldrb r4, [r0, #2]
    lsls r5, r5, #6
    lsls r2, r2, #6
    mov sb, r2
    cmp r4, #9
    ble lbl_08085002
lbl_08084ff8:
    subs r4, #0xa
    movs r0, #1
    add ip, r0
    cmp r4, #9
    bgt lbl_08084ff8
lbl_08085002:
    cmp r1, #0
    beq lbl_08085024
    lsls r3, r1, #6
    ldr r0, lbl_080850d8 @ =0x040000d4
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_080850dc @ =0x06010000
    str r1, [r0, #4]
    ldr r2, lbl_080850e0 @ =0x80000020
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_080850e4 @ =0x06010400
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
lbl_08085024:
    mov r3, r8
    ldr r0, lbl_080850d8 @ =0x040000d4
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_080850e8 @ =0x06010040
    str r1, [r0, #4]
    ldr r2, lbl_080850e0 @ =0x80000020
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_080850ec @ =0x06010440
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r3, r5, #0
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_080850f0 @ =0x060100a0
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_080850f4 @ =0x060104a0
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    mov r3, sb
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_080850f8 @ =0x060100e0
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_080850fc @ =0x060104e0
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    mov r1, ip
    lsls r3, r1, #6
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_08085100 @ =0x06010140
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_08085104 @ =0x06010540
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    lsls r3, r4, #6
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_08085108 @ =0x06010180
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_0808510c @ =0x06010580
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    movs r1, #0
    movs r4, #0
    mov r2, sl
    ldr r0, [r2]
    adds r0, #0x99
    ldrb r5, [r0]
    cmp r5, #0x63
    ble lbl_08085114
lbl_080850bc:
    subs r5, #0x64
    adds r1, #1
    cmp r5, #0x63
    bgt lbl_080850bc
    b lbl_08085114
    .align 2, 0
lbl_080850c8: .4byte 0x03000150
lbl_080850cc: .4byte 0x085a0a30
lbl_080850d0: .4byte 0x085a0cb0
lbl_080850d4: .4byte 0x08754bc4
lbl_080850d8: .4byte 0x040000d4
lbl_080850dc: .4byte 0x06010000
lbl_080850e0: .4byte 0x80000020
lbl_080850e4: .4byte 0x06010400
lbl_080850e8: .4byte 0x06010040
lbl_080850ec: .4byte 0x06010440
lbl_080850f0: .4byte 0x060100a0
lbl_080850f4: .4byte 0x060104a0
lbl_080850f8: .4byte 0x060100e0
lbl_080850fc: .4byte 0x060104e0
lbl_08085100: .4byte 0x06010140
lbl_08085104: .4byte 0x06010540
lbl_08085108: .4byte 0x06010180
lbl_0808510c: .4byte 0x06010580
lbl_08085110:
    subs r5, #0xa
    adds r4, #1
lbl_08085114:
    cmp r5, #9
    bgt lbl_08085110
    cmp r1, #0
    beq lbl_0808514c
    lsls r3, r1, #6
    ldr r0, lbl_0808513c @ =0x040000d4
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_08085140 @ =0x060101c0
    str r1, [r0, #4]
    ldr r2, lbl_08085144 @ =0x80000020
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_08085148 @ =0x060105c0
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    b lbl_08085150
    .align 2, 0
lbl_0808513c: .4byte 0x040000d4
lbl_08085140: .4byte 0x060101c0
lbl_08085144: .4byte 0x80000020
lbl_08085148: .4byte 0x060105c0
lbl_0808514c:
    cmp r4, #0
    beq lbl_0808516e
lbl_08085150:
    lsls r3, r4, #6
    ldr r0, lbl_0808519c @ =0x040000d4
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_080851a0 @ =0x06010200
    str r1, [r0, #4]
    ldr r2, lbl_080851a4 @ =0x80000020
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_080851a8 @ =0x06010600
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
lbl_0808516e:
    lsls r3, r5, #6
    ldr r0, lbl_0808519c @ =0x040000d4
    adds r1, r3, r6
    str r1, [r0]
    ldr r1, lbl_080851ac @ =0x06010240
    str r1, [r0, #4]
    ldr r2, lbl_080851a4 @ =0x80000020
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    adds r1, r3, r7
    str r1, [r0]
    ldr r1, lbl_080851b0 @ =0x06010640
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808519c: .4byte 0x040000d4
lbl_080851a0: .4byte 0x06010200
lbl_080851a4: .4byte 0x80000020
lbl_080851a8: .4byte 0x06010600
lbl_080851ac: .4byte 0x06010240
lbl_080851b0: .4byte 0x06010640

    thumb_func_start vblank_code_during_gallery
vblank_code_during_gallery: @ 0x080851b4
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r6, lbl_08085214 @ =0x040000d4
    ldr r0, lbl_08085218 @ =0x03000e7c
    str r0, [r6]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r6, #4]
    ldr r0, lbl_0808521c @ =0x84000100
    str r0, [r6, #8]
    ldr r0, [r6, #8]
    ldr r0, lbl_08085220 @ =0x08754bc4
    ldr r3, [r0]
    ldrb r2, [r3, #6]
    adds r7, r0, #0
    cmp r2, #1
    bne lbl_0808522c
    adds r0, r3, #0
    adds r0, #0x10
    str r0, [r6]
    adds r5, r3, #0
    adds r5, #0x90
    ldr r0, [r5]
    movs r2, #0xc0
    lsls r2, r2, #0x13
    adds r0, r0, r2
    str r0, [r6, #4]
    ldr r1, lbl_08085224 @ =0x80000020
    str r1, [r6, #8]
    ldr r0, [r6, #8]
    adds r0, r3, #0
    adds r0, #0x50
    str r0, [r6]
    adds r4, r3, #0
    adds r4, #0x94
    ldr r0, [r4]
    adds r0, r0, r2
    str r0, [r6, #4]
    str r1, [r6, #8]
    ldr r0, [r6, #8]
    movs r3, #0
    str r3, [sp]
    mov r0, sp
    str r0, [r6]
    ldr r0, [r5]
    ldr r2, lbl_08085228 @ =0x06000800
    b lbl_0808526a
    .align 2, 0
lbl_08085214: .4byte 0x040000d4
lbl_08085218: .4byte 0x03000e7c
lbl_0808521c: .4byte 0x84000100
lbl_08085220: .4byte 0x08754bc4
lbl_08085224: .4byte 0x80000020
lbl_08085228: .4byte 0x06000800
lbl_0808522c:
    cmp r2, #0
    beq lbl_08085284
    adds r0, r3, #0
    adds r0, #0x10
    str r0, [r6]
    adds r5, r3, #0
    adds r5, #0x90
    ldr r0, [r5]
    ldr r2, lbl_080852ec @ =0x06000800
    adds r0, r0, r2
    str r0, [r6, #4]
    ldr r1, lbl_080852f0 @ =0x80000020
    str r1, [r6, #8]
    ldr r0, [r6, #8]
    adds r0, r3, #0
    adds r0, #0x50
    str r0, [r6]
    adds r4, r3, #0
    adds r4, #0x94
    ldr r0, [r4]
    adds r0, r0, r2
    str r0, [r6, #4]
    str r1, [r6, #8]
    ldr r0, [r6, #8]
    movs r3, #0
    str r3, [sp]
    mov r0, sp
    str r0, [r6]
    ldr r0, [r5]
    movs r2, #0xc0
    lsls r2, r2, #0x13
lbl_0808526a:
    adds r0, r0, r2
    str r0, [r6, #4]
    ldr r1, lbl_080852f4 @ =0x85000010
    str r1, [r6, #8]
    ldr r0, [r6, #8]
    str r3, [sp]
    mov r3, sp
    str r3, [r6]
    ldr r0, [r4]
    adds r0, r0, r2
    str r0, [r6, #4]
    str r1, [r6, #8]
    ldr r0, [r6, #8]
lbl_08085284:
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldr r1, [r7]
    movs r3, #0xb0
    lsls r3, r3, #2
    adds r0, r1, r3
    ldrh r0, [r0]
    strh r0, [r2]
    adds r2, #0x50
    ldr r0, lbl_080852f8 @ =0x000002c2
    adds r1, r1, r0
    ldrh r0, [r1]
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_080852fc @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_08085300 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_08085304 @ =0x04000054
    ldr r0, lbl_08085308 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    subs r1, #0x42
    ldr r0, lbl_0808530c @ =0x030013b6
    ldrh r0, [r0]
    lsrs r0, r0, #4
    subs r3, #0xc1
    adds r2, r3, #0
    ands r0, r2
    strh r0, [r1]
    adds r1, #4
    strh r0, [r1]
    adds r1, #4
    ldr r0, lbl_08085310 @ =0x030013be
    ldrh r0, [r0]
    lsrs r0, r0, #4
    ands r0, r2
    strh r0, [r1]
    adds r1, #4
    ldr r0, lbl_08085314 @ =0x030013c2
    ldrh r0, [r0]
    lsrs r0, r0, #4
    ands r0, r2
    strh r0, [r1]
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080852ec: .4byte 0x06000800
lbl_080852f0: .4byte 0x80000020
lbl_080852f4: .4byte 0x85000010
lbl_080852f8: .4byte 0x000002c2
lbl_080852fc: .4byte 0x030013b2
lbl_08085300: .4byte 0x030013b0
lbl_08085304: .4byte 0x04000054
lbl_08085308: .4byte 0x030013ae
lbl_0808530c: .4byte 0x030013b6
lbl_08085310: .4byte 0x030013be
lbl_08085314: .4byte 0x030013c2

    thumb_func_start vblank_code_during_end_screen
vblank_code_during_end_screen: @ 0x08085318
    ldr r1, lbl_08085384 @ =0x040000d4
    ldr r0, lbl_08085388 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0808538c @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldr r0, lbl_08085390 @ =0x08754bc4
    ldr r1, [r0]
    movs r3, #0xb0
    lsls r3, r3, #2
    adds r0, r1, r3
    ldrh r0, [r0]
    strh r0, [r2]
    adds r2, #0x50
    ldr r0, lbl_08085394 @ =0x000002c2
    adds r1, r1, r0
    ldrh r0, [r1]
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_08085398 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_0808539c @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_080853a0 @ =0x04000054
    ldr r0, lbl_080853a4 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r3, lbl_080853a8 @ =0x04000014
    ldr r0, lbl_080853ac @ =0x030013b8
    ldrh r2, [r0]
    ldr r1, lbl_080853b0 @ =0x000001ff
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    adds r3, #4
    ldr r0, lbl_080853b4 @ =0x030013bc
    ldrh r2, [r0]
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    ldr r2, lbl_080853b8 @ =0x0400001c
    ldr r0, lbl_080853bc @ =0x030013c0
    ldrh r0, [r0]
    ands r1, r0
    strh r1, [r2]
    bx lr
    .align 2, 0
lbl_08085384: .4byte 0x040000d4
lbl_08085388: .4byte 0x03000e7c
lbl_0808538c: .4byte 0x84000100
lbl_08085390: .4byte 0x08754bc4
lbl_08085394: .4byte 0x000002c2
lbl_08085398: .4byte 0x030013b2
lbl_0808539c: .4byte 0x030013b0
lbl_080853a0: .4byte 0x04000054
lbl_080853a4: .4byte 0x030013ae
lbl_080853a8: .4byte 0x04000014
lbl_080853ac: .4byte 0x030013b8
lbl_080853b0: .4byte 0x000001ff
lbl_080853b4: .4byte 0x030013bc
lbl_080853b8: .4byte 0x0400001c
lbl_080853bc: .4byte 0x030013c0

    thumb_func_start vblank_code_during_unlocked_options
vblank_code_during_unlocked_options: @ 0x080853c0
    push {r4, lr}
    ldr r1, lbl_0808543c @ =0x040000d4
    ldr r0, lbl_08085440 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08085444 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xd4
    ldr r0, lbl_08085448 @ =0x08754bc4
    ldr r3, [r0]
    movs r2, #0xb0
    lsls r2, r2, #2
    adds r0, r3, r2
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #0x50
    ldr r4, lbl_0808544c @ =0x000002c2
    adds r0, r3, r4
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r2, lbl_08085450 @ =0x04000052
    ldr r0, lbl_08085454 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_08085458 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_0808545c @ =0x04000054
    ldr r0, lbl_08085460 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    subs r2, #0x12
    movs r1, #0xbf
    lsls r1, r1, #1
    adds r0, r3, r1
    ldrh r0, [r0]
    lsls r0, r0, #8
    movs r4, #0xc0
    lsls r4, r4, #1
    adds r1, r3, r4
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    adds r2, #4
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r3, r1
    ldrh r0, [r0]
    lsls r0, r0, #8
    adds r4, #0x3c
    adds r1, r3, r4
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808543c: .4byte 0x040000d4
lbl_08085440: .4byte 0x03000e7c
lbl_08085444: .4byte 0x84000100
lbl_08085448: .4byte 0x08754bc4
lbl_0808544c: .4byte 0x000002c2
lbl_08085450: .4byte 0x04000052
lbl_08085454: .4byte 0x030013b2
lbl_08085458: .4byte 0x030013b0
lbl_0808545c: .4byte 0x04000054
lbl_08085460: .4byte 0x030013ae

    thumb_func_start credits_init
credits_init: @ 0x08085464
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    sub sp, #4
    ldr r4, lbl_080855ac @ =0x04000208
    movs r6, #0
    strh r6, [r4]
    ldr r2, lbl_080855b0 @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_080855b4 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_080855b8 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_080855bc @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_080855c0 @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r5, #1
    strh r5, [r4]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r6, [r0]
    strh r6, [r4]
    ldr r0, lbl_080855c4 @ =vblank_code_during_gallery
    mov r8, r0
    bl CallbackSetVBlank
    strh r5, [r4]
    movs r5, #0
    str r5, [sp]
    ldr r4, lbl_080855c8 @ =0x040000d4
    mov r1, sp
    str r1, [r4]
    ldr r0, lbl_080855cc @ =0x030016c4
    str r0, [r4, #4]
    ldr r0, lbl_080855d0 @ =0x8500018a
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    bl ClearGFXRAM
    ldr r0, lbl_080855d4 @ =0x085b2aa0
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, lbl_080855d8 @ =0x085ba318
    ldr r1, lbl_080855dc @ =0x0600e000
    bl LZ77UncompVRAM
    ldr r0, lbl_080855e0 @ =0x085be8c8
    ldr r1, lbl_080855e4 @ =0x0600d800
    bl LZ77UncompVRAM
    ldr r0, lbl_080855e8 @ =0x0854e2f0
    ldr r1, lbl_080855ec @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_080855f0 @ =0x0854a734
    str r0, [r4]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r4, #4]
    ldr r0, lbl_080855f4 @ =0x800000f0
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r0, lbl_080855f8 @ =0x0854a6d4
    str r0, [r4]
    ldr r0, lbl_080855fc @ =0x050001a0
    str r0, [r4, #4]
    ldr r0, lbl_08085600 @ =0x80000030
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r1, lbl_08085604 @ =0x04000008
    ldr r2, lbl_08085608 @ =0x00001e08
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_0808560c @ =0x00001f09
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08085610 @ =0x00009c02
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08085614 @ =0x00009a0b
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08085618 @ =0x03001382
    strb r6, [r0]
    bl ResetFreeOAM
    ldr r0, lbl_0808561c @ =0x030013b4
    strh r5, [r0]
    ldr r0, lbl_08085620 @ =0x030013b6
    movs r1, #0x80
    lsls r1, r1, #5
    adds r2, r1, #0
    strh r2, [r0]
    ldr r0, lbl_08085624 @ =0x030013b8
    strh r5, [r0]
    ldr r0, lbl_08085628 @ =0x030013ba
    strh r2, [r0]
    ldr r0, lbl_0808562c @ =0x030013bc
    strh r5, [r0]
    ldr r0, lbl_08085630 @ =0x030013be
    strh r5, [r0]
    ldr r0, lbl_08085634 @ =0x030013c0
    strh r5, [r0]
    ldr r0, lbl_08085638 @ =0x030013c2
    strh r5, [r0]
    ldr r0, lbl_0808563c @ =0x04000010
    strh r5, [r0]
    adds r0, #2
    strh r2, [r0]
    ldr r1, lbl_08085640 @ =0x04000014
    movs r0, #4
    strh r0, [r1]
    ldr r0, lbl_08085644 @ =0x04000016
    strh r2, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    ldr r0, lbl_08085648 @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0x80
    strh r0, [r1, #0xe]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r2, r1, r0
    movs r0, #0xf0
    lsls r0, r0, #4
    strh r0, [r2]
    ldr r2, lbl_0808564c @ =0x000002c2
    adds r1, r1, r2
    movs r0, #0xc4
    strh r0, [r1]
    ldr r0, lbl_08085650 @ =0x030013b0
    movs r1, #0x10
    strh r1, [r0]
    ldr r0, lbl_08085654 @ =0x030013b2
    strh r5, [r0]
    ldr r0, lbl_08085658 @ =0x030013ae
    strh r1, [r0]
    bl _call_via_r8
    movs r0, #0x1b
    movs r1, #0
    bl PlayMusic
    add sp, #4
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080855ac: .4byte 0x04000208
lbl_080855b0: .4byte 0x04000004
lbl_080855b4: .4byte 0x0000ffef
lbl_080855b8: .4byte 0x04000200
lbl_080855bc: .4byte 0x0000fffd
lbl_080855c0: .4byte 0x04000202
lbl_080855c4: .4byte vblank_code_during_gallery
lbl_080855c8: .4byte 0x040000d4
lbl_080855cc: .4byte 0x030016c4
lbl_080855d0: .4byte 0x8500018a
lbl_080855d4: .4byte 0x085b2aa0
lbl_080855d8: .4byte 0x085ba318
lbl_080855dc: .4byte 0x0600e000
lbl_080855e0: .4byte 0x085be8c8
lbl_080855e4: .4byte 0x0600d800
lbl_080855e8: .4byte 0x0854e2f0
lbl_080855ec: .4byte 0x06008000
lbl_080855f0: .4byte 0x0854a734
lbl_080855f4: .4byte 0x800000f0
lbl_080855f8: .4byte 0x0854a6d4
lbl_080855fc: .4byte 0x050001a0
lbl_08085600: .4byte 0x80000030
lbl_08085604: .4byte 0x04000008
lbl_08085608: .4byte 0x00001e08
lbl_0808560c: .4byte 0x00001f09
lbl_08085610: .4byte 0x00009c02
lbl_08085614: .4byte 0x00009a0b
lbl_08085618: .4byte 0x03001382
lbl_0808561c: .4byte 0x030013b4
lbl_08085620: .4byte 0x030013b6
lbl_08085624: .4byte 0x030013b8
lbl_08085628: .4byte 0x030013ba
lbl_0808562c: .4byte 0x030013bc
lbl_08085630: .4byte 0x030013be
lbl_08085634: .4byte 0x030013c0
lbl_08085638: .4byte 0x030013c2
lbl_0808563c: .4byte 0x04000010
lbl_08085640: .4byte 0x04000014
lbl_08085644: .4byte 0x04000016
lbl_08085648: .4byte 0x08754bc4
lbl_0808564c: .4byte 0x000002c2
lbl_08085650: .4byte 0x030013b0
lbl_08085654: .4byte 0x030013b2
lbl_08085658: .4byte 0x030013ae

    thumb_func_start display_credit_line
display_credit_line: @ 0x0808565c
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r4, lbl_080856c8 @ =0x0854c10c
    lsls r1, r0, #3
    adds r1, r1, r0
    lsls r1, r1, #2
    adds r4, r1, r4
    movs r6, #0
    ldr r5, lbl_080856cc @ =0x08754bc4
    movs r3, #0
lbl_08085676:
    ldr r1, [r5]
    lsls r2, r6, #1
    adds r0, r1, #0
    adds r0, #0x10
    adds r0, r0, r2
    strh r3, [r0]
    adds r1, #0x50
    adds r1, r1, r2
    strh r3, [r1]
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #0x1f
    bls lbl_08085676
    ldrb r0, [r4]
    movs r1, #0xe0
    lsls r1, r1, #8
    mov ip, r1
    cmp r0, #0
    beq lbl_080856ae
    movs r1, #0xd0
    lsls r1, r1, #8
    mov ip, r1
    cmp r0, #1
    bne lbl_080856ae
    movs r0, #0xf0
    lsls r0, r0, #8
    mov ip, r0
lbl_080856ae:
    movs r2, #0
    mov sl, r2
    movs r6, #0
    ldrb r0, [r4]
    cmp r0, #0xd
    bls lbl_080856bc
    b lbl_080859de
lbl_080856bc:
    lsls r0, r0, #2
    ldr r1, lbl_080856d0 @ =lbl_080856d4
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080856c8: .4byte 0x0854c10c
lbl_080856cc: .4byte 0x08754bc4
lbl_080856d0: .4byte lbl_080856d4
lbl_080856d4: @ jump table
    .4byte lbl_0808570c @ case 0
    .4byte lbl_0808570c @ case 1
    .4byte lbl_080858a8 @ case 2
    .4byte lbl_0808570c @ case 3
    .4byte lbl_080859de @ case 4
    .4byte lbl_08085846 @ case 5
    .4byte lbl_080857f2 @ case 6
    .4byte lbl_080859de @ case 7
    .4byte lbl_080859de @ case 8
    .4byte lbl_080859de @ case 9
    .4byte lbl_080857f6 @ case 10
    .4byte lbl_08085824 @ case 11
    .4byte lbl_08085850 @ case 12
    .4byte lbl_0808587c @ case 13
lbl_0808570c:
    movs r7, #0
    ldrb r0, [r4, #1]
    adds r1, r4, #1
    cmp r0, #0
    beq lbl_0808572a
    adds r2, r1, #0
lbl_08085718:
    adds r0, r7, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    cmp r7, #0x1d
    bhi lbl_0808572a
    adds r0, r2, r7
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_08085718
lbl_0808572a:
    movs r0, #1
    ands r0, r7
    cmp r0, #0
    beq lbl_0808573c
    movs r4, #0x80
    mov sl, r4
    subs r0, r7, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
lbl_0808573c:
    movs r0, #0x1e
    subs r0, r0, r7
    asrs r0, r0, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    adds r0, r1, r6
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08085846
    adds r4, r1, #0
    ldr r3, lbl_0808577c @ =0x08754bc4
    ldr r0, lbl_08085780 @ =0x0000ffc0
    add r0, ip
    mov r8, r0
    ldr r5, lbl_08085784 @ =0x0000ffbf
    add r5, ip
lbl_0808575c:
    adds r2, r4, r6
    ldrb r1, [r2]
    adds r0, r1, #0
    subs r0, #0x41
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x19
    bhi lbl_08085788
    ldr r0, [r3]
    lsls r1, r7, #1
    adds r0, #0x10
    adds r0, r0, r1
    ldrb r1, [r2]
    add r1, r8
    b lbl_080857da
    .align 2, 0
lbl_0808577c: .4byte 0x08754bc4
lbl_08085780: .4byte 0x0000ffc0
lbl_08085784: .4byte 0x0000ffbf
lbl_08085788:
    adds r0, r1, #0
    subs r0, #0x61
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x19
    bhi lbl_080857a2
    ldr r0, [r3]
    lsls r1, r7, #1
    adds r0, #0x10
    adds r0, r0, r1
    ldrb r1, [r2]
    adds r1, r1, r5
    b lbl_080857da
lbl_080857a2:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x2e
    bne lbl_080857b8
    ldr r0, [r3]
    lsls r1, r7, #1
    adds r0, #0x10
    adds r0, r0, r1
    mov r1, ip
    adds r1, #0x1b
    b lbl_080857da
lbl_080857b8:
    cmp r0, #0x2c
    bne lbl_080857ca
    ldr r0, [r3]
    lsls r1, r7, #1
    adds r0, #0x10
    adds r0, r0, r1
    mov r1, ip
    adds r1, #0x1c
    b lbl_080857da
lbl_080857ca:
    cmp r0, #0x26
    bne lbl_080857dc
    ldr r0, [r3]
    lsls r1, r7, #1
    adds r0, #0x10
    adds r0, r0, r1
    mov r1, ip
    adds r1, #0x1d
lbl_080857da:
    strh r1, [r0]
lbl_080857dc:
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    adds r0, r7, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    adds r0, r4, r6
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0808575c
    b lbl_08085846
lbl_080857f2:
    movs r2, #9
    b lbl_080859de
lbl_080857f6:
    movs r6, #0
    mov r0, ip
    adds r0, #0xc0
    ldr r3, lbl_08085820 @ =0x08754bc4
    adds r2, r0, #0
lbl_08085800:
    ldr r1, [r3]
    adds r0, r6, #5
    lsls r0, r0, #1
    adds r1, #0x10
    adds r1, r1, r0
    adds r0, r6, r2
    strh r0, [r1]
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #0x13
    bls lbl_08085800
    movs r2, #1
    movs r1, #0x10
    mov sl, r1
    b lbl_080859de
    .align 2, 0
lbl_08085820: .4byte 0x08754bc4
lbl_08085824:
    movs r6, #0
    mov r0, ip
    adds r0, #0xe0
    ldr r3, lbl_0808584c @ =0x08754bc4
    adds r2, r0, #0
lbl_0808582e:
    ldr r1, [r3]
    adds r0, r6, #5
    lsls r0, r0, #1
    adds r1, #0x10
    adds r1, r1, r0
    adds r0, r6, r2
    strh r0, [r1]
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #0x13
    bls lbl_0808582e
lbl_08085846:
    movs r2, #1
    b lbl_080859de
    .align 2, 0
lbl_0808584c: .4byte 0x08754bc4
lbl_08085850:
    movs r6, #0
    ldr r3, lbl_08085878 @ =0x08754bc4
    movs r4, #0x80
    lsls r4, r4, #1
    adds r0, r4, #0
    mov r1, ip
    adds r2, r1, r0
lbl_0808585e:
    ldr r1, [r3]
    adds r0, r6, #5
    lsls r0, r0, #1
    adds r1, #0x10
    adds r1, r1, r0
    adds r0, r6, r2
    strh r0, [r1]
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #0x13
    bls lbl_0808585e
    b lbl_08085846
    .align 2, 0
lbl_08085878: .4byte 0x08754bc4
lbl_0808587c:
    movs r6, #0
    ldr r3, lbl_080858a4 @ =0x08754bc4
    movs r4, #0x90
    lsls r4, r4, #1
    adds r0, r4, #0
    mov r1, ip
    adds r2, r1, r0
lbl_0808588a:
    ldr r1, [r3]
    adds r0, r6, #5
    lsls r0, r0, #1
    adds r1, #0x10
    adds r1, r1, r0
    adds r0, r6, r2
    strh r0, [r1]
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #0x13
    bls lbl_0808588a
    b lbl_08085846
    .align 2, 0
lbl_080858a4: .4byte 0x08754bc4
lbl_080858a8:
    movs r7, #0
    ldrb r0, [r4, #1]
    adds r1, r4, #1
    cmp r0, #0
    beq lbl_080858c6
    adds r2, r1, #0
lbl_080858b4:
    adds r0, r7, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    cmp r7, #0x1d
    bhi lbl_080858c6
    adds r0, r2, r7
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080858b4
lbl_080858c6:
    movs r0, #1
    ands r0, r7
    cmp r0, #0
    beq lbl_080858d8
    movs r4, #0x80
    mov sl, r4
    subs r0, r7, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
lbl_080858d8:
    movs r0, #0x1e
    subs r0, r0, r7
    asrs r0, r0, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    adds r0, r1, r6
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_080859dc
    ldr r0, lbl_08085928 @ =0x08754bc4
    mov r8, r0
    mov sb, r1
lbl_080858f0:
    mov r1, sb
    adds r5, r1, r6
    ldrb r1, [r5]
    adds r0, r1, #0
    subs r0, #0x41
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x19
    bhi lbl_08085930
    mov r4, r8
    ldr r2, [r4]
    lsls r3, r7, #1
    adds r1, r2, #0
    adds r1, #0x10
    adds r1, r1, r3
    ldr r0, lbl_0808592c @ =0x0000ffff
    add r0, ip
    ldrb r4, [r5]
    adds r0, r0, r4
    strh r0, [r1]
    adds r2, #0x50
    adds r2, r2, r3
    ldrb r0, [r5]
    mov r1, ip
    adds r1, #0x1f
    adds r0, r0, r1
    b lbl_080859c4
    .align 2, 0
lbl_08085928: .4byte 0x08754bc4
lbl_0808592c: .4byte 0x0000ffff
lbl_08085930:
    adds r0, r1, #0
    subs r0, #0x61
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x19
    bhi lbl_08085960
    mov r0, r8
    ldr r3, [r0]
    lsls r4, r7, #1
    adds r2, r3, #0
    adds r2, #0x10
    adds r2, r2, r4
    ldrb r0, [r5]
    mov r1, ip
    adds r1, #0x1f
    adds r0, r0, r1
    strh r0, [r2]
    adds r3, #0x50
    adds r3, r3, r4
    ldrb r0, [r5]
    adds r1, #0x20
    adds r0, r0, r1
    strh r0, [r3]
    b lbl_080859c6
lbl_08085960:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x2e
    bne lbl_0808597a
    mov r1, r8
    ldr r0, [r1]
    lsls r1, r7, #1
    adds r0, #0x50
    adds r0, r0, r1
    mov r1, ip
    adds r1, #0x7b
    strh r1, [r0]
    b lbl_080859c6
lbl_0808597a:
    cmp r0, #0x2c
    bne lbl_08085990
    mov r4, r8
    ldr r0, [r4]
    lsls r1, r7, #1
    adds r0, #0x50
    adds r0, r0, r1
    mov r1, ip
    adds r1, #0x7c
    strh r1, [r0]
    b lbl_080859c6
lbl_08085990:
    cmp r0, #0x2d
    bne lbl_080859a6
    mov r1, r8
    ldr r0, [r1]
    lsls r1, r7, #1
    adds r0, #0x10
    adds r0, r0, r1
    mov r1, ip
    adds r1, #0x5a
    strh r1, [r0]
    b lbl_080859c6
lbl_080859a6:
    cmp r0, #0x2b
    bne lbl_080859c6
    mov r4, r8
    ldr r2, [r4]
    lsls r3, r7, #1
    adds r0, r2, #0
    adds r0, #0x10
    adds r0, r0, r3
    mov r1, ip
    adds r1, #0x9a
    strh r1, [r0]
    adds r2, #0x50
    adds r2, r2, r3
    mov r0, ip
    adds r0, #0xba
lbl_080859c4:
    strh r0, [r2]
lbl_080859c6:
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    adds r0, r7, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    mov r1, sb
    adds r0, r1, r6
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080858f0
lbl_080859dc:
    movs r2, #2
lbl_080859de:
    mov r4, sl
    orrs r2, r4
    adds r0, r2, #0
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start display_credits
display_credits: @ 0x080859f4
    push {r4, r5, r6, r7, lr}
    ldr r0, lbl_08085a24 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r3, [r2, #1]
    adds r7, r0, #0
    cmp r3, #0
    beq lbl_08085ad0
    movs r4, #0
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    movs r0, #0x84
    lsls r0, r0, #2
    cmp r1, r0
    beq lbl_08085a38
    cmp r1, r0
    bgt lbl_08085a28
    subs r0, #0x40
    cmp r1, r0
    beq lbl_08085a32
    b lbl_08085a6c
    .align 2, 0
lbl_08085a24: .4byte 0x08754bc4
lbl_08085a28:
    movs r0, #0x8c
    lsls r0, r0, #2
    cmp r1, r0
    beq lbl_08085a58
    b lbl_08085a6c
lbl_08085a32:
    adds r0, r3, #1
    strb r0, [r2, #1]
    b lbl_08085a6c
lbl_08085a38:
    ldr r0, lbl_08085a4c @ =0x000002c2
    adds r1, r2, r0
    ldr r0, lbl_08085a50 @ =0x00000441
    strh r0, [r1]
    ldr r0, lbl_08085a54 @ =0x030013ae
    strh r4, [r0]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    b lbl_08085a6c
    .align 2, 0
lbl_08085a4c: .4byte 0x000002c2
lbl_08085a50: .4byte 0x00000441
lbl_08085a54: .4byte 0x030013ae
lbl_08085a58:
    movs r1, #0xb0
    lsls r1, r1, #2
    adds r0, r2, r1
    movs r1, #0xc0
    lsls r1, r1, #4
    strh r1, [r0]
    ldr r1, lbl_08085a94 @ =0x000002c2
    adds r0, r2, r1
    strh r4, [r0]
    movs r4, #1
lbl_08085a6c:
    ldr r2, [r7]
    ldrb r3, [r2, #1]
    adds r0, r3, #0
    cmp r0, #2
    bne lbl_08085a9c
    ldrb r1, [r2, #2]
    adds r0, r1, #1
    strb r0, [r2, #2]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    bne lbl_08085acc
    ldr r1, lbl_08085a98 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08085acc
    subs r0, #1
    strh r0, [r1]
    b lbl_08085acc
    .align 2, 0
lbl_08085a94: .4byte 0x000002c2
lbl_08085a98: .4byte 0x030013ae
lbl_08085a9c:
    cmp r0, #3
    bne lbl_08085acc
    ldrh r1, [r2, #4]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08085acc
    ldr r1, lbl_08085ac0 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08085ac8
    subs r0, #1
    strh r0, [r1]
    ldr r2, lbl_08085ac4 @ =0x030013b2
    movs r1, #0x10
    subs r1, r1, r0
    strh r1, [r2]
    b lbl_08085acc
    .align 2, 0
lbl_08085ac0: .4byte 0x030013b0
lbl_08085ac4: .4byte 0x030013b2
lbl_08085ac8:
    adds r0, r3, #1
    strb r0, [r2, #1]
lbl_08085acc:
    adds r0, r4, #0
    b lbl_08085b72
lbl_08085ad0:
    ldrh r1, [r2, #0xe]
    cmp r1, #0x7f
    bls lbl_08085b60
    movs r0, #0x7f
    ands r0, r1
    strh r0, [r2, #0xe]
    ldrh r0, [r2, #8]
    ldrh r1, [r2, #0xa]
    cmp r0, r1
    bne lbl_08085b58
    ldrh r0, [r2, #0xc]
    bl display_credit_line
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r6, #0xf0
    ands r6, r4
    movs r0, #0xf
    ands r4, r0
    cmp r4, #9
    bne lbl_08085b02
    ldr r1, [r7]
    movs r0, #1
    strb r0, [r1, #1]
    b lbl_08085b58
lbl_08085b02:
    ldr r2, [r7]
    ldrh r0, [r2, #0xa]
    lsls r0, r0, #6
    movs r1, #0xa0
    lsls r1, r1, #3
    adds r0, r0, r1
    ldr r3, lbl_08085b78 @ =0x000007ff
    cmp r0, r3
    ble lbl_08085b16
    ands r0, r3
lbl_08085b16:
    adds r1, r2, #0
    adds r1, #0x90
    movs r5, #0xf0
    lsls r5, r5, #8
    adds r0, r0, r5
    str r0, [r1]
    ldrh r0, [r2, #0xa]
    lsls r0, r0, #6
    movs r1, #0xa8
    lsls r1, r1, #3
    adds r0, r0, r1
    cmp r0, r3
    ble lbl_08085b32
    ands r0, r3
lbl_08085b32:
    adds r1, r2, #0
    adds r1, #0x94
    adds r0, r0, r5
    str r0, [r1]
    ldrh r0, [r2, #0xa]
    adds r0, r0, r4
    strh r0, [r2, #0xa]
    ldrh r0, [r2, #0xc]
    adds r0, #1
    strh r0, [r2, #0xc]
    ldrb r0, [r2, #6]
    adds r0, #1
    strb r0, [r2, #6]
    cmp r6, #0x80
    bne lbl_08085b58
    ldr r1, [r7]
    ldrb r0, [r1, #6]
    adds r0, #1
    strb r0, [r1, #6]
lbl_08085b58:
    ldr r1, [r7]
    ldrh r0, [r1, #8]
    adds r0, #1
    strh r0, [r1, #8]
lbl_08085b60:
    ldr r1, [r7]
    ldrh r0, [r1, #0xe]
    adds r0, #7
    strh r0, [r1, #0xe]
    ldr r1, lbl_08085b7c @ =0x030013b6
    ldrh r0, [r1]
    adds r0, #7
    strh r0, [r1]
    movs r0, #0
lbl_08085b72:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08085b78: .4byte 0x000007ff
lbl_08085b7c: .4byte 0x030013b6

    thumb_func_start credits_chozo_wall_movement
credits_chozo_wall_movement: @ 0x08085b80
    push {r4, lr}
    movs r4, #0
    ldr r0, lbl_08085ba0 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #1
    beq lbl_08085bc0
    cmp r1, #1
    bgt lbl_08085ba4
    cmp r1, #0
    beq lbl_08085bae
    b lbl_08085bce
    .align 2, 0
lbl_08085ba0: .4byte 0x08754bc4
lbl_08085ba4:
    movs r0, #0x80
    lsls r0, r0, #2
    cmp r1, r0
    beq lbl_08085bc8
    b lbl_08085bce
lbl_08085bae:
    ldr r0, lbl_08085bb8 @ =0x085babb4
    ldr r1, lbl_08085bbc @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_08085bce
    .align 2, 0
lbl_08085bb8: .4byte 0x085babb4
lbl_08085bbc: .4byte 0x06008000
lbl_08085bc0:
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    b lbl_08085bce
lbl_08085bc8:
    ldr r0, lbl_08085c00 @ =0x04000014
    strh r4, [r0]
    movs r4, #1
lbl_08085bce:
    ldr r0, lbl_08085c04 @ =0x08754bc4
    ldr r3, [r0]
    ldrb r0, [r3, #1]
    cmp r0, #0
    beq lbl_08085bf6
    ldr r0, lbl_08085c08 @ =0x030013be
    ldrh r1, [r0]
    adds r1, #8
    strh r1, [r0]
    ldr r2, lbl_08085c0c @ =0x030013c2
    ldrh r0, [r2]
    adds r0, #8
    strh r0, [r2]
    lsls r1, r1, #0x10
    movs r0, #0xe0
    lsls r0, r0, #0x14
    cmp r1, r0
    bne lbl_08085bf6
    movs r0, #0
    strb r0, [r3, #1]
lbl_08085bf6:
    adds r0, r4, #0
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08085c00: .4byte 0x04000014
lbl_08085c04: .4byte 0x08754bc4
lbl_08085c08: .4byte 0x030013be
lbl_08085c0c: .4byte 0x030013c2

    thumb_func_start credits_chozo_wall_zoom
credits_chozo_wall_zoom: @ 0x08085c10
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_08085c3c @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0xc1
    bne lbl_08085c28
    b lbl_08085d24
lbl_08085c28:
    cmp r1, #0xc1
    bgt lbl_08085c46
    cmp r1, #1
    beq lbl_08085cb0
    cmp r1, #1
    bgt lbl_08085c40
    cmp r1, #0
    beq lbl_08085c66
    b lbl_08085d80
    .align 2, 0
lbl_08085c3c: .4byte 0x08754bc4
lbl_08085c40:
    cmp r1, #0xc0
    beq lbl_08085cec
    b lbl_08085d80
lbl_08085c46:
    movs r0, #0xc8
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_08085c50
    b lbl_08085d64
lbl_08085c50:
    cmp r1, r0
    bgt lbl_08085c5a
    cmp r1, #0xc2
    beq lbl_08085d38
    b lbl_08085d80
lbl_08085c5a:
    movs r0, #0xf0
    lsls r0, r0, #2
    cmp r1, r0
    bne lbl_08085c64
    b lbl_08085d7e
lbl_08085c64:
    b lbl_08085d80
lbl_08085c66:
    ldr r0, lbl_08085c94 @ =0x085bed94
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r1, lbl_08085c98 @ =0x040000d4
    ldr r0, lbl_08085c9c @ =0x0854a734
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08085ca0 @ =0x800000f0
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_08085ca4 @ =0x030013b6
    strh r5, [r0]
    ldr r0, lbl_08085ca8 @ =0x030013b0
    strh r5, [r0]
    ldr r1, lbl_08085cac @ =0x030013b2
    movs r0, #0x10
    strh r0, [r1]
    b lbl_08085d80
    .align 2, 0
lbl_08085c94: .4byte 0x085bed94
lbl_08085c98: .4byte 0x040000d4
lbl_08085c9c: .4byte 0x0854a734
lbl_08085ca0: .4byte 0x800000f0
lbl_08085ca4: .4byte 0x030013b6
lbl_08085ca8: .4byte 0x030013b0
lbl_08085cac: .4byte 0x030013b2
lbl_08085cb0:
    ldr r0, lbl_08085cd8 @ =0x085c3e34
    ldr r1, lbl_08085cdc @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r1, lbl_08085ce0 @ =0x04000008
    movs r2, #0xf0
    lsls r2, r2, #5
    adds r0, r2, #0
    strh r0, [r1]
    ldr r1, [r4]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r2, r1, r0
    movs r0, #0xd0
    lsls r0, r0, #4
    strh r0, [r2]
    ldr r0, lbl_08085ce4 @ =0x000002c2
    adds r2, r1, r0
    ldr r0, lbl_08085ce8 @ =0x00000c41
    b lbl_08085d52
    .align 2, 0
lbl_08085cd8: .4byte 0x085c3e34
lbl_08085cdc: .4byte 0x0600f000
lbl_08085ce0: .4byte 0x04000008
lbl_08085ce4: .4byte 0x000002c2
lbl_08085ce8: .4byte 0x00000c41
lbl_08085cec:
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r1, r2, r0
    movs r0, #0x80
    lsls r0, r0, #1
    strh r0, [r1]
    ldr r1, lbl_08085d14 @ =0x000002c2
    adds r0, r2, r1
    strh r5, [r0]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    ldr r0, lbl_08085d18 @ =0x030013ba
    strh r5, [r0]
    ldr r1, lbl_08085d1c @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08085d20 @ =0x030013b2
    strh r5, [r0]
    b lbl_08085d80
    .align 2, 0
lbl_08085d14: .4byte 0x000002c2
lbl_08085d18: .4byte 0x030013ba
lbl_08085d1c: .4byte 0x030013b0
lbl_08085d20: .4byte 0x030013b2
lbl_08085d24:
    ldr r0, lbl_08085d30 @ =0x085c43f4
    ldr r1, lbl_08085d34 @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_08085d80
    .align 2, 0
lbl_08085d30: .4byte 0x085c43f4
lbl_08085d34: .4byte 0x06008000
lbl_08085d38:
    ldr r0, lbl_08085d5c @ =0x085c8e7c
    ldr r1, lbl_08085d60 @ =0x0600f800
    bl LZ77UncompVRAM
    ldr r1, [r4]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r2, r1, r0
    adds r0, #0x40
    strh r0, [r2]
    subs r0, #0x3e
    adds r2, r1, r0
    subs r0, #0x81
lbl_08085d52:
    strh r0, [r2]
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    b lbl_08085d80
    .align 2, 0
lbl_08085d5c: .4byte 0x085c8e7c
lbl_08085d60: .4byte 0x0600f800
lbl_08085d64:
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r1, r2, r0
    subs r0, #0xc0
    strh r0, [r1]
    adds r0, #0xc2
    adds r1, r2, r0
    movs r0, #0xff
    strh r0, [r1]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    b lbl_08085d80
lbl_08085d7e:
    movs r5, #2
lbl_08085d80:
    ldr r0, lbl_08085dac @ =0x08754bc4
    ldr r0, [r0]
    ldrb r1, [r0, #1]
    cmp r1, #1
    bne lbl_08085db8
    ldrh r1, [r0, #4]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08085dfa
    ldr r1, lbl_08085db0 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08085da0
    adds r0, #1
    strh r0, [r1]
lbl_08085da0:
    ldr r1, lbl_08085db4 @ =0x030013b2
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08085dfa
    subs r0, #1
    b lbl_08085df8
    .align 2, 0
lbl_08085dac: .4byte 0x08754bc4
lbl_08085db0: .4byte 0x030013b0
lbl_08085db4: .4byte 0x030013b2
lbl_08085db8:
    cmp r1, #3
    bne lbl_08085de0
    ldrh r1, [r0, #4]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08085dfa
    ldr r1, lbl_08085dd8 @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08085dd2
    subs r0, #1
    strh r0, [r1]
lbl_08085dd2:
    ldr r1, lbl_08085ddc @ =0x030013b2
    b lbl_08085df0
    .align 2, 0
lbl_08085dd8: .4byte 0x030013b0
lbl_08085ddc: .4byte 0x030013b2
lbl_08085de0:
    cmp r1, #4
    bne lbl_08085dfa
    ldrh r1, [r0, #4]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08085dfa
    ldr r1, lbl_08085e04 @ =0x030013ae
lbl_08085df0:
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08085dfa
    adds r0, #1
lbl_08085df8:
    strh r0, [r1]
lbl_08085dfa:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08085e04: .4byte 0x030013ae

    thumb_func_start end_screen_init
end_screen_init: @ 0x08085e08
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    sub sp, #8
    ldr r4, lbl_08085f88 @ =0x04000208
    movs r5, #0
    strh r5, [r4]
    ldr r2, lbl_08085f8c @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_08085f90 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_08085f94 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_08085f98 @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_08085f9c @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r6, #1
    strh r6, [r4]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r5, [r0]
    strh r5, [r4]
    ldr r0, lbl_08085fa0 @ =vblank_code_during_end_screen
    mov r8, r0
    bl CallbackSetVBlank
    strh r6, [r4]
    ldr r0, lbl_08085fa4 @ =0x085a1298
    ldr r1, lbl_08085fa8 @ =0x06003000
    bl LZ77UncompVRAM
    ldr r0, lbl_08085fac @ =0x085a46f0
    ldr r1, lbl_08085fb0 @ =0x0600b000
    bl LZ77UncompVRAM
    ldr r0, lbl_08085fb4 @ =0x085a54d0
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, lbl_08085fb8 @ =0x085a6f38
    ldr r1, lbl_08085fbc @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_08085fc0 @ =0x085a4080
    ldr r1, lbl_08085fc4 @ =0x0600f800
    bl LZ77UncompVRAM
    ldr r0, lbl_08085fc8 @ =0x085a528c
    ldr r1, lbl_08085fcc @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r0, lbl_08085fd0 @ =0x085a6bf4
    ldr r1, lbl_08085fd4 @ =0x0600d000
    bl LZ77UncompVRAM
    ldr r0, lbl_08085fd8 @ =0x085a87a0
    ldr r1, lbl_08085fdc @ =0x0600e000
    bl LZ77UncompVRAM
    ldr r2, lbl_08085fe0 @ =0x0600d800
    movs r6, #0x80
    lsls r6, r6, #4
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r3, r6, #0
    bl BitFill
    ldr r2, lbl_08085fe4 @ =0x0600e800
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    adds r3, r6, #0
    bl BitFill
    ldr r4, lbl_08085fe8 @ =0x040000d4
    ldr r0, lbl_08085fec @ =0x0854b914
    str r0, [r4]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r4, #4]
    ldr r0, lbl_08085ff0 @ =0x800000d0
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r1, lbl_08085ff4 @ =0x04000008
    ldr r2, lbl_08085ff8 @ =0x00001e08
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08085ffc @ =0x00005a01
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08086000 @ =0x00005c0a
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08086004 @ =0x00001f03
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08086008 @ =0x03001382
    strb r5, [r0]
    bl ResetFreeOAM
    ldr r0, lbl_0808600c @ =0x03000e7c
    str r0, [r4]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r4, #4]
    ldr r0, lbl_08086010 @ =0x84000100
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r0, lbl_08086014 @ =0x030013b4
    strh r5, [r0]
    ldr r0, lbl_08086018 @ =0x030013b6
    strh r5, [r0]
    ldr r0, lbl_0808601c @ =0x030013b8
    movs r2, #0x80
    lsls r2, r2, #1
    adds r1, r2, #0
    strh r1, [r0]
    ldr r0, lbl_08086020 @ =0x030013ba
    strh r5, [r0]
    ldr r0, lbl_08086024 @ =0x030013bc
    strh r1, [r0]
    ldr r0, lbl_08086028 @ =0x030013be
    strh r5, [r0]
    ldr r0, lbl_0808602c @ =0x030013c0
    strh r5, [r0]
    ldr r0, lbl_08086030 @ =0x030013c2
    strh r5, [r0]
    ldr r0, lbl_08086034 @ =0x04000010
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    movs r5, #0
    str r5, [sp, #4]
    add r0, sp, #4
    str r0, [r4]
    ldr r0, lbl_08086038 @ =0x030016c4
    str r0, [r4, #4]
    ldr r0, lbl_0808603c @ =0x8500018a
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    bl GetPercentAndEndingNumber
    ldr r3, lbl_08086040 @ =0x08754bc4
    ldr r1, [r3]
    movs r2, #7
    ands r0, r2
    adds r1, #0x98
    strb r0, [r1]
    ldr r0, [r3]
    movs r1, #0xb0
    lsls r1, r1, #2
    adds r0, r0, r1
    movs r1, #0xf0
    lsls r1, r1, #5
    strh r1, [r0]
    ldr r0, lbl_08086044 @ =0x030013b0
    movs r1, #0x10
    strh r1, [r0]
    ldr r0, lbl_08086048 @ =0x030013b2
    strh r5, [r0]
    ldr r0, lbl_0808604c @ =0x030013ae
    strh r1, [r0]
    bl _call_via_r8
    add sp, #8
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08085f88: .4byte 0x04000208
lbl_08085f8c: .4byte 0x04000004
lbl_08085f90: .4byte 0x0000ffef
lbl_08085f94: .4byte 0x04000200
lbl_08085f98: .4byte 0x0000fffd
lbl_08085f9c: .4byte 0x04000202
lbl_08085fa0: .4byte vblank_code_during_end_screen
lbl_08085fa4: .4byte 0x085a1298
lbl_08085fa8: .4byte 0x06003000
lbl_08085fac: .4byte 0x085a46f0
lbl_08085fb0: .4byte 0x0600b000
lbl_08085fb4: .4byte 0x085a54d0
lbl_08085fb8: .4byte 0x085a6f38
lbl_08085fbc: .4byte 0x06008000
lbl_08085fc0: .4byte 0x085a4080
lbl_08085fc4: .4byte 0x0600f800
lbl_08085fc8: .4byte 0x085a528c
lbl_08085fcc: .4byte 0x0600f000
lbl_08085fd0: .4byte 0x085a6bf4
lbl_08085fd4: .4byte 0x0600d000
lbl_08085fd8: .4byte 0x085a87a0
lbl_08085fdc: .4byte 0x0600e000
lbl_08085fe0: .4byte 0x0600d800
lbl_08085fe4: .4byte 0x0600e800
lbl_08085fe8: .4byte 0x040000d4
lbl_08085fec: .4byte 0x0854b914
lbl_08085ff0: .4byte 0x800000d0
lbl_08085ff4: .4byte 0x04000008
lbl_08085ff8: .4byte 0x00001e08
lbl_08085ffc: .4byte 0x00005a01
lbl_08086000: .4byte 0x00005c0a
lbl_08086004: .4byte 0x00001f03
lbl_08086008: .4byte 0x03001382
lbl_0808600c: .4byte 0x03000e7c
lbl_08086010: .4byte 0x84000100
lbl_08086014: .4byte 0x030013b4
lbl_08086018: .4byte 0x030013b6
lbl_0808601c: .4byte 0x030013b8
lbl_08086020: .4byte 0x030013ba
lbl_08086024: .4byte 0x030013bc
lbl_08086028: .4byte 0x030013be
lbl_0808602c: .4byte 0x030013c0
lbl_08086030: .4byte 0x030013c2
lbl_08086034: .4byte 0x04000010
lbl_08086038: .4byte 0x030016c4
lbl_0808603c: .4byte 0x8500018a
lbl_08086040: .4byte 0x08754bc4
lbl_08086044: .4byte 0x030013b0
lbl_08086048: .4byte 0x030013b2
lbl_0808604c: .4byte 0x030013ae

    thumb_func_start end_screen_samus_posing
end_screen_samus_posing: @ 0x08086050
    push {r4, r5, r6, lr}
    movs r6, #0
    ldr r1, lbl_08086074 @ =0x08754bc4
    ldr r2, [r1]
    ldrb r0, [r2, #2]
    adds r0, #1
    strb r0, [r2, #2]
    ldr r0, [r1]
    ldrb r0, [r0, #1]
    adds r5, r1, #0
    cmp r0, #0xa
    bls lbl_0808606a
    b lbl_0808622a
lbl_0808606a:
    lsls r0, r0, #2
    ldr r1, lbl_08086078 @ =lbl_0808607c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08086074: .4byte 0x08754bc4
lbl_08086078: .4byte lbl_0808607c
lbl_0808607c: @ jump table
    .4byte lbl_080860ba @ case 0
    .4byte lbl_080860f0 @ case 1
    .4byte lbl_08086114 @ case 2
    .4byte lbl_080860f0 @ case 3
    .4byte lbl_080860a8 @ case 4
    .4byte lbl_080860f0 @ case 5
    .4byte lbl_08086114 @ case 6
    .4byte lbl_08086164 @ case 7
    .4byte lbl_08086186 @ case 8
    .4byte lbl_080861b8 @ case 9
    .4byte lbl_08086210 @ case 10
lbl_080860a8:
    ldr r0, [r5]
    ldrh r1, [r0, #4]
    adds r2, r1, #1
    strh r2, [r0, #4]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    cmp r1, #7
    bhi lbl_080860ba
    b lbl_0808622a
lbl_080860ba:
    ldr r2, lbl_080860e0 @ =0x030013b8
    ldrh r0, [r2]
    adds r0, #8
    strh r0, [r2]
    lsls r0, r0, #0x10
    ldr r1, lbl_080860e4 @ =0x01ff0000
    cmp r0, r1
    bhi lbl_080860cc
    b lbl_0808622a
lbl_080860cc:
    movs r0, #0
    strh r0, [r2]
    ldr r1, [r5]
    ldr r0, lbl_080860e8 @ =0x000002c2
    adds r2, r1, r0
    movs r3, #0
    ldr r0, lbl_080860ec @ =0x00000c42
    strh r0, [r2]
    strh r3, [r1, #4]
    b lbl_08086200
    .align 2, 0
lbl_080860e0: .4byte 0x030013b8
lbl_080860e4: .4byte 0x01ff0000
lbl_080860e8: .4byte 0x000002c2
lbl_080860ec: .4byte 0x00000c42
lbl_080860f0:
    ldr r2, [r5]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x18
    bhi lbl_08086102
    b lbl_0808622a
lbl_08086102:
    movs r3, #0x92
    lsls r3, r3, #1
    adds r1, r2, r3
    movs r2, #0
    movs r0, #1
    strb r0, [r1]
    ldr r1, [r5]
    strh r2, [r1, #4]
    b lbl_08086200
lbl_08086114:
    ldr r3, [r5]
    ldrh r0, [r3, #4]
    adds r1, r0, #1
    strh r1, [r3, #4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #7
    bhi lbl_08086126
    b lbl_0808622a
lbl_08086126:
    ldr r2, lbl_08086154 @ =0x030013bc
    ldrh r0, [r2]
    adds r0, #8
    strh r0, [r2]
    lsls r0, r0, #0x10
    ldr r1, lbl_08086158 @ =0x01ff0000
    cmp r0, r1
    bls lbl_0808622a
    movs r1, #0x80
    lsls r1, r1, #2
    adds r0, r1, #0
    strh r0, [r2]
    ldr r2, lbl_0808615c @ =0x000002c2
    adds r1, r3, r2
    movs r2, #0
    ldr r0, lbl_08086160 @ =0x00000a44
    strh r0, [r1]
    strh r2, [r3, #4]
    ldrb r0, [r3, #1]
    adds r0, #1
    strb r0, [r3, #1]
    b lbl_0808622a
    .align 2, 0
lbl_08086154: .4byte 0x030013bc
lbl_08086158: .4byte 0x01ff0000
lbl_0808615c: .4byte 0x000002c2
lbl_08086160: .4byte 0x00000a44
lbl_08086164:
    ldr r2, [r5]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x40
    bls lbl_0808622a
    movs r3, #0x92
    lsls r3, r3, #1
    adds r1, r2, r3
    movs r2, #0
    movs r0, #1
    strb r0, [r1]
    ldr r1, [r5]
    strh r2, [r1, #4]
    b lbl_08086200
lbl_08086186:
    ldr r2, [r5]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x17
    bls lbl_0808622a
    ldr r1, lbl_080861a4 @ =0x030013b8
    ldrh r0, [r1]
    cmp r0, #9
    bls lbl_080861a8
    subs r0, #0xa
    strh r0, [r1]
    b lbl_0808622a
    .align 2, 0
lbl_080861a4: .4byte 0x030013b8
lbl_080861a8:
    movs r0, #0
    strh r0, [r1]
    movs r0, #0
    strh r0, [r2, #4]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    b lbl_0808622a
lbl_080861b8:
    ldr r2, [r5]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x1f
    bls lbl_0808622a
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r1, r2, r0
    movs r0, #0xe0
    lsls r0, r0, #4
    strh r0, [r1]
    adds r0, r2, #0
    adds r0, #0x98
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_080861e8
    movs r3, #0x92
    lsls r3, r3, #1
    adds r1, r2, r3
    movs r0, #3
    b lbl_080861f8
lbl_080861e8:
    ldr r0, lbl_08086208 @ =0x000002c2
    adds r1, r2, r0
    ldr r0, lbl_0808620c @ =0x00000c42
    strh r0, [r1]
    movs r3, #0x92
    lsls r3, r3, #1
    adds r1, r2, r3
    movs r0, #1
lbl_080861f8:
    strb r0, [r1]
    ldr r1, [r5]
    movs r0, #0
    strh r0, [r1, #4]
lbl_08086200:
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    b lbl_0808622a
    .align 2, 0
lbl_08086208: .4byte 0x000002c2
lbl_0808620c: .4byte 0x00000c42
lbl_08086210:
    ldr r2, [r5]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    movs r1, #0x90
    lsls r1, r1, #0x11
    cmp r0, r1
    bls lbl_0808622a
    ldr r0, lbl_08086248 @ =0x00000125
    adds r1, r2, r0
    movs r0, #0x20
    strb r0, [r1]
lbl_0808622a:
    ldr r0, [r5]
    movs r1, #0x92
    lsls r1, r1, #1
    adds r0, r0, r1
    ldrb r0, [r0]
    subs r0, #1
    cmp r0, #4
    bls lbl_0808623c
    b lbl_08086388
lbl_0808623c:
    lsls r0, r0, #2
    ldr r1, lbl_0808624c @ =lbl_08086250
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08086248: .4byte 0x00000125
lbl_0808624c: .4byte lbl_08086250
lbl_08086250: @ jump table
    .4byte lbl_08086264 @ case 0
    .4byte lbl_080862b0 @ case 1
    .4byte lbl_080862d0 @ case 2
    .4byte lbl_08086328 @ case 3
    .4byte lbl_08086354 @ case 4
lbl_08086264:
    ldr r4, [r5]
    ldrb r1, [r4, #2]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_08086272
    b lbl_08086388
lbl_08086272:
    ldr r0, lbl_08086284 @ =0x030013b0
    ldrh r2, [r0]
    adds r3, r2, #0
    adds r1, r0, #0
    cmp r3, #0
    beq lbl_08086288
    subs r0, r2, #1
    strh r0, [r1]
    b lbl_0808629c
    .align 2, 0
lbl_08086284: .4byte 0x030013b0
lbl_08086288:
    movs r2, #0x92
    lsls r2, r2, #1
    adds r0, r4, r2
    strb r3, [r0]
    ldr r0, [r5]
    ldr r3, lbl_080862a8 @ =0x00000125
    adds r2, r0, r3
    ldrb r0, [r2]
    adds r0, #1
    strb r0, [r2]
lbl_0808629c:
    ldr r2, lbl_080862ac @ =0x030013b2
    ldrh r1, [r1]
    movs r0, #0x10
    subs r0, r0, r1
    strh r0, [r2]
    b lbl_08086388
    .align 2, 0
lbl_080862a8: .4byte 0x00000125
lbl_080862ac: .4byte 0x030013b2
lbl_080862b0:
    ldr r2, [r5]
    ldrb r0, [r2, #2]
    movs r1, #3
    ands r1, r0
    cmp r1, #0
    bne lbl_08086388
    ldr r3, lbl_080862cc @ =0x030013b0
    ldrh r0, [r3]
    cmp r0, #0xf
    bhi lbl_08086374
    adds r0, #1
    strh r0, [r3]
    b lbl_08086388
    .align 2, 0
lbl_080862cc: .4byte 0x030013b0
lbl_080862d0:
    ldr r1, [r5]
    movs r2, #0xb0
    lsls r2, r2, #1
    adds r1, r1, r2
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r5]
    adds r1, r0, r2
    ldrb r0, [r1]
    lsls r3, r0, #0x18
    lsrs r0, r3, #0x18
    cmp r0, #0xf
    bls lbl_08086300
    movs r0, #0
    strb r0, [r1]
    ldr r0, [r5]
    ldr r3, lbl_080862fc @ =0x00000125
    adds r1, r0, r3
    movs r0, #0x10
    b lbl_08086386
    .align 2, 0
lbl_080862fc: .4byte 0x00000125
lbl_08086300:
    ldr r1, lbl_0808631c @ =0x040000d4
    ldr r2, lbl_08086320 @ =0x0854e2cc
    lsrs r0, r3, #0x1a
    lsls r0, r0, #2
    adds r0, r0, r2
    ldr r0, [r0]
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08086324 @ =0x80000050
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    b lbl_08086388
    .align 2, 0
lbl_0808631c: .4byte 0x040000d4
lbl_08086320: .4byte 0x0854e2cc
lbl_08086324: .4byte 0x80000050
lbl_08086328:
    ldr r2, [r5]
    ldrb r1, [r2, #2]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08086388
    ldr r1, lbl_08086344 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08086348
    adds r0, #1
    strh r0, [r1]
    b lbl_08086388
    .align 2, 0
lbl_08086344: .4byte 0x030013ae
lbl_08086348:
    ldr r0, lbl_08086350 @ =0x00000125
    adds r1, r2, r0
    b lbl_08086382
    .align 2, 0
lbl_08086350: .4byte 0x00000125
lbl_08086354:
    ldr r2, [r5]
    ldrb r1, [r2, #2]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    bne lbl_08086388
    ldr r3, lbl_08086370 @ =0x030013ae
    ldrh r0, [r3]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_08086374
    subs r0, #1
    strh r0, [r3]
    b lbl_08086388
    .align 2, 0
lbl_08086370: .4byte 0x030013ae
lbl_08086374:
    movs r3, #0x92
    lsls r3, r3, #1
    adds r0, r2, r3
    strb r1, [r0]
    ldr r0, [r5]
    ldr r2, lbl_080863a4 @ =0x00000125
    adds r1, r0, r2
lbl_08086382:
    ldrb r0, [r1]
    adds r0, #1
lbl_08086386:
    strb r0, [r1]
lbl_08086388:
    ldr r0, [r5]
    ldr r3, lbl_080863a4 @ =0x00000125
    adds r0, r0, r3
    ldrb r0, [r0]
    subs r0, #1
    cmp r0, #0x1f
    bls lbl_08086398
    b lbl_08086782
lbl_08086398:
    lsls r0, r0, #2
    ldr r1, lbl_080863a8 @ =lbl_080863ac
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080863a4: .4byte 0x00000125
lbl_080863a8: .4byte lbl_080863ac
lbl_080863ac: @ jump table
    .4byte lbl_0808642c @ case 0
    .4byte lbl_08086782 @ case 1
    .4byte lbl_080864a4 @ case 2
    .4byte lbl_08086782 @ case 3
    .4byte lbl_08086520 @ case 4
    .4byte lbl_08086782 @ case 5
    .4byte lbl_08086598 @ case 6
    .4byte lbl_08086782 @ case 7
    .4byte lbl_08086668 @ case 8
    .4byte lbl_08086782 @ case 9
    .4byte lbl_08086782 @ case 10
    .4byte lbl_08086782 @ case 11
    .4byte lbl_08086782 @ case 12
    .4byte lbl_08086782 @ case 13
    .4byte lbl_08086782 @ case 14
    .4byte lbl_080866b0 @ case 15
    .4byte lbl_08086782 @ case 16
    .4byte lbl_080866e8 @ case 17
    .4byte lbl_08086720 @ case 18
    .4byte lbl_08086782 @ case 19
    .4byte lbl_08086782 @ case 20
    .4byte lbl_08086782 @ case 21
    .4byte lbl_08086782 @ case 22
    .4byte lbl_08086782 @ case 23
    .4byte lbl_08086782 @ case 24
    .4byte lbl_08086782 @ case 25
    .4byte lbl_08086782 @ case 26
    .4byte lbl_08086782 @ case 27
    .4byte lbl_08086782 @ case 28
    .4byte lbl_08086782 @ case 29
    .4byte lbl_08086782 @ case 30
    .4byte lbl_08086758 @ case 31
lbl_0808642c:
    ldr r1, lbl_08086474 @ =0x0400000a
    ldr r2, lbl_08086478 @ =0x00005a02
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_0808647c @ =0x00005c09
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_08086480 @ =0x085a8b38
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, lbl_08086484 @ =0x085aa5f8
    ldr r1, lbl_08086488 @ =0x0600d000
    bl LZ77UncompVRAM
    ldr r0, lbl_0808648c @ =0x08754bc4
    ldr r3, [r0]
    ldr r1, lbl_08086490 @ =0x000002c2
    adds r0, r3, r1
    movs r2, #0
    strh r2, [r0]
    ldr r1, lbl_08086494 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08086498 @ =0x030013b2
    strh r2, [r0]
    ldr r1, lbl_0808649c @ =0x030013b8
    movs r2, #0x80
    lsls r2, r2, #1
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_080864a0 @ =0x00000125
    adds r1, r3, r0
    b lbl_0808673a
    .align 2, 0
lbl_08086474: .4byte 0x0400000a
lbl_08086478: .4byte 0x00005a02
lbl_0808647c: .4byte 0x00005c09
lbl_08086480: .4byte 0x085a8b38
lbl_08086484: .4byte 0x085aa5f8
lbl_08086488: .4byte 0x0600d000
lbl_0808648c: .4byte 0x08754bc4
lbl_08086490: .4byte 0x000002c2
lbl_08086494: .4byte 0x030013b0
lbl_08086498: .4byte 0x030013b2
lbl_0808649c: .4byte 0x030013b8
lbl_080864a0: .4byte 0x00000125
lbl_080864a4:
    ldr r1, lbl_080864ec @ =0x0400000a
    ldr r2, lbl_080864f0 @ =0x00005a01
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_080864f4 @ =0x00005c0a
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_080864f8 @ =0x085aa9b0
    ldr r1, lbl_080864fc @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_08086500 @ =0x085ac420
    ldr r1, lbl_08086504 @ =0x0600e000
    bl LZ77UncompVRAM
    ldr r0, lbl_08086508 @ =0x08754bc4
    ldr r3, [r0]
    ldr r1, lbl_0808650c @ =0x000002c2
    adds r0, r3, r1
    movs r2, #0
    strh r2, [r0]
    ldr r1, lbl_08086510 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_08086514 @ =0x030013b2
    strh r2, [r0]
    ldr r1, lbl_08086518 @ =0x030013bc
    movs r2, #0x80
    lsls r2, r2, #1
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_0808651c @ =0x00000125
    adds r1, r3, r0
    b lbl_0808673a
    .align 2, 0
lbl_080864ec: .4byte 0x0400000a
lbl_080864f0: .4byte 0x00005a01
lbl_080864f4: .4byte 0x00005c0a
lbl_080864f8: .4byte 0x085aa9b0
lbl_080864fc: .4byte 0x06008000
lbl_08086500: .4byte 0x085ac420
lbl_08086504: .4byte 0x0600e000
lbl_08086508: .4byte 0x08754bc4
lbl_0808650c: .4byte 0x000002c2
lbl_08086510: .4byte 0x030013b0
lbl_08086514: .4byte 0x030013b2
lbl_08086518: .4byte 0x030013bc
lbl_0808651c: .4byte 0x00000125
lbl_08086520:
    ldr r1, lbl_08086568 @ =0x0400000a
    ldr r2, lbl_0808656c @ =0x00005a02
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_08086570 @ =0x00005c09
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_08086574 @ =0x085ac794
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, lbl_08086578 @ =0x085adb90
    ldr r1, lbl_0808657c @ =0x0600d000
    bl LZ77UncompVRAM
    ldr r0, lbl_08086580 @ =0x08754bc4
    ldr r3, [r0]
    ldr r1, lbl_08086584 @ =0x000002c2
    adds r0, r3, r1
    movs r2, #0
    strh r2, [r0]
    ldr r1, lbl_08086588 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_0808658c @ =0x030013b2
    strh r2, [r0]
    ldr r1, lbl_08086590 @ =0x030013b8
    movs r2, #0x80
    lsls r2, r2, #1
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08086594 @ =0x00000125
    adds r1, r3, r0
    b lbl_0808673a
    .align 2, 0
lbl_08086568: .4byte 0x0400000a
lbl_0808656c: .4byte 0x00005a02
lbl_08086570: .4byte 0x00005c09
lbl_08086574: .4byte 0x085ac794
lbl_08086578: .4byte 0x085adb90
lbl_0808657c: .4byte 0x0600d000
lbl_08086580: .4byte 0x08754bc4
lbl_08086584: .4byte 0x000002c2
lbl_08086588: .4byte 0x030013b0
lbl_0808658c: .4byte 0x030013b2
lbl_08086590: .4byte 0x030013b8
lbl_08086594: .4byte 0x00000125
lbl_08086598:
    ldr r1, lbl_080865c0 @ =0x0400000a
    ldr r2, lbl_080865c4 @ =0x00005a01
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_080865c8 @ =0x00005c0a
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_080865cc @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x98
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080865dc
    ldr r0, lbl_080865d0 @ =0x085af2bc
    ldr r1, lbl_080865d4 @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_080865d8 @ =0x085b0b10
    b lbl_080865ea
    .align 2, 0
lbl_080865c0: .4byte 0x0400000a
lbl_080865c4: .4byte 0x00005a01
lbl_080865c8: .4byte 0x00005c0a
lbl_080865cc: .4byte 0x08754bc4
lbl_080865d0: .4byte 0x085af2bc
lbl_080865d4: .4byte 0x06008000
lbl_080865d8: .4byte 0x085b0b10
lbl_080865dc:
    cmp r0, #1
    bne lbl_08086604
    ldr r0, lbl_080865f4 @ =0x085b0e98
    ldr r1, lbl_080865f8 @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_080865fc @ =0x085b2718
lbl_080865ea:
    ldr r1, lbl_08086600 @ =0x0600e000
    bl LZ77UncompVRAM
    b lbl_08086614
    .align 2, 0
lbl_080865f4: .4byte 0x085b0e98
lbl_080865f8: .4byte 0x06008000
lbl_080865fc: .4byte 0x085b2718
lbl_08086600: .4byte 0x0600e000
lbl_08086604:
    ldr r0, lbl_08086640 @ =0x085ade64
    ldr r1, lbl_08086644 @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_08086648 @ =0x085af0a0
    ldr r1, lbl_0808664c @ =0x0600e000
    bl LZ77UncompVRAM
lbl_08086614:
    ldr r0, lbl_08086650 @ =0x08754bc4
    ldr r3, [r0]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r1, r3, r0
    movs r2, #0
    movs r0, #0xa0
    lsls r0, r0, #4
    strh r0, [r1]
    ldr r1, lbl_08086654 @ =0x000002c2
    adds r0, r3, r1
    strh r2, [r0]
    ldr r1, lbl_08086658 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_0808665c @ =0x030013b2
    strh r2, [r0]
    ldr r0, lbl_08086660 @ =0x030013bc
    strh r2, [r0]
    ldr r2, lbl_08086664 @ =0x00000125
    adds r1, r3, r2
    b lbl_0808673a
    .align 2, 0
lbl_08086640: .4byte 0x085ade64
lbl_08086644: .4byte 0x06008000
lbl_08086648: .4byte 0x085af0a0
lbl_0808664c: .4byte 0x0600e000
lbl_08086650: .4byte 0x08754bc4
lbl_08086654: .4byte 0x000002c2
lbl_08086658: .4byte 0x030013b0
lbl_0808665c: .4byte 0x030013b2
lbl_08086660: .4byte 0x030013bc
lbl_08086664: .4byte 0x00000125
lbl_08086668:
    ldr r4, lbl_0808669c @ =0x08754bc4
    ldr r2, [r4]
    movs r3, #0xb0
    lsls r3, r3, #2
    adds r1, r2, r3
    movs r3, #0
    movs r0, #0xd0
    lsls r0, r0, #4
    strh r0, [r1]
    ldr r0, lbl_080866a0 @ =0x000002c2
    adds r1, r2, r0
    ldr r0, lbl_080866a4 @ =0x00000c41
    strh r0, [r1]
    ldr r0, lbl_080866a8 @ =0x030013b0
    strh r3, [r0]
    ldr r1, lbl_080866ac @ =0x030013b2
    movs r0, #0x10
    strh r0, [r1]
    movs r1, #0x92
    lsls r1, r1, #1
    adds r2, r2, r1
    movs r0, #2
    strb r0, [r2]
    ldr r0, [r4]
    b lbl_08086736
    .align 2, 0
lbl_0808669c: .4byte 0x08754bc4
lbl_080866a0: .4byte 0x000002c2
lbl_080866a4: .4byte 0x00000c41
lbl_080866a8: .4byte 0x030013b0
lbl_080866ac: .4byte 0x030013b2
lbl_080866b0:
    ldr r3, lbl_080866dc @ =0x08754bc4
    ldr r1, [r3]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r2, r1, r0
    movs r0, #0xe0
    lsls r0, r0, #4
    strh r0, [r2]
    ldr r0, lbl_080866e0 @ =0x000002c2
    adds r2, r1, r0
    movs r0, #0xbd
    strh r0, [r2]
    movs r2, #0x92
    lsls r2, r2, #1
    adds r1, r1, r2
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r3]
    ldr r3, lbl_080866e4 @ =0x00000125
    adds r1, r0, r3
    b lbl_0808673a
    .align 2, 0
lbl_080866dc: .4byte 0x08754bc4
lbl_080866e0: .4byte 0x000002c2
lbl_080866e4: .4byte 0x00000125
lbl_080866e8:
    ldr r3, lbl_08086714 @ =0x08754bc4
    ldr r1, [r3]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r2, r1, r0
    movs r0, #0xc0
    lsls r0, r0, #4
    strh r0, [r2]
    ldr r0, lbl_08086718 @ =0x000002c2
    adds r2, r1, r0
    movs r0, #0xbf
    strh r0, [r2]
    movs r2, #0x92
    lsls r2, r2, #1
    adds r1, r1, r2
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r3]
    ldr r3, lbl_0808671c @ =0x00000125
    adds r1, r0, r3
    b lbl_0808673a
    .align 2, 0
lbl_08086714: .4byte 0x08754bc4
lbl_08086718: .4byte 0x000002c2
lbl_0808671c: .4byte 0x00000125
lbl_08086720:
    ldr r1, lbl_08086744 @ =0x040000d4
    ldr r0, lbl_08086748 @ =0x0854b914
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_0808674c @ =0x80000050
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_08086750 @ =0x08754bc4
    ldr r0, [r0]
lbl_08086736:
    ldr r2, lbl_08086754 @ =0x00000125
    adds r1, r0, r2
lbl_0808673a:
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08086782
    .align 2, 0
lbl_08086744: .4byte 0x040000d4
lbl_08086748: .4byte 0x0854b914
lbl_0808674c: .4byte 0x80000050
lbl_08086750: .4byte 0x08754bc4
lbl_08086754: .4byte 0x00000125
lbl_08086758:
    ldr r0, lbl_080867a0 @ =0x08754bc4
    ldr r1, [r0]
    movs r3, #0xb0
    lsls r3, r3, #2
    adds r2, r1, r3
    movs r3, #0
    movs r0, #0xc0
    lsls r0, r0, #4
    strh r0, [r2]
    ldr r0, lbl_080867a4 @ =0x000002c2
    adds r1, r1, r0
    movs r0, #0xff
    strh r0, [r1]
    ldr r1, lbl_080867a8 @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_080867ac @ =0x030013b2
    strh r3, [r0]
    adds r0, r6, #1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
lbl_08086782:
    ldr r0, lbl_080867a0 @ =0x08754bc4
    ldr r0, [r0]
    ldrb r1, [r0, #2]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08086798
    ldr r1, lbl_080867b0 @ =0x030013c0
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
lbl_08086798:
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080867a0: .4byte 0x08754bc4
lbl_080867a4: .4byte 0x000002c2
lbl_080867a8: .4byte 0x030013b0
lbl_080867ac: .4byte 0x030013b2
lbl_080867b0: .4byte 0x030013c0

    thumb_func_start ending_image_init
ending_image_init: @ 0x080867b4
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #8
    ldr r4, lbl_080868cc @ =0x04000208
    movs r3, #0
    strh r3, [r4]
    ldr r2, lbl_080868d0 @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_080868d4 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_080868d8 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_080868dc @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r0, lbl_080868e0 @ =0x04000202
    movs r1, #2
    strh r1, [r0]
    movs r5, #1
    strh r5, [r4]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r3, [r0]
    strh r3, [r4]
    ldr r0, lbl_080868e4 @ =vblank_code_during_gallery
    bl CallbackSetVBlank
    strh r5, [r4]
    movs r0, #0
    str r0, [sp, #4]
    ldr r6, lbl_080868e8 @ =0x040000d4
    add r2, sp, #4
    str r2, [r6]
    ldr r0, lbl_080868ec @ =0x030016c4
    str r0, [r6, #4]
    ldr r0, lbl_080868f0 @ =0x8500018a
    str r0, [r6, #8]
    ldr r0, [r6, #8]
    bl GetPercentAndEndingNumber
    adds r4, r0, #0
    movs r0, #0xff
    lsrs r5, r4, #0x18
    lsrs r7, r4, #0x10
    ands r7, r0
    lsrs r3, r4, #0xc
    movs r0, #0xf
    ands r3, r0
    mov sl, r3
    lsrs r1, r4, #8
    ands r1, r0
    mov sb, r1
    lsrs r2, r4, #4
    ands r2, r0
    mov r8, r2
    ands r4, r0
    ldr r0, lbl_080868f4 @ =0x0854c06c
    lsls r4, r4, #2
    adds r0, r4, r0
    ldr r0, [r0]
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, lbl_080868f8 @ =0x0854c08c
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_080868fc @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_08086900 @ =0x0854c0ac
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_08086904 @ =0x0600e000
    bl LZ77UncompVRAM
    ldr r0, lbl_08086908 @ =0x0854c0cc
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_0808690c @ =0x0600f800
    bl LZ77UncompVRAM
    ldr r1, lbl_08086910 @ =0x04ff04ff
    ldr r2, lbl_08086914 @ =0x0600e800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    bl BitFill
    ldr r0, lbl_08086918 @ =0x0854c0ec
    adds r4, r4, r0
    ldr r0, [r4]
    str r0, [r6]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r6, #4]
    ldr r0, lbl_0808691c @ =0x80000100
    str r0, [r6, #8]
    ldr r0, [r6, #8]
    ldr r4, lbl_08086920 @ =0x08754bc4
    ldr r0, [r4]
    adds r5, r5, r7
    add r5, sl
    add r5, sb
    add r5, r8
    adds r0, #0x99
    strb r5, [r0]
    ldr r0, lbl_08086924 @ =0x085a0f30
    ldr r1, lbl_08086928 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, [r4]
    ldr r2, lbl_0808692c @ =0x03000020
    ldrb r1, [r2]
    adds r0, #0x9a
    strb r1, [r0]
    movs r0, #0
    ldrsb r0, [r2, r0]
    cmp r0, #2
    ble lbl_080868b8
    ldr r0, [r4]
    adds r0, #0x9a
    movs r3, #2
    strb r3, [r0]
lbl_080868b8:
    ldr r0, [r4]
    adds r0, #0x9a
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08086938
    ldr r0, lbl_08086930 @ =0x085a0234
    ldr r1, lbl_08086934 @ =0x06011000
    bl LZ77UncompVRAM
    b lbl_08086940
    .align 2, 0
lbl_080868cc: .4byte 0x04000208
lbl_080868d0: .4byte 0x04000004
lbl_080868d4: .4byte 0x0000ffef
lbl_080868d8: .4byte 0x04000200
lbl_080868dc: .4byte 0x0000fffd
lbl_080868e0: .4byte 0x04000202
lbl_080868e4: .4byte vblank_code_during_gallery
lbl_080868e8: .4byte 0x040000d4
lbl_080868ec: .4byte 0x030016c4
lbl_080868f0: .4byte 0x8500018a
lbl_080868f4: .4byte 0x0854c06c
lbl_080868f8: .4byte 0x0854c08c
lbl_080868fc: .4byte 0x06008000
lbl_08086900: .4byte 0x0854c0ac
lbl_08086904: .4byte 0x0600e000
lbl_08086908: .4byte 0x0854c0cc
lbl_0808690c: .4byte 0x0600f800
lbl_08086910: .4byte 0x04ff04ff
lbl_08086914: .4byte 0x0600e800
lbl_08086918: .4byte 0x0854c0ec
lbl_0808691c: .4byte 0x80000100
lbl_08086920: .4byte 0x08754bc4
lbl_08086924: .4byte 0x085a0f30
lbl_08086928: .4byte 0x06010000
lbl_0808692c: .4byte 0x03000020
lbl_08086930: .4byte 0x085a0234
lbl_08086934: .4byte 0x06011000
lbl_08086938:
    ldr r0, lbl_080869f4 @ =0x0859f5a8
    ldr r1, lbl_080869f8 @ =0x06011000
    bl LZ77UncompVRAM
lbl_08086940:
    ldr r1, lbl_080869fc @ =0x040000d4
    ldr r0, lbl_08086a00 @ =0x08549b44
    str r0, [r1]
    ldr r0, lbl_08086a04 @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_08086a08 @ =0x800000e0
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    bl load_in_game_timer_ending_graphics
    ldr r1, lbl_08086a0c @ =0x04000008
    movs r2, #0x9c
    lsls r2, r2, #8
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_08086a10 @ =0x00009e09
    adds r0, r3, #0
    strh r0, [r1]
    ldr r1, lbl_08086a14 @ =0x03001382
    movs r0, #0
    strb r0, [r1]
    bl ResetFreeOAM
    ldr r0, lbl_08086a18 @ =0x030013b4
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_08086a1c @ =0x030013b6
    movs r3, #0x80
    lsls r3, r3, #5
    adds r2, r3, #0
    strh r2, [r0]
    ldr r0, lbl_08086a20 @ =0x030013b8
    strh r1, [r0]
    ldr r0, lbl_08086a24 @ =0x030013ba
    strh r2, [r0]
    ldr r0, lbl_08086a28 @ =0x030013bc
    strh r1, [r0]
    ldr r0, lbl_08086a2c @ =0x030013be
    strh r1, [r0]
    ldr r0, lbl_08086a30 @ =0x030013c0
    strh r1, [r0]
    ldr r0, lbl_08086a34 @ =0x030013c2
    strh r1, [r0]
    ldr r0, lbl_08086a38 @ =0x04000010
    strh r1, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r1, [r0]
    ldr r0, lbl_08086a3c @ =0x08754bc4
    ldr r1, [r0]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r2, r1, r0
    movs r3, #0
    movs r0, #0x98
    lsls r0, r0, #5
    strh r0, [r2]
    ldr r2, lbl_08086a40 @ =0x000002c2
    adds r1, r1, r2
    movs r0, #0xff
    strh r0, [r1]
    ldr r0, lbl_08086a44 @ =0x030013b0
    movs r1, #0x10
    strh r1, [r0]
    ldr r0, lbl_08086a48 @ =0x030013b2
    strh r3, [r0]
    ldr r0, lbl_08086a4c @ =0x030013ae
    strh r1, [r0]
    bl vblank_code_during_gallery
    add sp, #8
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080869f4: .4byte 0x0859f5a8
lbl_080869f8: .4byte 0x06011000
lbl_080869fc: .4byte 0x040000d4
lbl_08086a00: .4byte 0x08549b44
lbl_08086a04: .4byte 0x05000200
lbl_08086a08: .4byte 0x800000e0
lbl_08086a0c: .4byte 0x04000008
lbl_08086a10: .4byte 0x00009e09
lbl_08086a14: .4byte 0x03001382
lbl_08086a18: .4byte 0x030013b4
lbl_08086a1c: .4byte 0x030013b6
lbl_08086a20: .4byte 0x030013b8
lbl_08086a24: .4byte 0x030013ba
lbl_08086a28: .4byte 0x030013bc
lbl_08086a2c: .4byte 0x030013be
lbl_08086a30: .4byte 0x030013c0
lbl_08086a34: .4byte 0x030013c2
lbl_08086a38: .4byte 0x04000010
lbl_08086a3c: .4byte 0x08754bc4
lbl_08086a40: .4byte 0x000002c2
lbl_08086a44: .4byte 0x030013b0
lbl_08086a48: .4byte 0x030013b2
lbl_08086a4c: .4byte 0x030013ae

    thumb_func_start ending_image_display_text
ending_image_display_text: @ 0x08086a50
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    ldr r5, lbl_08086ab8 @ =0x03000e7c
    movs r0, #0
    mov sl, r0
    movs r7, #0
    movs r4, #0
    ldr r1, lbl_08086abc @ =0x08754bc4
    ldr r0, [r1]
    adds r0, #0x9b
    ldrb r0, [r0]
    cmp r7, r0
    blt lbl_08086a72
    b lbl_08086ba0
lbl_08086a72:
    ldr r2, lbl_08086abc @ =0x08754bc4
    ldr r1, [r2]
    movs r2, #0x92
    lsls r2, r2, #1
    adds r0, r1, r2
    adds r0, r0, r4
    ldrb r0, [r0]
    adds r2, r4, #1
    mov sb, r2
    cmp r0, #1
    bhi lbl_08086a8a
    b lbl_08086b90
lbl_08086a8a:
    movs r2, #0xb0
    lsls r2, r2, #1
    adds r0, r1, r2
    adds r1, r0, r4
    ldrb r0, [r1]
    cmp r0, #0x3f
    bhi lbl_08086a9c
    adds r0, #1
    strb r0, [r1]
lbl_08086a9c:
    movs r0, #0
    mov ip, r0
    cmp r4, #5
    ble lbl_08086ad2
    ldr r1, lbl_08086abc @ =0x08754bc4
    ldr r0, [r1]
    adds r0, r0, r2
    adds r0, r0, r4
    ldrb r0, [r0]
    cmp r0, #3
    bhi lbl_08086ac0
    movs r2, #0xb
    mov ip, r2
    b lbl_08086afa
    .align 2, 0
lbl_08086ab8: .4byte 0x03000e7c
lbl_08086abc: .4byte 0x08754bc4
lbl_08086ac0:
    cmp r0, #7
    bhi lbl_08086ac8
    movs r0, #0xc
    b lbl_08086af8
lbl_08086ac8:
    cmp r0, #0xb
    bhi lbl_08086afa
    movs r1, #0xd
    mov ip, r1
    b lbl_08086afa
lbl_08086ad2:
    cmp r4, #5
    bne lbl_08086afa
    ldr r2, lbl_08086c60 @ =0x08754bc4
    ldr r0, [r2]
    ldr r1, lbl_08086c64 @ =0x00000165
    adds r2, r0, r1
    ldrb r1, [r2]
    movs r0, #0x3f
    ands r0, r1
    strb r0, [r2]
    ldr r2, lbl_08086c60 @ =0x08754bc4
    ldr r0, [r2]
    ldr r1, lbl_08086c64 @ =0x00000165
    adds r0, r0, r1
    ldrb r0, [r0]
    lsrs r0, r0, #3
    ldr r2, lbl_08086c68 @ =0x0854e2dc
    adds r0, r0, r2
    ldrb r0, [r0]
lbl_08086af8:
    mov ip, r0
lbl_08086afa:
    ldr r1, lbl_08086c60 @ =0x08754bc4
    ldr r0, [r1]
    lsls r1, r4, #2
    movs r2, #0xfc
    lsls r2, r2, #1
    adds r0, r0, r2
    adds r0, r0, r1
    ldr r3, [r0]
    ldrh r2, [r3]
    adds r3, #2
    movs r0, #0xff
    ands r2, r0
    add sl, r2
    adds r0, r4, #1
    mov sb, r0
    cmp r7, sl
    bge lbl_08086b90
    ldr r1, lbl_08086c60 @ =0x08754bc4
    mov r8, r1
    lsls r6, r4, #1
    lsls r0, r7, #3
    ldr r2, lbl_08086c6c @ =0x03000e7c
    adds r4, r0, r2
    mov r0, ip
    lsls r0, r0, #4
    mov ip, r0
    mov r1, sl
    subs r7, r1, r7
lbl_08086b32:
    ldrh r2, [r3]
    adds r3, #2
    strh r2, [r5]
    adds r5, #2
    mov r1, r8
    ldr r0, [r1]
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r6
    ldrb r0, [r0]
    adds r0, r0, r2
    strb r0, [r4]
    ldrh r2, [r3]
    adds r3, #2
    strh r2, [r5]
    adds r5, #2
    mov r1, r8
    ldr r0, [r1]
    movs r1, #0xbf
    lsls r1, r1, #1
    adds r0, r0, r1
    adds r0, r0, r6
    ldrh r1, [r0]
    adds r1, r2, r1
    ldr r2, lbl_08086c70 @ =0x000001ff
    ands r1, r2
    ldrh r2, [r4, #2]
    ldr r0, lbl_08086c74 @ =0xfffffe00
    ands r0, r2
    orrs r0, r1
    strh r0, [r4, #2]
    ldrh r0, [r3]
    strh r0, [r5]
    adds r3, #2
    ldrb r1, [r4, #5]
    movs r0, #0xf
    ands r0, r1
    mov r1, ip
    orrs r0, r1
    strb r0, [r4, #5]
    adds r5, #4
    adds r4, #8
    subs r7, #1
    cmp r7, #0
    bne lbl_08086b32
    mov r7, sl
lbl_08086b90:
    mov r4, sb
    ldr r2, lbl_08086c60 @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x9b
    ldrb r0, [r0]
    cmp r4, r0
    bge lbl_08086ba0
    b lbl_08086a72
lbl_08086ba0:
    ldr r4, lbl_08086c60 @ =0x08754bc4
    ldr r1, [r4]
    ldr r2, lbl_08086c78 @ =0x00000141
    adds r0, r1, r2
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08086c4c
    ldr r3, lbl_08086c7c @ =0x0000017d
    adds r0, r1, r3
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #0x46
    bls lbl_08086bc8
    ldr r0, [r4]
    adds r1, r0, r3
    movs r0, #0
    strb r0, [r1]
lbl_08086bc8:
    ldr r4, lbl_08086c80 @ =0x0854e2e4
    ldr r1, lbl_08086c60 @ =0x08754bc4
    ldr r0, [r1]
    adds r0, r0, r3
    ldrb r0, [r0]
    movs r1, #6
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r0, r0, r4
    ldrb r0, [r0]
    mov ip, r0
    ldr r3, lbl_08086c84 @ =0x08549eec
    ldrh r2, [r3]
    adds r3, #2
    movs r0, #0xff
    ands r2, r0
    add sl, r2
    cmp r7, sl
    bge lbl_08086c4c
    ldr r1, lbl_08086c6c @ =0x03000e7c
    ldr r2, lbl_08086c70 @ =0x000001ff
    mov r8, r2
    ldr r0, lbl_08086c74 @ =0xfffffe00
    mov sb, r0
    mov r2, ip
    lsls r6, r2, #4
    lsls r0, r7, #3
    adds r4, r0, r1
    mov r0, sl
    subs r7, r0, r7
lbl_08086c08:
    ldrh r2, [r3]
    adds r3, #2
    strh r2, [r5]
    adds r5, #2
    adds r0, r2, #0
    adds r0, #0x3b
    strb r0, [r4]
    ldrh r2, [r3]
    adds r3, #2
    strh r2, [r5]
    adds r5, #2
    adds r1, r2, #0
    adds r1, #0x30
    mov r2, r8
    ands r1, r2
    ldrh r2, [r4, #2]
    mov r0, sb
    ands r0, r2
    orrs r0, r1
    strh r0, [r4, #2]
    ldrh r0, [r3]
    strh r0, [r5]
    adds r3, #2
    ldrb r1, [r4, #5]
    movs r0, #0xf
    ands r0, r1
    orrs r0, r6
    strb r0, [r4, #5]
    adds r5, #4
    adds r4, #8
    subs r7, #1
    cmp r7, #0
    bne lbl_08086c08
    mov r7, sl
lbl_08086c4c:
    ldr r0, lbl_08086c88 @ =0x03001382
    strb r7, [r0]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08086c60: .4byte 0x08754bc4
lbl_08086c64: .4byte 0x00000165
lbl_08086c68: .4byte 0x0854e2dc
lbl_08086c6c: .4byte 0x03000e7c
lbl_08086c70: .4byte 0x000001ff
lbl_08086c74: .4byte 0xfffffe00
lbl_08086c78: .4byte 0x00000141
lbl_08086c7c: .4byte 0x0000017d
lbl_08086c80: .4byte 0x0854e2e4
lbl_08086c84: .4byte 0x08549eec
lbl_08086c88: .4byte 0x03001382

    thumb_func_start ending_image_display
ending_image_display: @ 0x08086c8c
    push {r4, r5, r6, lr}
    movs r6, #0
    ldr r4, lbl_08086cbc @ =0x08754bc4
    ldr r2, [r4]
    ldrh r3, [r2, #4]
    adds r0, r3, #1
    strh r0, [r2, #4]
    lsls r0, r3, #0x10
    lsrs r1, r0, #0x10
    ldr r0, lbl_08086cc0 @ =0x00000177
    cmp r1, r0
    beq lbl_08086d60
    cmp r1, r0
    bgt lbl_08086cd2
    cmp r1, #0x6e
    beq lbl_08086d26
    cmp r1, #0x6e
    bgt lbl_08086cc4
    cmp r1, #0
    beq lbl_08086d10
    cmp r1, #0x1e
    beq lbl_08086d18
    b lbl_08086dd6
    .align 2, 0
lbl_08086cbc: .4byte 0x08754bc4
lbl_08086cc0: .4byte 0x00000177
lbl_08086cc4:
    cmp r1, #0xb4
    beq lbl_08086d2e
    movs r0, #0xa5
    lsls r0, r0, #1
    cmp r1, r0
    beq lbl_08086d58
    b lbl_08086dd6
lbl_08086cd2:
    ldr r0, lbl_08086cec @ =0x00000212
    cmp r1, r0
    beq lbl_08086d9c
    cmp r1, r0
    bgt lbl_08086cf0
    subs r0, #0x96
    cmp r1, r0
    beq lbl_08086d7a
    adds r0, #0x50
    cmp r1, r0
    beq lbl_08086d94
    b lbl_08086dd6
    .align 2, 0
lbl_08086cec: .4byte 0x00000212
lbl_08086cf0:
    movs r0, #0xac
    lsls r0, r0, #3
    cmp r1, r0
    beq lbl_08086db6
    cmp r1, r0
    bgt lbl_08086d06
    movs r0, #0xc3
    lsls r0, r0, #2
    cmp r1, r0
    beq lbl_08086da4
    b lbl_08086dd6
lbl_08086d06:
    movs r0, #0xd0
    lsls r0, r0, #3
    cmp r1, r0
    beq lbl_08086dd4
    b lbl_08086dd6
lbl_08086d10:
    ldrh r0, [r2, #8]
    adds r0, #1
    strh r0, [r2, #8]
    b lbl_08086dd6
lbl_08086d18:
    movs r0, #0
    bl sub_08084c7c
    ldr r1, [r4]
    movs r0, #1
    strb r0, [r1, #1]
    b lbl_08086dd6
lbl_08086d26:
    movs r0, #0
    bl sub_08084ee8
    b lbl_08086dd6
lbl_08086d2e:
    movs r0, #1
    bl sub_08084ee8
    ldr r0, lbl_08086d50 @ =0x03001604
    ldrb r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08086dd6
    ldr r0, [r4]
    ldr r2, lbl_08086d54 @ =0x00000141
    adds r1, r0, r2
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    b lbl_08086dd6
    .align 2, 0
lbl_08086d50: .4byte 0x03001604
lbl_08086d54: .4byte 0x00000141
lbl_08086d58:
    movs r0, #1
    bl sub_08084c7c
    b lbl_08086dd6
lbl_08086d60:
    adds r0, r2, #0
    adds r0, #0x9a
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08086d72
    cmp r0, #2
    beq lbl_08086d72
    cmp r0, #5
    bne lbl_08086dd6
lbl_08086d72:
    movs r0, #2
    bl sub_08084ee8
    b lbl_08086dd6
lbl_08086d7a:
    adds r0, r2, #0
    adds r0, #0x9a
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08086d8c
    cmp r0, #2
    beq lbl_08086d8c
    cmp r0, #5
    bne lbl_08086dd6
lbl_08086d8c:
    movs r0, #2
    bl sub_08084c7c
    b lbl_08086dd6
lbl_08086d94:
    movs r0, #3
    bl sub_08084ee8
    b lbl_08086dd6
lbl_08086d9c:
    movs r0, #4
    bl sub_08084ee8
    b lbl_08086dd6
lbl_08086da4:
    adds r0, r2, #0
    adds r0, #0x9a
    ldrb r0, [r0]
    cmp r0, #1
    beq lbl_08086dd6
    movs r0, #5
    bl sub_08084ee8
    b lbl_08086dd6
lbl_08086db6:
    ldr r0, lbl_08086dcc @ =0x03001380
    ldrh r1, [r0]
    movs r0, #0xb
    ands r0, r1
    cmp r0, #0
    beq lbl_08086dd0
    movs r0, #0x80
    lsls r0, r0, #1
    bl FadeMusic
    b lbl_08086dd6
    .align 2, 0
lbl_08086dcc: .4byte 0x03001380
lbl_08086dd0:
    strh r3, [r2, #4]
    b lbl_08086dd6
lbl_08086dd4:
    movs r6, #1
lbl_08086dd6:
    ldr r0, lbl_08086df8 @ =0x08754bc4
    ldr r2, [r0]
    ldrh r1, [r2, #8]
    adds r3, r0, #0
    cmp r1, #0
    beq lbl_08086e10
    ldr r1, lbl_08086dfc @ =0x030013b6
    ldrh r0, [r1]
    cmp r0, #6
    bls lbl_08086e04
    subs r0, #6
    strh r0, [r1]
    ldr r1, lbl_08086e00 @ =0x030013ba
    ldrh r0, [r1]
    subs r0, #6
    strh r0, [r1]
    b lbl_08086e10
    .align 2, 0
lbl_08086df8: .4byte 0x08754bc4
lbl_08086dfc: .4byte 0x030013b6
lbl_08086e00: .4byte 0x030013ba
lbl_08086e04:
    movs r0, #0
    strh r0, [r1]
    ldr r1, lbl_08086e68 @ =0x030013ba
    strh r0, [r1]
    movs r0, #0
    strh r0, [r2, #8]
lbl_08086e10:
    ldr r0, [r3]
    ldrh r1, [r0, #4]
    ldr r0, lbl_08086e6c @ =0x00000564
    cmp r1, r0
    bhi lbl_08086e5e
    ldr r0, lbl_08086e70 @ =0x00000329
    cmp r1, r0
    bls lbl_08086e2e
    ldr r0, lbl_08086e74 @ =0x0300137c
    ldrh r1, [r0]
    movs r0, #0xc0
    lsls r0, r0, #2
    ands r0, r1
    cmp r0, #0
    bne lbl_08086e5e
lbl_08086e2e:
    ldr r1, [r3]
    ldrb r0, [r1, #1]
    cmp r0, #1
    bne lbl_08086e5a
    movs r4, #6
    adds r0, r1, #0
    adds r0, #0x9b
    ldrb r0, [r0]
    cmp r4, r0
    bhs lbl_08086e5a
    adds r5, r3, #0
lbl_08086e44:
    adds r0, r4, #0
    bl sub_08084c34
    adds r0, r4, #1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldr r0, [r5]
    adds r0, #0x9b
    ldrb r0, [r0]
    cmp r4, r0
    blo lbl_08086e44
lbl_08086e5a:
    bl ending_image_display_text
lbl_08086e5e:
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08086e68: .4byte 0x030013ba
lbl_08086e6c: .4byte 0x00000564
lbl_08086e70: .4byte 0x00000329
lbl_08086e74: .4byte 0x0300137c

    thumb_func_start unlocked_options_init
unlocked_options_init: @ 0x08086e78
    push {r4, r5, r6, lr}
    mov r6, sb
    mov r5, r8
    push {r5, r6}
    sub sp, #8
    ldr r4, lbl_08086f64 @ =0x04000208
    movs r0, #0
    mov r8, r0
    strh r0, [r4]
    ldr r2, lbl_08086f68 @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_08086f6c @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_08086f70 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_08086f74 @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_08086f78 @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r5, #1
    strh r5, [r4]
    movs r0, #0x80
    lsls r0, r0, #0x13
    mov r1, r8
    strh r1, [r0]
    strh r1, [r4]
    ldr r2, lbl_08086f7c @ =vblank_code_during_unlocked_options
    mov sb, r2
    mov r0, sb
    bl CallbackSetVBlank
    strh r5, [r4]
    movs r6, #0
    str r6, [sp, #4]
    ldr r4, lbl_08086f80 @ =0x040000d4
    add r0, sp, #4
    str r0, [r4]
    ldr r0, lbl_08086f84 @ =0x030016c4
    str r0, [r4, #4]
    ldr r0, lbl_08086f88 @ =0x8500018a
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    bl ClearGFXRAM
    ldr r0, lbl_08086f8c @ =0x085c943c
    ldr r1, lbl_08086f90 @ =0x06008000
    bl LZ77UncompVRAM
    movs r1, #1
    rsbs r1, r1, #0
    ldr r2, lbl_08086f94 @ =0x06007fe0
    movs r5, #0x20
    str r5, [sp]
    movs r0, #3
    movs r3, #0x20
    bl BitFill
    ldr r1, lbl_08086f98 @ =0xf3fff3ff
    ldr r2, lbl_08086f9c @ =0x06008800
    movs r3, #0x80
    lsls r3, r3, #4
    str r5, [sp]
    movs r0, #3
    bl BitFill
    ldr r0, lbl_08086fa0 @ =0x0854bd34
    str r0, [r4]
    ldr r0, lbl_08086fa4 @ =0x050001e0
    str r0, [r4, #4]
    ldr r0, lbl_08086fa8 @ =0x80000010
    str r0, [r4, #8]
    ldr r0, [r4, #8]
    ldr r1, lbl_08086fac @ =0x04000008
    movs r2, #0x80
    lsls r2, r2, #5
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_08086fb0 @ =0x00001101
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08086fb4 @ =0x03001382
    mov r1, r8
    strb r1, [r0]
    bl ResetFreeOAM
    ldr r0, lbl_08086fb8 @ =0x04000010
    strh r6, [r0]
    adds r0, #2
    strh r6, [r0]
    ldr r0, lbl_08086fbc @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0xb0
    lsls r2, r2, #2
    adds r1, r0, r2
    strh r6, [r1]
    ldr r1, lbl_08086fc0 @ =0x000002c2
    adds r0, r0, r1
    strh r6, [r0]
    ldr r0, lbl_08086fc4 @ =0x030013b0
    movs r1, #0x10
    strh r1, [r0]
    ldr r0, lbl_08086fc8 @ =0x030013b2
    strh r6, [r0]
    ldr r0, lbl_08086fcc @ =0x030013ae
    strh r1, [r0]
    bl _call_via_r9
    add sp, #8
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08086f64: .4byte 0x04000208
lbl_08086f68: .4byte 0x04000004
lbl_08086f6c: .4byte 0x0000ffef
lbl_08086f70: .4byte 0x04000200
lbl_08086f74: .4byte 0x0000fffd
lbl_08086f78: .4byte 0x04000202
lbl_08086f7c: .4byte vblank_code_during_unlocked_options
lbl_08086f80: .4byte 0x040000d4
lbl_08086f84: .4byte 0x030016c4
lbl_08086f88: .4byte 0x8500018a
lbl_08086f8c: .4byte 0x085c943c
lbl_08086f90: .4byte 0x06008000
lbl_08086f94: .4byte 0x06007fe0
lbl_08086f98: .4byte 0xf3fff3ff
lbl_08086f9c: .4byte 0x06008800
lbl_08086fa0: .4byte 0x0854bd34
lbl_08086fa4: .4byte 0x050001e0
lbl_08086fa8: .4byte 0x80000010
lbl_08086fac: .4byte 0x04000008
lbl_08086fb0: .4byte 0x00001101
lbl_08086fb4: .4byte 0x03001382
lbl_08086fb8: .4byte 0x04000010
lbl_08086fbc: .4byte 0x08754bc4
lbl_08086fc0: .4byte 0x000002c2
lbl_08086fc4: .4byte 0x030013b0
lbl_08086fc8: .4byte 0x030013b2
lbl_08086fcc: .4byte 0x030013ae

    thumb_func_start unlocked_options_pop_up
unlocked_options_pop_up: @ 0x08086fd0
    push {r4, r5, lr}
    sub sp, #4
    movs r5, #0
    ldr r3, lbl_08086ff4 @ =0x08754bc4
    ldr r2, [r3]
    ldrh r1, [r2, #4]
    adds r0, r1, #1
    strh r0, [r2, #4]
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x20
    beq lbl_0808705c
    cmp r0, #0x20
    bgt lbl_08086ff8
    cmp r0, #0
    beq lbl_08086ffe
    b lbl_080870aa
    .align 2, 0
lbl_08086ff4: .4byte 0x08754bc4
lbl_08086ff8:
    cmp r0, #0x80
    beq lbl_080870a8
    b lbl_080870aa
lbl_08086ffe:
    movs r2, #0xc0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #6
    movs r4, #0x20
    str r4, [sp]
    movs r0, #3
    movs r1, #0
    bl BitFill
    ldr r0, lbl_08087024 @ =0x03001604
    ldrb r1, [r0]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_08087028
    movs r1, #0x21
    b lbl_08087040
    .align 2, 0
lbl_08087024: .4byte 0x03001604
lbl_08087028:
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08087034
    movs r1, #0x23
    b lbl_08087040
lbl_08087034:
    adds r0, r4, #0
    ands r0, r1
    movs r1, #0x24
    cmp r0, #0
    beq lbl_08087040
    movs r1, #0x22
lbl_08087040:
    adds r0, r1, #0
    bl start_file_screen_text
    ldr r0, lbl_08087058 @ =0x08754bc4
    ldr r0, [r0]
    movs r1, #0x92
    lsls r1, r1, #1
    adds r0, r0, r1
    movs r1, #0
    strb r1, [r0]
    b lbl_080870aa
    .align 2, 0
lbl_08087058: .4byte 0x08754bc4
lbl_0808705c:
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r1, r2, r0
    movs r0, #0x88
    lsls r0, r0, #6
    strh r0, [r1]
    ldr r1, lbl_080870a0 @ =0x04000048
    movs r0, #3
    strh r0, [r1]
    ldr r0, lbl_080870a4 @ =0x0400004a
    strh r5, [r0]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    ldr r2, [r3]
    movs r1, #0xbf
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r1, #0x78
    strh r1, [r0]
    movs r3, #0xc0
    lsls r3, r3, #1
    adds r0, r2, r3
    strh r1, [r0]
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r2, r1
    movs r1, #0x50
    strh r1, [r0]
    adds r3, #0x3c
    adds r0, r2, r3
    strh r1, [r0]
    b lbl_080870aa
    .align 2, 0
lbl_080870a0: .4byte 0x04000048
lbl_080870a4: .4byte 0x0400004a
lbl_080870a8:
    strh r1, [r2, #4]
lbl_080870aa:
    ldr r4, lbl_08087108 @ =0x08754bc4
    ldr r0, [r4]
    movs r1, #0x92
    lsls r1, r1, #1
    adds r0, r0, r1
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080870c8
    bl sub_0806f5c4
    ldr r1, [r4]
    movs r2, #0x92
    lsls r2, r2, #1
    adds r1, r1, r2
    strb r0, [r1]
lbl_080870c8:
    ldr r3, [r4]
    ldrb r0, [r3, #1]
    cmp r0, #1
    bne lbl_08087142
    movs r0, #0xbf
    lsls r0, r0, #1
    adds r0, r0, r3
    mov ip, r0
    ldrh r0, [r0]
    cmp r0, #0x30
    bls lbl_0808710c
    subs r0, #8
    mov r1, ip
    strh r0, [r1]
    movs r2, #0xc0
    lsls r2, r2, #1
    adds r1, r3, r2
    ldrh r0, [r1]
    adds r0, #8
    strh r0, [r1]
    movs r0, #0xdd
    lsls r0, r0, #1
    adds r1, r3, r0
    ldrh r0, [r1]
    subs r0, #4
    strh r0, [r1]
    adds r2, #0x3c
    adds r1, r3, r2
    ldrh r0, [r1]
    adds r0, #4
    strh r0, [r1]
    b lbl_080871d2
    .align 2, 0
lbl_08087108: .4byte 0x08754bc4
lbl_0808710c:
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r1, r3, r0
    movs r0, #0x8c
    lsls r0, r0, #6
    strh r0, [r1]
    movs r2, #0x2c
    mov r1, ip
    strh r2, [r1]
    movs r0, #0xc0
    lsls r0, r0, #1
    adds r1, r3, r0
    movs r0, #0xbc
    strh r0, [r1]
    movs r1, #0xdd
    lsls r1, r1, #1
    adds r0, r3, r1
    strh r2, [r0]
    movs r2, #0xde
    lsls r2, r2, #1
    adds r1, r3, r2
    movs r0, #0x74
    strh r0, [r1]
    ldrb r0, [r3, #1]
    adds r0, #1
    strb r0, [r3, #1]
    b lbl_080871d2
lbl_08087142:
    cmp r0, #2
    bne lbl_08087174
    ldr r0, lbl_08087170 @ =0x03001380
    ldrh r1, [r0]
    movs r0, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080871d2
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r1, r3, r0
    movs r0, #0x88
    lsls r0, r0, #6
    strh r0, [r1]
    ldrb r0, [r3, #1]
    adds r0, #1
    strb r0, [r3, #1]
    ldr r1, [r4]
    ldrh r0, [r1, #4]
    adds r0, #1
    strh r0, [r1, #4]
    b lbl_080871d2
    .align 2, 0
lbl_08087170: .4byte 0x03001380
lbl_08087174:
    cmp r0, #3
    bne lbl_080871d2
    movs r2, #0xbf
    lsls r2, r2, #1
    adds r1, r3, r2
    ldrh r0, [r1]
    cmp r0, #0x6f
    bhi lbl_080871ac
    adds r0, #8
    strh r0, [r1]
    movs r0, #0xc0
    lsls r0, r0, #1
    adds r1, r3, r0
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
    adds r2, #0x3c
    adds r1, r3, r2
    ldrh r0, [r1]
    adds r0, #4
    strh r0, [r1]
    movs r0, #0xde
    lsls r0, r0, #1
    adds r1, r3, r0
    ldrh r0, [r1]
    subs r0, #4
    strh r0, [r1]
    b lbl_080871d2
lbl_080871ac:
    movs r2, #0xb0
    lsls r2, r2, #2
    adds r1, r3, r2
    movs r0, #0
    strh r0, [r1]
    ldr r0, lbl_080871c8 @ =0x03001604
    ldrb r1, [r0]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_080871cc
    adds r0, r5, #1
    b lbl_080871ce
    .align 2, 0
lbl_080871c8: .4byte 0x03001604
lbl_080871cc:
    adds r0, r5, #2
lbl_080871ce:
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
lbl_080871d2:
    adds r0, r5, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1

    thumb_func_start credits_main
credits_main: @ 0x080871dc
    push {r4, r5, lr}
    movs r5, #0
    ldr r1, lbl_08087204 @ =0x08754bc4
    ldr r0, [r1]
    strb r5, [r0, #6]
    ldr r0, lbl_08087208 @ =0x03001382
    strb r5, [r0]
    ldr r0, lbl_0808720c @ =0x03000c72
    movs r2, #0
    ldrsh r3, [r0, r2]
    adds r4, r1, #0
    adds r2, r0, #0
    cmp r3, #0xf
    bls lbl_080871fa
    b lbl_080873d0
lbl_080871fa:
    lsls r0, r3, #2
    ldr r1, lbl_08087210 @ =lbl_08087214
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08087204: .4byte 0x08754bc4
lbl_08087208: .4byte 0x03001382
lbl_0808720c: .4byte 0x03000c72
lbl_08087210: .4byte lbl_08087214
lbl_08087214: @ jump table
    .4byte lbl_08087254 @ case 0
    .4byte lbl_08087360 @ case 1
    .4byte lbl_0808725a @ case 2
    .4byte lbl_08087360 @ case 3
    .4byte lbl_080872b0 @ case 4
    .4byte lbl_080872da @ case 5
    .4byte lbl_080872b6 @ case 6
    .4byte lbl_080872a0 @ case 7
    .4byte lbl_080872d4 @ case 8
    .4byte lbl_080872da @ case 9
    .4byte lbl_08087300 @ case 10
    .4byte lbl_080872a0 @ case 11
    .4byte lbl_08087378 @ case 12
    .4byte lbl_080872da @ case 13
    .4byte lbl_0808738c @ case 14
    .4byte lbl_08087354 @ case 15
lbl_08087254:
    bl credits_init
    b lbl_0808737c
lbl_0808725a:
    ldr r1, lbl_08087298 @ =0x08760cf8
    ldr r0, [r4]
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0
    beq lbl_0808734a
    ldr r2, [r4]
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #0
    strb r0, [r2]
    ldr r0, [r4]
    strb r1, [r0, #1]
    ldr r0, [r4]
    strb r1, [r0, #2]
    ldr r0, [r4]
    strh r1, [r0, #4]
    cmp r3, #1
    bls lbl_0808734a
lbl_0808728c:
    ldr r1, lbl_0808729c @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    b lbl_0808734a
    .align 2, 0
lbl_08087298: .4byte 0x08760cf8
lbl_0808729c: .4byte 0x03000c72
lbl_080872a0:
    ldr r1, lbl_080872ac @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bls lbl_08087380
    b lbl_08087360
    .align 2, 0
lbl_080872ac: .4byte 0x030013ae
lbl_080872b0:
    bl end_screen_init
    b lbl_0808737c
lbl_080872b6:
    ldr r1, lbl_080872d0 @ =0x08760d04
    ldr r0, [r4]
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    cmp r0, #0
    bne lbl_080872ce
    b lbl_080873d0
lbl_080872ce:
    b lbl_0808737c
    .align 2, 0
lbl_080872d0: .4byte 0x08760d04
lbl_080872d4:
    bl ending_image_init
    b lbl_0808737c
lbl_080872da:
    ldr r3, lbl_080872ec @ =0x030013ae
    ldrh r0, [r3]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_080872f0
    subs r0, #1
    strh r0, [r3]
    b lbl_080873d0
    .align 2, 0
lbl_080872ec: .4byte 0x030013ae
lbl_080872f0:
    ldr r0, [r4]
    ldr r3, lbl_080872fc @ =0x000002c2
    adds r0, r0, r3
    strh r1, [r0]
    b lbl_08087360
    .align 2, 0
lbl_080872fc: .4byte 0x000002c2
lbl_08087300:
    ldr r1, lbl_08087334 @ =0x08760d08
    ldr r0, [r4]
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0808734a
    ldr r0, lbl_08087338 @ =0x03001604
    ldrb r0, [r0]
    movs r1, #0xf0
    ands r1, r0
    cmp r1, #0
    beq lbl_08087344
    ldr r0, [r4]
    ldr r1, lbl_0808733c @ =0x000002c2
    adds r0, r0, r1
    movs r2, #0
    movs r1, #0xff
    strh r1, [r0]
    ldr r0, lbl_08087340 @ =0x030013ae
    strh r2, [r0]
    b lbl_0808728c
    .align 2, 0
lbl_08087334: .4byte 0x08760d08
lbl_08087338: .4byte 0x03001604
lbl_0808733c: .4byte 0x000002c2
lbl_08087340: .4byte 0x030013ae
lbl_08087344:
    ldr r0, lbl_08087350 @ =0x03000043
    strb r1, [r0]
    adds r5, #1
lbl_0808734a:
    bl ResetFreeOAM
    b lbl_080873d0
    .align 2, 0
lbl_08087350: .4byte 0x03000043
lbl_08087354:
    ldr r0, lbl_08087368 @ =0x03001604
    ldrb r0, [r0]
    movs r1, #0xf0
    ands r1, r0
    cmp r1, #0
    beq lbl_0808736c
lbl_08087360:
    ldrh r0, [r2]
    adds r0, #1
    strh r0, [r2]
    b lbl_080873d0
    .align 2, 0
lbl_08087368: .4byte 0x03001604
lbl_0808736c:
    ldr r0, lbl_08087374 @ =0x03000043
    strb r1, [r0]
    adds r5, #1
    b lbl_080873d0
    .align 2, 0
lbl_08087374: .4byte 0x03000043
lbl_08087378:
    bl unlocked_options_init
lbl_0808737c:
    ldr r1, lbl_08087388 @ =0x03000c72
    ldrh r0, [r1]
lbl_08087380:
    adds r0, #1
    strh r0, [r1]
    b lbl_080873d0
    .align 2, 0
lbl_08087388: .4byte 0x03000c72
lbl_0808738c:
    ldr r1, lbl_080873d8 @ =0x08760d0c
    ldr r0, [r4]
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0
    beq lbl_080873cc
    ldr r1, lbl_080873dc @ =0x03001604
    movs r0, #0
    strb r0, [r1]
    ldr r2, [r4]
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #0
    strb r0, [r2]
    ldr r0, [r4]
    strb r1, [r0, #1]
    ldr r0, [r4]
    strb r1, [r0, #2]
    ldr r0, [r4]
    strh r1, [r0, #4]
    cmp r3, #1
    bls lbl_080873cc
    ldr r1, lbl_080873e0 @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
lbl_080873cc:
    bl ResetFreeOAM
lbl_080873d0:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080873d8: .4byte 0x08760d0c
lbl_080873dc: .4byte 0x03001604
lbl_080873e0: .4byte 0x03000c72

    thumb_func_start gallery_init
gallery_init: @ 0x080873e4
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #8
    ldr r4, lbl_08087478 @ =0x04000208
    movs r3, #0
    strh r3, [r4]
    ldr r2, lbl_0808747c @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_08087480 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_08087484 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_08087488 @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_0808748c @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r5, #1
    strh r5, [r4]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r3, [r0]
    strh r3, [r4]
    ldr r0, lbl_08087490 @ =vblank_code_during_gallery
    bl CallbackSetVBlank
    strh r5, [r4]
    ldr r0, lbl_08087494 @ =0x03000c72
    movs r1, #0
    ldrsh r4, [r0, r1]
    cmp r4, #0
    bne lbl_08087440
    bl ClearGFXRAM
    str r4, [sp, #4]
    ldr r1, lbl_08087498 @ =0x040000d4
    add r2, sp, #4
    str r2, [r1]
    ldr r0, lbl_0808749c @ =0x030016c4
    str r0, [r1, #4]
    ldr r0, lbl_080874a0 @ =0x8500018a
    str r0, [r1, #8]
    ldr r0, [r1, #8]
lbl_08087440:
    ldr r2, lbl_080874a4 @ =0x08754bc4
    ldr r3, [r2]
    adds r0, r3, #0
    adds r0, #0x98
    ldrb r4, [r0]
    movs r5, #0
    movs r0, #1
    lsls r0, r4
    ldr r6, lbl_080874a8 @ =0x03000014
    ldrh r1, [r6]
    ands r1, r0
    mov r8, r2
    ldr r0, lbl_080874ac @ =0x0854c06c
    mov ip, r0
    cmp r1, #0
    bne lbl_080874d0
    adds r0, r3, #0
    adds r0, #0x99
    ldrb r2, [r0]
    movs r7, #1
    adds r3, r6, #0
lbl_0808746a:
    cmp r2, #0
    beq lbl_080874b4
    cmp r4, #0
    beq lbl_080874b0
    subs r4, #1
    b lbl_080874be
    .align 2, 0
lbl_08087478: .4byte 0x04000208
lbl_0808747c: .4byte 0x04000004
lbl_08087480: .4byte 0x0000ffef
lbl_08087484: .4byte 0x04000200
lbl_08087488: .4byte 0x0000fffd
lbl_0808748c: .4byte 0x04000202
lbl_08087490: .4byte vblank_code_during_gallery
lbl_08087494: .4byte 0x03000c72
lbl_08087498: .4byte 0x040000d4
lbl_0808749c: .4byte 0x030016c4
lbl_080874a0: .4byte 0x8500018a
lbl_080874a4: .4byte 0x08754bc4
lbl_080874a8: .4byte 0x03000014
lbl_080874ac: .4byte 0x0854c06c
lbl_080874b0:
    movs r4, #7
    b lbl_080874be
lbl_080874b4:
    cmp r4, #6
    bhi lbl_080874bc
    adds r4, #1
    b lbl_080874be
lbl_080874bc:
    movs r4, #0
lbl_080874be:
    adds r5, #1
    cmp r5, #7
    bhi lbl_080874d0
    adds r1, r7, #0
    lsls r1, r4
    ldrh r0, [r3]
    ands r0, r1
    cmp r0, #0
    beq lbl_0808746a
lbl_080874d0:
    mov r1, r8
    ldr r0, [r1]
    adds r0, #0x98
    movs r5, #0
    strb r4, [r0]
    lsls r4, r4, #2
    mov r2, ip
    adds r0, r4, r2
    ldr r0, [r0]
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, lbl_080875c0 @ =0x0854c08c
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_080875c4 @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_080875c8 @ =0x0854c0ac
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_080875cc @ =0x0600e000
    bl LZ77UncompVRAM
    ldr r0, lbl_080875d0 @ =0x0854c0cc
    adds r0, r4, r0
    ldr r0, [r0]
    ldr r1, lbl_080875d4 @ =0x0600f800
    bl LZ77UncompVRAM
    ldr r1, lbl_080875d8 @ =0x04ff04ff
    ldr r2, lbl_080875dc @ =0x0600e800
    movs r3, #0x80
    lsls r3, r3, #4
    movs r0, #0x20
    str r0, [sp]
    movs r0, #3
    bl BitFill
    ldr r1, lbl_080875e0 @ =0x040000d4
    ldr r0, lbl_080875e4 @ =0x0854c0ec
    adds r4, r4, r0
    ldr r0, [r4]
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_080875e8 @ =0x80000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xcc
    movs r2, #0x9c
    lsls r2, r2, #8
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r2, lbl_080875ec @ =0x00009e09
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_080875f0 @ =0x03001382
    strb r5, [r0]
    bl ResetFreeOAM
    ldr r0, lbl_080875f4 @ =0x030013b4
    strh r5, [r0]
    ldr r0, lbl_080875f8 @ =0x030013b6
    movs r2, #0x80
    lsls r2, r2, #5
    adds r1, r2, #0
    strh r1, [r0]
    ldr r0, lbl_080875fc @ =0x030013b8
    strh r5, [r0]
    ldr r0, lbl_08087600 @ =0x030013ba
    strh r1, [r0]
    ldr r0, lbl_08087604 @ =0x030013bc
    strh r5, [r0]
    ldr r0, lbl_08087608 @ =0x030013be
    strh r5, [r0]
    ldr r0, lbl_0808760c @ =0x030013c0
    strh r5, [r0]
    ldr r0, lbl_08087610 @ =0x030013c2
    strh r5, [r0]
    ldr r0, lbl_08087614 @ =0x04000010
    strh r5, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    mov r0, r8
    ldr r1, [r0]
    strh r5, [r1, #8]
    movs r0, #0xb0
    lsls r0, r0, #2
    adds r2, r1, r0
    movs r0, #0x98
    lsls r0, r0, #5
    strh r0, [r2]
    ldr r2, lbl_08087618 @ =0x000002c2
    adds r1, r1, r2
    movs r0, #0xff
    strh r0, [r1]
    bl vblank_code_during_gallery
    add sp, #8
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080875c0: .4byte 0x0854c08c
lbl_080875c4: .4byte 0x06008000
lbl_080875c8: .4byte 0x0854c0ac
lbl_080875cc: .4byte 0x0600e000
lbl_080875d0: .4byte 0x0854c0cc
lbl_080875d4: .4byte 0x0600f800
lbl_080875d8: .4byte 0x04ff04ff
lbl_080875dc: .4byte 0x0600e800
lbl_080875e0: .4byte 0x040000d4
lbl_080875e4: .4byte 0x0854c0ec
lbl_080875e8: .4byte 0x80000100
lbl_080875ec: .4byte 0x00009e09
lbl_080875f0: .4byte 0x03001382
lbl_080875f4: .4byte 0x030013b4
lbl_080875f8: .4byte 0x030013b6
lbl_080875fc: .4byte 0x030013b8
lbl_08087600: .4byte 0x030013ba
lbl_08087604: .4byte 0x030013bc
lbl_08087608: .4byte 0x030013be
lbl_0808760c: .4byte 0x030013c0
lbl_08087610: .4byte 0x030013c2
lbl_08087614: .4byte 0x04000010
lbl_08087618: .4byte 0x000002c2

    thumb_func_start gallery_display
gallery_display: @ 0x0808761c
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r1, lbl_08087660 @ =0x08754bc4
    ldr r5, [r1]
    adds r0, r5, #0
    adds r0, #0x98
    ldrb r3, [r0]
    movs r0, #0x80
    lsls r0, r0, #0x11
    lsls r0, r3
    lsrs r6, r0, #0x18
    movs r0, #0
    mov r8, r0
    movs r4, #0
    mov ip, r4
    ldr r0, lbl_08087664 @ =0x03001380
    ldrh r2, [r0]
    movs r0, #2
    ands r0, r2
    adds r7, r1, #0
    cmp r0, #0
    beq lbl_08087670
    ldr r1, lbl_08087668 @ =0x000002c2
    adds r0, r5, r1
    movs r1, #0xff
    strh r1, [r0]
    ldr r0, lbl_0808766c @ =0x030013ae
    mov r1, r8
    strh r1, [r0]
    movs r0, #1
    mov r8, r0
    b lbl_080876b2
    .align 2, 0
lbl_08087660: .4byte 0x08754bc4
lbl_08087664: .4byte 0x03001380
lbl_08087668: .4byte 0x000002c2
lbl_0808766c: .4byte 0x030013ae
lbl_08087670:
    movs r0, #0x11
    ands r0, r2
    cmp r0, #0
    beq lbl_08087688
    cmp r3, #6
    bhi lbl_08087684
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    b lbl_080876a8
lbl_08087684:
    movs r3, #0
    b lbl_080876a8
lbl_08087688:
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0
    beq lbl_080876b2
    cmp r3, #0
    beq lbl_0808769c
    subs r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    b lbl_0808769e
lbl_0808769c:
    movs r3, #7
lbl_0808769e:
    mov r0, ip
    adds r0, #1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov ip, r0
lbl_080876a8:
    ldr r0, lbl_08087714 @ =0x03000014
    ldrh r0, [r0]
    cmp r0, r6
    bls lbl_080876b2
    adds r4, #1
lbl_080876b2:
    cmp r4, #0
    beq lbl_080876da
    ldr r0, [r7]
    adds r0, #0x98
    movs r2, #0
    strb r3, [r0]
    ldr r0, [r7]
    adds r0, #0x99
    mov r1, ip
    strb r1, [r0]
    ldr r0, [r7]
    ldr r1, lbl_08087718 @ =0x000002c2
    adds r0, r0, r1
    movs r1, #0xff
    strh r1, [r0]
    ldr r0, lbl_0808771c @ =0x030013ae
    strh r2, [r0]
    ldr r1, lbl_08087720 @ =0x03000c72
    movs r0, #5
    strh r0, [r1]
lbl_080876da:
    movs r4, #0
    movs r3, #8
    ldr r0, [r7]
    ldrh r0, [r0, #8]
    cmp r0, #0
    beq lbl_080876f8
    ldr r0, lbl_08087724 @ =0x0300137c
    ldrh r1, [r0]
    movs r0, #0x80
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    rsbs r0, r0, #0
    lsrs r4, r0, #0x1f
    movs r3, #0xc
lbl_080876f8:
    cmp r4, #0
    bne lbl_08087744
    ldr r1, lbl_08087728 @ =0x030013b6
    ldrh r0, [r1]
    cmp r0, r3
    ble lbl_08087730
    subs r0, r0, r3
    strh r0, [r1]
    ldr r1, lbl_0808772c @ =0x030013ba
    ldrh r0, [r1]
    subs r0, r0, r3
    strh r0, [r1]
    b lbl_08087764
    .align 2, 0
lbl_08087714: .4byte 0x03000014
lbl_08087718: .4byte 0x000002c2
lbl_0808771c: .4byte 0x030013ae
lbl_08087720: .4byte 0x03000c72
lbl_08087724: .4byte 0x0300137c
lbl_08087728: .4byte 0x030013b6
lbl_0808772c: .4byte 0x030013ba
lbl_08087730:
    strh r4, [r1]
    ldr r0, lbl_08087740 @ =0x030013ba
    strh r4, [r0]
    ldr r1, [r7]
    movs r0, #1
    strh r0, [r1, #8]
    b lbl_08087764
    .align 2, 0
lbl_08087740: .4byte 0x030013ba
lbl_08087744:
    ldr r4, lbl_08087770 @ =0x030013b6
    ldrh r1, [r4]
    adds r1, r1, r3
    strh r1, [r4]
    ldr r2, lbl_08087774 @ =0x030013ba
    ldrh r0, [r2]
    adds r0, r0, r3
    strh r0, [r2]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    movs r0, #0x80
    lsls r0, r0, #5
    cmp r1, r0
    bls lbl_08087764
    strh r0, [r4]
    strh r0, [r2]
lbl_08087764:
    mov r0, r8
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08087770: .4byte 0x030013b6
lbl_08087774: .4byte 0x030013ba

    thumb_func_start gallery_main
gallery_main: @ 0x08087778
    push {r4, r5, r6, r7, lr}
    movs r6, #0
    ldr r0, lbl_0808779c @ =0x08754bc4
    ldr r1, [r0]
    strb r6, [r1, #6]
    ldr r1, lbl_080877a0 @ =0x03000c72
    movs r3, #0
    ldrsh r2, [r1, r3]
    adds r7, r0, #0
    adds r4, r1, #0
    cmp r2, #5
    bhi lbl_08087844
    lsls r0, r2, #2
    ldr r1, lbl_080877a4 @ =lbl_080877a8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0808779c: .4byte 0x08754bc4
lbl_080877a0: .4byte 0x03000c72
lbl_080877a4: .4byte lbl_080877a8
lbl_080877a8: @ jump table
    .4byte lbl_080877c0 @ case 0
    .4byte lbl_080877d0 @ case 1
    .4byte lbl_080877f8 @ case 2
    .4byte lbl_08087810 @ case 3
    .4byte lbl_080877c0 @ case 4
    .4byte lbl_08087810 @ case 5
lbl_080877c0:
    bl gallery_init
    ldr r1, lbl_080877cc @ =0x03000c72
    movs r0, #1
    strh r0, [r1]
    b lbl_08087844
    .align 2, 0
lbl_080877cc: .4byte 0x03000c72
lbl_080877d0:
    ldr r2, lbl_080877e0 @ =0x030013ae
    ldrh r0, [r2]
    adds r1, r0, #0
    cmp r1, #0
    beq lbl_080877e4
    subs r0, #1
    strh r0, [r2]
    b lbl_08087844
    .align 2, 0
lbl_080877e0: .4byte 0x030013ae
lbl_080877e4:
    ldr r0, [r7]
    ldr r2, lbl_080877f4 @ =0x000002c2
    adds r0, r0, r2
    strh r1, [r0]
    ldrh r0, [r4]
    adds r0, #1
    b lbl_08087842
    .align 2, 0
lbl_080877f4: .4byte 0x000002c2
lbl_080877f8:
    bl gallery_display
    cmp r0, #0
    beq lbl_08087844
    ldr r1, lbl_0808780c @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    b lbl_08087844
    .align 2, 0
lbl_0808780c: .4byte 0x03000c72
lbl_08087810:
    ldr r5, lbl_08087830 @ =0x030013ae
    ldrh r3, [r5]
    cmp r3, #0xf
    bhi lbl_08087834
    ldr r1, [r7]
    ldrh r2, [r1, #4]
    adds r0, r2, #1
    strh r0, [r1, #4]
    movs r0, #1
    ands r0, r2
    cmp r0, #0
    beq lbl_08087844
    adds r0, r3, #1
    strh r0, [r5]
    b lbl_08087844
    .align 2, 0
lbl_08087830: .4byte 0x030013ae
lbl_08087834:
    movs r3, #0
    ldrsh r0, [r4, r3]
    cmp r0, #3
    bne lbl_08087840
    adds r6, #1
    b lbl_08087844
lbl_08087840:
    movs r0, #4
lbl_08087842:
    strh r0, [r4]
lbl_08087844:
    adds r0, r6, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start vblank_during_chozodia_escape
vblank_during_chozodia_escape: @ 0x0808784c
    push {r4, lr}
    ldr r1, lbl_080878e0 @ =0x040000d4
    ldr r0, lbl_080878e4 @ =0x03000e7c
    str r0, [r1]
    movs r0, #0xe0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_080878e8 @ =0x84000100
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xd4
    ldr r0, lbl_080878ec @ =0x08754bc4
    ldr r4, [r0]
    movs r2, #0xdc
    lsls r2, r2, #2
    adds r0, r4, r2
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #0x50
    adds r2, #2
    adds r0, r4, r2
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r2, lbl_080878f0 @ =0x04000052
    ldr r0, lbl_080878f4 @ =0x030013b2
    ldrh r0, [r0]
    lsls r0, r0, #8
    ldr r1, lbl_080878f8 @ =0x030013b0
    ldrh r1, [r1]
    orrs r0, r1
    strh r0, [r2]
    ldr r1, lbl_080878fc @ =0x04000054
    ldr r0, lbl_08087900 @ =0x030013ae
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r3, lbl_08087904 @ =0x04000010
    ldr r0, lbl_08087908 @ =0x030013b4
    ldrh r2, [r0]
    ldr r1, lbl_0808790c @ =0x000001ff
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    ldr r2, lbl_08087910 @ =0x04000012
    ldr r0, lbl_08087914 @ =0x030013b6
    ldrb r0, [r0]
    strh r0, [r2]
    adds r3, #4
    ldr r0, lbl_08087918 @ =0x030013b8
    ldrh r2, [r0]
    adds r0, r1, #0
    ands r0, r2
    strh r0, [r3]
    ldr r2, lbl_0808791c @ =0x04000016
    ldr r0, lbl_08087920 @ =0x030013ba
    ldrb r0, [r0]
    strh r0, [r2]
    adds r2, #2
    ldr r0, lbl_08087924 @ =0x030013bc
    ldrh r0, [r0]
    ands r1, r0
    strh r1, [r2]
    ldr r1, lbl_08087928 @ =0x0400001a
    ldr r0, lbl_0808792c @ =0x030013be
    ldrb r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_08087930 @ =0x0000036e
    adds r0, r4, r1
    ldrb r0, [r0]
    ldr r2, lbl_08087934 @ =0x0000036f
    adds r4, r4, r2
    strb r0, [r4]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_080878e0: .4byte 0x040000d4
lbl_080878e4: .4byte 0x03000e7c
lbl_080878e8: .4byte 0x84000100
lbl_080878ec: .4byte 0x08754bc4
lbl_080878f0: .4byte 0x04000052
lbl_080878f4: .4byte 0x030013b2
lbl_080878f8: .4byte 0x030013b0
lbl_080878fc: .4byte 0x04000054
lbl_08087900: .4byte 0x030013ae
lbl_08087904: .4byte 0x04000010
lbl_08087908: .4byte 0x030013b4
lbl_0808790c: .4byte 0x000001ff
lbl_08087910: .4byte 0x04000012
lbl_08087914: .4byte 0x030013b6
lbl_08087918: .4byte 0x030013b8
lbl_0808791c: .4byte 0x04000016
lbl_08087920: .4byte 0x030013ba
lbl_08087924: .4byte 0x030013bc
lbl_08087928: .4byte 0x0400001a
lbl_0808792c: .4byte 0x030013be
lbl_08087930: .4byte 0x0000036e
lbl_08087934: .4byte 0x0000036f

    thumb_func_start sub_08087938
sub_08087938: @ 0x08087938
    push {r4, lr}
    ldr r0, lbl_08087964 @ =0x04000006
    ldrh r3, [r0]
    ldr r4, lbl_08087968 @ =0x04000040
    ldr r0, lbl_0808796c @ =0x08754bc4
    ldr r2, [r0]
    lsls r3, r3, #1
    ldr r1, lbl_08087970 @ =0x0000036f
    adds r0, r2, r1
    ldrb r1, [r0]
    lsls r0, r1, #2
    adds r0, r0, r1
    lsls r0, r0, #6
    adds r3, r3, r0
    adds r2, #0xec
    adds r2, r2, r3
    ldrh r0, [r2]
    strh r0, [r4]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08087964: .4byte 0x04000006
lbl_08087968: .4byte 0x04000040
lbl_0808796c: .4byte 0x08754bc4
lbl_08087970: .4byte 0x0000036f

    thumb_func_start sub_08087974
sub_08087974: @ 0x08087974
    push {lr}
    ldr r2, lbl_08087998 @ =0x040000d4
    ldr r0, lbl_0808799c @ =sub_08087938
    str r0, [r2]
    ldr r0, lbl_080879a0 @ =0x08754bc4
    ldr r0, [r0]
    adds r1, r0, #0
    adds r1, #0x6c
    str r1, [r2, #4]
    ldr r1, lbl_080879a4 @ =0x80000020
    str r1, [r2, #8]
    ldr r1, [r2, #8]
    adds r0, #0x6d
    bl CallbackSetHBlank
    pop {r0}
    bx r0
    .align 2, 0
lbl_08087998: .4byte 0x040000d4
lbl_0808799c: .4byte sub_08087938
lbl_080879a0: .4byte 0x08754bc4
lbl_080879a4: .4byte 0x80000020

    thumb_func_start sub_080879a8
sub_080879a8: @ 0x080879a8
    ldr r1, lbl_080879f4 @ =0x04000040
    movs r0, #0
    strh r0, [r1]
    adds r1, #4
    movs r0, #0xa0
    strh r0, [r1]
    adds r1, #4
    movs r0, #0x3f
    strh r0, [r1]
    adds r1, #2
    movs r0, #0x1f
    strh r0, [r1]
    ldr r0, lbl_080879f8 @ =0x08754bc4
    ldr r2, [r0]
    movs r0, #0xdc
    lsls r0, r0, #2
    adds r2, r2, r0
    ldrh r0, [r2]
    ldr r3, lbl_080879fc @ =0x00002020
    adds r1, r3, #0
    orrs r0, r1
    movs r1, #0
    strh r0, [r2]
    ldr r3, lbl_08087a00 @ =0x04000208
    strh r1, [r3]
    ldr r2, lbl_08087a04 @ =0x04000004
    ldrh r0, [r2]
    movs r1, #0x10
    orrs r0, r1
    strh r0, [r2]
    ldr r2, lbl_08087a08 @ =0x04000200
    ldrh r0, [r2]
    movs r1, #2
    orrs r0, r1
    strh r0, [r2]
    movs r0, #1
    strh r0, [r3]
    bx lr
    .align 2, 0
lbl_080879f4: .4byte 0x04000040
lbl_080879f8: .4byte 0x08754bc4
lbl_080879fc: .4byte 0x00002020
lbl_08087a00: .4byte 0x04000208
lbl_08087a04: .4byte 0x04000004
lbl_08087a08: .4byte 0x04000200

    thumb_func_start sub_08087a0c
sub_08087a0c: @ 0x08087a0c
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    ldr r2, lbl_08087a38 @ =0x08754bc4
    ldr r0, [r2]
    movs r1, #0xdb
    lsls r1, r1, #2
    adds r0, r0, r1
    ldrh r4, [r0]
    adds r5, r4, #0
    ldr r1, lbl_08087a3c @ =0x0835f570
    lsls r0, r4, #2
    adds r0, r0, r1
    ldr r7, [r0]
    mov sb, r2
    cmp r4, #3
    bhi lbl_08087a40
    movs r3, #0x4c
    movs r0, #0x54
    b lbl_08087a54
    .align 2, 0
lbl_08087a38: .4byte 0x08754bc4
lbl_08087a3c: .4byte 0x0835f570
lbl_08087a40:
    cmp r4, #0x50
    bhi lbl_08087a5a
    movs r0, #0x50
    subs r0, r0, r4
    lsls r0, r0, #0x10
    asrs r3, r0, #0x10
    adds r0, r4, #0
    adds r0, #0x50
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
lbl_08087a54:
    mov r8, r0
    movs r4, #0
    b lbl_08087a68
lbl_08087a5a:
    movs r3, #0
    movs r1, #0xa0
    mov r8, r1
    adds r0, r5, #0
    subs r0, #0x50
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
lbl_08087a68:
    mov r1, sb
    ldr r0, [r1]
    ldr r1, lbl_08087ae8 @ =0x0000036e
    adds r0, r0, r1
    ldrb r1, [r0]
    adds r1, #1
    movs r2, #1
    ands r1, r2
    strb r1, [r0]
    adds r6, r3, #0
    adds r0, r4, #0
    cmp r6, r8
    bge lbl_08087ada
    lsls r0, r0, #2
    adds r7, r0, r7
lbl_08087a86:
    movs r0, #0
    ldrsh r1, [r7, r0]
    lsls r0, r1, #1
    adds r0, r0, r1
    lsls r0, r0, #2
    movs r1, #0xa
    bl __divsi3
    movs r1, #0x78
    subs r1, r1, r0
    lsls r1, r1, #0x10
    asrs r5, r1, #0x10
    adds r0, #0x78
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    cmp r5, #0
    bge lbl_08087aaa
    movs r5, #0
lbl_08087aaa:
    cmp r4, #0xf0
    ble lbl_08087ab0
    movs r4, #0xf0
lbl_08087ab0:
    mov r1, sb
    ldr r2, [r1]
    lsls r3, r6, #1
    ldr r1, lbl_08087ae8 @ =0x0000036e
    adds r0, r2, r1
    ldrb r1, [r0]
    lsls r0, r1, #2
    adds r0, r0, r1
    lsls r0, r0, #6
    adds r3, r3, r0
    adds r2, #0xec
    adds r2, r2, r3
    lsls r0, r5, #8
    orrs r4, r0
    strh r4, [r2]
    adds r0, r6, #1
    lsls r0, r0, #0x10
    asrs r6, r0, #0x10
    adds r7, #4
    cmp r6, r8
    blt lbl_08087a86
lbl_08087ada:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08087ae8: .4byte 0x0000036e

    thumb_func_start GetPercentAndEndingNumber
GetPercentAndEndingNumber: @ 0x08087aec
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0xc
    ldr r0, lbl_08087bac @ =0x0300002c
    ldrb r6, [r0]
    ldr r5, lbl_08087bb0 @ =0x03001530
    ldrh r0, [r5]
    subs r0, #0x63
    ldr r1, lbl_08087bb4 @ =0x083459c4
    lsls r4, r6, #2
    adds r4, r4, r1
    ldrb r1, [r4]
    bl __divsi3
    mov sl, r0
    ldrh r0, [r5, #2]
    ldrb r1, [r4, #1]
    bl __divsi3
    mov sb, r0
    ldrb r0, [r5, #4]
    ldrb r1, [r4, #2]
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r8, r0
    ldrb r0, [r5, #5]
    ldrb r1, [r4, #3]
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    movs r4, #0
    movs r2, #1
    movs r1, #0
    ldrb r3, [r5, #0xe]
lbl_08087b3c:
    adds r0, r3, #0
    ands r0, r2
    cmp r0, #0
    beq lbl_08087b46
    adds r4, #1
lbl_08087b46:
    lsls r2, r2, #1
    adds r0, r1, #1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #7
    bls lbl_08087b3c
    movs r2, #1
    movs r1, #0
    mov r0, sl
    lsls r0, r0, #0x18
    str r0, [sp, #8]
    mov r3, sb
    lsls r3, r3, #0x10
    str r3, [sp, #4]
    mov r0, r8
    lsls r0, r0, #0xc
    str r0, [sp]
    lsls r3, r7, #8
    mov ip, r3
    ldr r0, lbl_08087bb0 @ =0x03001530
    ldrb r3, [r0, #0xc]
lbl_08087b70:
    adds r0, r3, #0
    ands r0, r2
    cmp r0, #0
    beq lbl_08087b7a
    adds r4, #1
lbl_08087b7a:
    lsls r2, r2, #1
    adds r0, r1, #1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #4
    bls lbl_08087b70
    ldrb r1, [r5, #0xc]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_08087b92
    adds r4, #1
lbl_08087b92:
    mov r1, sl
    adds r0, r4, r1
    add r0, sb
    add r0, r8
    adds r0, r0, r7
    movs r2, #0
    cmp r6, #0
    beq lbl_08087be6
    cmp r0, #0xf
    bhi lbl_08087bb8
    adds r2, r6, #5
    b lbl_08087be6
    .align 2, 0
lbl_08087bac: .4byte 0x0300002c
lbl_08087bb0: .4byte 0x03001530
lbl_08087bb4: .4byte 0x083459c4
lbl_08087bb8:
    cmp r0, #0x63
    bls lbl_08087bd0
    ldr r0, lbl_08087bcc @ =0x03000150
    ldrb r0, [r0]
    adds r2, r6, #3
    cmp r0, #1
    bls lbl_08087be6
    movs r2, #3
    b lbl_08087be6
    .align 2, 0
lbl_08087bcc: .4byte 0x03000150
lbl_08087bd0:
    ldr r0, lbl_08087bdc @ =0x03000150
    ldrb r0, [r0]
    cmp r0, #1
    bhi lbl_08087be0
    movs r2, #2
    b lbl_08087be6
    .align 2, 0
lbl_08087bdc: .4byte 0x03000150
lbl_08087be0:
    cmp r0, #3
    bhi lbl_08087be6
    movs r2, #1
lbl_08087be6:
    ldr r3, [sp, #8]
    ldr r1, [sp, #4]
    adds r0, r3, r1
    ldr r3, [sp]
    adds r0, r0, r3
    add r0, ip
    lsls r1, r4, #4
    adds r0, r0, r1
    adds r0, r0, r2
    add sp, #0xc
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1

    thumb_func_start chozodia_escape_process_oam
chozodia_escape_process_oam: @ 0x08087c08
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    ldr r5, lbl_08087c70 @ =0x03000e7c
    movs r0, #0
    mov sl, r0
    movs r6, #0
    movs r7, #0
lbl_08087c1e:
    ldr r1, lbl_08087c74 @ =0x08754bc4
    ldr r2, [r1]
    adds r0, r2, #6
    adds r0, r0, r7
    ldrb r0, [r0]
    adds r3, r7, #1
    mov r8, r3
    cmp r0, #0
    beq lbl_08087cca
    mov ip, sl
    lsls r1, r7, #2
    adds r0, r2, #0
    adds r0, #0xc
    adds r0, r0, r1
    ldr r4, [r0]
    ldrh r1, [r4]
    adds r4, #2
    movs r0, #0xff
    ands r1, r0
    mov r3, ip
    adds r0, r3, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov sl, r0
    lsls r1, r7, #1
    adds r0, r2, #0
    adds r0, #0x2a
    adds r0, r0, r1
    ldrh r0, [r0]
    str r0, [sp]
    adds r0, r2, #0
    adds r0, #0x34
    adds r0, r0, r1
    ldrh r0, [r0]
    mov sb, r0
    cmp r6, sl
    bhs lbl_08087cca
    cmp r7, #4
    bne lbl_08087c78
    adds r0, r2, #0
    b lbl_08087cc0
    .align 2, 0
lbl_08087c70: .4byte 0x03000e7c
lbl_08087c74: .4byte 0x08754bc4
lbl_08087c78:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    lsls r3, r6, #3
    ldr r0, lbl_08087ce8 @ =0x03000e7c
    adds r3, r3, r0
    mov r2, sb
    adds r0, r1, r2
    strb r0, [r3]
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    ldr r0, [sp]
    adds r1, r1, r0
    ldr r0, lbl_08087cec @ =0x000001ff
    ands r1, r0
    ldrh r2, [r3, #2]
    ldr r0, lbl_08087cf0 @ =0xfffffe00
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, sl
    bhs lbl_08087cca
    cmp r7, #4
    bne lbl_08087c78
    ldr r1, lbl_08087cf4 @ =0x08754bc4
    ldr r0, [r1]
lbl_08087cc0:
    adds r0, #0x24
    ldrb r0, [r0]
    add r0, ip
    cmp r6, r0
    blt lbl_08087c78
lbl_08087cca:
    mov r2, r8
    lsls r0, r2, #0x10
    lsrs r7, r0, #0x10
    cmp r7, #4
    bls lbl_08087c1e
    ldr r3, lbl_08087cf8 @ =0x03001382
    strb r6, [r3]
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08087ce8: .4byte 0x03000e7c
lbl_08087cec: .4byte 0x000001ff
lbl_08087cf0: .4byte 0xfffffe00
lbl_08087cf4: .4byte 0x08754bc4
lbl_08087cf8: .4byte 0x03001382

    thumb_func_start chozodia_escape_process_oam2
chozodia_escape_process_oam2: @ 0x08087cfc
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #0x10
    ldr r5, lbl_08087e38 @ =0x03000e7c
    movs r0, #0
    mov r8, r0
    movs r6, #0
    ldr r0, lbl_08087e3c @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #6]
    cmp r0, #0
    beq lbl_08087d8e
    ldr r4, [r1, #0xc]
    ldrh r2, [r4]
    adds r4, #2
    movs r0, #0xff
    ands r2, r0
    mov r8, r2
    ldrh r7, [r1, #0x2a]
    mov ip, r7
    ldrh r7, [r1, #0x34]
    cmp r6, r8
    bhs lbl_08087d7c
    mov r0, ip
    lsls r0, r0, #0x10
    mov sb, r0
    lsls r7, r7, #0x10
lbl_08087d38:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    ldr r0, lbl_08087e3c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x62
    movs r1, #0
    ldrsh r0, [r0, r1]
    str r0, [sp]
    movs r0, #1
    str r0, [sp, #4]
    movs r0, #0
    str r0, [sp, #8]
    adds r0, r6, #0
    mov r2, sb
    asrs r1, r2, #0x10
    asrs r2, r7, #0x10
    movs r3, #0
    bl sub_0807fd64
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, r8
    blo lbl_08087d38
lbl_08087d7c:
    ldr r0, lbl_08087e3c @ =0x08754bc4
    ldr r0, [r0]
    adds r0, #0x62
    movs r7, #0
    ldrsh r1, [r0, r7]
    movs r0, #0
    movs r2, #0
    bl sub_0807ff58
lbl_08087d8e:
    movs r3, #1
lbl_08087d90:
    ldr r0, lbl_08087e3c @ =0x08754bc4
    ldr r2, [r0]
    adds r0, r2, #6
    adds r0, r0, r3
    ldrb r0, [r0]
    adds r1, r3, #1
    str r1, [sp, #0xc]
    cmp r0, #0
    beq lbl_08087e1a
    lsls r1, r3, #2
    adds r0, r2, #0
    adds r0, #0xc
    adds r0, r0, r1
    ldr r4, [r0]
    ldrh r1, [r4]
    adds r4, #2
    movs r0, #0xff
    ands r1, r0
    mov r7, r8
    adds r0, r7, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    lsls r1, r3, #1
    adds r0, r2, #0
    adds r0, #0x2a
    adds r0, r0, r1
    ldrh r0, [r0]
    mov ip, r0
    adds r0, r2, #0
    adds r0, #0x34
    adds r0, r0, r1
    ldrh r7, [r0]
    cmp r6, r8
    bhs lbl_08087e1a
    ldr r0, lbl_08087e40 @ =0x000001ff
    mov sb, r0
    ldr r1, lbl_08087e44 @ =0xfffffe00
    mov sl, r1
lbl_08087dde:
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    lsls r3, r6, #3
    ldr r2, lbl_08087e38 @ =0x03000e7c
    adds r3, r3, r2
    adds r0, r1, r7
    strb r0, [r3]
    ldrh r1, [r4]
    adds r4, #2
    strh r1, [r5]
    adds r5, #2
    add r1, ip
    mov r0, sb
    ands r1, r0
    ldrh r2, [r3, #2]
    mov r0, sl
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #2]
    ldrh r0, [r4]
    strh r0, [r5]
    adds r4, #2
    adds r5, #4
    adds r0, r6, #1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, r8
    blo lbl_08087dde
lbl_08087e1a:
    ldr r1, [sp, #0xc]
    lsls r0, r1, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #2
    bls lbl_08087d90
    ldr r2, lbl_08087e48 @ =0x03001382
    strb r6, [r2]
    add sp, #0x10
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08087e38: .4byte 0x03000e7c
lbl_08087e3c: .4byte 0x08754bc4
lbl_08087e40: .4byte 0x000001ff
lbl_08087e44: .4byte 0xfffffe00
lbl_08087e48: .4byte 0x03001382

    thumb_func_start chozodia_escape_init
chozodia_escape_init: @ 0x08087e4c
    push {r4, r5, r6, lr}
    sub sp, #4
    ldr r4, lbl_0808802c @ =0x04000208
    movs r5, #0
    strh r5, [r4]
    ldr r2, lbl_08088030 @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_08088034 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_08088038 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_0808803c @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_08088040 @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r6, #1
    strh r6, [r4]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r5, [r0]
    strh r5, [r4]
    ldr r0, lbl_08088044 @ =vblank_during_chozodia_escape
    bl CallbackSetVBlank
    strh r6, [r4]
    bl ClearGFXRAM
    ldr r0, lbl_08088048 @ =0x083ab6c0
    ldr r1, lbl_0808804c @ =0x06010000
    bl LZ77UncompVRAM
    ldr r0, lbl_08088050 @ =0x083a4878
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    ldr r0, lbl_08088054 @ =0x083a97a4
    ldr r1, lbl_08088058 @ =0x06008000
    bl LZ77UncompVRAM
    ldr r0, lbl_0808805c @ =0x083a9f18
    ldr r1, lbl_08088060 @ =0x0600c800
    bl LZ77UncompVRAM
    ldr r0, lbl_08088064 @ =0x083b557c
    ldr r1, lbl_08088068 @ =0x0600a000
    bl LZ77UncompVRAM
    ldr r0, lbl_0808806c @ =0x083b5168
    ldr r1, lbl_08088070 @ =0x0600a800
    bl LZ77UncompVRAM
    ldr r0, lbl_08088074 @ =0x083b4768
    ldr r1, lbl_08088078 @ =0x0600b000
    bl LZ77UncompVRAM
    ldr r2, lbl_0808807c @ =0x040000d4
    ldr r0, lbl_08088080 @ =0x083a0af4
    str r0, [r2]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r2, #4]
    ldr r0, lbl_08088084 @ =0x800000d0
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    ldr r0, lbl_08088088 @ =0x083a0c94
    str r0, [r2]
    ldr r0, lbl_0808808c @ =0x05000200
    str r0, [r2, #4]
    ldr r0, lbl_08088090 @ =0x80000050
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    ldr r1, lbl_08088094 @ =0x04000008
    ldr r3, lbl_08088098 @ =0x00001408
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_0808809c @ =0x00001509
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_080880a0 @ =0x00009602
    adds r0, r3, #0
    strh r0, [r1]
    ldr r0, lbl_080880a4 @ =0x030013b4
    strh r5, [r0]
    ldr r0, lbl_080880a8 @ =0x030013b6
    movs r1, #0x60
    strh r1, [r0]
    ldr r0, lbl_080880ac @ =0x030013b8
    strh r5, [r0]
    ldr r0, lbl_080880b0 @ =0x030013ba
    strh r1, [r0]
    ldr r0, lbl_080880b4 @ =0x030013bc
    strh r5, [r0]
    ldr r0, lbl_080880b8 @ =0x030013be
    movs r3, #0xa8
    strh r3, [r0]
    ldr r0, lbl_080880bc @ =0x030013c0
    strh r5, [r0]
    ldr r0, lbl_080880c0 @ =0x030013c2
    strh r5, [r0]
    ldr r0, lbl_080880c4 @ =0x04000010
    strh r5, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r1, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r3, [r0]
    adds r0, #2
    strh r5, [r0]
    adds r0, #2
    strh r5, [r0]
    movs r0, #0
    str r0, [sp]
    mov r0, sp
    str r0, [r2]
    ldr r0, lbl_080880c8 @ =0x030016c4
    str r0, [r2, #4]
    ldr r0, lbl_080880cc @ =0x8500018a
    str r0, [r2, #8]
    ldr r0, [r2, #8]
    ldr r0, lbl_080880d0 @ =0x03001382
    strb r5, [r0]
    ldr r4, lbl_080880d4 @ =0x08754bc4
    ldr r1, [r4]
    ldr r0, lbl_080880d8 @ =0x085c9bb6
    str r0, [r1, #0xc]
    movs r3, #0x78
    strh r3, [r1, #0x2a]
    movs r0, #0x63
    strh r0, [r1, #0x34]
    adds r2, r1, #0
    adds r2, #0x4e
    movs r0, #8
    strh r0, [r2]
    adds r2, #0x14
    movs r0, #0x20
    strh r0, [r2]
    ldrb r0, [r1, #7]
    adds r0, #1
    strb r0, [r1, #7]
    ldr r1, [r4]
    ldr r0, lbl_080880dc @ =0x085c9bd8
    str r0, [r1, #0x10]
    strh r3, [r1, #0x2c]
    movs r2, #0x54
    strh r2, [r1, #0x36]
    ldrb r0, [r1, #8]
    adds r0, #1
    strb r0, [r1, #8]
    ldr r0, [r4]
    ldr r1, lbl_080880e0 @ =0x085c9b78
    str r1, [r0, #0x14]
    strh r3, [r0, #0x2e]
    strh r2, [r0, #0x38]
    bl chozodia_escape_process_oam2
    bl ResetFreeOAM
    ldr r0, lbl_080880e4 @ =0x085c9958
    ldr r1, [r4]
    movs r2, #0xdd
    lsls r2, r2, #2
    adds r1, r1, r2
    movs r2, #0
    bl sub_0805b624
    ldr r2, lbl_080880e8 @ =0x03001604
    strb r5, [r2]
    ldr r3, lbl_080880ec @ =0x03000014
    ldrh r0, [r3]
    cmp r0, #0
    bne lbl_08087fbc
    movs r0, #0x80
    strb r0, [r2]
lbl_08087fbc:
    ldr r0, lbl_080880f0 @ =0x0300002c
    ldrb r1, [r0]
    adds r6, r0, #0
    cmp r1, #2
    bne lbl_08087fd8
    ldrb r1, [r3, #4]
    movs r0, #4
    ands r0, r1
    cmp r0, #0
    bne lbl_08087fd8
    ldrb r0, [r2]
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2]
lbl_08087fd8:
    ldr r5, lbl_080880ec @ =0x03000014
    movs r4, #1
    adds r0, r4, #0
    ldrb r6, [r6]
    lsls r0, r6
    ldrb r1, [r5, #4]
    orrs r0, r1
    strb r0, [r5, #4]
    bl sub_0807f3fc
    bl GetPercentAndEndingNumber
    movs r1, #0xf
    ands r1, r0
    lsls r4, r1
    ldrh r0, [r5]
    orrs r4, r0
    strh r4, [r5]
    ldr r0, lbl_080880f4 @ =0x0300002e
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0808801a
    ldr r0, lbl_080880f8 @ =0x03001694
    ldrb r0, [r0, #0x14]
    cmp r0, #0x64
    bls lbl_08088016
    ldr r0, lbl_080880e8 @ =0x03001604
    ldrb r1, [r0]
    movs r2, #0x20
    orrs r1, r2
    strb r1, [r0]
lbl_08088016:
    bl check_set_new_time_attack_record
lbl_0808801a:
    bl sub_08073300
    ldr r0, lbl_080880fc @ =0x03000028
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08088104
    ldr r1, lbl_08088100 @ =0x03000043
    movs r0, #0
    b lbl_08088108
    .align 2, 0
lbl_0808802c: .4byte 0x04000208
lbl_08088030: .4byte 0x04000004
lbl_08088034: .4byte 0x0000ffef
lbl_08088038: .4byte 0x04000200
lbl_0808803c: .4byte 0x0000fffd
lbl_08088040: .4byte 0x04000202
lbl_08088044: .4byte vblank_during_chozodia_escape
lbl_08088048: .4byte 0x083ab6c0
lbl_0808804c: .4byte 0x06010000
lbl_08088050: .4byte 0x083a4878
lbl_08088054: .4byte 0x083a97a4
lbl_08088058: .4byte 0x06008000
lbl_0808805c: .4byte 0x083a9f18
lbl_08088060: .4byte 0x0600c800
lbl_08088064: .4byte 0x083b557c
lbl_08088068: .4byte 0x0600a000
lbl_0808806c: .4byte 0x083b5168
lbl_08088070: .4byte 0x0600a800
lbl_08088074: .4byte 0x083b4768
lbl_08088078: .4byte 0x0600b000
lbl_0808807c: .4byte 0x040000d4
lbl_08088080: .4byte 0x083a0af4
lbl_08088084: .4byte 0x800000d0
lbl_08088088: .4byte 0x083a0c94
lbl_0808808c: .4byte 0x05000200
lbl_08088090: .4byte 0x80000050
lbl_08088094: .4byte 0x04000008
lbl_08088098: .4byte 0x00001408
lbl_0808809c: .4byte 0x00001509
lbl_080880a0: .4byte 0x00009602
lbl_080880a4: .4byte 0x030013b4
lbl_080880a8: .4byte 0x030013b6
lbl_080880ac: .4byte 0x030013b8
lbl_080880b0: .4byte 0x030013ba
lbl_080880b4: .4byte 0x030013bc
lbl_080880b8: .4byte 0x030013be
lbl_080880bc: .4byte 0x030013c0
lbl_080880c0: .4byte 0x030013c2
lbl_080880c4: .4byte 0x04000010
lbl_080880c8: .4byte 0x030016c4
lbl_080880cc: .4byte 0x8500018a
lbl_080880d0: .4byte 0x03001382
lbl_080880d4: .4byte 0x08754bc4
lbl_080880d8: .4byte 0x085c9bb6
lbl_080880dc: .4byte 0x085c9bd8
lbl_080880e0: .4byte 0x085c9b78
lbl_080880e4: .4byte 0x085c9958
lbl_080880e8: .4byte 0x03001604
lbl_080880ec: .4byte 0x03000014
lbl_080880f0: .4byte 0x0300002c
lbl_080880f4: .4byte 0x0300002e
lbl_080880f8: .4byte 0x03001694
lbl_080880fc: .4byte 0x03000028
lbl_08088100: .4byte 0x03000043
lbl_08088104:
    ldr r1, lbl_08088140 @ =0x03000043
    movs r0, #1
lbl_08088108:
    strb r0, [r1]
    ldr r0, lbl_08088144 @ =0x08754bc4
    ldr r1, [r0]
    movs r3, #0xdc
    lsls r3, r3, #2
    adds r2, r1, r3
    movs r3, #0
    movs r0, #0xb8
    lsls r0, r0, #5
    strh r0, [r2]
    ldr r0, lbl_08088148 @ =0x00000372
    adds r1, r1, r0
    movs r0, #0xff
    strh r0, [r1]
    ldr r0, lbl_0808814c @ =0x030013b0
    movs r1, #0x10
    strh r1, [r0]
    ldr r0, lbl_08088150 @ =0x030013b2
    strh r3, [r0]
    ldr r0, lbl_08088154 @ =0x030013ae
    strh r1, [r0]
    bl vblank_during_chozodia_escape
    add sp, #4
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08088140: .4byte 0x03000043
lbl_08088144: .4byte 0x08754bc4
lbl_08088148: .4byte 0x00000372
lbl_0808814c: .4byte 0x030013b0
lbl_08088150: .4byte 0x030013b2
lbl_08088154: .4byte 0x030013ae

    thumb_func_start chozodia_escape_escape_ship_leaving
chozodia_escape_escape_ship_leaving: @ 0x08088158
    push {r4, r5, r6, lr}
    movs r6, #0
    ldr r3, lbl_08088178 @ =0x08754bc4
    ldr r2, [r3]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0xa0
    beq lbl_08088198
    cmp r1, #0xa0
    bgt lbl_0808817c
    cmp r1, #0
    beq lbl_0808818c
    b lbl_080881d6
    .align 2, 0
lbl_08088178: .4byte 0x08754bc4
lbl_0808817c:
    movs r0, #0x93
    lsls r0, r0, #1
    cmp r1, r0
    beq lbl_080881ac
    adds r0, #0x12
    cmp r1, r0
    beq lbl_080881d4
    b lbl_080881d6
lbl_0808818c:
    ldr r0, lbl_08088194 @ =0x00000255
    bl SoundPlay
    b lbl_080881d6
    .align 2, 0
lbl_08088194: .4byte 0x00000255
lbl_08088198:
    ldrb r0, [r2, #6]
    adds r0, #1
    strb r0, [r2, #6]
    ldr r0, lbl_080881a8 @ =0x00000256
    bl SoundPlay
    b lbl_080881d6
    .align 2, 0
lbl_080881a8: .4byte 0x00000256
lbl_080881ac:
    movs r0, #2
    strb r0, [r2, #6]
    ldr r1, [r3]
    ldr r0, lbl_080881cc @ =0x085c9bc4
    str r0, [r1, #0xc]
    movs r0, #0xb8
    strh r0, [r1, #0x34]
    adds r2, r1, #0
    adds r2, #0x4e
    ldr r0, lbl_080881d0 @ =0x0000fff0
    strh r0, [r2]
    adds r1, #0x62
    movs r0, #0x80
    lsls r0, r0, #1
    strh r0, [r1]
    b lbl_080881d6
    .align 2, 0
lbl_080881cc: .4byte 0x085c9bc4
lbl_080881d0: .4byte 0x0000fff0
lbl_080881d4:
    movs r6, #1
lbl_080881d6:
    ldr r0, lbl_08088200 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r3, [r2, #6]
    adds r5, r0, #0
    cmp r3, #1
    bne lbl_0808822a
    adds r1, r2, #0
    adds r1, #0x62
    ldrh r0, [r1]
    adds r0, #5
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bls lbl_08088204
    ldrh r1, [r2, #4]
    movs r0, #7
    b lbl_0808820c
    .align 2, 0
lbl_08088200: .4byte 0x08754bc4
lbl_08088204:
    cmp r1, #0x38
    bls lbl_0808821c
    ldrh r1, [r2, #4]
    movs r0, #3
lbl_0808820c:
    ands r0, r1
    cmp r0, #0
    bne lbl_0808821c
    adds r1, r2, #0
    adds r1, #0x4e
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
lbl_0808821c:
    ldr r1, [r5]
    ldrh r0, [r1, #0x34]
    cmp r0, #0xb0
    bls lbl_08088240
    movs r0, #0
    strb r0, [r1, #6]
    b lbl_08088240
lbl_0808822a:
    cmp r3, #2
    bne lbl_08088240
    adds r1, r2, #0
    adds r1, #0x62
    ldrh r0, [r1]
    adds r0, #0x10
    strh r0, [r1]
    subs r1, #0x14
    ldrh r0, [r1]
    subs r0, #8
    strh r0, [r1]
lbl_08088240:
    ldr r1, [r5]
    ldrb r0, [r1, #6]
    cmp r0, #0
    beq lbl_0808826a
    adds r0, r1, #0
    adds r0, #0x4e
    movs r2, #0
    ldrsh r3, [r0, r2]
    adds r2, r1, #0
    adds r2, #0x62
    ldrh r0, [r2]
    movs r1, #0x80
    lsls r1, r1, #2
    cmp r0, r1
    bls lbl_08088260
    strh r1, [r2]
lbl_08088260:
    ldr r1, [r5]
    asrs r0, r3, #3
    ldrh r2, [r1, #0x34]
    adds r0, r0, r2
    strh r0, [r1, #0x34]
lbl_0808826a:
    ldr r2, [r5]
    ldrb r0, [r2, #7]
    cmp r0, #1
    bne lbl_080882cc
    adds r2, #0x26
    ldrb r1, [r2]
    adds r0, r1, #1
    strb r0, [r2]
    ldr r2, lbl_080882d8 @ =0x085c9ef4
    ldr r0, [r5]
    adds r4, r0, #0
    adds r4, #0x21
    ldrb r3, [r4]
    lsls r0, r3, #3
    adds r0, r0, r2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldrb r0, [r0, #4]
    cmp r1, r0
    blo lbl_080882bc
    adds r0, r3, #1
    movs r1, #0
    strb r0, [r4]
    ldr r0, [r5]
    adds r0, #0x26
    strb r1, [r0]
    ldr r0, [r5]
    adds r3, r0, #0
    adds r3, #0x21
    ldrb r1, [r3]
    lsls r0, r1, #3
    adds r0, r0, r2
    ldrb r0, [r0, #4]
    cmp r0, #0
    bne lbl_080882bc
    subs r0, r1, #1
    strb r0, [r3]
    ldr r1, [r5]
    ldrb r0, [r1, #7]
    adds r0, #1
    strb r0, [r1, #7]
lbl_080882bc:
    ldr r0, [r5]
    adds r1, r0, #0
    adds r1, #0x21
    ldrb r1, [r1]
    lsls r1, r1, #3
    adds r1, r1, r2
    ldr r1, [r1]
    str r1, [r0, #0x10]
lbl_080882cc:
    bl chozodia_escape_process_oam2
    adds r0, r6, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080882d8: .4byte 0x085c9ef4

    thumb_func_start chozodia_escape_mother_ship_heating_up
chozodia_escape_mother_ship_heating_up: @ 0x080882dc
    push {r4, r5, lr}
    movs r5, #0
    ldr r3, lbl_080882fc @ =0x08754bc4
    ldr r2, [r3]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x98
    beq lbl_08088320
    cmp r0, #0x98
    bgt lbl_08088300
    cmp r0, #0
    beq lbl_0808830a
    b lbl_08088378
    .align 2, 0
lbl_080882fc: .4byte 0x08754bc4
lbl_08088300:
    cmp r0, #0xa0
    beq lbl_08088334
    cmp r0, #0xe0
    beq lbl_08088354
    b lbl_08088378
lbl_0808830a:
    movs r0, #1
    strb r0, [r2, #7]
    ldr r1, [r3]
    strb r0, [r1, #8]
    ldr r0, lbl_0808831c @ =0x00000257
    bl SoundPlay
    b lbl_08088378
    .align 2, 0
lbl_0808831c: .4byte 0x00000257
lbl_08088320:
    bl sub_08087974
    bl sub_080879a8
    ldr r1, lbl_08088330 @ =0x030013ae
    movs r0, #8
    strh r0, [r1]
    b lbl_08088378
    .align 2, 0
lbl_08088330: .4byte 0x030013ae
lbl_08088334:
    ldr r0, lbl_0808834c @ =0x00000372
    adds r1, r2, r0
    movs r0, #0xbf
    strh r0, [r1]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    ldr r0, lbl_08088350 @ =0x0000028b
    bl SoundPlay
    b lbl_08088378
    .align 2, 0
lbl_0808834c: .4byte 0x00000372
lbl_08088350: .4byte 0x0000028b
lbl_08088354:
    ldr r3, lbl_0808842c @ =0x04000208
    strh r5, [r3]
    ldr r2, lbl_08088430 @ =0x04000004
    ldrh r1, [r2]
    ldr r0, lbl_08088434 @ =0x0000ffef
    ands r0, r1
    strh r0, [r2]
    ldr r2, lbl_08088438 @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_0808843c @ =0x0000fffd
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_08088440 @ =0x04000202
    movs r0, #2
    strh r0, [r1]
    movs r0, #1
    strh r0, [r3]
    movs r5, #1
lbl_08088378:
    bl sub_08087a0c
    ldr r3, lbl_08088444 @ =0x08754bc4
    ldr r2, [r3]
    ldrb r0, [r2, #1]
    cmp r0, #0
    beq lbl_080883c2
    ldrb r0, [r2, #2]
    adds r1, r0, #1
    strb r1, [r2, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #5
    bls lbl_080883a6
    ldr r1, lbl_08088448 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_080883a0
    adds r0, #1
    strh r0, [r1]
lbl_080883a0:
    ldr r1, [r3]
    movs r0, #0
    strb r0, [r1, #2]
lbl_080883a6:
    ldr r0, lbl_08088444 @ =0x08754bc4
    ldr r0, [r0]
    movs r2, #0xdb
    lsls r2, r2, #2
    adds r1, r0, r2
    ldrh r0, [r1]
    adds r0, #4
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0xa0
    bls lbl_080883c2
    movs r0, #0xa0
    strh r0, [r1]
lbl_080883c2:
    ldr r4, lbl_08088444 @ =0x08754bc4
    ldr r0, [r4]
    ldrh r0, [r0, #4]
    lsls r1, r0, #0x10
    lsrs r0, r1, #0x10
    cmp r0, #0x7e
    bhi lbl_080883fa
    lsrs r2, r1, #0x14
    ldr r0, lbl_0808844c @ =0x085ca0bc
    adds r0, r2, r0
    ldrb r2, [r0]
    lsls r2, r2, #1
    ldr r1, lbl_08088450 @ =0x085c9638
    adds r1, r2, r1
    ldr r0, lbl_08088454 @ =0x085c9738
    adds r2, r2, r0
    ldr r0, lbl_08088458 @ =0x040000d4
    str r1, [r0]
    ldr r1, lbl_0808845c @ =0x05000200
    str r1, [r0, #4]
    ldr r3, lbl_08088460 @ =0x80000010
    str r3, [r0, #8]
    ldr r1, [r0, #8]
    str r2, [r0]
    ldr r1, lbl_08088464 @ =0x05000280
    str r1, [r0, #4]
    str r3, [r0, #8]
    ldr r0, [r0, #8]
lbl_080883fa:
    ldr r1, [r4]
    ldrh r3, [r1, #4]
    adds r0, r3, #0
    cmp r0, #0x80
    bls lbl_08088468
    movs r2, #3
    ands r2, r3
    cmp r2, #1
    bne lbl_08088418
    ldrh r0, [r1, #0x36]
    subs r0, #1
    strh r0, [r1, #0x36]
    ldrh r0, [r1, #0x38]
    subs r0, #1
    strh r0, [r1, #0x38]
lbl_08088418:
    cmp r2, #3
    bne lbl_080884fa
    ldr r0, [r4]
    ldrh r1, [r0, #0x36]
    adds r1, #1
    strh r1, [r0, #0x36]
    ldrh r1, [r0, #0x38]
    adds r1, #1
    strh r1, [r0, #0x38]
    b lbl_080884fa
    .align 2, 0
lbl_0808842c: .4byte 0x04000208
lbl_08088430: .4byte 0x04000004
lbl_08088434: .4byte 0x0000ffef
lbl_08088438: .4byte 0x04000200
lbl_0808843c: .4byte 0x0000fffd
lbl_08088440: .4byte 0x04000202
lbl_08088444: .4byte 0x08754bc4
lbl_08088448: .4byte 0x030013ae
lbl_0808844c: .4byte 0x085ca0bc
lbl_08088450: .4byte 0x085c9638
lbl_08088454: .4byte 0x085c9738
lbl_08088458: .4byte 0x040000d4
lbl_0808845c: .4byte 0x05000200
lbl_08088460: .4byte 0x80000010
lbl_08088464: .4byte 0x05000280
lbl_08088468:
    cmp r0, #0x60
    bls lbl_080884ae
    adds r0, r1, #0
    adds r0, #0x26
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08088482
    ldrh r0, [r1, #0x36]
    subs r0, #1
    strh r0, [r1, #0x36]
    ldrh r0, [r1, #0x38]
    subs r0, #1
    strh r0, [r1, #0x38]
lbl_08088482:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x26
    ldrb r0, [r0]
    cmp r0, #4
    bne lbl_0808849a
    ldrh r0, [r1, #0x36]
    adds r0, #1
    strh r0, [r1, #0x36]
    ldrh r0, [r1, #0x38]
    adds r0, #1
    strh r0, [r1, #0x38]
lbl_0808849a:
    ldr r0, [r4]
    adds r0, #0x26
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #7
    bls lbl_080884fa
    b lbl_080884f2
lbl_080884ae:
    cmp r0, #0x30
    bls lbl_080884fa
    adds r0, r1, #0
    adds r0, #0x26
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_080884c8
    ldrh r0, [r1, #0x36]
    subs r0, #1
    strh r0, [r1, #0x36]
    ldrh r0, [r1, #0x38]
    subs r0, #1
    strh r0, [r1, #0x38]
lbl_080884c8:
    ldr r1, [r4]
    adds r0, r1, #0
    adds r0, #0x26
    ldrb r0, [r0]
    cmp r0, #6
    bne lbl_080884e0
    ldrh r0, [r1, #0x36]
    adds r0, #1
    strh r0, [r1, #0x36]
    ldrh r0, [r1, #0x38]
    adds r0, #1
    strh r0, [r1, #0x38]
lbl_080884e0:
    ldr r0, [r4]
    adds r0, #0x26
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #9
    bls lbl_080884fa
lbl_080884f2:
    ldr r0, [r4]
    adds r0, #0x26
    movs r1, #0
    strb r1, [r0]
lbl_080884fa:
    bl chozodia_escape_process_oam
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start chozodia_escape_mother_ship_blowing_up
chozodia_escape_mother_ship_blowing_up: @ 0x08088508
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    sub sp, #4
    movs r0, #0
    str r0, [sp]
    ldr r4, lbl_08088540 @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0x20
    bne lbl_0808852c
    b lbl_08088674
lbl_0808852c:
    cmp r1, #0x20
    bgt lbl_0808854e
    cmp r1, #1
    beq lbl_0808858c
    cmp r1, #1
    bgt lbl_08088544
    cmp r1, #0
    beq lbl_0808857a
    b lbl_0808870a
    .align 2, 0
lbl_08088540: .4byte 0x08754bc4
lbl_08088544:
    cmp r1, #2
    beq lbl_080885a0
    cmp r1, #3
    beq lbl_080885b4
    b lbl_0808870a
lbl_0808854e:
    cmp r1, #0xb0
    bne lbl_08088554
    b lbl_080886b4
lbl_08088554:
    cmp r1, #0xb0
    bgt lbl_08088566
    cmp r1, #0x40
    bne lbl_0808855e
    b lbl_08088682
lbl_0808855e:
    cmp r1, #0x4c
    bne lbl_08088564
    b lbl_0808869c
lbl_08088564:
    b lbl_0808870a
lbl_08088566:
    movs r0, #0x90
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_08088570
    b lbl_080886f8
lbl_08088570:
    adds r0, #0x10
    cmp r1, r0
    bne lbl_08088578
    b lbl_08088706
lbl_08088578:
    b lbl_0808870a
lbl_0808857a:
    ldr r0, lbl_08088588 @ =0x085ca118
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    b lbl_0808870a
    .align 2, 0
lbl_08088588: .4byte 0x085ca118
lbl_0808858c:
    ldr r0, lbl_08088598 @ =0x0847d014
    ldr r1, lbl_0808859c @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_0808870a
    .align 2, 0
lbl_08088598: .4byte 0x0847d014
lbl_0808859c: .4byte 0x06008000
lbl_080885a0:
    ldr r0, lbl_080885ac @ =0x08480148
    ldr r1, lbl_080885b0 @ =0x06010000
    bl LZ77UncompVRAM
    b lbl_0808870a
    .align 2, 0
lbl_080885ac: .4byte 0x08480148
lbl_080885b0: .4byte 0x06010000
lbl_080885b4:
    ldr r0, lbl_08088638 @ =0x085cf2c4
    ldr r1, lbl_0808863c @ =0x0600e800
    bl LZ77UncompVRAM
    ldr r0, lbl_08088640 @ =0x0847f884
    ldr r1, lbl_08088644 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r1, lbl_08088648 @ =0x040000d4
    ldr r0, lbl_0808864c @ =0x085c9838
    str r0, [r1]
    movs r0, #0xa0
    lsls r0, r0, #0x13
    str r0, [r1, #4]
    ldr r0, lbl_08088650 @ =0x80000070
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_08088654 @ =0x08479520
    str r0, [r1]
    ldr r0, lbl_08088658 @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_0808865c @ =0x80000060
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    subs r1, #0xcc
    ldr r2, lbl_08088660 @ =0x00001e08
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_08088664 @ =0x00001d01
    adds r0, r3, #0
    strh r0, [r1]
    ldr r2, [r4]
    movs r0, #0xdc
    lsls r0, r0, #2
    adds r1, r2, r0
    movs r0, #0x98
    lsls r0, r0, #5
    strh r0, [r1]
    ldr r3, lbl_08088668 @ =0x00000372
    adds r1, r2, r3
    ldr r0, lbl_0808866c @ =0x00000241
    strh r0, [r1]
    ldr r0, lbl_08088670 @ =0x030013ae
    mov r1, sp
    ldrh r1, [r1]
    strh r1, [r0]
    ldrb r0, [r2, #6]
    adds r0, #1
    strb r0, [r2, #6]
    ldr r1, [r4]
    movs r3, #0x78
    strh r3, [r1, #0x2a]
    movs r2, #0x50
    strh r2, [r1, #0x34]
    ldrb r0, [r1, #9]
    adds r0, #1
    strb r0, [r1, #9]
    ldr r0, [r4]
    strh r3, [r0, #0x30]
    strh r2, [r0, #0x3a]
    movs r0, #0xa3
    lsls r0, r0, #2
    bl SoundPlay
    b lbl_0808870a
    .align 2, 0
lbl_08088638: .4byte 0x085cf2c4
lbl_0808863c: .4byte 0x0600e800
lbl_08088640: .4byte 0x0847f884
lbl_08088644: .4byte 0x0600f000
lbl_08088648: .4byte 0x040000d4
lbl_0808864c: .4byte 0x085c9838
lbl_08088650: .4byte 0x80000070
lbl_08088654: .4byte 0x08479520
lbl_08088658: .4byte 0x05000200
lbl_0808865c: .4byte 0x80000060
lbl_08088660: .4byte 0x00001e08
lbl_08088664: .4byte 0x00001d01
lbl_08088668: .4byte 0x00000372
lbl_0808866c: .4byte 0x00000241
lbl_08088670: .4byte 0x030013ae
lbl_08088674:
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    movs r0, #0xf0
    bl FadeMusic
    b lbl_0808870a
lbl_08088682:
    ldrb r0, [r2, #7]
    adds r0, #1
    strb r0, [r2, #7]
    ldr r2, [r4]
    ldr r1, lbl_08088698 @ =0x085ca0d8
    ldrh r0, [r1]
    strh r0, [r2, #0x2c]
    ldrh r0, [r1, #2]
    strh r0, [r2, #0x36]
    b lbl_0808870a
    .align 2, 0
lbl_08088698: .4byte 0x085ca0d8
lbl_0808869c:
    ldrb r0, [r2, #8]
    adds r0, #1
    strb r0, [r2, #8]
    ldr r2, [r4]
    ldr r1, lbl_080886b0 @ =0x085ca0f8
    ldrh r0, [r1]
    strh r0, [r2, #0x2e]
    ldrh r0, [r1, #2]
    strh r0, [r2, #0x38]
    b lbl_0808870a
    .align 2, 0
lbl_080886b0: .4byte 0x085ca0f8
lbl_080886b4:
    movs r3, #0xdc
    lsls r3, r3, #2
    adds r1, r2, r3
    movs r0, #0x90
    lsls r0, r0, #5
    strh r0, [r1]
    ldr r0, lbl_080886e8 @ =0x00000372
    adds r1, r2, r0
    movs r0, #0xff
    strh r0, [r1]
    ldrb r0, [r2, #1]
    adds r0, #1
    strb r0, [r2, #1]
    ldr r1, lbl_080886ec @ =0x030013b0
    movs r0, #0x10
    strh r0, [r1]
    ldr r0, lbl_080886f0 @ =0x030013b2
    mov r1, sp
    ldrh r1, [r1]
    strh r1, [r0]
    ldr r0, lbl_080886f4 @ =0x030013ae
    mov r2, sp
    ldrh r2, [r2]
    strh r2, [r0]
    b lbl_0808870a
    .align 2, 0
lbl_080886e8: .4byte 0x00000372
lbl_080886ec: .4byte 0x030013b0
lbl_080886f0: .4byte 0x030013b2
lbl_080886f4: .4byte 0x030013ae
lbl_080886f8:
    movs r3, #0xdc
    lsls r3, r3, #2
    adds r0, r2, r3
    mov r1, sp
    ldrh r1, [r1]
    strh r1, [r0]
    b lbl_0808870a
lbl_08088706:
    movs r2, #1
    str r2, [sp]
lbl_0808870a:
    ldr r0, lbl_080887c8 @ =0x08754bc4
    ldr r3, [r0]
    ldrb r1, [r3, #1]
    adds r5, r0, #0
    cmp r1, #1
    bne lbl_08088740
    ldrb r0, [r3, #2]
    adds r1, r0, #1
    strb r1, [r3, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    bls lbl_08088740
    ldr r1, lbl_080887cc @ =0x030013b0
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08088730
    subs r0, #1
    strh r0, [r1]
lbl_08088730:
    ldr r2, lbl_080887d0 @ =0x030013b2
    ldrh r1, [r1]
    movs r0, #0x10
    subs r0, r0, r1
    strh r0, [r2]
    ldr r1, [r5]
    movs r0, #0
    strb r0, [r1, #2]
lbl_08088740:
    ldr r2, [r5]
    ldrb r0, [r2, #1]
    cmp r0, #2
    bne lbl_08088768
    ldrb r0, [r2, #2]
    adds r1, r0, #1
    strb r1, [r2, #2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #5
    bls lbl_08088768
    ldr r1, lbl_080887d4 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08088762
    adds r0, #1
    strh r0, [r1]
lbl_08088762:
    ldr r1, [r5]
    movs r0, #0
    strb r0, [r1, #2]
lbl_08088768:
    ldr r2, [r5]
    ldrh r1, [r2, #4]
    movs r0, #3
    ands r0, r1
    adds r3, r0, #0
    cmp r3, #0
    bne lbl_08088784
    ldr r0, lbl_080887d8 @ =0x030013ba
    ldrh r1, [r0]
    subs r1, #1
    strh r1, [r0]
    ldrh r0, [r2, #0x3a]
    adds r0, #1
    strh r0, [r2, #0x3a]
lbl_08088784:
    cmp r3, #2
    bne lbl_08088798
    ldr r1, lbl_080887d8 @ =0x030013ba
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    ldr r1, [r5]
    ldrh r0, [r1, #0x3a]
    subs r0, #1
    strh r0, [r1, #0x3a]
lbl_08088798:
    movs r4, #0
    ldr r3, lbl_080887dc @ =0x085ca0c4
    mov r8, r3
    ldr r0, lbl_080887e0 @ =0x085ca0f8
    mov sl, r0
    ldr r1, lbl_080887e4 @ =0x085ca0d8
    mov sb, r1
lbl_080887a6:
    ldr r1, [r5]
    adds r0, r1, #6
    adds r0, r0, r4
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_080887b4
    b lbl_080888ce
lbl_080887b4:
    cmp r4, #0
    bne lbl_080887e8
    ldrb r0, [r1, #6]
    cmp r0, #1
    bls lbl_080887e8
    mov r2, r8
    ldr r6, [r2, #0x10]
    movs r7, #0
    b lbl_080887f2
    .align 2, 0
lbl_080887c8: .4byte 0x08754bc4
lbl_080887cc: .4byte 0x030013b0
lbl_080887d0: .4byte 0x030013b2
lbl_080887d4: .4byte 0x030013ae
lbl_080887d8: .4byte 0x030013ba
lbl_080887dc: .4byte 0x085ca0c4
lbl_080887e0: .4byte 0x085ca0f8
lbl_080887e4: .4byte 0x085ca0d8
lbl_080887e8:
    lsls r1, r4, #2
    mov r3, r8
    adds r0, r1, r3
    ldr r6, [r0]
    adds r7, r1, #0
lbl_080887f2:
    ldr r2, [r5]
    adds r0, r2, #0
    adds r0, #0x20
    adds r0, r0, r4
    ldrb r0, [r0]
    lsls r0, r0, #3
    adds r3, r6, r0
    adds r2, #0x25
    adds r2, r2, r4
    ldrb r0, [r2]
    adds r1, r0, #1
    strb r1, [r2]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrb r1, [r3, #4]
    cmp r0, r1
    blo lbl_080888c4
    ldr r1, [r5]
    adds r1, #0x20
    adds r1, r1, r4
    ldrb r0, [r1]
    adds r0, #1
    movs r2, #0
    strb r0, [r1]
    ldr r0, [r5]
    adds r0, #0x25
    adds r0, r0, r4
    strb r2, [r0]
    adds r3, #8
    ldrb r1, [r3, #4]
    cmp r1, #0
    bne lbl_080888c4
    cmp r4, #0
    bne lbl_08088844
    ldr r1, [r5]
    movs r0, #2
    strb r0, [r1, #6]
    ldr r0, [r5]
    adds r0, #0x20
    strb r4, [r0]
    b lbl_080888c2
lbl_08088844:
    cmp r4, #3
    bne lbl_08088854
    ldr r1, [r5]
    adds r1, #0x23
    ldrb r0, [r1]
    subs r0, #1
    strb r0, [r1]
    b lbl_080888c2
lbl_08088854:
    ldr r0, [r5]
    adds r0, #0x20
    adds r0, r0, r4
    strb r1, [r0]
    ldr r2, [r5]
    adds r2, #0x3e
    adds r2, r2, r4
    ldrb r0, [r2]
    adds r0, #1
    movs r1, #7
    ands r0, r1
    strb r0, [r2]
    cmp r4, #2
    bne lbl_08088894
    ldr r1, [r5]
    adds r2, r1, #0
    adds r2, #0x40
    ldrb r0, [r2]
    lsls r0, r0, #2
    add r0, sl
    ldrh r0, [r0]
    strh r0, [r1, #0x2e]
    ldrb r0, [r2]
    lsls r0, r0, #2
    ldr r2, lbl_08088890 @ =0x085ca0fa
    adds r0, r0, r2
    ldrh r0, [r0]
    strh r0, [r1, #0x38]
    b lbl_080888c2
    .align 2, 0
lbl_08088890: .4byte 0x085ca0fa
lbl_08088894:
    ldr r3, [r5]
    mov ip, r3
    lsls r3, r4, #1
    mov r1, ip
    adds r1, #0x2a
    adds r1, r1, r3
    mov r2, ip
    adds r2, #0x3e
    adds r2, r2, r4
    ldrb r0, [r2]
    lsls r0, r0, #2
    add r0, sb
    ldrh r0, [r0]
    strh r0, [r1]
    mov r1, ip
    adds r1, #0x34
    adds r1, r1, r3
    ldrb r0, [r2]
    lsls r0, r0, #2
    ldr r2, lbl_080888f0 @ =0x085ca0da
    adds r0, r0, r2
    ldrh r0, [r0]
    strh r0, [r1]
lbl_080888c2:
    adds r3, r6, #0
lbl_080888c4:
    ldr r0, [r5]
    adds r0, #0xc
    adds r0, r0, r7
    ldr r1, [r3]
    str r1, [r0]
lbl_080888ce:
    adds r0, r4, #1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #3
    bhi lbl_080888da
    b lbl_080887a6
lbl_080888da:
    bl chozodia_escape_process_oam
    ldr r0, [sp]
    add sp, #4
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080888f0: .4byte 0x085ca0da

    thumb_func_start chozodia_escape_escape_ship_leaving_planet
chozodia_escape_escape_ship_leaving_planet: @ 0x080888f4
    push {r4, r5, lr}
    movs r5, #0
    ldr r4, lbl_0808891c @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #3
    beq lbl_08088984
    cmp r1, #3
    bgt lbl_08088920
    cmp r1, #1
    beq lbl_0808895c
    cmp r1, #1
    bgt lbl_08088970
    cmp r1, #0
    beq lbl_08088942
    b lbl_08088aae
    .align 2, 0
lbl_0808891c: .4byte 0x08754bc4
lbl_08088920:
    movs r0, #0x80
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_0808892a
    b lbl_08088a5c
lbl_0808892a:
    cmp r1, r0
    bgt lbl_08088936
    cmp r1, #0xe0
    bne lbl_08088934
    b lbl_08088a58
lbl_08088934:
    b lbl_08088aae
lbl_08088936:
    movs r0, #0x8c
    lsls r0, r0, #1
    cmp r1, r0
    bne lbl_08088940
    b lbl_08088aa0
lbl_08088940:
    b lbl_08088aae
lbl_08088942:
    ldr r0, lbl_08088958 @ =0x085d0ce8
    movs r1, #0xc0
    lsls r1, r1, #0x13
    bl LZ77UncompVRAM
    movs r0, #0x1a
    movs r1, #0
    bl PlayMusic
    b lbl_08088aae
    .align 2, 0
lbl_08088958: .4byte 0x085d0ce8
lbl_0808895c:
    ldr r0, lbl_08088968 @ =0x085d5ae8
    ldr r1, lbl_0808896c @ =0x06008000
    bl LZ77UncompVRAM
    b lbl_08088aae
    .align 2, 0
lbl_08088968: .4byte 0x085d5ae8
lbl_0808896c: .4byte 0x06008000
lbl_08088970:
    ldr r0, lbl_0808897c @ =0x085cf94c
    ldr r1, lbl_08088980 @ =0x06010000
    bl LZ77UncompVRAM
    b lbl_08088aae
    .align 2, 0
lbl_0808897c: .4byte 0x085cf94c
lbl_08088980: .4byte 0x06010000
lbl_08088984:
    ldr r0, lbl_08088a14 @ =0x085d0a28
    ldr r1, lbl_08088a18 @ =0x0600e800
    bl LZ77UncompVRAM
    ldr r0, lbl_08088a1c @ =0x085d5460
    ldr r1, lbl_08088a20 @ =0x0600f000
    bl LZ77UncompVRAM
    ldr r0, lbl_08088a24 @ =0x085d8514
    ldr r1, lbl_08088a28 @ =0x0600f800
    bl LZ77UncompVRAM
    ldr r0, lbl_08088a2c @ =0x040000d4
    ldr r3, lbl_08088a30 @ =0x085c9958
    str r3, [r0]
    movs r1, #0xa0
    lsls r1, r1, #0x13
    str r1, [r0, #4]
    ldr r2, lbl_08088a34 @ =0x80000100
    str r2, [r0, #8]
    ldr r1, [r0, #8]
    str r3, [r0]
    ldr r1, lbl_08088a38 @ =0x05000200
    str r1, [r0, #4]
    str r2, [r0, #8]
    ldr r0, [r0, #8]
    ldr r1, [r4]
    ldrb r0, [r1, #6]
    adds r0, #1
    strb r0, [r1, #6]
    ldr r2, [r4]
    ldr r0, lbl_08088a3c @ =0x085c9fe8
    str r0, [r2, #0xc]
    movs r0, #0x28
    strh r0, [r2, #0x2a]
    movs r0, #0x70
    strh r0, [r2, #0x34]
    adds r1, r2, #0
    adds r1, #0x44
    movs r0, #4
    strh r0, [r1]
    adds r1, #0xa
    ldr r0, lbl_08088a40 @ =0x0000fffb
    strh r0, [r1]
    ldrh r0, [r2, #0x2a]
    lsls r0, r0, #3
    strh r0, [r2, #0x2c]
    ldrh r0, [r2, #0x34]
    lsls r0, r0, #3
    strh r0, [r2, #0x36]
    ldr r1, lbl_08088a44 @ =0x04000008
    ldr r3, lbl_08088a48 @ =0x00001f08
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_08088a4c @ =0x00001d01
    adds r0, r3, #0
    strh r0, [r1]
    adds r1, #2
    ldr r3, lbl_08088a50 @ =0x00001e02
    adds r0, r3, #0
    strh r0, [r1]
    movs r0, #0xdc
    lsls r0, r0, #2
    adds r1, r2, r0
    movs r0, #0xb0
    lsls r0, r0, #5
    strh r0, [r1]
    ldr r1, lbl_08088a54 @ =0x030013b8
    movs r0, #0x10
    strh r0, [r1]
    b lbl_08088aae
    .align 2, 0
lbl_08088a14: .4byte 0x085d0a28
lbl_08088a18: .4byte 0x0600e800
lbl_08088a1c: .4byte 0x085d5460
lbl_08088a20: .4byte 0x0600f000
lbl_08088a24: .4byte 0x085d8514
lbl_08088a28: .4byte 0x0600f800
lbl_08088a2c: .4byte 0x040000d4
lbl_08088a30: .4byte 0x085c9958
lbl_08088a34: .4byte 0x80000100
lbl_08088a38: .4byte 0x05000200
lbl_08088a3c: .4byte 0x085c9fe8
lbl_08088a40: .4byte 0x0000fffb
lbl_08088a44: .4byte 0x04000008
lbl_08088a48: .4byte 0x00001f08
lbl_08088a4c: .4byte 0x00001d01
lbl_08088a50: .4byte 0x00001e02
lbl_08088a54: .4byte 0x030013b8
lbl_08088a58:
    strb r5, [r2, #6]
    b lbl_08088aae
lbl_08088a5c:
    movs r0, #2
    strb r0, [r2, #6]
    ldr r0, [r4]
    ldr r1, lbl_08088a98 @ =0x085c9ff0
    str r1, [r0, #0xc]
    adds r0, #0x25
    strb r5, [r0]
    ldr r2, [r4]
    movs r0, #0x94
    lsls r0, r0, #1
    strh r0, [r2, #0x2a]
    movs r0, #0x26
    strh r0, [r2, #0x34]
    adds r1, r2, #0
    adds r1, #0x44
    ldr r0, lbl_08088a9c @ =0x0000ffd9
    strh r0, [r1]
    adds r1, #0xa
    movs r0, #6
    strh r0, [r1]
    adds r1, #0x14
    movs r0, #0xe8
    strh r0, [r1]
    ldrh r0, [r2, #0x2a]
    lsls r0, r0, #3
    strh r0, [r2, #0x2c]
    ldrh r0, [r2, #0x34]
    lsls r0, r0, #3
    strh r0, [r2, #0x36]
    b lbl_08088aae
    .align 2, 0
lbl_08088a98: .4byte 0x085c9ff0
lbl_08088a9c: .4byte 0x0000ffd9
lbl_08088aa0:
    movs r3, #0xdc
    lsls r3, r3, #2
    adds r1, r2, r3
    movs r0, #0xe0
    lsls r0, r0, #3
    strh r0, [r1]
    movs r5, #1
lbl_08088aae:
    ldr r0, lbl_08088ad4 @ =0x08754bc4
    ldr r2, [r0]
    ldrb r3, [r2, #1]
    adds r4, r0, #0
    cmp r3, #0
    bne lbl_08088ae0
    ldrh r1, [r2, #4]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    bne lbl_08088ae0
    ldr r1, lbl_08088ad8 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08088adc
    subs r0, #1
    strh r0, [r1]
    b lbl_08088ae0
    .align 2, 0
lbl_08088ad4: .4byte 0x08754bc4
lbl_08088ad8: .4byte 0x030013ae
lbl_08088adc:
    adds r0, r3, #1
    strb r0, [r2, #1]
lbl_08088ae0:
    adds r3, r4, #0
    ldr r1, [r3]
    ldrb r0, [r1, #6]
    cmp r0, #1
    bne lbl_08088b5c
    ldrh r0, [r1, #4]
    cmp r0, #0x5f
    bhi lbl_08088b04
    adds r0, r1, #0
    adds r0, #0x25
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #0xd
    bls lbl_08088b28
    b lbl_08088b16
lbl_08088b04:
    adds r0, r1, #0
    adds r0, #0x25
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #1
    bls lbl_08088b28
lbl_08088b16:
    ldr r1, [r3]
    adds r2, r1, #0
    adds r2, #0x44
    ldrh r0, [r2]
    adds r0, #1
    movs r3, #0
    strh r0, [r2]
    adds r1, #0x25
    strb r3, [r1]
lbl_08088b28:
    ldr r0, lbl_08088b58 @ =0x08754bc4
    ldr r2, [r0]
    adds r0, r2, #0
    adds r0, #0x44
    ldrh r1, [r0]
    ldrh r0, [r2, #0x2c]
    adds r1, r1, r0
    strh r1, [r2, #0x2c]
    adds r0, r2, #0
    adds r0, #0x4e
    ldrh r0, [r0]
    ldrh r3, [r2, #0x36]
    adds r0, r0, r3
    strh r0, [r2, #0x36]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x13
    strh r1, [r2, #0x2a]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x13
    strh r0, [r2, #0x34]
    bl chozodia_escape_process_oam
    b lbl_08088bce
    .align 2, 0
lbl_08088b58: .4byte 0x08754bc4
lbl_08088b5c:
    cmp r0, #2
    bne lbl_08088bce
    adds r1, #0x25
    ldrb r2, [r1]
    adds r0, r2, #1
    strb r0, [r1]
    movs r0, #1
    ands r0, r2
    cmp r0, #0
    beq lbl_08088b8c
    ldr r3, [r3]
    adds r1, r3, #0
    adds r1, #0x44
    ldrh r0, [r1]
    subs r0, #1
    movs r2, #0
    strh r0, [r1]
    adds r1, #0xa
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    adds r0, r3, #0
    adds r0, #0x25
    strb r2, [r0]
lbl_08088b8c:
    ldr r2, [r4]
    adds r0, r2, #0
    adds r0, #0x44
    ldrh r1, [r0]
    ldrh r0, [r2, #0x2c]
    adds r1, r1, r0
    strh r1, [r2, #0x2c]
    adds r0, r2, #0
    adds r0, #0x4e
    ldrh r0, [r0]
    ldrh r3, [r2, #0x36]
    adds r0, r0, r3
    strh r0, [r2, #0x36]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x13
    strh r1, [r2, #0x2a]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x13
    strh r0, [r2, #0x34]
    adds r1, r2, #0
    adds r1, #0x62
    ldrh r0, [r1]
    adds r0, #0xc
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r2, #0x80
    lsls r2, r2, #2
    cmp r0, r2
    bls lbl_08088bca
    strh r2, [r1]
lbl_08088bca:
    bl chozodia_escape_process_oam2
lbl_08088bce:
    ldr r0, lbl_08088bf4 @ =0x08754bc4
    ldr r0, [r0]
    ldrh r1, [r0, #4]
    movs r0, #0xf
    ands r0, r1
    cmp r0, #0
    bne lbl_08088bec
    ldr r1, lbl_08088bf8 @ =0x030013b8
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
    ldr r1, lbl_08088bfc @ =0x030013bc
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_08088bec:
    adds r0, r5, #0
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08088bf4: .4byte 0x08754bc4
lbl_08088bf8: .4byte 0x030013b8
lbl_08088bfc: .4byte 0x030013bc

    thumb_func_start chozodia_escape_mission_accomplished
chozodia_escape_mission_accomplished: @ 0x08088c00
    push {r4, r5, lr}
    sub sp, #4
    movs r5, #0
    ldr r4, lbl_08088c24 @ =0x08754bc4
    ldr r2, [r4]
    ldrh r0, [r2, #4]
    adds r1, r0, #1
    strh r1, [r2, #4]
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0x30
    beq lbl_08088c78
    cmp r1, #0x30
    bgt lbl_08088c28
    cmp r1, #0
    beq lbl_08088c36
    b lbl_08088cee
    .align 2, 0
lbl_08088c24: .4byte 0x08754bc4
lbl_08088c28:
    cmp r1, #0x40
    beq lbl_08088c9a
    movs r0, #0xec
    lsls r0, r0, #1
    cmp r1, r0
    beq lbl_08088ce0
    b lbl_08088cee
lbl_08088c36:
    ldr r0, lbl_08088c60 @ =0x085d8ad4
    ldr r1, lbl_08088c64 @ =0x06010000
    bl LZ77UncompVRAM
    ldr r1, lbl_08088c68 @ =0x040000d4
    ldr r0, lbl_08088c6c @ =0x085c9b58
    str r0, [r1]
    ldr r0, lbl_08088c70 @ =0x05000200
    str r0, [r1, #4]
    ldr r0, lbl_08088c74 @ =0x80000010
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, [r4]
    movs r1, #0xdc
    lsls r1, r1, #2
    adds r0, r0, r1
    movs r1, #0xb8
    lsls r1, r1, #5
    strh r1, [r0]
    b lbl_08088cee
    .align 2, 0
lbl_08088c60: .4byte 0x085d8ad4
lbl_08088c64: .4byte 0x06010000
lbl_08088c68: .4byte 0x040000d4
lbl_08088c6c: .4byte 0x085c9b58
lbl_08088c70: .4byte 0x05000200
lbl_08088c74: .4byte 0x80000010
lbl_08088c78:
    movs r0, #0xdd
    lsls r0, r0, #2
    adds r1, r2, r0
    movs r2, #0xa0
    lsls r2, r2, #0x13
    movs r3, #0x80
    lsls r3, r3, #2
    movs r0, #0x10
    str r0, [sp]
    movs r0, #3
    bl DMATransfer
    ldr r1, [r4]
    ldrb r0, [r1, #1]
    adds r0, #1
    strb r0, [r1, #1]
    b lbl_08088cee
lbl_08088c9a:
    ldrb r0, [r2, #0xa]
    adds r0, #1
    strb r0, [r2, #0xa]
    ldr r0, lbl_08088cb4 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #1
    bne lbl_08088cbc
    ldr r1, [r4]
    ldr r0, lbl_08088cb8 @ =0x085ca084
    b lbl_08088cc0
    .align 2, 0
lbl_08088cb4: .4byte 0x03000020
lbl_08088cb8: .4byte 0x085ca084
lbl_08088cbc:
    ldr r1, [r4]
    ldr r0, lbl_08088cd8 @ =0x085ca00a
lbl_08088cc0:
    str r0, [r1, #0x1c]
    ldr r2, lbl_08088cdc @ =0x08754bc4
    ldr r0, [r2]
    adds r0, #0x24
    movs r1, #1
    strb r1, [r0]
    ldr r1, [r2]
    movs r0, #0x78
    strh r0, [r1, #0x32]
    movs r0, #0x58
    strh r0, [r1, #0x3c]
    b lbl_08088cee
    .align 2, 0
lbl_08088cd8: .4byte 0x085ca00a
lbl_08088cdc: .4byte 0x08754bc4
lbl_08088ce0:
    ldr r1, lbl_08088d4c @ =0x00000372
    adds r0, r2, r1
    movs r1, #0xff
    strh r1, [r0]
    ldr r0, lbl_08088d50 @ =0x030013ae
    strh r5, [r0]
    movs r5, #2
lbl_08088cee:
    ldr r3, lbl_08088d54 @ =0x08754bc4
    ldr r1, [r3]
    ldrb r0, [r1, #0xa]
    cmp r0, #0
    beq lbl_08088d22
    adds r0, r1, #0
    adds r0, #0x29
    ldrb r1, [r0]
    adds r2, r1, #1
    strb r2, [r0]
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #3
    bls lbl_08088d22
    ldr r0, [r3]
    adds r1, r0, #0
    adds r1, #0x24
    ldrb r0, [r1]
    cmp r0, #0x2f
    bhi lbl_08088d1a
    adds r0, #1
    strb r0, [r1]
lbl_08088d1a:
    ldr r0, [r3]
    adds r0, #0x29
    movs r1, #0
    strb r1, [r0]
lbl_08088d22:
    bl chozodia_escape_process_oam
    ldr r0, lbl_08088d54 @ =0x08754bc4
    ldr r1, [r0]
    ldrb r0, [r1, #1]
    cmp r0, #0
    bne lbl_08088d42
    ldrh r1, [r1, #4]
    movs r0, #7
    ands r0, r1
    cmp r0, #0
    bne lbl_08088d42
    ldr r1, lbl_08088d58 @ =0x030013bc
    ldrh r0, [r1]
    subs r0, #1
    strh r0, [r1]
lbl_08088d42:
    adds r0, r5, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08088d4c: .4byte 0x00000372
lbl_08088d50: .4byte 0x030013ae
lbl_08088d54: .4byte 0x08754bc4
lbl_08088d58: .4byte 0x030013bc

    thumb_func_start chozodia_escape_main
chozodia_escape_main: @ 0x08088d5c
    push {r4, r5, r6, lr}
    movs r5, #0
    ldr r0, lbl_08088d78 @ =0x03001382
    strb r5, [r0]
    ldr r4, lbl_08088d7c @ =0x03000c72
    movs r1, #0
    ldrsh r0, [r4, r1]
    cmp r0, #1
    beq lbl_08088d92
    cmp r0, #1
    bgt lbl_08088d80
    cmp r0, #0
    beq lbl_08088d8c
    b lbl_08088e96
    .align 2, 0
lbl_08088d78: .4byte 0x03001382
lbl_08088d7c: .4byte 0x03000c72
lbl_08088d80:
    cmp r0, #2
    beq lbl_08088dc0
    cmp r0, #3
    bne lbl_08088d8a
    b lbl_08088e80
lbl_08088d8a:
    b lbl_08088e96
lbl_08088d8c:
    bl chozodia_escape_init
    b lbl_08088dae
lbl_08088d92:
    ldr r1, lbl_08088da0 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_08088da4
    subs r0, #1
    strh r0, [r1]
    b lbl_08088e96
    .align 2, 0
lbl_08088da0: .4byte 0x030013ae
lbl_08088da4:
    ldr r0, lbl_08088db8 @ =0x08754bc4
    ldr r0, [r0]
    ldr r1, lbl_08088dbc @ =0x00000372
    adds r0, r0, r1
    strh r5, [r0]
lbl_08088dae:
    ldrh r0, [r4]
    adds r0, #1
    strh r0, [r4]
    b lbl_08088e96
    .align 2, 0
lbl_08088db8: .4byte 0x08754bc4
lbl_08088dbc: .4byte 0x00000372
lbl_08088dc0:
    ldr r1, lbl_08088e58 @ =0x08760d14
    ldr r4, lbl_08088e5c @ =0x08754bc4
    ldr r0, [r4]
    ldrb r0, [r0]
    lsls r0, r0, #2
    adds r0, r0, r1
    ldr r0, [r0]
    bl _call_via_r0
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #1
    bne lbl_08088e40
    ldr r1, [r4]
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    ldr r0, [r4]
    strb r5, [r0, #1]
    ldr r0, [r4]
    strb r5, [r0, #2]
    ldr r0, [r4]
    strh r5, [r0, #4]
    movs r1, #0
    adds r3, r4, #0
    movs r2, #0
lbl_08088df4:
    ldr r0, [r3]
    adds r0, #6
    adds r0, r0, r1
    strb r2, [r0]
    ldr r0, [r3]
    adds r0, #0x20
    adds r0, r0, r1
    strb r2, [r0]
    ldr r0, [r3]
    adds r0, #0x25
    adds r0, r0, r1
    strb r2, [r0]
    ldr r0, [r3]
    adds r0, #0x3e
    adds r0, r0, r1
    strb r2, [r0]
    adds r0, r1, #1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #4
    bls lbl_08088df4
    ldr r0, [r4]
    ldrb r0, [r0]
    cmp r0, #1
    bls lbl_08088e40
    ldr r0, lbl_08088e60 @ =0x030013b4
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_08088e64 @ =0x030013b6
    strh r1, [r0]
    ldr r0, lbl_08088e68 @ =0x030013b8
    strh r1, [r0]
    ldr r0, lbl_08088e6c @ =0x030013ba
    strh r1, [r0]
    ldr r0, lbl_08088e70 @ =0x030013bc
    strh r1, [r0]
    ldr r0, lbl_08088e74 @ =0x030013be
    strh r1, [r0]
lbl_08088e40:
    cmp r6, #2
    bne lbl_08088e52
    ldr r1, lbl_08088e78 @ =0x03000c72
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    ldr r1, lbl_08088e7c @ =0x03000c74
    movs r0, #0
    strb r0, [r1]
lbl_08088e52:
    bl ResetFreeOAM
    b lbl_08088e96
    .align 2, 0
lbl_08088e58: .4byte 0x08760d14
lbl_08088e5c: .4byte 0x08754bc4
lbl_08088e60: .4byte 0x030013b4
lbl_08088e64: .4byte 0x030013b6
lbl_08088e68: .4byte 0x030013b8
lbl_08088e6c: .4byte 0x030013ba
lbl_08088e70: .4byte 0x030013bc
lbl_08088e74: .4byte 0x030013be
lbl_08088e78: .4byte 0x03000c72
lbl_08088e7c: .4byte 0x03000c74
lbl_08088e80:
    ldr r1, lbl_08088e90 @ =0x030013ae
    ldrh r0, [r1]
    cmp r0, #0xf
    bhi lbl_08088e94
    adds r0, #1
    strh r0, [r1]
    b lbl_08088e96
    .align 2, 0
lbl_08088e90: .4byte 0x030013ae
lbl_08088e94:
    movs r5, #1
lbl_08088e96:
    adds r0, r5, #0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_08088ea0
sub_08088ea0: @ 0x08088ea0
    push {r4, lr}
    sub sp, #4
    ldr r0, lbl_08088ec0 @ =0x03005808
    movs r1, #0
    strb r1, [r0, #0xb]
    ldrb r1, [r0, #9]
    adds r2, r0, #0
    cmp r1, #0xc
    bls lbl_08088eb4
    b lbl_08089100
lbl_08088eb4:
    lsls r0, r1, #2
    ldr r1, lbl_08088ec4 @ =lbl_08088ec8
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08088ec0: .4byte 0x03005808
lbl_08088ec4: .4byte lbl_08088ec8
lbl_08088ec8: @ jump table
    .4byte lbl_08088efc @ case 0
    .4byte lbl_08088f14 @ case 1
    .4byte lbl_08088f48 @ case 2
    .4byte lbl_08088f98 @ case 3
    .4byte lbl_08089058 @ case 4
    .4byte lbl_08089088 @ case 5
    .4byte lbl_080890ae @ case 6
    .4byte lbl_080890c8 @ case 7
    .4byte lbl_080890bc @ case 8
    .4byte lbl_080890d4 @ case 9
    .4byte lbl_080890e4 @ case 10
    .4byte lbl_080890ea @ case 11
    .4byte lbl_08089100 @ case 12
lbl_08088efc:
    ldr r4, lbl_08088f10 @ =0x03005808
    movs r0, #0
    strh r0, [r4, #6]
    movs r0, #0x14
    bl FadeMusic
    ldrb r0, [r4, #9]
    adds r0, #1
    b lbl_080890fe
    .align 2, 0
lbl_08088f10: .4byte 0x03005808
lbl_08088f14:
    ldr r4, lbl_08088f40 @ =0x03005808
    ldrh r0, [r4, #6]
    adds r0, #1
    strh r0, [r4, #6]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x1e
    bhi lbl_08088f26
    b lbl_08089100
lbl_08088f26:
    bl sub_08003458
    ldr r0, lbl_08088f44 @ =0x03001d00
    ldrh r1, [r0, #0x1c]
    strh r1, [r4, #0x12]
    adds r0, #0x21
    ldrb r0, [r0]
    strh r0, [r4, #0x14]
    movs r0, #0
    strh r0, [r4, #6]
    ldrb r0, [r4, #9]
    adds r0, #1
    b lbl_080890fe
    .align 2, 0
lbl_08088f40: .4byte 0x03005808
lbl_08088f44: .4byte 0x03001d00
lbl_08088f48:
    ldr r0, lbl_08088f78 @ =serial_communication_code_connecting
    bl CallbackSetSerialCommunication
    ldr r0, lbl_08088f7c @ =sub_08089bd4
    bl CallbackSetTimer3
    ldr r0, lbl_08088f80 @ =0x0300586c
    ldr r1, lbl_08088f84 @ =0x08754bd0
    str r1, [r0]
    ldr r2, lbl_08088f88 @ =0x03005870
    ldr r0, lbl_08088f8c @ =0x087566c4
    subs r0, r0, r1
    str r0, [r2]
    ldr r0, lbl_08088f90 @ =0x03005820
    str r1, [r0, #0x28]
    adds r1, r0, #0
    adds r1, #0x4b
    movs r4, #0
    strb r4, [r1]
    bl sub_08089164
    ldr r1, lbl_08088f94 @ =0x03005808
    strh r4, [r1, #6]
    b lbl_08089068
    .align 2, 0
lbl_08088f78: .4byte serial_communication_code_connecting
lbl_08088f7c: .4byte sub_08089bd4
lbl_08088f80: .4byte 0x0300586c
lbl_08088f84: .4byte 0x08754bd0
lbl_08088f88: .4byte 0x03005870
lbl_08088f8c: .4byte 0x087566c4
lbl_08088f90: .4byte 0x03005820
lbl_08088f94: .4byte 0x03005808
lbl_08088f98:
    ldr r3, lbl_08089004 @ =0x03005808
    ldrh r0, [r3, #6]
    adds r0, #1
    movs r4, #0
    strh r0, [r3, #6]
    ldr r2, lbl_08089008 @ =0x03005820
    ldrb r1, [r2, #0x1e]
    movs r0, #0xe
    ands r0, r1
    cmp r0, #0
    beq lbl_08088fbe
    ldrb r0, [r2, #0x18]
    cmp r0, #0xd1
    bne lbl_08088fb6
    strh r4, [r3, #6]
lbl_08088fb6:
    ldrb r0, [r2, #0x18]
    cmp r0, #0xdf
    bls lbl_08088fbe
    strh r4, [r3, #6]
lbl_08088fbe:
    ldr r3, lbl_08089008 @ =0x03005820
    ldrb r0, [r3, #0x18]
    cmp r0, #0
    bne lbl_08088fe4
    ldrb r0, [r3, #0x1e]
    cmp r0, #0
    beq lbl_08088fe4
    ldr r0, lbl_0808900c @ =0x0300586c
    ldr r1, [r0]
    adds r1, #0xc0
    ldr r0, lbl_08089010 @ =0x03005870
    ldr r2, [r0]
    subs r2, #0xc0
    movs r0, #1
    str r0, [sp]
    adds r0, r3, #0
    movs r3, #4
    bl sub_08089600
lbl_08088fe4:
    ldr r4, lbl_08089008 @ =0x03005820
    adds r0, r4, #0
    bl sub_080891a0
    ldr r1, lbl_08089014 @ =0x03005874
    str r0, [r1]
    adds r0, r4, #0
    bl sub_080896b8
    cmp r0, #0
    beq lbl_0808901c
    ldr r1, lbl_08089018 @ =0x03005884
    movs r0, #0
    strb r0, [r1]
    b lbl_08089066
    .align 2, 0
lbl_08089004: .4byte 0x03005808
lbl_08089008: .4byte 0x03005820
lbl_0808900c: .4byte 0x0300586c
lbl_08089010: .4byte 0x03005870
lbl_08089014: .4byte 0x03005874
lbl_08089018: .4byte 0x03005884
lbl_0808901c:
    ldrb r2, [r4, #0x18]
    cmp r2, #0xd1
    beq lbl_08089044
    ldr r0, lbl_0808903c @ =0x03001380
    ldrh r1, [r0]
    movs r0, #2
    ands r0, r1
    cmp r0, #0
    beq lbl_08089044
    cmp r2, #0xdf
    bhi lbl_08089044
    ldr r1, lbl_08089040 @ =0x03005808
    movs r0, #8
    strb r0, [r1, #9]
    b lbl_08089100
    .align 2, 0
lbl_0808903c: .4byte 0x03001380
lbl_08089040: .4byte 0x03005808
lbl_08089044:
    ldr r1, lbl_08089054 @ =0x03005808
    ldrh r0, [r1, #6]
    cmp r0, #0xb4
    bls lbl_08089100
    movs r0, #7
    strb r0, [r1, #9]
    b lbl_08089100
    .align 2, 0
lbl_08089054: .4byte 0x03005808
lbl_08089058:
    ldr r0, lbl_08089070 @ =0x0875e6a8
    ldr r1, lbl_08089074 @ =0x087566c4
    subs r0, r0, r1
    bl sub_0808980c
    cmp r0, #0
    bne lbl_0808907c
lbl_08089066:
    ldr r1, lbl_08089078 @ =0x03005808
lbl_08089068:
    ldrb r0, [r1, #9]
    adds r0, #1
    strb r0, [r1, #9]
    b lbl_08089100
    .align 2, 0
lbl_08089070: .4byte 0x0875e6a8
lbl_08089074: .4byte 0x087566c4
lbl_08089078: .4byte 0x03005808
lbl_0808907c:
    ldr r1, lbl_08089084 @ =0x03005808
    movs r0, #9
    strb r0, [r1, #9]
    b lbl_08089100
    .align 2, 0
lbl_08089084: .4byte 0x03005808
lbl_08089088:
    ldr r0, lbl_0808909c @ =0x03005880
    ldr r0, [r0]
    cmp r0, #1
    beq lbl_080890a6
    cmp r0, #1
    blo lbl_080890a0
    cmp r0, #2
    beq lbl_080890aa
    b lbl_080890ae
    .align 2, 0
lbl_0808909c: .4byte 0x03005880
lbl_080890a0:
    ldrb r0, [r2, #9]
    adds r0, #1
    b lbl_080890ac
lbl_080890a6:
    movs r0, #8
    b lbl_080890ac
lbl_080890aa:
    movs r0, #9
lbl_080890ac:
    strb r0, [r2, #9]
lbl_080890ae:
    ldr r1, lbl_080890b8 @ =0x03005808
    movs r0, #0xa
    strb r0, [r1, #9]
    b lbl_08089100
    .align 2, 0
lbl_080890b8: .4byte 0x03005808
lbl_080890bc:
    ldr r0, lbl_080890c4 @ =0x03005808
    movs r1, #2
    b lbl_080890d8
    .align 2, 0
lbl_080890c4: .4byte 0x03005808
lbl_080890c8:
    ldr r0, lbl_080890d0 @ =0x03005808
    movs r1, #3
    b lbl_080890d8
    .align 2, 0
lbl_080890d0: .4byte 0x03005808
lbl_080890d4:
    ldr r0, lbl_080890e0 @ =0x03005808
    movs r1, #4
lbl_080890d8:
    strb r1, [r0, #0xb]
    movs r1, #0xb
    strb r1, [r0, #9]
    b lbl_08089100
    .align 2, 0
lbl_080890e0: .4byte 0x03005808
lbl_080890e4:
    ldr r1, lbl_0808910c @ =0x03005808
    movs r0, #2
    strb r0, [r1, #8]
lbl_080890ea:
    bl init_sound
    bl sub_08078228
    ldr r4, lbl_0808910c @ =0x03005808
    ldrh r0, [r4, #0x12]
    ldrb r1, [r4, #0x14]
    bl PlayMusic
    movs r0, #0xc
lbl_080890fe:
    strb r0, [r4, #9]
lbl_08089100:
    ldr r0, lbl_0808910c @ =0x03005808
    ldrb r0, [r0, #0xb]
    add sp, #4
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0808910c: .4byte 0x03005808

    thumb_func_start sub_08089110
sub_08089110: @ 0x08089110
    push {r4, lr}
    adds r4, r0, #0
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    ldr r0, lbl_08089124 @ =0x03000001
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_08089158
    b lbl_08089152
    .align 2, 0
lbl_08089124: .4byte 0x03000001
lbl_08089128:
    movs r3, #0x28
    cmp r0, #0x2f
    bls lbl_08089148
    cmp r0, #0x39
    bhi lbl_08089138
    ldrb r0, [r4]
    subs r0, #0x30
    b lbl_08089144
lbl_08089138:
    cmp r0, #0x5a
    bhi lbl_08089148
    ldr r3, lbl_08089160 @ =0x0000ffc9
    adds r0, r3, #0
    ldrb r3, [r4]
    adds r0, r0, r3
lbl_08089144:
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
lbl_08089148:
    lsls r0, r2, #0xc
    orrs r3, r0
    strh r3, [r1]
    adds r1, #2
    adds r4, #1
lbl_08089152:
    ldrb r0, [r4]
    cmp r0, #0
    bne lbl_08089128
lbl_08089158:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08089160: .4byte 0x0000ffc9

    thumb_func_start sub_08089164
sub_08089164: @ 0x08089164
    adds r2, r0, #0
    movs r1, #0
    strb r1, [r2, #0x1e]
    strb r1, [r2, #0x18]
    strb r1, [r2, #0x1d]
    adds r3, r2, #0
    adds r3, #0x4a
    movs r0, #0xf
    strb r0, [r3]
    adds r0, r2, #0
    adds r0, #0x48
    strb r1, [r0]
    strh r1, [r2, #0x16]
    ldr r0, lbl_08089190 @ =0x04000134
    strh r1, [r0]
    ldr r2, lbl_08089194 @ =0x04000128
    ldr r3, lbl_08089198 @ =0x00002003
    adds r0, r3, #0
    strh r0, [r2]
    ldr r0, lbl_0808919c @ =0x0400012a
    strh r1, [r0]
    bx lr
    .align 2, 0
lbl_08089190: .4byte 0x04000134
lbl_08089194: .4byte 0x04000128
lbl_08089198: .4byte 0x00002003
lbl_0808919c: .4byte 0x0400012a

    thumb_func_start sub_080891a0
sub_080891a0: @ 0x080891a0
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    adds r7, r0, #0
    bl sub_080896b8
    cmp r0, #0
    beq lbl_080891b6
    b lbl_0808957e
lbl_080891b6:
    adds r0, r7, #0
    adds r0, #0x4a
    ldrb r1, [r0]
    mov sl, r0
    cmp r1, #0xf
    bls lbl_080891ca
    subs r0, r1, #1
    mov r1, sl
    strb r0, [r1]
    b lbl_0808957e
lbl_080891ca:
    adds r1, r7, #0
    adds r1, #0x48
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_080891f4
    movs r0, #0
    strb r0, [r1]
    ldr r0, lbl_080891f0 @ =0x04000128
    ldrh r0, [r0]
    movs r5, #0xfc
    ands r5, r0
    cmp r5, #8
    beq lbl_080891f4
    adds r0, r7, #0
    bl sub_08089164
    movs r0, #8
    eors r0, r5
    b lbl_08089580
    .align 2, 0
lbl_080891f0: .4byte 0x04000128
lbl_080891f4:
    ldrb r0, [r7, #0x18]
    cmp r0, #0xdf
    bls lbl_08089246
    adds r0, r7, #0
    bl sub_080896cc
    adds r5, r0, #0
    cmp r5, #0
    beq lbl_08089208
    b lbl_08089580
lbl_08089208:
    adds r0, r7, #0
    adds r0, #0x4b
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08089224
    ldrb r0, [r7, #0x18]
    cmp r0, #0xe1
    bls lbl_08089224
    adds r0, r7, #0
    bl sub_080896b8
    cmp r0, #0
    bne lbl_08089224
    b lbl_0808956e
lbl_08089224:
    adds r0, r7, #0
    bl sub_080896b8
    cmp r0, #0
    beq lbl_08089230
    b lbl_0808957e
lbl_08089230:
    ldrh r0, [r7, #0x16]
    cmp r0, #0
    bne lbl_08089240
    adds r0, r7, #0
    bl sub_08089164
    movs r0, #0x71
    b lbl_08089580
lbl_08089240:
    subs r0, #1
    strh r0, [r7, #0x16]
    b lbl_0808957e
lbl_08089246:
    ldrb r0, [r7, #0x18]
    cmp r0, #2
    bne lbl_0808924e
    b lbl_08089384
lbl_0808924e:
    cmp r0, #2
    bgt lbl_0808925c
    cmp r0, #0
    beq lbl_0808926a
    cmp r0, #1
    beq lbl_08089326
    b lbl_080894bc
lbl_0808925c:
    cmp r0, #0xd0
    bne lbl_08089262
    b lbl_080893d0
lbl_08089262:
    cmp r0, #0xd1
    bne lbl_08089268
    b lbl_0808946a
lbl_08089268:
    b lbl_080894bc
lbl_0808926a:
    movs r3, #0xe
    movs r5, #3
    ldr r0, lbl_080892b0 @ =0x04000120
    ldrh r0, [r0, #6]
    adds r1, r0, #0
    ldr r0, lbl_080892b4 @ =0x0000ffff
    ldrb r2, [r7, #0x1e]
    adds r6, r2, #0
    cmp r1, r0
    bne lbl_08089292
    adds r4, r1, #0
    ldr r1, lbl_080892b8 @ =0x04000126
lbl_08089282:
    asrs r3, r3, #1
    subs r1, #2
    subs r5, #1
    cmp r5, #0
    beq lbl_08089292
    ldrh r0, [r1]
    cmp r0, r4
    beq lbl_08089282
lbl_08089292:
    movs r0, #0xe
    ands r3, r0
    strb r3, [r7, #0x1d]
    movs r5, #3
    ldr r0, lbl_080892b0 @ =0x04000120
    ldrh r0, [r0, #6]
    adds r4, r0, #0
    asrs r0, r2, #3
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080892c0
    ldr r0, lbl_080892bc @ =0x00007208
    b lbl_080892e6
    .align 2, 0
lbl_080892b0: .4byte 0x04000120
lbl_080892b4: .4byte 0x0000ffff
lbl_080892b8: .4byte 0x04000126
lbl_080892bc: .4byte 0x00007208
lbl_080892c0:
    subs r5, #1
    cmp r5, #0
    beq lbl_080892ec
    lsls r0, r5, #1
    ldr r1, lbl_08089314 @ =0x04000120
    adds r0, r0, r1
    ldrh r0, [r0]
    adds r4, r0, #0
    adds r0, r2, #0
    asrs r0, r5
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_080892c0
    adds r0, r1, #0
    lsls r0, r5
    movs r1, #0xe4
    lsls r1, r1, #7
    orrs r0, r1
lbl_080892e6:
    cmp r4, r0
    beq lbl_080892c0
    movs r3, #0
lbl_080892ec:
    adds r0, r3, #0
    ands r0, r6
    strb r0, [r7, #0x1e]
    cmp r3, #0
    bne lbl_080892fc
    movs r0, #0xf
    mov r2, sl
    strb r0, [r2]
lbl_080892fc:
    mov r1, sl
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_08089318
    ldrb r0, [r7, #0x1d]
    ldrb r2, [r7, #0x1e]
    cmp r0, r2
    beq lbl_0808931e
    adds r0, r7, #0
    bl sub_080895dc
    b lbl_08089326
    .align 2, 0
lbl_08089314: .4byte 0x04000120
lbl_08089318:
    subs r0, #1
    mov r1, sl
    strb r0, [r1]
lbl_0808931e:
    ldrb r1, [r7, #0x1e]
    movs r2, #0xc4
    lsls r2, r2, #7
    b lbl_08089426
lbl_08089326:
    adds r1, r7, #0
    adds r1, #0x49
    movs r0, #0
    strb r0, [r1]
    movs r5, #3
    mov ip, r1
    ldr r3, lbl_0808937c @ =0x03005888
lbl_08089334:
    lsls r0, r5, #1
    ldr r2, lbl_08089380 @ =0x04000120
    adds r0, r0, r2
    ldrh r0, [r0]
    adds r4, r0, #0
    asrs r0, r4, #8
    subs r2, r5, #1
    cmp r0, #0x72
    bne lbl_0808935e
    lsls r0, r2, #1
    adds r0, r0, r3
    strh r4, [r0]
    movs r0, #0xff
    ands r4, r0
    movs r0, #1
    lsls r0, r5
    cmp r4, r0
    bne lbl_0808935e
    ldrb r0, [r1]
    orrs r4, r0
    strb r4, [r1]
lbl_0808935e:
    adds r5, r2, #0
    cmp r5, #0
    bne lbl_08089334
    ldrb r0, [r7, #0x1d]
    mov r1, ip
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_0808931e
    movs r0, #2
    strb r0, [r7, #0x18]
    mov r2, ip
    ldrb r1, [r2]
    movs r2, #0xc2
    lsls r2, r2, #7
    b lbl_08089426
    .align 2, 0
lbl_0808937c: .4byte 0x03005888
lbl_08089380: .4byte 0x04000120
lbl_08089384:
    movs r5, #3
    movs r0, #0x49
    adds r0, r0, r7
    mov ip, r0
    mov r4, ip
    movs r6, #1
    ldr r1, lbl_080893c8 @ =0x03005888
    mov sb, r1
    ldr r2, lbl_080893cc @ =0x04000120
    mov r8, r2
lbl_08089398:
    ldrb r3, [r4]
    adds r0, r3, #0
    asrs r0, r5
    ands r0, r6
    subs r2, r5, #1
    cmp r0, #0
    beq lbl_080893be
    lsls r0, r5, #1
    add r0, r8
    ldrh r1, [r0]
    lsls r0, r2, #1
    add r0, sb
    ldrh r0, [r0]
    cmp r1, r0
    beq lbl_080893be
    adds r0, r6, #0
    lsls r0, r5
    eors r3, r0
    strb r3, [r4]
lbl_080893be:
    adds r5, r2, #0
    cmp r5, #0
    bne lbl_08089398
    b lbl_08089524
    .align 2, 0
lbl_080893c8: .4byte 0x03005888
lbl_080893cc: .4byte 0x04000120
lbl_080893d0:
    movs r3, #1
    movs r5, #3
    movs r0, #0x49
    adds r0, r0, r7
    mov ip, r0
    adds r6, r7, #0
    adds r6, #0x19
    ldr r1, lbl_08089434 @ =0x03005888
    mov r8, r1
lbl_080893e2:
    lsls r0, r5, #1
    ldr r2, lbl_08089438 @ =0x04000120
    adds r0, r0, r2
    ldrh r0, [r0]
    adds r4, r0, #0
    subs r2, r5, #1
    adds r0, r6, r2
    strb r4, [r0]
    mov r0, ip
    ldrb r1, [r0]
    asrs r1, r5
    movs r0, #1
    ands r1, r0
    cmp r1, #0
    beq lbl_08089416
    asrs r0, r4, #8
    subs r0, #0x72
    cmp r0, #1
    bls lbl_0808940a
    b lbl_08089574
lbl_0808940a:
    lsls r0, r2, #1
    add r0, r8
    ldrh r0, [r0]
    cmp r4, r0
    bne lbl_08089416
    movs r3, #0
lbl_08089416:
    adds r5, r2, #0
    cmp r5, #0
    bne lbl_080893e2
    cmp r3, #0
    bne lbl_0808943c
    ldrb r1, [r7, #0x1c]
    movs r2, #0xc6
    lsls r2, r2, #7
lbl_08089426:
    adds r0, r2, #0
    orrs r1, r0
    adds r0, r7, #0
    bl sub_08089590
    b lbl_08089580
    .align 2, 0
lbl_08089434: .4byte 0x03005888
lbl_08089438: .4byte 0x04000120
lbl_0808943c:
    movs r0, #0xd1
    strb r0, [r7, #0x18]
    movs r3, #0x11
    movs r5, #3
    adds r1, r6, #2
lbl_08089446:
    ldrb r0, [r1]
    adds r3, r3, r0
    subs r1, #1
    subs r5, #1
    cmp r5, #0
    bne lbl_08089446
    strb r3, [r7, #0x14]
    movs r0, #0xff
    ands r3, r0
    movs r1, #0xc8
    lsls r1, r1, #7
    adds r0, r1, #0
    orrs r3, r0
    adds r0, r7, #0
    adds r1, r3, #0
    bl sub_08089590
    b lbl_08089580
lbl_0808946a:
    movs r5, #3
    movs r2, #0x49
    ldrb r1, [r2, r7]
    ldr r2, lbl_080894a8 @ =0x04000126
    movs r3, #1
lbl_08089474:
    ldrh r0, [r2]
    adds r4, r0, #0
    adds r0, r1, #0
    asrs r0, r5
    ands r0, r3
    cmp r0, #0
    beq lbl_08089488
    asrs r0, r4, #8
    cmp r0, #0x73
    bne lbl_08089574
lbl_08089488:
    subs r2, #2
    subs r5, #1
    cmp r5, #0
    bne lbl_08089474
    adds r0, r7, #0
    bl Multiboot
    adds r5, r0, #0
    cmp r5, #0
    bne lbl_080894ac
    movs r0, #0xe0
    strb r0, [r7, #0x18]
    adds r0, #0xb0
    strh r0, [r7, #0x16]
    b lbl_0808957e
    .align 2, 0
lbl_080894a8: .4byte 0x04000126
lbl_080894ac:
    adds r0, r7, #0
    bl sub_08089164
    movs r0, #0x1e
    mov r1, sl
    strb r0, [r1]
    movs r0, #0x70
    b lbl_08089580
lbl_080894bc:
    movs r5, #3
    movs r2, #0x49
    adds r2, r2, r7
    mov ip, r2
    mov r8, ip
    movs r0, #1
    mov sb, r0
lbl_080894ca:
    mov r1, r8
    ldrb r6, [r1]
    adds r0, r6, #0
    asrs r0, r5
    mov r2, sb
    ands r0, r2
    cmp r0, #0
    beq lbl_08089504
    lsls r0, r5, #1
    ldr r1, lbl_08089520 @ =0x04000120
    adds r0, r0, r1
    ldrh r0, [r0]
    adds r4, r0, #0
    asrs r2, r4, #8
    ldrb r0, [r7, #0x18]
    lsrs r0, r0, #1
    movs r1, #0x62
    subs r1, r1, r0
    mov r3, sb
    lsls r3, r5
    cmp r2, r1
    bne lbl_080894fe
    movs r0, #0xff
    ands r4, r0
    cmp r4, r3
    beq lbl_08089504
lbl_080894fe:
    eors r6, r3
    mov r2, r8
    strb r6, [r2]
lbl_08089504:
    subs r5, #1
    cmp r5, #0
    bne lbl_080894ca
    ldrb r0, [r7, #0x18]
    cmp r0, #0xc4
    bne lbl_08089524
    mov r0, ip
    ldrb r1, [r0]
    movs r0, #0xe
    ands r0, r1
    strb r0, [r7, #0x1e]
    strb r5, [r7, #0x18]
    b lbl_0808931e
    .align 2, 0
lbl_08089520: .4byte 0x04000120
lbl_08089524:
    mov r1, ip
    ldrb r0, [r1]
    cmp r0, #0
    bne lbl_08089536
    adds r0, r7, #0
    bl sub_08089164
    movs r0, #0x50
    b lbl_08089580
lbl_08089536:
    ldrb r0, [r7, #0x18]
    adds r0, #2
    strb r0, [r7, #0x18]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xc4
    bne lbl_08089546
    b lbl_0808931e
lbl_08089546:
    ldrb r0, [r7, #0x18]
    ldr r1, [r7, #0x28]
    adds r0, r0, r1
    subs r1, r0, #3
    ldrb r2, [r1]
    lsls r2, r2, #8
    subs r0, #4
    ldrb r1, [r0]
    orrs r1, r2
    adds r0, r7, #0
    bl sub_08089590
    adds r5, r0, #0
    cmp r5, #0
    bne lbl_08089580
    adds r0, r7, #0
    adds r0, #0x4b
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_0808957e
lbl_0808956e:
    bl sub_080897d0
    b lbl_080891ca
lbl_08089574:
    adds r0, r7, #0
    bl sub_08089164
    movs r0, #0x60
    b lbl_08089580
lbl_0808957e:
    movs r0, #0
lbl_08089580:
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_08089590
sub_08089590: @ 0x08089590
    push {r4, lr}
    adds r2, r0, #0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldr r3, lbl_080895bc @ =0x04000128
    ldrh r0, [r3]
    movs r4, #0x8c
    ands r4, r0
    cmp r4, #8
    bne lbl_080895c8
    ldr r0, lbl_080895c0 @ =0x0400012a
    strh r1, [r0]
    ldr r1, lbl_080895c4 @ =0x00002083
    adds r0, r1, #0
    strh r0, [r3]
    adds r1, r2, #0
    adds r1, #0x48
    movs r0, #1
    strb r0, [r1]
    movs r0, #0
    b lbl_080895d4
    .align 2, 0
lbl_080895bc: .4byte 0x04000128
lbl_080895c0: .4byte 0x0400012a
lbl_080895c4: .4byte 0x00002083
lbl_080895c8:
    adds r0, r2, #0
    bl sub_08089164
    movs r0, #8
    eors r4, r0
    adds r0, r4, #0
lbl_080895d4:
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_080895dc
sub_080895dc: @ 0x080895dc
    push {lr}
    adds r1, r0, #0
    ldrb r0, [r1, #0x18]
    cmp r0, #0
    beq lbl_080895ee
    adds r0, r1, #0
    bl sub_08089164
    b lbl_080895fa
lbl_080895ee:
    adds r2, r1, #0
    adds r2, #0x4a
    strb r0, [r2]
    strb r0, [r1, #0x1e]
    movs r0, #1
    strb r0, [r1, #0x18]
lbl_080895fa:
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_08089600
sub_08089600: @ 0x08089600
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0
    adds r7, r1, #0
    ldr r0, [sp, #0x14]
    lsls r3, r3, #0x18
    lsrs r6, r3, #0x18
    lsls r0, r0, #0x18
    asrs r3, r0, #0x18
    ldrb r0, [r5, #0x18]
    cmp r0, #0
    bne lbl_0808963a
    ldrb r0, [r5, #0x1e]
    cmp r0, #0
    beq lbl_0808963a
    adds r0, r5, #0
    adds r0, #0x4a
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0808963a
    str r7, [r5, #0x20]
    adds r2, #0xf
    movs r0, #0x10
    rsbs r0, r0, #0
    ands r2, r0
    subs r0, #0xf0
    adds r1, r2, r0
    ldr r0, lbl_08089644 @ =0x0003ff00
    cmp r1, r0
    bls lbl_08089648
lbl_0808963a:
    adds r0, r5, #0
    bl sub_08089164
    b lbl_080896b0
    .align 2, 0
lbl_08089644: .4byte 0x0003ff00
lbl_08089648:
    adds r0, r7, r2
    str r0, [r5, #0x24]
    adds r0, r3, #4
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #8
    bhi lbl_0808969c
    lsls r0, r0, #2
    ldr r1, lbl_08089660 @ =lbl_08089664
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08089660: .4byte lbl_08089664
lbl_08089664: @ jump table
    .4byte lbl_08089688 @ case 0
    .4byte lbl_08089688 @ case 1
    .4byte lbl_08089688 @ case 2
    .4byte lbl_08089688 @ case 3
    .4byte lbl_08089690 @ case 4
    .4byte lbl_08089696 @ case 5
    .4byte lbl_08089696 @ case 6
    .4byte lbl_08089696 @ case 7
    .4byte lbl_08089696 @ case 8
lbl_08089688:
    lsls r4, r6, #3
    movs r0, #3
    subs r0, r0, r3
    b lbl_0808969a
lbl_08089690:
    movs r0, #0x38
    adds r4, r6, #0
    b lbl_0808969a
lbl_08089696:
    lsls r4, r6, #3
    subs r0, r3, #1
lbl_0808969a:
    orrs r4, r0
lbl_0808969c:
    movs r0, #0x3f
    ands r4, r0
    lsls r0, r4, #1
    movs r2, #0x7f
    rsbs r2, r2, #0
    adds r1, r2, #0
    orrs r0, r1
    strb r0, [r5, #0x1c]
    movs r0, #0xd0
    strb r0, [r5, #0x18]
lbl_080896b0:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_080896b8
sub_080896b8: @ 0x080896b8
    push {lr}
    ldrb r0, [r0, #0x18]
    cmp r0, #0xe9
    beq lbl_080896c4
    movs r0, #0
    b lbl_080896c6
lbl_080896c4:
    movs r0, #1
lbl_080896c6:
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_080896cc
sub_080896cc: @ 0x080896cc
    push {r4, r5, r6, lr}
    adds r3, r0, #0
    ldrb r0, [r3, #0x18]
    cmp r0, #0xe0
    beq lbl_080896e8
    cmp r0, #0xe0
    blt lbl_080896f8
    cmp r0, #0xe8
    bgt lbl_080896f8
    cmp r0, #0xe7
    blt lbl_080896f8
    movs r4, #3
    ldrb r5, [r3, #0x1e]
    b lbl_08089758
lbl_080896e8:
    movs r1, #0
    movs r0, #0xe1
    strb r0, [r3, #0x18]
    str r1, [r3, #4]
    movs r0, #0x80
    lsls r0, r0, #0xd
    str r0, [r3]
    b lbl_0808974a
lbl_080896f8:
    movs r4, #3
    ldrb r5, [r3, #0x1e]
    movs r6, #1
    ldr r1, lbl_08089754 @ =0x04000126
lbl_08089700:
    ldrh r0, [r1]
    adds r2, r0, #0
    adds r0, r5, #0
    asrs r0, r4
    ands r0, r6
    cmp r0, #0
    beq lbl_08089714
    ldr r0, [r3, #4]
    cmp r2, r0
    bne lbl_080896e8
lbl_08089714:
    subs r1, #2
    subs r4, #1
    cmp r4, #0
    bne lbl_08089700
    ldrb r0, [r3, #0x18]
    adds r0, #1
    strb r0, [r3, #0x18]
    ldr r1, [r3]
    ldrh r0, [r3]
    str r0, [r3, #4]
    cmp r1, #0
    bne lbl_08089742
    ldr r0, [r3, #0x28]
    adds r1, r0, #0
    adds r1, #0xac
    ldrb r1, [r1]
    adds r0, #0xad
    ldrb r0, [r0]
    lsls r0, r0, #8
    orrs r1, r0
    str r1, [r3, #4]
    lsls r1, r1, #5
    str r1, [r3]
lbl_08089742:
    ldr r0, [r3]
    lsrs r0, r0, #5
    str r0, [r3]
lbl_08089748:
    ldrh r1, [r3]
lbl_0808974a:
    adds r0, r3, #0
    bl sub_08089590
    b lbl_080897b0
    .align 2, 0
lbl_08089754: .4byte 0x04000126
lbl_08089758:
    lsls r0, r4, #1
    ldr r1, lbl_080897a0 @ =0x04000120
    adds r0, r0, r1
    ldrh r0, [r0]
    adds r2, r0, #0
    adds r0, r5, #0
    asrs r0, r4
    movs r1, #1
    ands r0, r1
    cmp r0, #0
    beq lbl_08089774
    ldr r0, [r3, #4]
    cmp r2, r0
    bne lbl_080897a4
lbl_08089774:
    subs r4, #1
    cmp r4, #0
    bne lbl_08089758
    ldrb r0, [r3, #0x18]
    adds r0, #1
    strb r0, [r3, #0x18]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xe9
    beq lbl_080897ae
    ldr r0, [r3, #0x28]
    adds r1, r0, #0
    adds r1, #0xae
    ldrb r1, [r1]
    adds r0, #0xaf
    ldrb r0, [r0]
    lsls r0, r0, #8
    orrs r1, r0
    str r1, [r3]
    str r1, [r3, #4]
    b lbl_08089748
    .align 2, 0
lbl_080897a0: .4byte 0x04000120
lbl_080897a4:
    adds r0, r3, #0
    bl sub_08089164
    movs r0, #0x71
    b lbl_080897b0
lbl_080897ae:
    movs r0, #0
lbl_080897b0:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_080897b8
sub_080897b8: @ 0x080897b8
    mov r2, pc
    lsrs r2, r2, #0x18
    movs r1, #0xc
    cmp r2, #2
    beq lbl_080897ca
    movs r1, #0xd
    cmp r2, #8
    beq lbl_080897ca
    movs r1, #4
lbl_080897ca:
    subs r0, r0, r1
    bgt lbl_080897ca
    bx lr

    thumb_func_start sub_080897d0
sub_080897d0: @ 0x080897d0
    push {r4, r5, lr}
    movs r2, #0
    ldr r3, lbl_08089804 @ =0x04000128
    ldrh r1, [r3]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_080897f4
    ldr r5, lbl_08089808 @ =0x0000795c
    movs r4, #0x80
lbl_080897e4:
    adds r2, #1
    cmp r2, r5
    bgt lbl_080897f4
    ldrh r1, [r3]
    adds r0, r4, #0
    ands r0, r1
    cmp r0, #0
    bne lbl_080897e4
lbl_080897f4:
    movs r0, #0x96
    lsls r0, r0, #2
    bl sub_080897b8
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08089804: .4byte 0x04000128
lbl_08089808: .4byte 0x0000795c

    thumb_func_start sub_0808980c
sub_0808980c: @ 0x0808980c
    push {r4, r5, lr}
    sub sp, #4
    adds r5, r0, #0
    adds r4, r1, #0
    bl sub_08089d98
lbl_08089818:
    movs r0, #1
    adds r1, r5, #0
    adds r2, r4, #0
    movs r3, #0
    bl sub_080899c8
    adds r1, r0, #0
    ldr r0, lbl_08089840 @ =0x030058a8
    strh r1, [r0]
    movs r0, #3
    ands r0, r1
    cmp r0, #0
    bne lbl_08089844
    movs r0, #0xc
    ands r0, r1
    cmp r0, #0
    beq lbl_08089844
    movs r4, #0
    b lbl_08089894
    .align 2, 0
lbl_08089840: .4byte 0x030058a8
lbl_08089844:
    ldr r0, lbl_08089854 @ =0x030058a8
    ldrh r1, [r0]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0
    beq lbl_08089858
    movs r4, #1
    b lbl_08089894
    .align 2, 0
lbl_08089854: .4byte 0x030058a8
lbl_08089858:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0
    beq lbl_08089864
    movs r4, #2
    b lbl_08089894
lbl_08089864:
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0
    beq lbl_08089870
    movs r4, #3
    b lbl_08089894
lbl_08089870:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0
    beq lbl_0808987c
    movs r4, #4
    b lbl_08089894
lbl_0808987c:
    ldr r0, lbl_08089890 @ =0x03005808
    ldr r0, [r0]
    cmp r0, #0
    beq lbl_08089888
    bl _call_via_r0
lbl_08089888:
    bl VBlankIntrWait
    b lbl_08089818
    .align 2, 0
lbl_08089890: .4byte 0x03005808
lbl_08089894:
    movs r0, #0
    str r0, [sp]
    ldr r1, lbl_080898b0 @ =0x03005890
    ldr r2, lbl_080898b4 @ =0x05000006
    mov r0, sp
    bl CpuSet
    bl sub_08089dec
    adds r0, r4, #0
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_080898b0: .4byte 0x03005890
lbl_080898b4: .4byte 0x05000006

    thumb_func_start sub_080898b8
sub_080898b8: @ 0x080898b8
    push {lr}
    sub sp, #4
    ldr r1, lbl_080898ec @ =0x030058aa
    movs r0, #0
    strb r0, [r1]
    ldr r0, lbl_080898f0 @ =0x030058ac
    movs r1, #0
    strh r1, [r0]
    ldr r0, lbl_080898f4 @ =0x030058ae
    strb r1, [r0]
    ldr r0, lbl_080898f8 @ =0x030058af
    strb r1, [r0]
    ldr r0, lbl_080898fc @ =0x030058b0
    strb r1, [r0]
    ldr r0, lbl_08089900 @ =0x030058b1
    strb r1, [r0]
    movs r0, #0
    str r0, [sp]
    ldr r1, lbl_08089904 @ =0x03005890
    ldr r2, lbl_08089908 @ =0x05000006
    mov r0, sp
    bl CpuSet
    add sp, #4
    pop {r0}
    bx r0
    .align 2, 0
lbl_080898ec: .4byte 0x030058aa
lbl_080898f0: .4byte 0x030058ac
lbl_080898f4: .4byte 0x030058ae
lbl_080898f8: .4byte 0x030058af
lbl_080898fc: .4byte 0x030058b0
lbl_08089900: .4byte 0x030058b1
lbl_08089904: .4byte 0x03005890
lbl_08089908: .4byte 0x05000006

    thumb_func_start sub_0808990c
sub_0808990c: @ 0x0808990c
    push {r4, lr}
    ldr r4, lbl_08089938 @ =0x04000208
    movs r3, #0
    strh r3, [r4]
    ldr r2, lbl_0808993c @ =0x04000200
    ldrh r1, [r2]
    ldr r0, lbl_08089940 @ =0x0000ff3f
    ands r0, r1
    strh r0, [r2]
    movs r0, #1
    strh r0, [r4]
    ldr r0, lbl_08089944 @ =0x04000128
    strh r3, [r0]
    subs r0, #0x1a
    strh r3, [r0]
    ldr r1, lbl_08089948 @ =0x04000202
    movs r0, #0xc0
    strh r0, [r1]
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08089938: .4byte 0x04000208
lbl_0808993c: .4byte 0x04000200
lbl_08089940: .4byte 0x0000ff3f
lbl_08089944: .4byte 0x04000128
lbl_08089948: .4byte 0x04000202

    thumb_func_start sub_0808994c
sub_0808994c: @ 0x0808994c
    push {r4, r5, r6, r7, lr}
    ldr r5, lbl_0808998c @ =0x04000208
    movs r4, #0
    strh r4, [r5]
    ldr r3, lbl_08089990 @ =0x04000200
    ldrh r1, [r3]
    ldr r0, lbl_08089994 @ =0x0000ff3f
    ands r0, r1
    strh r0, [r3]
    movs r6, #1
    strh r6, [r5]
    ldr r0, lbl_08089998 @ =0x04000134
    strh r4, [r0]
    ldr r2, lbl_0808999c @ =0x04000128
    movs r1, #0x80
    lsls r1, r1, #6
    adds r0, r1, #0
    strh r0, [r2]
    ldrh r0, [r2]
    ldr r7, lbl_080899a0 @ =0x00004003
    adds r1, r7, #0
    orrs r0, r1
    strh r0, [r2]
    strh r4, [r5]
    ldrh r0, [r3]
    movs r1, #0x80
    orrs r0, r1
    strh r0, [r3]
    strh r6, [r5]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808998c: .4byte 0x04000208
lbl_08089990: .4byte 0x04000200
lbl_08089994: .4byte 0x0000ff3f
lbl_08089998: .4byte 0x04000134
lbl_0808999c: .4byte 0x04000128
lbl_080899a0: .4byte 0x00004003

    thumb_func_start sub_080899a4
sub_080899a4: @ 0x080899a4
    ldr r1, lbl_080899c0 @ =0x04000134
    movs r0, #0
    strh r0, [r1]
    ldr r2, lbl_080899c4 @ =0x04000128
    movs r1, #0xa0
    lsls r1, r1, #7
    adds r0, r1, #0
    strh r0, [r2]
    ldrh r0, [r2]
    movs r1, #8
    orrs r0, r1
    strh r0, [r2]
    bx lr
    .align 2, 0
lbl_080899c0: .4byte 0x04000134
lbl_080899c4: .4byte 0x04000128

    thumb_func_start sub_080899c8
sub_080899c8: @ 0x080899c8
    push {r4, r5, r6, lr}
    adds r4, r1, #0
    adds r5, r2, #0
    adds r6, r3, #0
    ldr r0, lbl_080899e4 @ =0x03005890
    ldrb r0, [r0, #1]
    cmp r0, #6
    bls lbl_080899da
    b lbl_08089b0c
lbl_080899da:
    lsls r0, r0, #2
    ldr r1, lbl_080899e8 @ =lbl_080899ec
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_080899e4: .4byte 0x03005890
lbl_080899e8: .4byte lbl_080899ec
lbl_080899ec: @ jump table
    .4byte lbl_08089a08 @ case 0
    .4byte lbl_08089a20 @ case 1
    .4byte lbl_08089a60 @ case 2
    .4byte lbl_08089a74 @ case 3
    .4byte lbl_08089ab4 @ case 4
    .4byte lbl_08089ac4 @ case 5
    .4byte lbl_08089afc @ case 6
lbl_08089a08:
    bl sub_080898b8
    bl sub_0808994c
    ldr r1, lbl_08089a1c @ =0x03005890
    movs r0, #1
    strb r0, [r1, #3]
    strb r0, [r1, #1]
    b lbl_08089b0c
    .align 2, 0
lbl_08089a1c: .4byte 0x03005890
lbl_08089a20:
    movs r0, #1
    bl sub_08089b3c
    lsls r0, r0, #0x10
    cmp r0, #0
    beq lbl_08089a30
    bl set_siocnt_start_bit_active
lbl_08089a30:
    ldr r2, lbl_08089a58 @ =0x03005890
    ldrb r0, [r2, #5]
    cmp r0, #0
    beq lbl_08089a3c
    movs r0, #6
    strb r0, [r2, #1]
lbl_08089a3c:
    ldr r1, lbl_08089a5c @ =0x030058ae
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x1e
    bls lbl_08089b0c
    movs r0, #4
    strb r0, [r2, #5]
    movs r0, #6
    strb r0, [r2, #1]
    b lbl_08089b0c
    .align 2, 0
lbl_08089a58: .4byte 0x03005890
lbl_08089a5c: .4byte 0x030058ae
lbl_08089a60:
    bl sub_080899a4
    adds r0, r4, #0
    adds r1, r5, #0
    adds r2, r6, #0
    bl sub_08089b70
    ldr r1, lbl_08089a9c @ =0x03005890
    movs r0, #3
    strb r0, [r1, #1]
lbl_08089a74:
    ldr r4, lbl_08089a9c @ =0x03005890
    ldrb r0, [r4, #3]
    cmp r0, #2
    beq lbl_08089b0c
    ldrb r0, [r4]
    cmp r0, #0
    beq lbl_08089aa4
    ldr r1, lbl_08089aa0 @ =0x030058ac
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #9
    bls lbl_08089aa4
    bl set_siocnt_start_bit_active
    movs r0, #2
    b lbl_08089b0a
    .align 2, 0
lbl_08089a9c: .4byte 0x03005890
lbl_08089aa0: .4byte 0x030058ac
lbl_08089aa4:
    bl set_siocnt_start_bit_active
    ldr r1, lbl_08089ab0 @ =0x03005890
    movs r0, #2
    strb r0, [r1, #3]
    b lbl_08089b0c
    .align 2, 0
lbl_08089ab0: .4byte 0x03005890
lbl_08089ab4:
    bl sub_0808994c
    ldr r1, lbl_08089ac0 @ =0x03005890
    movs r0, #5
    strb r0, [r1, #1]
    b lbl_08089b0c
    .align 2, 0
lbl_08089ac0: .4byte 0x03005890
lbl_08089ac4:
    ldr r0, lbl_08089af4 @ =0x03005890
    ldrb r0, [r0]
    cmp r0, #1
    bne lbl_08089ad8
    ldr r0, lbl_08089af8 @ =0x030058ac
    ldrh r0, [r0]
    cmp r0, #9
    bls lbl_08089ad8
    bl set_siocnt_start_bit_active
lbl_08089ad8:
    ldr r1, lbl_08089af8 @ =0x030058ac
    ldrh r0, [r1]
    adds r0, #1
    strh r0, [r1]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x1e
    bls lbl_08089b0c
    ldr r0, lbl_08089af4 @ =0x03005890
    movs r1, #1
    strb r1, [r0, #5]
    movs r1, #6
    strb r1, [r0, #1]
    b lbl_08089b0c
    .align 2, 0
lbl_08089af4: .4byte 0x03005890
lbl_08089af8: .4byte 0x030058ac
lbl_08089afc:
    ldr r4, lbl_08089b38 @ =0x03005890
    ldrb r0, [r4, #3]
    cmp r0, #0
    beq lbl_08089b0c
    bl sub_0808990c
    movs r0, #0
lbl_08089b0a:
    strb r0, [r4, #3]
lbl_08089b0c:
    ldr r4, lbl_08089b38 @ =0x03005890
    ldr r1, [r4, #0xc]
    movs r0, #0x64
    muls r0, r1, r0
    ldr r1, [r4, #0x10]
    bl __divsi3
    strb r0, [r4, #2]
    ldrb r0, [r4, #3]
    ldrb r1, [r4, #4]
    lsls r1, r1, #2
    orrs r0, r1
    ldrb r1, [r4, #5]
    lsls r1, r1, #4
    orrs r0, r1
    ldrb r1, [r4, #2]
    lsls r1, r1, #8
    orrs r0, r1
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08089b38: .4byte 0x03005890

    thumb_func_start sub_08089b3c
sub_08089b3c: @ 0x08089b3c
    push {lr}
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    ldr r0, lbl_08089b58 @ =0x04000128
    ldr r0, [r0]
    movs r1, #0xc
    ands r0, r1
    cmp r0, #8
    bne lbl_08089b60
    cmp r2, #0
    beq lbl_08089b60
    ldr r1, lbl_08089b5c @ =0x03005890
    movs r0, #1
    b lbl_08089b64
    .align 2, 0
lbl_08089b58: .4byte 0x04000128
lbl_08089b5c: .4byte 0x03005890
lbl_08089b60:
    ldr r1, lbl_08089b6c @ =0x03005890
    movs r0, #0
lbl_08089b64:
    strb r0, [r1]
    pop {r1}
    bx r1
    .align 2, 0
lbl_08089b6c: .4byte 0x03005890

    thumb_func_start sub_08089b70
sub_08089b70: @ 0x08089b70
    push {r4, lr}
    ldr r4, lbl_08089b94 @ =0x04000128
    ldrh r2, [r4]
    movs r3, #1
    orrs r2, r3
    strh r2, [r4]
    ldr r2, lbl_08089b98 @ =0x03005890
    str r1, [r2, #8]
    ldr r1, lbl_08089b9c @ =0x04000120
    str r0, [r1]
    lsrs r0, r0, #2
    adds r0, #1
    str r0, [r2, #0x10]
    bl sub_08089ba0
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_08089b94: .4byte 0x04000128
lbl_08089b98: .4byte 0x03005890
lbl_08089b9c: .4byte 0x04000120

    thumb_func_start sub_08089ba0
sub_08089ba0: @ 0x08089ba0
    ldr r1, lbl_08089bc4 @ =0x0400010c
    ldr r2, lbl_08089bc8 @ =0x0000ff9b
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08089bcc @ =0x0400010e
    movs r2, #0x40
    strh r2, [r0]
    ldr r3, lbl_08089bd0 @ =0x04000208
    movs r0, #0
    strh r0, [r3]
    adds r1, #0xf4
    ldrh r0, [r1]
    orrs r0, r2
    strh r0, [r1]
    movs r0, #1
    strh r0, [r3]
    bx lr
    .align 2, 0
lbl_08089bc4: .4byte 0x0400010c
lbl_08089bc8: .4byte 0x0000ff9b
lbl_08089bcc: .4byte 0x0400010e
lbl_08089bd0: .4byte 0x04000208

    thumb_func_start sub_08089bd4
sub_08089bd4: @ 0x08089bd4
    push {lr}
    bl sub_08089d74
    bl set_siocnt_start_bit_active
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start serial_communication_code_connecting
serial_communication_code_connecting: @ 0x08089be4
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    sub sp, #8
    ldr r0, lbl_08089c04 @ =0x04000128
    ldr r6, [r0]
    ldr r2, lbl_08089c08 @ =0x03005890
    ldrb r0, [r2, #1]
    adds r4, r2, #0
    cmp r0, #3
    beq lbl_08089c98
    cmp r0, #3
    bgt lbl_08089c0c
    cmp r0, #1
    beq lbl_08089c12
    b lbl_08089d56
    .align 2, 0
lbl_08089c04: .4byte 0x04000128
lbl_08089c08: .4byte 0x03005890
lbl_08089c0c:
    cmp r0, #5
    beq lbl_08089d00
    b lbl_08089d56
lbl_08089c12:
    ldr r1, lbl_08089c4c @ =0x0400012a
    ldr r2, lbl_08089c50 @ =0x00007c40
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_08089c54 @ =0x04000120
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [sp]
    str r1, [sp, #4]
    movs r1, #0
    movs r3, #0
    movs r2, #0
    ldr r5, lbl_08089c58 @ =0x030058b0
    ldr r0, lbl_08089c5c @ =0x030058b1
    mov r8, r0
    lsls r6, r6, #0x1a
    ldr r0, lbl_08089c50 @ =0x00007c40
    mov ip, r0
    ldr r7, lbl_08089c60 @ =0x0000ffff
lbl_08089c38:
    lsls r0, r1, #1
    add r0, sp
    ldrh r0, [r0]
    cmp r0, ip
    bne lbl_08089c64
    adds r0, r3, #1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    b lbl_08089c6e
    .align 2, 0
lbl_08089c4c: .4byte 0x0400012a
lbl_08089c50: .4byte 0x00007c40
lbl_08089c54: .4byte 0x04000120
lbl_08089c58: .4byte 0x030058b0
lbl_08089c5c: .4byte 0x030058b1
lbl_08089c60: .4byte 0x0000ffff
lbl_08089c64:
    cmp r0, r7
    beq lbl_08089c6e
    adds r0, r2, #1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
lbl_08089c6e:
    adds r0, r1, #1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #3
    bls lbl_08089c38
    strb r3, [r5]
    lsrs r0, r6, #0x1e
    mov r1, r8
    strb r0, [r1]
    cmp r3, #2
    bhi lbl_08089c92
    cmp r3, #1
    bls lbl_08089d56
    cmp r2, #0
    bne lbl_08089d56
    movs r0, #2
    strb r0, [r4, #1]
    b lbl_08089d56
lbl_08089c92:
    movs r0, #8
    strb r0, [r4, #5]
    b lbl_08089d56
lbl_08089c98:
    ldr r2, lbl_08089cb8 @ =0x04000120
    ldr r0, [r2]
    ldr r1, [r4, #0xc]
    ldr r0, [r4, #0x10]
    cmp r1, r0
    bge lbl_08089cbc
    ldr r0, [r4, #8]
    lsls r1, r1, #2
    adds r1, r1, r0
    ldr r0, [r1]
    str r0, [r2]
    ldr r0, [r4, #0x14]
    ldr r1, [r1]
    adds r0, r0, r1
    str r0, [r4, #0x14]
    b lbl_08089cc8
    .align 2, 0
lbl_08089cb8: .4byte 0x04000120
lbl_08089cbc:
    cmp r1, r0
    bne lbl_08089cc4
    ldr r0, [r4, #0x14]
    b lbl_08089cc6
lbl_08089cc4:
    movs r0, #0
lbl_08089cc6:
    str r0, [r2]
lbl_08089cc8:
    ldr r1, [r4, #0xc]
    adds r1, #1
    str r1, [r4, #0xc]
    ldr r0, lbl_08089ce8 @ =0x030058b0
    ldrb r2, [r0]
    ldr r0, [r4, #0x10]
    adds r0, r0, r2
    cmp r1, r0
    bge lbl_08089cf0
    ldr r0, lbl_08089cec @ =0x0400010e
    ldrh r1, [r0]
    movs r2, #0x80
    orrs r1, r2
    strh r1, [r0]
    b lbl_08089d56
    .align 2, 0
lbl_08089ce8: .4byte 0x030058b0
lbl_08089cec: .4byte 0x0400010e
lbl_08089cf0:
    movs r0, #0
    movs r1, #4
    strb r1, [r4, #1]
    ldr r1, lbl_08089cfc @ =0x030058ac
    strh r0, [r1]
    b lbl_08089d56
    .align 2, 0
lbl_08089cfc: .4byte 0x030058ac
lbl_08089d00:
    ldr r0, lbl_08089d30 @ =0x04000120
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [sp]
    str r1, [sp, #4]
    movs r1, #1
    movs r3, #1
    ldr r0, lbl_08089d34 @ =0x030058b0
    adds r5, r0, #0
    ldrb r0, [r5]
    cmp r1, r0
    bhs lbl_08089d56
    movs r4, #6
lbl_08089d1a:
    lsls r0, r1, #1
    add r0, sp
    ldrh r0, [r0]
    cmp r0, #1
    beq lbl_08089d38
    cmp r0, #2
    bne lbl_08089d3e
    strb r0, [r2, #4]
    strb r4, [r2, #1]
    b lbl_08089d56
    .align 2, 0
lbl_08089d30: .4byte 0x04000120
lbl_08089d34: .4byte 0x030058b0
lbl_08089d38:
    adds r0, r3, #1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
lbl_08089d3e:
    ldrb r0, [r5]
    cmp r3, r0
    bne lbl_08089d4a
    movs r0, #1
    strb r0, [r2, #4]
    strb r4, [r2, #1]
lbl_08089d4a:
    adds r0, r1, #1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    ldrb r0, [r5]
    cmp r1, r0
    blo lbl_08089d1a
lbl_08089d56:
    add sp, #8
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start set_siocnt_start_bit_active
set_siocnt_start_bit_active: @ 0x08089d64
    ldr r0, lbl_08089d70 @ =0x04000128
    ldrh r1, [r0]
    movs r2, #0x80
    orrs r1, r2
    strh r1, [r0]
    bx lr
    .align 2, 0
lbl_08089d70: .4byte 0x04000128

    thumb_func_start sub_08089d74
sub_08089d74: @ 0x08089d74
    ldr r2, lbl_08089d88 @ =0x0400010e
    ldrh r1, [r2]
    ldr r0, lbl_08089d8c @ =0x0000ff7f
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_08089d90 @ =0x0400010c
    ldr r2, lbl_08089d94 @ =0x0000ff9b
    adds r0, r2, #0
    strh r0, [r1]
    bx lr
    .align 2, 0
lbl_08089d88: .4byte 0x0400010e
lbl_08089d8c: .4byte 0x0000ff7f
lbl_08089d90: .4byte 0x0400010c
lbl_08089d94: .4byte 0x0000ff9b

    thumb_func_start sub_08089d98
sub_08089d98: @ 0x08089d98
    ldr r1, lbl_08089dc4 @ =0x030058b2
    ldr r0, lbl_08089dc8 @ =0x04000208
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_08089dcc @ =0x030058b4
    ldr r0, lbl_08089dd0 @ =0x04000200
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_08089dd4 @ =0x030058b6
    ldr r0, lbl_08089dd8 @ =0x0400010e
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_08089ddc @ =0x030058b8
    ldr r0, lbl_08089de0 @ =0x04000128
    ldrh r0, [r0]
    strh r0, [r1]
    ldr r1, lbl_08089de4 @ =0x030058ba
    ldr r0, lbl_08089de8 @ =0x04000134
    ldrh r0, [r0]
    strh r0, [r1]
    bx lr
    .align 2, 0
lbl_08089dc4: .4byte 0x030058b2
lbl_08089dc8: .4byte 0x04000208
lbl_08089dcc: .4byte 0x030058b4
lbl_08089dd0: .4byte 0x04000200
lbl_08089dd4: .4byte 0x030058b6
lbl_08089dd8: .4byte 0x0400010e
lbl_08089ddc: .4byte 0x030058b8
lbl_08089de0: .4byte 0x04000128
lbl_08089de4: .4byte 0x030058ba
lbl_08089de8: .4byte 0x04000134

    thumb_func_start sub_08089dec
sub_08089dec: @ 0x08089dec
    ldr r1, lbl_08089e18 @ =0x04000208
    ldr r0, lbl_08089e1c @ =0x030058b2
    ldrh r0, [r0]
    strh r0, [r1]
    subs r1, #8
    ldr r0, lbl_08089e20 @ =0x030058b4
    ldrh r0, [r0]
    strh r0, [r1]
    subs r1, #0xf2
    ldr r0, lbl_08089e24 @ =0x030058b6
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #0x1a
    ldr r0, lbl_08089e28 @ =0x030058b8
    ldrh r0, [r0]
    strh r0, [r1]
    adds r1, #0xc
    ldr r0, lbl_08089e2c @ =0x030058ba
    ldrh r0, [r0]
    strh r0, [r1]
    bx lr
    .align 2, 0
lbl_08089e18: .4byte 0x04000208
lbl_08089e1c: .4byte 0x030058b2
lbl_08089e20: .4byte 0x030058b4
lbl_08089e24: .4byte 0x030058b6
lbl_08089e28: .4byte 0x030058b8
lbl_08089e2c: .4byte 0x030058ba

    thumb_func_start sub_08089e30
sub_08089e30: @ 0x08089e30
    push {r4, r5, lr}
    sub sp, #4
    ldr r1, lbl_08089e54 @ =0x03005808
    movs r0, #0
    strb r0, [r1, #0xb]
    ldrh r0, [r1, #6]
    adds r0, #1
    strh r0, [r1, #6]
    ldrb r0, [r1, #0xa]
    cmp r0, #5
    bls lbl_08089e48
    b lbl_08089f82
lbl_08089e48:
    lsls r0, r0, #2
    ldr r1, lbl_08089e58 @ =lbl_08089e5c
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_08089e54: .4byte 0x03005808
lbl_08089e58: .4byte lbl_08089e5c
lbl_08089e5c: @ jump table
    .4byte lbl_08089e74 @ case 0
    .4byte lbl_08089f10 @ case 1
    .4byte lbl_08089f66 @ case 2
    .4byte lbl_08089f7c @ case 3
    .4byte lbl_08089f7c @ case 4
    .4byte lbl_08089f82 @ case 5
lbl_08089e74:
    mov r0, sp
    movs r4, #0
    strh r4, [r0]
    ldr r1, lbl_08089edc @ =0x040000d4
    str r0, [r1]
    ldr r0, lbl_08089ee0 @ =0x030058c0
    str r0, [r1, #4]
    ldr r0, lbl_08089ee4 @ =0x81000002
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    mov r0, sp
    strh r4, [r0]
    str r0, [r1]
    ldr r0, lbl_08089ee8 @ =0x030058c4
    str r0, [r1, #4]
    ldr r0, lbl_08089eec @ =0x81000004
    str r0, [r1, #8]
    ldr r0, [r1, #8]
    ldr r0, lbl_08089ef0 @ =0x030058bc
    movs r5, #0
    str r5, [r0]
    ldr r0, lbl_08089ef4 @ =0x030058cc
    strb r4, [r0]
    ldr r0, lbl_08089ef8 @ =0x030058cd
    strb r4, [r0]
    ldr r0, lbl_08089efc @ =0x030058ce
    strb r4, [r0]
    ldr r0, lbl_08089f00 @ =0x030058cf
    strb r4, [r0]
    ldr r0, lbl_08089f04 @ =sub_0808a7b0
    bl CallbackSetSerialCommunication
    ldr r0, lbl_08089f08 @ =sub_0808a7a0
    bl CallbackSetTimer3
    bl sub_0808a39c
    ldr r1, lbl_08089f0c @ =0x03005808
    movs r0, #0xaa
    lsls r0, r0, #7
    strh r0, [r1, #0xe]
    movs r0, #0xff
    strb r0, [r1, #0x11]
    movs r0, #1
    rsbs r0, r0, #0
    strb r0, [r1, #0x10]
    strb r4, [r1, #0xc]
    strh r5, [r1, #6]
    ldrb r0, [r1, #0xa]
    adds r0, #1
    strb r0, [r1, #0xa]
    b lbl_08089f82
    .align 2, 0
lbl_08089edc: .4byte 0x040000d4
lbl_08089ee0: .4byte 0x030058c0
lbl_08089ee4: .4byte 0x81000002
lbl_08089ee8: .4byte 0x030058c4
lbl_08089eec: .4byte 0x81000004
lbl_08089ef0: .4byte 0x030058bc
lbl_08089ef4: .4byte 0x030058cc
lbl_08089ef8: .4byte 0x030058cd
lbl_08089efc: .4byte 0x030058ce
lbl_08089f00: .4byte 0x030058cf
lbl_08089f04: .4byte sub_0808a7b0
lbl_08089f08: .4byte sub_0808a7a0
lbl_08089f0c: .4byte 0x03005808
lbl_08089f10:
    ldr r4, lbl_08089f2c @ =0x03005808
    ldrb r0, [r4, #4]
    cmp r0, #0
    bne lbl_08089f42
    bl sub_0808a260
    ldrh r1, [r4, #0xe]
    movs r0, #0xcc
    lsls r0, r0, #6
    cmp r1, r0
    bne lbl_08089f30
    movs r0, #2
    strb r0, [r4, #0xa]
    b lbl_08089f82
    .align 2, 0
lbl_08089f2c: .4byte 0x03005808
lbl_08089f30:
    ldrb r0, [r4, #0xc]
    cmp r0, #0
    beq lbl_08089f3c
    movs r0, #3
    strb r0, [r4, #0xa]
    b lbl_08089f82
lbl_08089f3c:
    movs r0, #4
    strb r0, [r4, #0xa]
    b lbl_08089f82
lbl_08089f42:
    bl check_error
    ldrh r1, [r4, #0xe]
    movs r0, #0xcc
    lsls r0, r0, #6
    cmp r1, r0
    beq lbl_08089f56
    ldrb r1, [r4, #0xc]
    cmp r1, #0
    beq lbl_08089f5c
lbl_08089f56:
    movs r0, #0
    strb r0, [r4, #4]
    b lbl_08089f82
lbl_08089f5c:
    ldrh r0, [r4, #6]
    cmp r0, #0xb4
    bls lbl_08089f82
    strb r1, [r4, #4]
    b lbl_08089f82
lbl_08089f66:
    ldr r2, lbl_08089f74 @ =0x03000014
    ldr r1, lbl_08089f78 @ =0x03005808
    movs r0, #0x10
    ldrsb r0, [r1, r0]
    strh r0, [r2, #2]
    movs r0, #1
    b lbl_08089f80
    .align 2, 0
lbl_08089f74: .4byte 0x03000014
lbl_08089f78: .4byte 0x03005808
lbl_08089f7c:
    ldr r1, lbl_08089f90 @ =0x03005808
    movs r0, #4
lbl_08089f80:
    strb r0, [r1, #0xb]
lbl_08089f82:
    ldr r0, lbl_08089f90 @ =0x03005808
    ldrb r0, [r0, #0xb]
    add sp, #4
    pop {r4, r5}
    pop {r1}
    bx r1
    .align 2, 0
lbl_08089f90: .4byte 0x03005808

    thumb_func_start check_error
check_error: @ 0x08089f94
    push {r4, lr}
    sub sp, #4
    ldr r0, lbl_0808a0d0 @ =0x030058cc
    ldr r1, lbl_0808a0d4 @ =0x03000c77
    ldrb r2, [r1]
    movs r1, #1
    ands r1, r2
    strb r1, [r0]
    ldr r4, lbl_0808a0d8 @ =0x030058bc
    ldr r1, lbl_0808a0dc @ =0x030058c0
    ldr r2, lbl_0808a0e0 @ =0x030058c4
    bl detect_error
    adds r2, r0, #0
    str r2, [r4]
    ldr r3, lbl_0808a0e4 @ =0x030058ce
    movs r1, #3
    ands r1, r2
    strb r1, [r3]
    ldr r3, lbl_0808a0e8 @ =0x030058cd
    movs r1, #0x1c
    ands r1, r2
    lsrs r1, r1, #2
    strb r1, [r3]
    ldr r3, lbl_0808a0ec @ =0x030058cf
    movs r1, #0xe0
    lsls r1, r1, #4
    ands r1, r2
    lsrs r1, r1, #9
    strb r1, [r3]
    movs r1, #0x40
    ands r2, r1
    cmp r2, #0
    beq lbl_08089fe8
    ldr r0, lbl_0808a0f0 @ =0x03005808
    movs r1, #0
    strh r1, [r0, #6]
    ldrh r0, [r0, #0xe]
    bl sub_0808a12c
    bl sub_0808a1d4
lbl_08089fe8:
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #0xf
    ands r1, r2
    cmp r1, #0
    beq lbl_0808a008
    ldr r2, lbl_0808a0f0 @ =0x03005808
    ldrb r0, [r2, #0xc]
    movs r1, #1
    orrs r0, r1
    strb r0, [r2, #0xc]
    ldr r0, lbl_0808a0f4 @ =0x085d9174
    ldr r1, lbl_0808a0f8 @ =0x0600e304
    movs r2, #0xc
    bl sub_08089110
lbl_0808a008:
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #0xa
    ands r1, r2
    cmp r1, #0
    beq lbl_0808a028
    ldr r2, lbl_0808a0f0 @ =0x03005808
    ldrb r1, [r2, #0xc]
    movs r0, #2
    orrs r0, r1
    strb r0, [r2, #0xc]
    ldr r0, lbl_0808a0fc @ =0x085d9184
    ldr r1, lbl_0808a100 @ =0x0600e344
    movs r2, #0xc
    bl sub_08089110
lbl_0808a028:
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #9
    ands r1, r2
    cmp r1, #0
    beq lbl_0808a048
    ldr r2, lbl_0808a0f0 @ =0x03005808
    ldrb r1, [r2, #0xc]
    movs r0, #4
    orrs r0, r1
    strb r0, [r2, #0xc]
    ldr r0, lbl_0808a104 @ =0x085d9198
    ldr r1, lbl_0808a108 @ =0x0600e384
    movs r2, #0xc
    bl sub_08089110
lbl_0808a048:
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #0xb
    ands r1, r2
    cmp r1, #0
    beq lbl_0808a068
    ldr r2, lbl_0808a0f0 @ =0x03005808
    ldrb r1, [r2, #0xc]
    movs r0, #8
    orrs r0, r1
    strb r0, [r2, #0xc]
    ldr r0, lbl_0808a10c @ =0x085d91ac
    ldr r1, lbl_0808a110 @ =0x0600e3c4
    movs r2, #0xc
    bl sub_08089110
lbl_0808a068:
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #0xc
    ands r1, r2
    cmp r1, #0
    beq lbl_0808a088
    ldr r2, lbl_0808a0f0 @ =0x03005808
    ldrb r1, [r2, #0xc]
    movs r0, #0x10
    orrs r0, r1
    strb r0, [r2, #0xc]
    ldr r0, lbl_0808a114 @ =0x085d91c0
    ldr r1, lbl_0808a118 @ =0x0600e404
    movs r2, #0xc
    bl sub_08089110
lbl_0808a088:
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #0xd
    ands r1, r2
    cmp r1, #0
    beq lbl_0808a0a8
    ldr r2, lbl_0808a0f0 @ =0x03005808
    ldrb r1, [r2, #0xc]
    movs r0, #0x20
    orrs r0, r1
    strb r0, [r2, #0xc]
    ldr r0, lbl_0808a11c @ =0x085d91d4
    ldr r1, lbl_0808a120 @ =0x0600e444
    movs r2, #0xc
    bl sub_08089110
lbl_0808a0a8:
    ldr r1, [r4]
    movs r2, #0x80
    lsls r2, r2, #0xe
    ands r1, r2
    cmp r1, #0
    beq lbl_0808a0c8
    ldr r2, lbl_0808a0f0 @ =0x03005808
    ldrb r1, [r2, #0xc]
    movs r0, #0x40
    orrs r0, r1
    strb r0, [r2, #0xc]
    ldr r0, lbl_0808a124 @ =0x085d91e8
    ldr r1, lbl_0808a128 @ =0x0600e484
    movs r2, #0xc
    bl sub_08089110
lbl_0808a0c8:
    add sp, #4
    pop {r4}
    pop {r1}
    bx r1
    .align 2, 0
lbl_0808a0d0: .4byte 0x030058cc
lbl_0808a0d4: .4byte 0x03000c77
lbl_0808a0d8: .4byte 0x030058bc
lbl_0808a0dc: .4byte 0x030058c0
lbl_0808a0e0: .4byte 0x030058c4
lbl_0808a0e4: .4byte 0x030058ce
lbl_0808a0e8: .4byte 0x030058cd
lbl_0808a0ec: .4byte 0x030058cf
lbl_0808a0f0: .4byte 0x03005808
lbl_0808a0f4: .4byte 0x085d9174
lbl_0808a0f8: .4byte 0x0600e304
lbl_0808a0fc: .4byte 0x085d9184
lbl_0808a100: .4byte 0x0600e344
lbl_0808a104: .4byte 0x085d9198
lbl_0808a108: .4byte 0x0600e384
lbl_0808a10c: .4byte 0x085d91ac
lbl_0808a110: .4byte 0x0600e3c4
lbl_0808a114: .4byte 0x085d91c0
lbl_0808a118: .4byte 0x0600e404
lbl_0808a11c: .4byte 0x085d91d4
lbl_0808a120: .4byte 0x0600e444
lbl_0808a124: .4byte 0x085d91e8
lbl_0808a128: .4byte 0x0600e484

    thumb_func_start sub_0808a12c
sub_0808a12c: @ 0x0808a12c
    push {lr}
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    movs r0, #0x88
    lsls r0, r0, #7
    cmp r3, r0
    beq lbl_0808a1a8
    cmp r3, r0
    bgt lbl_0808a148
    movs r0, #0x88
    lsls r0, r0, #6
    cmp r3, r0
    beq lbl_0808a1bc
    b lbl_0808a1ca
lbl_0808a148:
    movs r0, #0xaa
    lsls r0, r0, #7
    cmp r3, r0
    beq lbl_0808a18c
    movs r0, #0x88
    lsls r0, r0, #8
    cmp r3, r0
    bne lbl_0808a1ca
    ldr r2, lbl_0808a17c @ =0x030058c0
    ldrh r1, [r2]
    adds r0, r3, #0
    orrs r0, r1
    strh r0, [r2]
    ldr r0, lbl_0808a180 @ =0x0300137c
    ldrh r0, [r0]
    strh r0, [r2, #2]
    ldr r0, lbl_0808a184 @ =0x03001380
    ldrh r1, [r0]
    ldr r0, lbl_0808a188 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    strh r0, [r2, #6]
    strh r1, [r2, #4]
    b lbl_0808a1ca
    .align 2, 0
lbl_0808a17c: .4byte 0x030058c0
lbl_0808a180: .4byte 0x0300137c
lbl_0808a184: .4byte 0x03001380
lbl_0808a188: .4byte 0x03000020
lbl_0808a18c:
    ldr r1, lbl_0808a1a0 @ =0x030058c0
    ldrh r2, [r1]
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    ldr r0, lbl_0808a1a4 @ =0x03000020
    ldrb r0, [r0]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    b lbl_0808a1c8
    .align 2, 0
lbl_0808a1a0: .4byte 0x030058c0
lbl_0808a1a4: .4byte 0x03000020
lbl_0808a1a8:
    ldr r1, lbl_0808a1b8 @ =0x030058c0
    ldrh r2, [r1]
    adds r0, r3, #0
    orrs r0, r2
    movs r2, #0
    strh r0, [r1]
    strh r2, [r1, #2]
    b lbl_0808a1ca
    .align 2, 0
lbl_0808a1b8: .4byte 0x030058c0
lbl_0808a1bc:
    ldr r1, lbl_0808a1d0 @ =0x030058c0
    ldrh r2, [r1]
    adds r0, r3, #0
    orrs r0, r2
    strh r0, [r1]
    movs r0, #1
lbl_0808a1c8:
    strh r0, [r1, #2]
lbl_0808a1ca:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a1d0: .4byte 0x030058c0

    thumb_func_start sub_0808a1d4
sub_0808a1d4: @ 0x0808a1d4
    push {lr}
    ldr r0, lbl_0808a230 @ =0x030058bc
    ldr r0, [r0]
    movs r1, #0x80
    lsls r1, r1, #1
    ands r0, r1
    cmp r0, #0
    bne lbl_0808a256
    ldr r0, lbl_0808a234 @ =0x030058c4
    ldrh r2, [r0, #2]
    movs r1, #0xaa
    lsls r1, r1, #7
    adds r3, r0, #0
    cmp r2, r1
    bne lbl_0808a20e
    ldr r2, lbl_0808a238 @ =0x03005808
    ldrh r0, [r3, #6]
    strb r0, [r2, #0x11]
    ldr r1, lbl_0808a23c @ =0x03000020
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrb r1, [r1]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    cmp r0, r1
    bne lbl_0808a20e
    movs r0, #0x88
    lsls r0, r0, #7
    strh r0, [r2, #0xe]
lbl_0808a20e:
    ldrh r1, [r3, #2]
    movs r0, #0xcc
    lsls r0, r0, #7
    cmp r1, r0
    bne lbl_0808a248
    ldr r1, lbl_0808a238 @ =0x03005808
    ldrh r0, [r3, #6]
    strb r0, [r1, #0x10]
    subs r0, #1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    bhi lbl_0808a240
    movs r0, #0x88
    lsls r0, r0, #6
    strh r0, [r1, #0xe]
    b lbl_0808a248
    .align 2, 0
lbl_0808a230: .4byte 0x030058bc
lbl_0808a234: .4byte 0x030058c4
lbl_0808a238: .4byte 0x03005808
lbl_0808a23c: .4byte 0x03000020
lbl_0808a240:
    movs r0, #0
    strh r0, [r1, #0xe]
    movs r0, #5
    strb r0, [r1, #0xb]
lbl_0808a248:
    ldrh r1, [r3, #2]
    movs r0, #0xcc
    lsls r0, r0, #6
    cmp r1, r0
    bne lbl_0808a256
    ldr r0, lbl_0808a25c @ =0x03005808
    strh r1, [r0, #0xe]
lbl_0808a256:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a25c: .4byte 0x03005808

    thumb_func_start sub_0808a260
sub_0808a260: @ 0x0808a260
    push {r4, r5, lr}
    sub sp, #4
    ldr r0, lbl_0808a2a8 @ =0x030058d0
    ldr r2, lbl_0808a2ac @ =0x04000208
    ldrh r4, [r2]
    strh r4, [r0]
    movs r5, #0
    strh r5, [r2]
    ldr r3, lbl_0808a2b0 @ =0x04000200
    ldrh r1, [r3]
    ldr r0, lbl_0808a2b4 @ =0x0000ff3f
    ands r0, r1
    strh r0, [r3]
    strh r4, [r2]
    ldr r1, lbl_0808a2b8 @ =0x04000128
    movs r2, #0x80
    lsls r2, r2, #6
    adds r0, r2, #0
    strh r0, [r1]
    ldr r0, lbl_0808a2bc @ =0x0400010e
    strh r5, [r0]
    adds r1, #0xda
    movs r0, #0xc0
    strh r0, [r1]
    movs r0, #0
    str r0, [sp]
    ldr r1, lbl_0808a2c0 @ =0x03005b60
    ldr r2, lbl_0808a2c4 @ =0x05000069
    mov r0, sp
    bl CpuSet
    add sp, #4
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a2a8: .4byte 0x030058d0
lbl_0808a2ac: .4byte 0x04000208
lbl_0808a2b0: .4byte 0x04000200
lbl_0808a2b4: .4byte 0x0000ff3f
lbl_0808a2b8: .4byte 0x04000128
lbl_0808a2bc: .4byte 0x0400010e
lbl_0808a2c0: .4byte 0x03005b60
lbl_0808a2c4: .4byte 0x05000069

    thumb_func_start sub_0808a2c8
sub_0808a2c8: @ 0x0808a2c8
    push {r4, r5, r6, r7, lr}
    sub sp, #4
    ldr r6, lbl_0808a350 @ =0x030058d0
    ldr r3, lbl_0808a354 @ =0x04000208
    ldrh r2, [r3]
    movs r4, #0
    strh r4, [r3]
    ldr r5, lbl_0808a358 @ =0x04000200
    ldrh r1, [r5]
    ldr r0, lbl_0808a35c @ =0x0000ff3f
    ands r0, r1
    strh r0, [r5]
    strh r2, [r3]
    ldr r0, lbl_0808a360 @ =0x04000134
    strh r4, [r0]
    ldr r2, lbl_0808a364 @ =0x04000128
    movs r1, #0x80
    lsls r1, r1, #6
    adds r0, r1, #0
    strh r0, [r2]
    ldrh r0, [r2]
    ldr r7, lbl_0808a368 @ =0x00004003
    adds r1, r7, #0
    orrs r0, r1
    strh r0, [r2]
    ldrh r2, [r3]
    strh r2, [r6]
    strh r4, [r3]
    ldrh r0, [r5]
    movs r1, #0x80
    orrs r0, r1
    strh r0, [r5]
    strh r2, [r3]
    ldr r0, lbl_0808a36c @ =0x0400012a
    strh r4, [r0]
    ldr r2, lbl_0808a370 @ =0x04000120
    movs r0, #0
    movs r1, #0
    str r0, [r2]
    str r1, [r2, #4]
    movs r5, #0
    str r5, [sp]
    ldr r1, lbl_0808a374 @ =0x03005b60
    ldr r2, lbl_0808a378 @ =0x05000069
    mov r0, sp
    bl CpuSet
    ldr r0, lbl_0808a37c @ =0x030058d2
    strb r4, [r0]
    ldr r0, lbl_0808a380 @ =0x030058d3
    strb r4, [r0]
    ldr r0, lbl_0808a384 @ =0x030058d5
    strb r4, [r0]
    ldr r0, lbl_0808a388 @ =0x03005b50
    strb r4, [r0]
    ldr r0, lbl_0808a38c @ =0x03005b54
    strb r4, [r0]
    ldr r0, lbl_0808a390 @ =0x030058d6
    strb r4, [r0]
    ldr r0, lbl_0808a394 @ =0x030058d8
    strh r5, [r0]
    ldr r0, lbl_0808a398 @ =0x030058da
    strh r5, [r0]
    add sp, #4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a350: .4byte 0x030058d0
lbl_0808a354: .4byte 0x04000208
lbl_0808a358: .4byte 0x04000200
lbl_0808a35c: .4byte 0x0000ff3f
lbl_0808a360: .4byte 0x04000134
lbl_0808a364: .4byte 0x04000128
lbl_0808a368: .4byte 0x00004003
lbl_0808a36c: .4byte 0x0400012a
lbl_0808a370: .4byte 0x04000120
lbl_0808a374: .4byte 0x03005b60
lbl_0808a378: .4byte 0x05000069
lbl_0808a37c: .4byte 0x030058d2
lbl_0808a380: .4byte 0x030058d3
lbl_0808a384: .4byte 0x030058d5
lbl_0808a388: .4byte 0x03005b50
lbl_0808a38c: .4byte 0x03005b54
lbl_0808a390: .4byte 0x030058d6
lbl_0808a394: .4byte 0x030058d8
lbl_0808a398: .4byte 0x030058da

    thumb_func_start sub_0808a39c
sub_0808a39c: @ 0x0808a39c
    push {lr}
    bl sub_0808a2c8
    bl sub_0808a260
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start detect_error
detect_error: @ 0x0808a3ac
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0
    adds r5, r1, #0
    adds r6, r2, #0
    ldr r0, lbl_0808a3c8 @ =0x03005b60
    ldrb r0, [r0, #1]
    cmp r0, #4
    bhi lbl_0808a45e
    lsls r0, r0, #2
    ldr r1, lbl_0808a3cc @ =lbl_0808a3d0
    adds r0, r0, r1
    ldr r0, [r0]
    mov pc, r0
    .align 2, 0
lbl_0808a3c8: .4byte 0x03005b60
lbl_0808a3cc: .4byte lbl_0808a3d0
lbl_0808a3d0: @ jump table
    .4byte lbl_0808a3e4 @ case 0
    .4byte lbl_0808a3f4 @ case 1
    .4byte lbl_0808a40c @ case 2
    .4byte lbl_0808a448 @ case 3
    .4byte lbl_0808a452 @ case 4
lbl_0808a3e4:
    bl sub_0808a260
    ldr r1, lbl_0808a3f0 @ =0x03005b60
    movs r0, #1
    strb r0, [r1, #1]
    b lbl_0808a45e
    .align 2, 0
lbl_0808a3f0: .4byte 0x03005b60
lbl_0808a3f4:
    ldrb r0, [r4]
    cmp r0, #1
    bne lbl_0808a45e
    bl sub_0808a2c8
    ldr r1, lbl_0808a408 @ =0x03005b60
    movs r0, #2
    strb r0, [r1, #1]
    b lbl_0808a45e
    .align 2, 0
lbl_0808a408: .4byte 0x03005b60
lbl_0808a40c:
    ldrb r1, [r4]
    cmp r1, #1
    beq lbl_0808a41c
    cmp r1, #2
    beq lbl_0808a434
    bl sub_0808a4cc
    b lbl_0808a45e
lbl_0808a41c:
    ldr r2, lbl_0808a430 @ =0x03005b60
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_0808a45e
    ldrb r0, [r2, #3]
    cmp r0, #1
    bls lbl_0808a45e
    strb r1, [r2, #0x10]
    b lbl_0808a45e
    .align 2, 0
lbl_0808a430: .4byte 0x03005b60
lbl_0808a434:
    ldr r0, lbl_0808a440 @ =0x03005b60
    movs r1, #0
    strb r1, [r0, #1]
    ldr r0, lbl_0808a444 @ =0x0400012a
    strh r1, [r0]
    b lbl_0808a45e
    .align 2, 0
lbl_0808a440: .4byte 0x03005b60
lbl_0808a444: .4byte 0x0400012a
lbl_0808a448:
    bl sub_0808a4f8
    ldr r1, lbl_0808a4a0 @ =0x03005b60
    movs r0, #4
    strb r0, [r1, #1]
lbl_0808a452:
    adds r0, r5, #0
    bl sub_0808a548
    adds r0, r6, #0
    bl sub_0808a628
lbl_0808a45e:
    movs r0, #0
    strb r0, [r4]
    ldr r1, lbl_0808a4a0 @ =0x03005b60
    ldrb r2, [r1, #2]
    ldrb r0, [r1, #3]
    lsls r0, r0, #2
    orrs r2, r0
    ldrb r0, [r1]
    cmp r0, #8
    bne lbl_0808a476
    movs r0, #0x20
    orrs r2, r0
lbl_0808a476:
    ldrb r0, [r1, #0xc]
    lsls r3, r0, #8
    ldrb r0, [r1, #0x11]
    lsls r4, r0, #9
    ldrb r0, [r1, #0x12]
    lsls r5, r0, #0x10
    ldrb r0, [r1, #0x13]
    lsls r6, r0, #0x11
    ldrb r0, [r1, #0x14]
    lsls r7, r0, #0x12
    ldrb r0, [r1, #0x15]
    lsls r0, r0, #0x14
    mov ip, r0
    ldrb r0, [r1, #1]
    cmp r0, #4
    bne lbl_0808a4a4
    movs r0, #0x40
    orrs r0, r3
    orrs r0, r2
    b lbl_0808a4a8
    .align 2, 0
lbl_0808a4a0: .4byte 0x03005b60
lbl_0808a4a4:
    adds r0, r2, #0
    orrs r0, r3
lbl_0808a4a8:
    orrs r0, r4
    orrs r0, r5
    orrs r0, r6
    orrs r0, r7
    mov r2, ip
    orrs r0, r2
    adds r2, r0, #0
    ldrb r0, [r1, #2]
    cmp r0, #1
    bls lbl_0808a4c2
    movs r0, #0x80
    lsls r0, r0, #0xf
    orrs r2, r0
lbl_0808a4c2:
    adds r0, r2, #0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0808a4cc
sub_0808a4cc: @ 0x0808a4cc
    push {lr}
    ldr r0, lbl_0808a4e8 @ =0x04000128
    ldr r1, [r0]
    movs r0, #0xc
    ands r1, r0
    ldr r2, lbl_0808a4ec @ =0x03005b60
    cmp r1, #8
    bne lbl_0808a4f0
    ldrb r0, [r2, #2]
    cmp r0, #0
    bne lbl_0808a4f0
    strb r1, [r2]
    b lbl_0808a4f4
    .align 2, 0
lbl_0808a4e8: .4byte 0x04000128
lbl_0808a4ec: .4byte 0x03005b60
lbl_0808a4f0:
    movs r0, #0
    strb r0, [r2]
lbl_0808a4f4:
    pop {r0}
    bx r0

    thumb_func_start sub_0808a4f8
sub_0808a4f8: @ 0x0808a4f8
    push {r4, lr}
    ldr r0, lbl_0808a530 @ =0x03005b60
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0808a528
    ldr r1, lbl_0808a534 @ =0x0400010c
    ldr r2, lbl_0808a538 @ =0x0000ff7c
    adds r0, r2, #0
    strh r0, [r1]
    adds r1, #2
    movs r0, #0x41
    strh r0, [r1]
    ldr r0, lbl_0808a53c @ =0x030058d0
    ldr r2, lbl_0808a540 @ =0x04000208
    ldrh r4, [r2]
    strh r4, [r0]
    movs r0, #0
    strh r0, [r2]
    ldr r3, lbl_0808a544 @ =0x04000200
    ldrh r0, [r3]
    movs r1, #0x40
    orrs r0, r1
    strh r0, [r3]
    strh r4, [r2]
lbl_0808a528:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a530: .4byte 0x03005b60
lbl_0808a534: .4byte 0x0400010c
lbl_0808a538: .4byte 0x0000ff7c
lbl_0808a53c: .4byte 0x030058d0
lbl_0808a540: .4byte 0x04000208
lbl_0808a544: .4byte 0x04000200

    thumb_func_start sub_0808a548
sub_0808a548: @ 0x0808a548
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    adds r4, r0, #0
    ldr r2, lbl_0808a5bc @ =0x030058d0
    ldr r1, lbl_0808a5c0 @ =0x04000208
    ldrh r0, [r1]
    strh r0, [r2]
    movs r0, #0
    strh r0, [r1]
    ldr r1, lbl_0808a5c4 @ =0x03005b60
    adds r0, r1, #0
    adds r0, #0x9d
    ldrb r3, [r0]
    mov sl, r2
    mov ip, r1
    cmp r3, #0x1f
    bhi lbl_0808a5d0
    mov r0, ip
    adds r0, #0x9c
    ldrb r0, [r0]
    adds r0, r3, r0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x1f
    bls lbl_0808a586
    subs r0, #0x20
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
lbl_0808a586:
    movs r3, #0
    ldr r1, lbl_0808a5c8 @ =0x030058d8
    mov r8, r1
    ldr r2, lbl_0808a5cc @ =0x03005b50
    mov sb, r2
    mov r2, r8
    lsls r5, r0, #1
    mov r7, ip
    adds r7, #0x1c
    movs r6, #0
lbl_0808a59a:
    ldrh r0, [r2]
    ldrh r1, [r4]
    orrs r0, r1
    strh r0, [r2]
    lsls r0, r3, #6
    adds r0, r5, r0
    adds r0, r0, r7
    strh r1, [r0]
    strh r6, [r4]
    adds r4, #2
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #1
    bls lbl_0808a59a
    b lbl_0808a5e4
    .align 2, 0
lbl_0808a5bc: .4byte 0x030058d0
lbl_0808a5c0: .4byte 0x04000208
lbl_0808a5c4: .4byte 0x03005b60
lbl_0808a5c8: .4byte 0x030058d8
lbl_0808a5cc: .4byte 0x03005b50
lbl_0808a5d0:
    mov r0, ip
    ldrb r1, [r0, #0x14]
    movs r0, #1
    orrs r0, r1
    mov r1, ip
    strb r0, [r1, #0x14]
    ldr r2, lbl_0808a61c @ =0x030058d8
    mov r8, r2
    ldr r0, lbl_0808a620 @ =0x03005b50
    mov sb, r0
lbl_0808a5e4:
    mov r1, r8
    ldrh r0, [r1]
    cmp r0, #0
    beq lbl_0808a5fc
    mov r3, ip
    adds r3, #0x9d
    ldrb r0, [r3]
    adds r0, #1
    movs r1, #0
    strb r0, [r3]
    mov r2, r8
    strh r1, [r2]
lbl_0808a5fc:
    ldr r1, lbl_0808a624 @ =0x04000208
    mov r2, sl
    ldrh r0, [r2]
    strh r0, [r1]
    mov r0, ip
    adds r0, #0x9d
    ldrb r0, [r0]
    mov r1, sb
    strb r0, [r1]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a61c: .4byte 0x030058d8
lbl_0808a620: .4byte 0x03005b50
lbl_0808a624: .4byte 0x04000208

    thumb_func_start sub_0808a628
sub_0808a628: @ 0x0808a628
    push {r4, r5, r6, r7, lr}
    mov r7, sl
    mov r6, sb
    mov r5, r8
    push {r5, r6, r7}
    mov ip, r0
    ldr r2, lbl_0808a68c @ =0x030058d0
    ldr r1, lbl_0808a690 @ =0x04000208
    ldrh r0, [r1]
    strh r0, [r2]
    movs r0, #0
    strh r0, [r1]
    ldr r0, lbl_0808a694 @ =0x03005b60
    ldr r3, lbl_0808a698 @ =0x000001a1
    adds r1, r0, r3
    ldrb r1, [r1]
    mov sl, r2
    mov sb, r0
    cmp r1, #0
    bne lbl_0808a69c
    movs r1, #0
    mov r7, sb
    mov r4, sb
    ldrb r5, [r4, #3]
lbl_0808a658:
    movs r3, #0
    adds r6, r1, #1
    cmp r3, r5
    bhs lbl_0808a67a
    lsls r0, r1, #2
    mov r2, ip
    adds r1, r0, r2
    movs r4, #0
    ldrb r2, [r7, #3]
lbl_0808a66a:
    lsls r0, r3, #1
    adds r0, r0, r1
    strh r4, [r0]
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, r2
    blo lbl_0808a66a
lbl_0808a67a:
    lsls r0, r6, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #1
    bls lbl_0808a658
    movs r0, #1
    mov r3, sb
    strb r0, [r3, #0xc]
    b lbl_0808a70e
    .align 2, 0
lbl_0808a68c: .4byte 0x030058d0
lbl_0808a690: .4byte 0x04000208
lbl_0808a694: .4byte 0x03005b60
lbl_0808a698: .4byte 0x000001a1
lbl_0808a69c:
    movs r1, #0
    mov r4, sb
    ldrb r4, [r4, #3]
    mov r8, r4
lbl_0808a6a4:
    movs r3, #0
    adds r6, r1, #1
    cmp r3, r8
    bhs lbl_0808a6de
    lsls r0, r1, #2
    mov r2, ip
    adds r7, r0, r2
    ldr r2, lbl_0808a724 @ =0x03005b60
    movs r4, #0xd0
    lsls r4, r4, #1
    adds r0, r2, r4
    ldrb r0, [r0]
    lsls r0, r0, #1
    lsls r1, r1, #6
    adds r5, r0, r1
    ldrb r4, [r2, #3]
    adds r2, #0xa0
lbl_0808a6c6:
    lsls r1, r3, #1
    adds r1, r1, r7
    lsls r0, r3, #7
    adds r0, r5, r0
    adds r0, r0, r2
    ldrh r0, [r0]
    strh r0, [r1]
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, r4
    blo lbl_0808a6c6
lbl_0808a6de:
    lsls r0, r6, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #1
    bls lbl_0808a6a4
    mov r2, sb
    ldr r0, lbl_0808a728 @ =0x000001a1
    adds r1, r2, r0
    ldrb r0, [r1]
    subs r0, #1
    movs r3, #0
    strb r0, [r1]
    movs r4, #0xd0
    lsls r4, r4, #1
    adds r1, r2, r4
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x1f
    bls lbl_0808a70a
    strb r3, [r1]
lbl_0808a70a:
    mov r0, sb
    strb r3, [r0, #0xc]
lbl_0808a70e:
    ldr r1, lbl_0808a72c @ =0x04000208
    mov r2, sl
    ldrh r0, [r2]
    strh r0, [r1]
    pop {r3, r4, r5}
    mov r8, r3
    mov sb, r4
    mov sl, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a724: .4byte 0x03005b60
lbl_0808a728: .4byte 0x000001a1
lbl_0808a72c: .4byte 0x04000208

    thumb_func_start sub_0808a730
sub_0808a730: @ 0x0808a730
    push {r4, lr}
    ldr r4, lbl_0808a758 @ =0x03005b60
    ldrb r3, [r4]
    cmp r3, #0
    beq lbl_0808a76a
    ldrb r0, [r4, #1]
    cmp r0, #2
    beq lbl_0808a764
    cmp r0, #4
    bne lbl_0808a796
    ldrb r0, [r4, #0xd]
    cmp r0, #2
    bhi lbl_0808a75c
    ldrb r0, [r4, #0x12]
    cmp r0, #0
    bne lbl_0808a764
    movs r0, #1
    strb r0, [r4, #0x15]
    b lbl_0808a796
    .align 2, 0
lbl_0808a758: .4byte 0x03005b60
lbl_0808a75c:
    ldrb r0, [r4, #0x15]
    cmp r0, #0
    bne lbl_0808a796
    strb r0, [r4, #0xd]
lbl_0808a764:
    bl set_siocnt_start_bit_active_duplicate
    b lbl_0808a796
lbl_0808a76a:
    ldrb r2, [r4, #1]
    cmp r2, #4
    beq lbl_0808a774
    cmp r2, #2
    bne lbl_0808a796
lbl_0808a774:
    ldr r1, lbl_0808a79c @ =0x030058d2
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0xa
    bls lbl_0808a796
    cmp r2, #4
    bne lbl_0808a78c
    movs r0, #2
    strb r0, [r4, #0x15]
lbl_0808a78c:
    cmp r2, #2
    bne lbl_0808a796
    strb r3, [r4, #2]
    strb r3, [r4, #3]
    strb r3, [r4, #0x11]
lbl_0808a796:
    pop {r4}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a79c: .4byte 0x030058d2

    thumb_func_start sub_0808a7a0
sub_0808a7a0: @ 0x0808a7a0
    push {lr}
    bl sub_0808aaf0
    bl set_siocnt_start_bit_active_duplicate
    pop {r0}
    bx r0
    .align 2, 0

    thumb_func_start sub_0808a7b0
sub_0808a7b0: @ 0x0808a7b0
    push {r4, r5, lr}
    ldr r0, lbl_0808a7e4 @ =0x04000128
    ldr r1, [r0]
    ldr r5, lbl_0808a7e8 @ =0x03005b60
    lsls r0, r1, #0x1a
    lsrs r0, r0, #0x1e
    strb r0, [r5, #2]
    ldrb r4, [r5, #1]
    cmp r4, #2
    beq lbl_0808a7ec
    cmp r4, #4
    bne lbl_0808a808
    movs r0, #0x40
    ands r1, r0
    cmp r1, #0
    beq lbl_0808a7d4
    movs r0, #1
    strb r0, [r5, #0x12]
lbl_0808a7d4:
    bl sub_0808a94c
    bl sub_0808aa54
    bl sub_0808ab24
    b lbl_0808a808
    .align 2, 0
lbl_0808a7e4: .4byte 0x04000128
lbl_0808a7e8: .4byte 0x03005b60
lbl_0808a7ec:
    bl sub_0808a850
    lsls r0, r0, #0x18
    cmp r0, #0
    beq lbl_0808a808
    ldrb r0, [r5]
    cmp r0, #0
    beq lbl_0808a804
    movs r0, #3
    strb r0, [r5, #1]
    strb r4, [r5, #0xd]
    b lbl_0808a808
lbl_0808a804:
    movs r0, #4
    strb r0, [r5, #1]
lbl_0808a808:
    ldr r3, lbl_0808a830 @ =0x03005b60
    ldrb r0, [r3, #0xd]
    adds r0, #1
    movs r2, #0
    strb r0, [r3, #0xd]
    ldr r1, lbl_0808a834 @ =0x030058d2
    strb r2, [r1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    bne lbl_0808a828
    ldr r1, lbl_0808a838 @ =0x03005b54
    ldr r2, lbl_0808a83c @ =0x000001a1
    adds r0, r3, r2
    ldrb r0, [r0]
    strb r0, [r1]
lbl_0808a828:
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808a830: .4byte 0x03005b60
lbl_0808a834: .4byte 0x030058d2
lbl_0808a838: .4byte 0x03005b54
lbl_0808a83c: .4byte 0x000001a1

    thumb_func_start set_siocnt_start_bit_active_duplicate
set_siocnt_start_bit_active_duplicate: @ 0x0808a840
    ldr r0, lbl_0808a84c @ =0x04000128
    ldrh r1, [r0]
    movs r2, #0x80
    orrs r1, r2
    strh r1, [r0]
    bx lr
    .align 2, 0
lbl_0808a84c: .4byte 0x04000128

    thumb_func_start sub_0808a850
sub_0808a850: @ 0x0808a850
    push {r4, r5, r6, r7, lr}
    mov r7, sb
    mov r6, r8
    push {r6, r7}
    movs r7, #0
    ldr r5, lbl_0808a86c @ =0x0000ffff
    ldr r0, lbl_0808a870 @ =0x03005b60
    ldrb r1, [r0, #0x10]
    adds r4, r0, #0
    cmp r1, #1
    bne lbl_0808a880
    ldr r1, lbl_0808a874 @ =0x0400012a
    ldr r2, lbl_0808a878 @ =0x00008fff
    b lbl_0808a884
    .align 2, 0
lbl_0808a86c: .4byte 0x0000ffff
lbl_0808a870: .4byte 0x03005b60
lbl_0808a874: .4byte 0x0400012a
lbl_0808a878: .4byte 0x00008fff
lbl_0808a87c:
    movs r7, #0
    b lbl_0808a902
lbl_0808a880:
    ldr r1, lbl_0808a8d4 @ =0x0400012a
    ldr r2, lbl_0808a8d8 @ =0x00007c40
lbl_0808a884:
    adds r0, r2, #0
    strh r0, [r1]
    movs r0, #0
    strb r0, [r4, #0x10]
    ldr r0, lbl_0808a8dc @ =0x04000120
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [r4, #4]
    str r1, [r4, #8]
    movs r3, #0
    ldr r0, lbl_0808a8e0 @ =0x030058d5
    mov sb, r0
    adds r6, r4, #0
    ldr r1, lbl_0808a8e4 @ =0x00008fff
    mov r8, r1
    ldr r2, lbl_0808a8e8 @ =0x0000ffff
    mov ip, r2
lbl_0808a8a6:
    lsls r0, r3, #1
    adds r1, r6, #4
    adds r0, r0, r1
    ldrh r2, [r0]
    movs r0, #4
    rsbs r0, r0, #0
    ands r0, r2
    ldr r1, lbl_0808a8d8 @ =0x00007c40
    cmp r0, r1
    beq lbl_0808a8c0
    adds r0, r2, #0
    cmp r0, r8
    bne lbl_0808a8ec
lbl_0808a8c0:
    adds r0, r7, #1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    adds r0, r2, #0
    cmp r5, r0
    bls lbl_0808a8f8
    cmp r0, #0
    beq lbl_0808a8f8
    adds r5, r2, #0
    b lbl_0808a8f8
    .align 2, 0
lbl_0808a8d4: .4byte 0x0400012a
lbl_0808a8d8: .4byte 0x00007c40
lbl_0808a8dc: .4byte 0x04000120
lbl_0808a8e0: .4byte 0x030058d5
lbl_0808a8e4: .4byte 0x00008fff
lbl_0808a8e8: .4byte 0x0000ffff
lbl_0808a8ec:
    cmp r0, ip
    bne lbl_0808a87c
    ldrb r0, [r6, #2]
    cmp r3, r0
    bne lbl_0808a8f8
    movs r7, #0
lbl_0808a8f8:
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #1
    bls lbl_0808a8a6
lbl_0808a902:
    strb r7, [r4, #3]
    adds r0, r7, #0
    cmp r0, #1
    bls lbl_0808a932
    mov r1, sb
    ldrb r1, [r1]
    cmp r0, r1
    bne lbl_0808a924
    ldrh r1, [r4, #4]
    ldr r0, lbl_0808a920 @ =0x00008fff
    cmp r1, r0
    bne lbl_0808a924
    movs r0, #1
    b lbl_0808a93e
    .align 2, 0
lbl_0808a920: .4byte 0x00008fff
lbl_0808a924:
    ldrb r0, [r4, #3]
    cmp r0, #1
    bls lbl_0808a932
    movs r0, #3
    ands r5, r0
    adds r0, r5, #1
    b lbl_0808a934
lbl_0808a932:
    movs r0, #0
lbl_0808a934:
    strb r0, [r4, #0x11]
    ldrb r0, [r4, #3]
    mov r2, sb
    strb r0, [r2]
    movs r0, #0
lbl_0808a93e:
    pop {r3, r4}
    mov r8, r3
    mov sb, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .align 2, 0

    thumb_func_start sub_0808a94c
sub_0808a94c: @ 0x0808a94c
    push {r4, r5, r6, r7, lr}
    sub sp, #8
    ldr r0, lbl_0808a9a0 @ =0x04000120
    ldr r1, [r0, #4]
    ldr r0, [r0]
    str r0, [sp]
    str r1, [sp, #4]
    ldr r0, lbl_0808a9a4 @ =0x03005b60
    ldrb r1, [r0, #0x18]
    adds r5, r0, #0
    cmp r1, #0
    bne lbl_0808a9ac
    movs r3, #0
    ldr r7, lbl_0808a9a8 @ =0x030058d6
    ldrb r0, [r5, #3]
    cmp r3, r0
    bhs lbl_0808a996
    adds r6, r5, #0
    ldrh r1, [r5, #0x16]
    adds r4, r7, #0
    adds r2, r5, #0
lbl_0808a976:
    lsls r0, r3, #1
    add r0, sp
    ldrh r0, [r0]
    cmp r1, r0
    beq lbl_0808a98a
    ldrb r0, [r4]
    cmp r0, #0
    beq lbl_0808a98a
    movs r0, #1
    strb r0, [r6, #0x13]
lbl_0808a98a:
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldrb r0, [r2, #3]
    cmp r3, r0
    blo lbl_0808a976
lbl_0808a996:
    movs r0, #0
    strh r0, [r5, #0x16]
    movs r0, #1
    strb r0, [r7]
    b lbl_0808aa44
    .align 2, 0
lbl_0808a9a0: .4byte 0x04000120
lbl_0808a9a4: .4byte 0x03005b60
lbl_0808a9a8: .4byte 0x030058d6
lbl_0808a9ac:
    movs r1, #0xd0
    lsls r1, r1, #1
    adds r0, r5, r1
    ldr r2, lbl_0808aa10 @ =0x000001a1
    adds r1, r5, r2
    ldrb r1, [r1]
    ldrb r0, [r0]
    adds r0, r1, r0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x1f
    bls lbl_0808a9ca
    subs r0, #0x20
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
lbl_0808a9ca:
    cmp r1, #0x1f
    bhi lbl_0808aa18
    movs r3, #0
    ldrb r1, [r5, #3]
    cmp r3, r1
    bhs lbl_0808aa20
    adds r4, r5, #0
    ldr r6, lbl_0808aa14 @ =0x030058da
    lsls r7, r0, #1
    movs r2, #0xa0
    adds r2, r2, r5
    mov ip, r2
lbl_0808a9e2:
    lsls r0, r3, #1
    add r0, sp
    ldrh r2, [r0]
    ldrh r1, [r4, #0x16]
    adds r0, r2, r1
    strh r0, [r4, #0x16]
    ldrh r0, [r6]
    orrs r0, r2
    strh r0, [r6]
    ldrb r0, [r4, #0x19]
    lsls r0, r0, #6
    adds r0, r7, r0
    lsls r1, r3, #7
    adds r0, r0, r1
    add r0, ip
    strh r2, [r0]
    adds r0, r3, #1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldrb r2, [r4, #3]
    cmp r3, r2
    blo lbl_0808a9e2
    b lbl_0808aa20
    .align 2, 0
lbl_0808aa10: .4byte 0x000001a1
lbl_0808aa14: .4byte 0x030058da
lbl_0808aa18:
    ldrb r1, [r5, #0x14]
    movs r0, #2
    orrs r0, r1
    strb r0, [r5, #0x14]
lbl_0808aa20:
    ldrb r0, [r5, #0x19]
    adds r0, #1
    strb r0, [r5, #0x19]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #2
    bne lbl_0808aa44
    ldr r2, lbl_0808aa4c @ =0x030058da
    ldrh r0, [r2]
    cmp r0, #0
    beq lbl_0808aa44
    ldr r0, lbl_0808aa50 @ =0x000001a1
    adds r1, r5, r0
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    movs r0, #0
    strh r0, [r2]
lbl_0808aa44:
    add sp, #8
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808aa4c: .4byte 0x030058da
lbl_0808aa50: .4byte 0x000001a1

    thumb_func_start sub_0808aa54
sub_0808aa54: @ 0x0808aa54
    push {lr}
    ldr r0, lbl_0808aa8c @ =0x03005b60
    ldrb r1, [r0, #0x18]
    adds r3, r0, #0
    cmp r1, #2
    bne lbl_0808aa9e
    ldr r1, lbl_0808aa90 @ =0x0400012a
    ldrh r0, [r3, #0x16]
    strh r0, [r1]
    ldr r1, lbl_0808aa94 @ =0x030058d3
    ldrb r2, [r1]
    cmp r2, #0
    bne lbl_0808aa98
    adds r1, r3, #0
    adds r1, #0x9d
    ldrb r0, [r1]
    subs r0, #1
    strb r0, [r1]
    subs r1, #1
    ldrb r0, [r1]
    adds r0, #1
    strb r0, [r1]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x1f
    bls lbl_0808aae8
    strb r2, [r1]
    b lbl_0808aae8
    .align 2, 0
lbl_0808aa8c: .4byte 0x03005b60
lbl_0808aa90: .4byte 0x0400012a
lbl_0808aa94: .4byte 0x030058d3
lbl_0808aa98:
    movs r0, #0
    strb r0, [r1]
    b lbl_0808aae8
lbl_0808aa9e:
    ldr r2, lbl_0808aac0 @ =0x030058d3
    cmp r1, #0
    bne lbl_0808aab2
    adds r0, r3, #0
    adds r0, #0x9d
    ldrb r0, [r0]
    cmp r0, #0
    bne lbl_0808aab2
    movs r0, #1
    strb r0, [r2]
lbl_0808aab2:
    ldrb r0, [r2]
    cmp r0, #0
    beq lbl_0808aac8
    ldr r1, lbl_0808aac4 @ =0x0400012a
    movs r0, #0
    strh r0, [r1]
    b lbl_0808aae2
    .align 2, 0
lbl_0808aac0: .4byte 0x030058d3
lbl_0808aac4: .4byte 0x0400012a
lbl_0808aac8:
    ldr r2, lbl_0808aaec @ =0x0400012a
    adds r0, r3, #0
    adds r0, #0x9c
    ldrb r1, [r0]
    lsls r1, r1, #1
    ldrb r0, [r3, #0x18]
    lsls r0, r0, #6
    adds r1, r1, r0
    adds r0, r3, #0
    adds r0, #0x1c
    adds r1, r1, r0
    ldrh r0, [r1]
    strh r0, [r2]
lbl_0808aae2:
    ldrb r0, [r3, #0x18]
    adds r0, #1
    strb r0, [r3, #0x18]
lbl_0808aae8:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808aaec: .4byte 0x0400012a

    thumb_func_start sub_0808aaf0
sub_0808aaf0: @ 0x0808aaf0
    push {lr}
    ldr r0, lbl_0808ab10 @ =0x03005b60
    ldrb r0, [r0]
    cmp r0, #0
    beq lbl_0808ab0c
    ldr r2, lbl_0808ab14 @ =0x0400010e
    ldrh r1, [r2]
    ldr r0, lbl_0808ab18 @ =0x0000ff7f
    ands r0, r1
    strh r0, [r2]
    ldr r1, lbl_0808ab1c @ =0x0400010c
    ldr r2, lbl_0808ab20 @ =0x0000ff7c
    adds r0, r2, #0
    strh r0, [r1]
lbl_0808ab0c:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808ab10: .4byte 0x03005b60
lbl_0808ab14: .4byte 0x0400010e
lbl_0808ab18: .4byte 0x0000ff7f
lbl_0808ab1c: .4byte 0x0400010c
lbl_0808ab20: .4byte 0x0000ff7c

    thumb_func_start sub_0808ab24
sub_0808ab24: @ 0x0808ab24
    push {lr}
    ldr r1, lbl_0808ab38 @ =0x03005b60
    ldrb r0, [r1, #0x19]
    cmp r0, #2
    bne lbl_0808ab3c
    movs r0, #0
    strb r0, [r1, #0x18]
    strb r0, [r1, #0x19]
    b lbl_0808ab4c
    .align 2, 0
lbl_0808ab38: .4byte 0x03005b60
lbl_0808ab3c:
    ldrb r0, [r1]
    cmp r0, #0
    beq lbl_0808ab4c
    ldr r0, lbl_0808ab50 @ =0x0400010e
    ldrh r1, [r0]
    movs r2, #0x80
    orrs r1, r2
    strh r1, [r0]
lbl_0808ab4c:
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808ab50: .4byte 0x0400010e

    thumb_func_start sub_0808ab54
sub_0808ab54: @ 0x0808ab54
    push {r4, r5, lr}
    ldr r2, lbl_0808ab94 @ =0x03005b60
    adds r0, r2, #0
    adds r0, #0x9d
    movs r1, #0
    strb r1, [r0]
    subs r0, #1
    strb r1, [r0]
    movs r0, #0
    adds r5, r2, #0
    adds r5, #0x1c
    ldr r4, lbl_0808ab98 @ =0x0000efff
lbl_0808ab6c:
    movs r1, #0
    adds r3, r0, #1
    lsls r2, r0, #6
lbl_0808ab72:
    lsls r0, r1, #1
    adds r0, r0, r2
    adds r0, r0, r5
    strh r4, [r0]
    adds r0, r1, #1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x1f
    bls lbl_0808ab72
    lsls r0, r3, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bls lbl_0808ab6c
    pop {r4, r5}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808ab94: .4byte 0x03005b60
lbl_0808ab98: .4byte 0x0000efff

    thumb_func_start sub_0808ab9c
sub_0808ab9c: @ 0x0808ab9c
    push {r4, r5, r6, r7, lr}
    ldr r2, lbl_0808abec @ =0x03005b60
    ldr r1, lbl_0808abf0 @ =0x000001a1
    adds r0, r2, r1
    movs r1, #0
    strb r1, [r0]
    movs r3, #0xd0
    lsls r3, r3, #1
    adds r0, r2, r3
    strb r1, [r0]
    adds r7, r2, #0
    adds r7, #0xa0
    ldr r6, lbl_0808abf4 @ =0x0000efff
lbl_0808abb6:
    movs r0, #0
    adds r5, r1, #1
    lsls r4, r1, #7
lbl_0808abbc:
    movs r1, #0
    adds r3, r0, #1
    lsls r2, r0, #6
lbl_0808abc2:
    lsls r0, r1, #1
    adds r0, r0, r2
    adds r0, r0, r4
    adds r0, r0, r7
    strh r6, [r0]
    adds r0, r1, #1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x1f
    bls lbl_0808abc2
    lsls r0, r3, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #1
    bls lbl_0808abbc
    lsls r0, r5, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #1
    bls lbl_0808abb6
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .align 2, 0
lbl_0808abec: .4byte 0x03005b60
lbl_0808abf0: .4byte 0x000001a1
lbl_0808abf4: .4byte 0x0000efff
